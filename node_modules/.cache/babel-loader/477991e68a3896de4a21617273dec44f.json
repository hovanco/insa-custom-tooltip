{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/btn-action-images.tsx\",\n    _s = $RefreshSig$();\n\nimport _ from 'lodash';\nimport { Badge, Button, message, Modal } from 'antd';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { likeImageRequest, removeImageRequest } from '../../../api/images-api';\nimport { removeImage, toggleBookmark } from '../../../reducers/imagesState/imagesAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BtnActionImages = ({\n  images,\n  action,\n  callBack\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const token = useSelector(state => state.auth.token);\n  const store = useSelector(state => state.store.store);\n  const dataImages = useSelector(state => state.images.images);\n  const dispatch = useDispatch();\n\n  const renderBadge = images.length > 0 && /*#__PURE__*/_jsxDEV(Badge, {\n    style: {\n      marginRight: 10\n    },\n    count: images.length\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n\n  const showConfirm = () => {\n    const imagesExistInProduct = dataImages.filter(img => images.includes(img._id) && !_.isEmpty(img.productIds));\n    const count = imagesExistInProduct.length;\n    return Modal.confirm({\n      title: count > 0 ? 'Cảnh báo' : 'Xác nhận',\n      content: count > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u1EA2nh: \", imagesExistInProduct.map(img => img.name).join(', '), \" \\u0111\\xE3 t\\u1ED3n t\\u1EA1i trong \\u1EA3nh c\\u1EE7a s\\u1EA3n ph\\u1EA9m.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), \"N\\u1EBFu b\\u1EA1n \\u0111\\u1ED3ng \\xFD x\\xF3a, \\u0111\\u1ED3ng ngh\\u0129a v\\u1EDBi vi\\u1EC7c x\\xF3a \\u1EA3nh n\\xE0y trong s\\u1EA3n ph\\u1EA9m c\\u1EE7a b\\u1EA1n!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this) : 'Bạn chắc chắn muốn xóa ảnh đã chọn?',\n      okText: 'Xóa ảnh',\n      okType: 'danger',\n      cancelText: 'Hủy',\n      width: 450,\n      centered: true,\n\n      onOk() {\n        removeImages();\n      },\n\n      onCancel() {}\n\n    });\n  };\n\n  const removeImages = async () => {\n    setLoading(true);\n\n    try {\n      const response = await Promise.all(images.map(async imageId => {\n        const response = await removeImageRequest({\n          token: token.accessToken,\n          storeId: store._id,\n          imageId\n        });\n        dispatch(removeImage(imageId));\n        return response;\n      }));\n      setLoading(false);\n      message.success(`Đã xóa ${images.length} hình ảnh`);\n\n      if (callBack) {\n        callBack();\n      }\n    } catch (error) {\n      message.error(`Lỗi xóa hình ảnh`);\n    }\n  };\n\n  const bookMarkImages = () => {\n    setLoading(true);\n    Promise.all(images.map(async imageId => {\n      const response = await likeImageRequest({\n        token: token.accessToken,\n        storeId: store._id,\n        imageId,\n        star: true\n      });\n      dispatch(toggleBookmark(imageId));\n    })).then(() => {\n      message.success(`Đã ${images.length} thêm vào yêu thích`);\n      setLoading(false);\n\n      if (callBack) {\n        callBack();\n      }\n    }).catch(() => {\n      message.error('Lỗi thêm vào yêu thích');\n      setLoading(false);\n    });\n  };\n\n  const onClick = () => {\n    if (action === 'remove') {\n      showConfirm();\n    }\n\n    if (action === 'bookmark') {\n      bookMarkImages();\n    }\n  };\n\n  const title = action === 'remove' ? 'Xóa ảnh' : 'Yêu thích';\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: onClick,\n    loading: loading,\n    children: [!loading && renderBadge, title]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BtnActionImages, \"xUhzx7MBxIJpXyjty4adz7+PQXw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = BtnActionImages;\nexport default BtnActionImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"BtnActionImages\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/btn-action-images.tsx"],"names":["_","Badge","Button","message","Modal","React","useState","useDispatch","useSelector","likeImageRequest","removeImageRequest","removeImage","toggleBookmark","BtnActionImages","images","action","callBack","loading","setLoading","token","state","auth","store","dataImages","dispatch","renderBadge","length","marginRight","showConfirm","imagesExistInProduct","filter","img","includes","_id","isEmpty","productIds","count","confirm","title","content","map","name","join","okText","okType","cancelText","width","centered","onOk","removeImages","onCancel","response","Promise","all","imageId","accessToken","storeId","success","error","bookMarkImages","star","then","catch","onClick"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,EAAiCC,KAAjC,QAA8C,MAA9C;AACA,OAAOC,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,yBAArD;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,4CAA5C;;;AASA,MAAMC,eAA0B,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,CAAD,KAAkC;AAAA;;AACjE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMa,KAAK,GAAGX,WAAW,CAAEY,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWF,KAA5B,CAAzB;AACA,QAAMG,KAAK,GAAGd,WAAW,CAAEY,KAAD,IAAgBA,KAAK,CAACE,KAAN,CAAYA,KAA7B,CAAzB;AACA,QAAMC,UAAU,GAAGf,WAAW,CAAEY,KAAD,IAAgBA,KAAK,CAACN,MAAN,CAAaA,MAA9B,CAA9B;AACA,QAAMU,QAAQ,GAAGjB,WAAW,EAA5B;;AAEA,QAAMkB,WAAW,GAAGX,MAAM,CAACY,MAAP,GAAgB,CAAhB,iBAChB,QAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAd;AAAmC,IAAA,KAAK,EAAEb,MAAM,CAACY;AAAjD;AAAA;AAAA;AAAA;AAAA,UADJ;;AAIA,QAAME,WAAW,GAAG,MAAM;AACtB,UAAMC,oBAAoB,GAAGN,UAAU,CAACO,MAAX,CACxBC,GAAD,IAAiBjB,MAAM,CAACkB,QAAP,CAAgBD,GAAG,CAACE,GAApB,KAA4B,CAACjC,CAAC,CAACkC,OAAF,CAAUH,GAAG,CAACI,UAAd,CADrB,CAA7B;AAGA,UAAMC,KAAK,GAAGP,oBAAoB,CAACH,MAAnC;AACA,WAAOtB,KAAK,CAACiC,OAAN,CAAc;AACjBC,MAAAA,KAAK,EAAEF,KAAK,GAAG,CAAR,GAAY,UAAZ,GAAyB,UADf;AAEjBG,MAAAA,OAAO,EACHH,KAAK,GAAG,CAAR,gBACI;AAAA,gCACI;AAAA,mCACUP,oBAAoB,CAACW,GAArB,CAA0BT,GAAD,IAAiBA,GAAG,CAACU,IAA9C,EAAoDC,IAApD,CAAyD,IAAzD,CADV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,GAUI,qCAbS;AAejBC,MAAAA,MAAM,EAAE,SAfS;AAgBjBC,MAAAA,MAAM,EAAE,QAhBS;AAiBjBC,MAAAA,UAAU,EAAE,KAjBK;AAkBjBC,MAAAA,KAAK,EAAE,GAlBU;AAmBjBC,MAAAA,QAAQ,EAAE,IAnBO;;AAoBjBC,MAAAA,IAAI,GAAG;AACHC,QAAAA,YAAY;AACf,OAtBgB;;AAuBjBC,MAAAA,QAAQ,GAAG,CAAE;;AAvBI,KAAd,CAAP;AAyBH,GA9BD;;AAgCA,QAAMD,YAAY,GAAG,YAAY;AAC7B/B,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,YAAMiC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CACnBvC,MAAM,CAAC0B,GAAP,CAAW,MAAOc,OAAP,IAAmB;AAC1B,cAAMH,QAAQ,GAAG,MAAMzC,kBAAkB,CAAC;AACtCS,UAAAA,KAAK,EAAEA,KAAK,CAACoC,WADyB;AAEtCC,UAAAA,OAAO,EAAElC,KAAK,CAACW,GAFuB;AAGtCqB,UAAAA;AAHsC,SAAD,CAAzC;AAMA9B,QAAAA,QAAQ,CAACb,WAAW,CAAC2C,OAAD,CAAZ,CAAR;AAEA,eAAOH,QAAP;AACH,OAVD,CADmB,CAAvB;AAaAjC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAf,MAAAA,OAAO,CAACsD,OAAR,CAAiB,UAAS3C,MAAM,CAACY,MAAO,WAAxC;;AACA,UAAIV,QAAJ,EAAc;AACVA,QAAAA,QAAQ;AACX;AACJ,KAnBD,CAmBE,OAAO0C,KAAP,EAAc;AACZvD,MAAAA,OAAO,CAACuD,KAAR,CAAe,kBAAf;AACH;AACJ,GAxBD;;AA0BA,QAAMC,cAAc,GAAG,MAAM;AACzBzC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAkC,IAAAA,OAAO,CAACC,GAAR,CACIvC,MAAM,CAAC0B,GAAP,CAAW,MAAOc,OAAP,IAAmB;AAC1B,YAAMH,QAAQ,GAAG,MAAM1C,gBAAgB,CAAC;AACpCU,QAAAA,KAAK,EAAEA,KAAK,CAACoC,WADuB;AAEpCC,QAAAA,OAAO,EAAElC,KAAK,CAACW,GAFqB;AAGpCqB,QAAAA,OAHoC;AAIpCM,QAAAA,IAAI,EAAE;AAJ8B,OAAD,CAAvC;AAOApC,MAAAA,QAAQ,CAACZ,cAAc,CAAC0C,OAAD,CAAf,CAAR;AACH,KATD,CADJ,EAYKO,IAZL,CAYU,MAAM;AACR1D,MAAAA,OAAO,CAACsD,OAAR,CAAiB,MAAK3C,MAAM,CAACY,MAAO,qBAApC;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,UAAIF,QAAJ,EAAc;AACVA,QAAAA,QAAQ;AACX;AACJ,KAlBL,EAmBK8C,KAnBL,CAmBW,MAAM;AACT3D,MAAAA,OAAO,CAACuD,KAAR,CAAc,wBAAd;AACAxC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAtBL;AAuBH,GAzBD;;AA2BA,QAAM6C,OAAO,GAAG,MAAM;AAClB,QAAIhD,MAAM,KAAK,QAAf,EAAyB;AACrBa,MAAAA,WAAW;AACd;;AACD,QAAIb,MAAM,KAAK,UAAf,EAA2B;AACvB4C,MAAAA,cAAc;AACjB;AACJ,GAPD;;AASA,QAAMrB,KAAK,GAAGvB,MAAM,KAAK,QAAX,GAAsB,SAAtB,GAAkC,WAAhD;AAEA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEgD,OAAjB;AAA0B,IAAA,OAAO,EAAE9C,OAAnC;AAAA,eACK,CAACA,OAAD,IAAYQ,WADjB,EAEKa,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAjHD;;GAAMzB,e;UAEYL,W,EACAA,W,EACKA,W,EACFD,W;;;KALfM,e;AAmHN,eAAeA,eAAf","sourcesContent":["import _ from 'lodash';\nimport { Badge, Button, message, Modal } from 'antd';\nimport React, { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { likeImageRequest, removeImageRequest } from '../../../api/images-api';\nimport { removeImage, toggleBookmark } from '../../../reducers/imagesState/imagesAction';\nimport { IImage } from '../../../collections/image';\n\ninterface Props {\n    images: string[];\n    action: 'remove' | 'bookmark';\n    callBack?: () => void;\n}\n\nconst BtnActionImages: FC<Props> = ({ images, action, callBack }) => {\n    const [loading, setLoading] = useState(false);\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n    const dataImages = useSelector((state: any) => state.images.images);\n    const dispatch = useDispatch();\n\n    const renderBadge = images.length > 0 && (\n        <Badge style={{ marginRight: 10 }} count={images.length} />\n    );\n\n    const showConfirm = () => {\n        const imagesExistInProduct = dataImages.filter(\n            (img: IImage) => images.includes(img._id) && !_.isEmpty(img.productIds)\n        );\n        const count = imagesExistInProduct.length;\n        return Modal.confirm({\n            title: count > 0 ? 'Cảnh báo' : 'Xác nhận',\n            content:\n                count > 0 ? (\n                    <div>\n                        <span>\n                            Ảnh: {imagesExistInProduct.map((img: IImage) => img.name).join(', ')} đã\n                            tồn tại trong ảnh của sản phẩm.\n                        </span>\n                        <br />\n                        Nếu bạn đồng ý xóa, đồng nghĩa với việc xóa ảnh này trong sản phẩm của bạn!\n                    </div>\n                ) : (\n                    'Bạn chắc chắn muốn xóa ảnh đã chọn?'\n                ),\n            okText: 'Xóa ảnh',\n            okType: 'danger',\n            cancelText: 'Hủy',\n            width: 450,\n            centered: true,\n            onOk() {\n                removeImages();\n            },\n            onCancel() {},\n        });\n    };\n\n    const removeImages = async () => {\n        setLoading(true);\n        try {\n            const response = await Promise.all(\n                images.map(async (imageId) => {\n                    const response = await removeImageRequest({\n                        token: token.accessToken,\n                        storeId: store._id,\n                        imageId,\n                    });\n\n                    dispatch(removeImage(imageId));\n\n                    return response;\n                })\n            );\n            setLoading(false);\n            message.success(`Đã xóa ${images.length} hình ảnh`);\n            if (callBack) {\n                callBack();\n            }\n        } catch (error) {\n            message.error(`Lỗi xóa hình ảnh`);\n        }\n    };\n\n    const bookMarkImages = () => {\n        setLoading(true);\n        Promise.all(\n            images.map(async (imageId) => {\n                const response = await likeImageRequest({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    imageId,\n                    star: true,\n                });\n\n                dispatch(toggleBookmark(imageId));\n            })\n        )\n            .then(() => {\n                message.success(`Đã ${images.length} thêm vào yêu thích`);\n                setLoading(false);\n                if (callBack) {\n                    callBack();\n                }\n            })\n            .catch(() => {\n                message.error('Lỗi thêm vào yêu thích');\n                setLoading(false);\n            });\n    };\n\n    const onClick = () => {\n        if (action === 'remove') {\n            showConfirm();\n        }\n        if (action === 'bookmark') {\n            bookMarkImages();\n        }\n    };\n\n    const title = action === 'remove' ? 'Xóa ảnh' : 'Yêu thích';\n\n    return (\n        <Button onClick={onClick} loading={loading}>\n            {!loading && renderBadge}\n            {title}\n        </Button>\n    );\n};\n\nexport default BtnActionImages;\n"]},"metadata":{},"sourceType":"module"}