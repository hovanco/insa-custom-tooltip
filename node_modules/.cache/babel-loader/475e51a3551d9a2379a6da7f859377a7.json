{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/context.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport labelApi from '../../../api/label-api';\nimport { Loading } from '../../../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  loading: true,\n  page: null,\n  labels: [],\n  labelIds: []\n};\nconst initialContext = {\n  state: initialState,\n  setState: state => state\n};\nconst Context = /*#__PURE__*/createContext(initialContext);\n\nconst ProviderLabelContext = ({\n  children\n}) => {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  const store = useSelector(state => state.store.store);\n  const pages = useSelector(state => state.fanpage.pages);\n  const page = useSelector(state => state.fanpage.page);\n  const loading = useSelector(state => state.fanpage.loading);\n  useEffect(() => {\n    if (page) {\n      setState({ ...state,\n        page: page._id\n      });\n    } else {\n      const keys = Object.keys(pages);\n\n      if (keys.length > 0) {\n        setState({ ...state,\n          page: keys[0]\n        });\n      }\n    }\n  }, []);\n  useEffect(() => {\n    async function loadLabels() {\n      try {\n        setState({ ...state,\n          loading: true\n        });\n        const data = {\n          storeId: store._id,\n          pageId: pages[state.page].fbObjectId\n        };\n        const labels = await labelApi.getListLabels(data);\n        return setState({ ...state,\n          labels,\n          loading: false\n        });\n      } catch (error) {\n        return setState({ ...state,\n          loading: false\n        });\n      }\n    }\n\n    if (state.page) {\n      loadLabels();\n    }\n  }, [state.page]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {\n    full: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      state,\n      setState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProviderLabelContext, \"sEE1zWCcnugqDtc40Fsax9cYbMk=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProviderLabelContext;\n\nconst useContextLabel = () => {\n  _s2();\n\n  const {\n    state,\n    setState\n  } = useContext(Context);\n\n  const selectPage = page => {\n    setState({ ...state,\n      page\n    });\n  };\n\n  const setLabelIds = labelIds => {\n    setState({ ...state,\n      labelIds\n    });\n  };\n\n  return { ...state,\n    selectPage,\n    setLabelIds\n  };\n};\n\n_s2(useContextLabel, \"HQOEX8LuP3Imca7Htmd/Ve9zFgo=\");\n\nexport { ProviderLabelContext, useContextLabel };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderLabelContext\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/context.tsx"],"names":["React","createContext","useContext","useEffect","useState","useSelector","labelApi","Loading","initialState","loading","page","labels","labelIds","initialContext","state","setState","Context","ProviderLabelContext","children","store","pages","fanpage","_id","keys","Object","length","loadLabels","data","storeId","pageId","fbObjectId","getListLabels","error","useContextLabel","selectPage","setLabelIds"],"mappings":"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","sourcesContent":["import React, { createContext, FC, ReactNode, useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport labelApi from '../../../api/label-api';\nimport { Loading } from '../../../components';\nimport { Page } from '../../../reducers/fanpageState/fanpageReducer';\n\ninterface IState {\n    loading: boolean;\n    page: string | null;\n    labels: any[];\n    labelIds: string[];\n}\n\nconst initialState: IState = {\n    loading: true,\n    page: null,\n    labels: [],\n    labelIds: [],\n};\n\nconst initialContext = {\n    state: initialState,\n    setState: (state: any): any => state,\n};\n\nconst Context = createContext(initialContext);\n\ninterface Props {\n    children: ReactNode;\n}\n\nconst ProviderLabelContext: FC<Props> = ({ children }): JSX.Element => {\n    const [state, setState] = useState(initialState);\n    const store = useSelector((state: any) => state.store.store);\n    const pages = useSelector((state: any) => state.fanpage.pages);\n    const page = useSelector((state: any) => state.fanpage.page);\n    const loading = useSelector((state: any) => state.fanpage.loading);\n\n    useEffect(() => {\n        if (page) {\n            setState({ ...state, page: page._id });\n        } else {\n            const keys: string[] = Object.keys(pages);\n            if (keys.length > 0) {\n                setState({ ...state, page: keys[0] });\n            }\n        }\n    }, []);\n\n    useEffect(() => {\n        async function loadLabels() {\n            try {\n                setState({ ...state, loading: true });\n                const data = {\n                    storeId: store._id,\n                    pageId: (pages[state.page as string] as Page).fbObjectId,\n                };\n\n                const labels = await labelApi.getListLabels(data);\n\n                return setState({ ...state, labels, loading: false });\n            } catch (error) {\n                return setState({ ...state, loading: false });\n            }\n        }\n\n        if (state.page) {\n            loadLabels();\n        }\n    }, [state.page]);\n\n    if (loading) return <Loading full />;\n\n    return <Context.Provider value={{ state, setState }}>{children}</Context.Provider>;\n};\n\nconst useContextLabel = () => {\n    const { state, setState } = useContext(Context);\n\n    const selectPage = (page: string) => {\n        setState({ ...state, page });\n    };\n\n    const setLabelIds = (labelIds: string[]) => {\n        setState({\n            ...state,\n            labelIds,\n        });\n    };\n\n    return {\n        ...state,\n        selectPage,\n        setLabelIds,\n    };\n};\n\nexport { ProviderLabelContext, useContextLabel };\n"]},"metadata":{},"sourceType":"module"}