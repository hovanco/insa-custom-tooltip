{"ast":null,"code":"import Axios from './axios-client';\nimport constant_url from './constant_url';\nconst reportApi = {\n  // report conversation\n  reportConversation: async ({\n    storeId,\n    pageId,\n    startTime,\n    endTime,\n    token\n  }) => {\n    const url = `${constant_url.SOCIAL_NETWORK_BASE}/stores/${storeId}/pages/${pageId}/reports/conversations?startTime=${startTime}&endTime=${endTime}`;\n    const response = await Axios({\n      method: 'GET',\n      url\n    });\n    return response.data;\n  },\n  // report label\n  reportLabel: async ({\n    storeId,\n    pageId,\n    startTime,\n    endTime\n  }) => {\n    const url = `${constant_url.SOCIAL_NETWORK_BASE}/stores/${storeId}/pages/${pageId}/reports/labels?startTime=${startTime}&endTime=${endTime}`;\n    const response = await Axios({\n      method: 'GET',\n      url\n    });\n    return response.data;\n  },\n  // report revenue\n  reporRevenue: async ({\n    storeId,\n    pageId,\n    startTime,\n    endTime,\n    createdBy\n  }) => {\n    const queryString = createdBy ? `startTime=${startTime}&endTime=${endTime}&createdBy=${createdBy};` : `startTime=${startTime}&endTime=${endTime}`;\n    const url = `${constant_url.SOCIAL_NETWORK_BASE}/stores/${storeId}/pages/${pageId}/reports/revenue?${queryString}`;\n    const response = await Axios({\n      method: 'GET',\n      url\n    });\n    return response.data;\n  }\n};\nexport default reportApi;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/api/report-api.ts"],"names":["Axios","constant_url","reportApi","reportConversation","storeId","pageId","startTime","endTime","token","url","SOCIAL_NETWORK_BASE","response","method","data","reportLabel","reporRevenue","createdBy","queryString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,SAAS,GAAG;AACd;AACAC,EAAAA,kBAAkB,EAAE,OAAO;AACvBC,IAAAA,OADuB;AAEvBC,IAAAA,MAFuB;AAGvBC,IAAAA,SAHuB;AAIvBC,IAAAA,OAJuB;AAKvBC,IAAAA;AALuB,GAAP,KAYA;AAChB,UAAMC,GAAG,GAAI,GAAER,YAAY,CAACS,mBAAoB,WAAUN,OAAQ,UAASC,MAAO,oCAAmCC,SAAU,YAAWC,OAAQ,EAAlJ;AAEA,UAAMI,QAAQ,GAAG,MAAMX,KAAK,CAAC;AACzBY,MAAAA,MAAM,EAAE,KADiB;AAEzBH,MAAAA;AAFyB,KAAD,CAA5B;AAKA,WAAOE,QAAQ,CAACE,IAAhB;AACH,GAvBa;AAyBd;AACAC,EAAAA,WAAW,EAAE,OAAO;AAChBV,IAAAA,OADgB;AAEhBC,IAAAA,MAFgB;AAGhBC,IAAAA,SAHgB;AAIhBC,IAAAA;AAJgB,GAAP,KAUO;AAChB,UAAME,GAAG,GAAI,GAAER,YAAY,CAACS,mBAAoB,WAAUN,OAAQ,UAASC,MAAO,6BAA4BC,SAAU,YAAWC,OAAQ,EAA3I;AAEA,UAAMI,QAAQ,GAAG,MAAMX,KAAK,CAAC;AACzBY,MAAAA,MAAM,EAAE,KADiB;AAEzBH,MAAAA;AAFyB,KAAD,CAA5B;AAKA,WAAOE,QAAQ,CAACE,IAAhB;AACH,GA7Ca;AA8Cd;AACAE,EAAAA,YAAY,EAAE,OAAO;AACjBX,IAAAA,OADiB;AAEjBC,IAAAA,MAFiB;AAGjBC,IAAAA,SAHiB;AAIjBC,IAAAA,OAJiB;AAKjBS,IAAAA;AALiB,GAAP,KAYM;AAChB,UAAMC,WAAW,GAAGD,SAAS,GACtB,aAAYV,SAAU,YAAWC,OAAQ,cAAaS,SAAU,GAD1C,GAEtB,aAAYV,SAAU,YAAWC,OAAQ,EAFhD;AAGA,UAAME,GAAG,GAAI,GAAER,YAAY,CAACS,mBAAoB,WAAUN,OAAQ,UAASC,MAAO,oBAAmBY,WAAY,EAAjH;AAEA,UAAMN,QAAQ,GAAG,MAAMX,KAAK,CAAC;AACzBY,MAAAA,MAAM,EAAE,KADiB;AAEzBH,MAAAA;AAFyB,KAAD,CAA5B;AAKA,WAAOE,QAAQ,CAACE,IAAhB;AACH;AAvEa,CAAlB;AA0EA,eAAeX,SAAf","sourcesContent":["import Axios from './axios-client';\nimport constant_url from './constant_url';\n\nconst reportApi = {\n    // report conversation\n    reportConversation: async ({\n        storeId,\n        pageId,\n        startTime,\n        endTime,\n        token,\n    }: {\n        storeId: string;\n        pageId: string;\n        startTime: number;\n        endTime: number;\n        token: string;\n    }): Promise<any> => {\n        const url = `${constant_url.SOCIAL_NETWORK_BASE}/stores/${storeId}/pages/${pageId}/reports/conversations?startTime=${startTime}&endTime=${endTime}`;\n\n        const response = await Axios({\n            method: 'GET',\n            url,\n        });\n\n        return response.data;\n    },\n\n    // report label\n    reportLabel: async ({\n        storeId,\n        pageId,\n        startTime,\n        endTime,\n    }: {\n        storeId: string;\n        pageId: string;\n        startTime: number;\n        endTime: number;\n    }): Promise<any> => {\n        const url = `${constant_url.SOCIAL_NETWORK_BASE}/stores/${storeId}/pages/${pageId}/reports/labels?startTime=${startTime}&endTime=${endTime}`;\n\n        const response = await Axios({\n            method: 'GET',\n            url,\n        });\n\n        return response.data;\n    },\n    // report revenue\n    reporRevenue: async ({\n        storeId,\n        pageId,\n        startTime,\n        endTime,\n        createdBy,\n    }: {\n        storeId: string;\n        pageId: string;\n        startTime: number;\n        endTime: number;\n        createdBy?: string;\n    }): Promise<any> => {\n        const queryString = createdBy\n            ? `startTime=${startTime}&endTime=${endTime}&createdBy=${createdBy};`\n            : `startTime=${startTime}&endTime=${endTime}`;\n        const url = `${constant_url.SOCIAL_NETWORK_BASE}/stores/${storeId}/pages/${pageId}/reports/revenue?${queryString}`;\n\n        const response = await Axios({\n            method: 'GET',\n            url,\n        });\n\n        return response.data;\n    },\n};\n\nexport default reportApi;\n"]},"metadata":{},"sourceType":"module"}