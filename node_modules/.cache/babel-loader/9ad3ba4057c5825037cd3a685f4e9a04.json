{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customer/expried-package-context.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { maxBy } from 'lodash';\nimport moment from 'moment';\nimport React, { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { AliasPackage, EBillingPackageType, getPackagesActive } from '../../api/billing-api';\nimport { checkWarningExpiration } from '../../utils/get-time';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialContext = {\n  isExpired: false,\n  isTrial: false,\n  handleCloseBannerTrial: () => {},\n  handleCloseBannerFacebook: () => {},\n  expiredPackage: undefined,\n  listNamePackage: [],\n  expiredTrial: undefined\n};\nconst Context = /*#__PURE__*/createContext(initialContext);\n\nconst ExpriedPackageContext = ({\n  children\n}) => {\n  _s();\n\n  const store = useSelector(state => state.store.store);\n  const [isExpired, setIsExpired] = useState(false);\n  const [expiredPackage, setExpiredPackage] = useState();\n  const [listNamePackage, setListNamePackage] = useState([]);\n  const [expiredTrial, setExpiredTrial] = useState();\n  const [isTrial, setIsTrial] = useState(false);\n\n  const handleCheckPackageType = packages => {\n    packages.forEach(item => {\n      if (item.packageType & EBillingPackageType.Trial) {\n        setIsTrial(checkWarningExpiration(item.expiredAt));\n        setExpiredTrial(item.expiredAt);\n        setIsExpired(false);\n      }\n    });\n  };\n\n  const handelGetMaxExpiredAt = packages => {\n    let selectedRows = [];\n    packages.filter(element => {\n      if (element.packageType & EBillingPackageType.Omni || element.packageType & EBillingPackageType.Trial || element.packageType & EBillingPackageType.Facebook) selectedRows.push(element);\n    });\n    const packageMaxExpired = maxBy(selectedRows, function (o) {\n      return Math.round(moment(o.expiredAt).diff(moment(), 'days', true));\n    });\n    setIsExpired(checkWarningExpiration(packageMaxExpired === null || packageMaxExpired === void 0 ? void 0 : packageMaxExpired.expiredAt));\n    setExpiredPackage(Math.round(moment(packageMaxExpired === null || packageMaxExpired === void 0 ? void 0 : packageMaxExpired.expiredAt).diff(moment(), 'days', true)));\n\n    if (!checkWarningExpiration(packageMaxExpired === null || packageMaxExpired === void 0 ? void 0 : packageMaxExpired.expiredAt)) {\n      return;\n    }\n\n    let listName = [];\n    selectedRows.forEach(item => {\n      if (item.packageType & EBillingPackageType.Omni) {\n        listName.push(AliasPackage[EBillingPackageType.Omni]);\n      }\n\n      if (item.packageType & EBillingPackageType.Facebook) {\n        listName.push(AliasPackage[EBillingPackageType.Facebook]);\n      }\n    });\n    setListNamePackage(listName);\n  };\n\n  const getPackages = async () => {\n    const packages = await getPackagesActive(store._id);\n    handelGetMaxExpiredAt(packages);\n    handleCheckPackageType(packages);\n  };\n\n  useEffect(() => {\n    getPackages();\n  }, []);\n  const handleCloseBannerTrial = useCallback(() => {\n    setIsTrial(false);\n  }, []);\n  const handleCloseBannerFacebook = useCallback(() => {\n    setIsExpired(false);\n  }, []);\n  const values = useMemo(() => ({\n    isExpired,\n    isTrial,\n    handleCloseBannerTrial,\n    handleCloseBannerFacebook,\n    expiredPackage,\n    listNamePackage,\n    expiredTrial\n  }), [isExpired, isTrial, handleCloseBannerTrial, handleCloseBannerFacebook, expiredPackage, listNamePackage, expiredTrial]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ExpriedPackageContext, \"Bj6BzSGjYHRLg10WtXfhpb0fF8g=\", false, function () {\n  return [useSelector];\n});\n\n_c = ExpriedPackageContext;\n\nconst useExpriedPackage = () => {\n  _s2();\n\n  const context = useContext(Context);\n  return { ...context\n  };\n};\n\n_s2(useExpriedPackage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { ExpriedPackageContext, useExpriedPackage };\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpriedPackageContext\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customer/expried-package-context.tsx"],"names":["maxBy","moment","React","createContext","useCallback","useContext","useEffect","useMemo","useState","useSelector","AliasPackage","EBillingPackageType","getPackagesActive","checkWarningExpiration","initialContext","isExpired","isTrial","handleCloseBannerTrial","handleCloseBannerFacebook","expiredPackage","undefined","listNamePackage","expiredTrial","Context","ExpriedPackageContext","children","store","state","setIsExpired","setExpiredPackage","setListNamePackage","setExpiredTrial","setIsTrial","handleCheckPackageType","packages","forEach","item","packageType","Trial","expiredAt","handelGetMaxExpiredAt","selectedRows","filter","element","Omni","Facebook","push","packageMaxExpired","o","Math","round","diff","listName","getPackages","_id","values","useExpriedPackage","context"],"mappings":";;;;AAAA,SAASA,KAAT,QAAsB,QAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IACIC,aADJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,SALJ,EAMIC,OANJ,EAOIC,QAPJ,QAQO,OARP;AASA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,EAAuBC,mBAAvB,EAA4CC,iBAA5C,QAAqE,uBAArE;AAEA,SAASC,sBAAT,QAAuC,sBAAvC;;AA+BA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,sBAAsB,EAAE,MAAM,CAAE,CAHb;AAInBC,EAAAA,yBAAyB,EAAE,MAAM,CAAE,CAJhB;AAKnBC,EAAAA,cAAc,EAAEC,SALG;AAMnBC,EAAAA,eAAe,EAAE,EANE;AAOnBC,EAAAA,YAAY,EAAEF;AAPK,CAAvB;AAUA,MAAMG,OAAO,gBAAGpB,aAAa,CAAWW,cAAX,CAA7B;;AAEA,MAAMU,qBAAgC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA+B;AAAA;;AACpE,QAAMC,KAAK,GAAGjB,WAAW,CAAEkB,KAAD,IAAgBA,KAAK,CAACD,KAAN,CAAYA,KAA7B,CAAzB;AACA,QAAM,CAACX,SAAD,EAAYa,YAAZ,IAA4BpB,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACW,cAAD,EAAiBU,iBAAjB,IAAsCrB,QAAQ,EAApD;AACA,QAAM,CAACa,eAAD,EAAkBS,kBAAlB,IAAwCtB,QAAQ,CAAgB,EAAhB,CAAtD;AACA,QAAM,CAACc,YAAD,EAAeS,eAAf,IAAkCvB,QAAQ,EAAhD;AACA,QAAM,CAACQ,OAAD,EAAUgB,UAAV,IAAwBxB,QAAQ,CAAU,KAAV,CAAtC;;AAEA,QAAMyB,sBAAsB,GAAIC,QAAD,IAA0B;AACrDA,IAAAA,QAAQ,CAACC,OAAT,CAAkBC,IAAD,IAA0B;AACvC,UAAIA,IAAI,CAACC,WAAL,GAAmB1B,mBAAmB,CAAC2B,KAA3C,EAAkD;AAC9CN,QAAAA,UAAU,CAACnB,sBAAsB,CAACuB,IAAI,CAACG,SAAN,CAAvB,CAAV;AACAR,QAAAA,eAAe,CAACK,IAAI,CAACG,SAAN,CAAf;AACAX,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,KAND;AAOH,GARD;;AAUA,QAAMY,qBAAqB,GAAIN,QAAD,IAA0B;AACpD,QAAIO,YAAwB,GAAG,EAA/B;AACAP,IAAAA,QAAQ,CAACQ,MAAT,CAAiBC,OAAD,IAA6B;AACzC,UACIA,OAAO,CAACN,WAAR,GAAsB1B,mBAAmB,CAACiC,IAA1C,IACAD,OAAO,CAACN,WAAR,GAAsB1B,mBAAmB,CAAC2B,KAD1C,IAEAK,OAAO,CAACN,WAAR,GAAsB1B,mBAAmB,CAACkC,QAH9C,EAKIJ,YAAY,CAACK,IAAb,CAAkBH,OAAlB;AACP,KAPD;AAQA,UAAMI,iBAAiC,GAAG/C,KAAK,CAACyC,YAAD,EAAe,UAAUO,CAAV,EAAa;AACvE,aAAOC,IAAI,CAACC,KAAL,CAAWjD,MAAM,CAAC+C,CAAC,CAACT,SAAH,CAAN,CAAoBY,IAApB,CAAyBlD,MAAM,EAA/B,EAAmC,MAAnC,EAA2C,IAA3C,CAAX,CAAP;AACH,KAF8C,CAA/C;AAGA2B,IAAAA,YAAY,CAACf,sBAAsB,CAACkC,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAER,SAApB,CAAvB,CAAZ;AACAV,IAAAA,iBAAiB,CACboB,IAAI,CAACC,KAAL,CAAWjD,MAAM,CAAC8C,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAER,SAApB,CAAN,CAAqCY,IAArC,CAA0ClD,MAAM,EAAhD,EAAoD,MAApD,EAA4D,IAA5D,CAAX,CADa,CAAjB;;AAGA,QAAI,CAACY,sBAAsB,CAACkC,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAER,SAApB,CAA3B,EAA2D;AACvD;AACH;;AACD,QAAIa,QAAuB,GAAG,EAA9B;AACAX,IAAAA,YAAY,CAACN,OAAb,CAAsBC,IAAD,IAA0B;AAC3C,UAAIA,IAAI,CAACC,WAAL,GAAmB1B,mBAAmB,CAACiC,IAA3C,EAAiD;AAC7CQ,QAAAA,QAAQ,CAACN,IAAT,CAAcpC,YAAY,CAACC,mBAAmB,CAACiC,IAArB,CAA1B;AACH;;AACD,UAAIR,IAAI,CAACC,WAAL,GAAmB1B,mBAAmB,CAACkC,QAA3C,EAAqD;AACjDO,QAAAA,QAAQ,CAACN,IAAT,CAAcpC,YAAY,CAACC,mBAAmB,CAACkC,QAArB,CAA1B;AACH;AACJ,KAPD;AAQAf,IAAAA,kBAAkB,CAACsB,QAAD,CAAlB;AACH,GA9BD;;AAgCA,QAAMC,WAAW,GAAG,YAAY;AAC5B,UAAMnB,QAAoB,GAAG,MAAMtB,iBAAiB,CAACc,KAAK,CAAC4B,GAAP,CAApD;AACAd,IAAAA,qBAAqB,CAACN,QAAD,CAArB;AACAD,IAAAA,sBAAsB,CAACC,QAAD,CAAtB;AACH,GAJD;;AAKA5B,EAAAA,SAAS,CAAC,MAAM;AACZ+C,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMpC,sBAAsB,GAAGb,WAAW,CAAC,MAAM;AAC7C4B,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAFyC,EAEvC,EAFuC,CAA1C;AAIA,QAAMd,yBAAyB,GAAGd,WAAW,CAAC,MAAM;AAChDwB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAF4C,EAE1C,EAF0C,CAA7C;AAIA,QAAM2B,MAAM,GAAGhD,OAAO,CAClB,OAAO;AACHQ,IAAAA,SADG;AAEHC,IAAAA,OAFG;AAGHC,IAAAA,sBAHG;AAIHC,IAAAA,yBAJG;AAKHC,IAAAA,cALG;AAMHE,IAAAA,eANG;AAOHC,IAAAA;AAPG,GAAP,CADkB,EAUlB,CACIP,SADJ,EAEIC,OAFJ,EAGIC,sBAHJ,EAIIC,yBAJJ,EAKIC,cALJ,EAMIE,eANJ,EAOIC,YAPJ,CAVkB,CAAtB;AAqBA,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEiC,MAAzB;AAAA,cAAkC9B;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAzFD;;GAAMD,qB;UACYf,W;;;KADZe,qB;;AA2FN,MAAMgC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAMC,OAAO,GAAGpD,UAAU,CAACkB,OAAD,CAA1B;AAEA,SAAO,EAAE,GAAGkC;AAAL,GAAP;AACH,CAJD;;IAAMD,iB;;AAMN,SAAShC,qBAAT,EAAgCgC,iBAAhC","sourcesContent":["import { maxBy } from 'lodash';\nimport moment from 'moment';\nimport React, {\n    createContext,\n    FC,\n    useCallback,\n    useContext,\n    useEffect,\n    useMemo,\n    useState,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { AliasPackage, EBillingPackageType, getPackagesActive } from '../../api/billing-api';\nimport { IPackage } from '../../collections/billing';\nimport { checkWarningExpiration } from '../../utils/get-time';\n\ninterface Props {\n    children?: any | null;\n}\n\ninterface IPackageDetail {\n    active: boolean;\n    bonusPeriod: number;\n    createdAt: string;\n    expiredAt: string;\n    packageType: number;\n    paymentType: number;\n    period: number;\n    storeId: string;\n    total: number;\n    transactionCode: string;\n    updatedAt: string;\n    id: string;\n}\n\ninterface IContext {\n    isExpired: boolean;\n    isTrial: boolean;\n    handleCloseBannerTrial: React.Dispatch<any>;\n    handleCloseBannerFacebook: React.Dispatch<any>;\n    expiredPackage?: number;\n    listNamePackage: string[];\n    expiredTrial?: string;\n}\n\nconst initialContext = {\n    isExpired: false,\n    isTrial: false,\n    handleCloseBannerTrial: () => {},\n    handleCloseBannerFacebook: () => {},\n    expiredPackage: undefined,\n    listNamePackage: [],\n    expiredTrial: undefined,\n};\n\nconst Context = createContext<IContext>(initialContext);\n\nconst ExpriedPackageContext: FC<Props> = ({ children }): JSX.Element => {\n    const store = useSelector((state: any) => state.store.store);\n    const [isExpired, setIsExpired] = useState<boolean>(false);\n    const [expiredPackage, setExpiredPackage] = useState<number>();\n    const [listNamePackage, setListNamePackage] = useState<Array<string>>([]);\n    const [expiredTrial, setExpiredTrial] = useState<string>();\n    const [isTrial, setIsTrial] = useState<boolean>(false);\n\n    const handleCheckPackageType = (packages: IPackage[]) => {\n        packages.forEach((item: IPackageDetail) => {\n            if (item.packageType & EBillingPackageType.Trial) {\n                setIsTrial(checkWarningExpiration(item.expiredAt));\n                setExpiredTrial(item.expiredAt);\n                setIsExpired(false);\n            }\n        });\n    };\n\n    const handelGetMaxExpiredAt = (packages: IPackage[]) => {\n        let selectedRows: IPackage[] = [];\n        packages.filter((element: IPackageDetail) => {\n            if (\n                element.packageType & EBillingPackageType.Omni ||\n                element.packageType & EBillingPackageType.Trial ||\n                element.packageType & EBillingPackageType.Facebook\n            )\n                selectedRows.push(element);\n        });\n        const packageMaxExpired: IPackageDetail = maxBy(selectedRows, function (o) {\n            return Math.round(moment(o.expiredAt).diff(moment(), 'days', true));\n        });\n        setIsExpired(checkWarningExpiration(packageMaxExpired?.expiredAt));\n        setExpiredPackage(\n            Math.round(moment(packageMaxExpired?.expiredAt).diff(moment(), 'days', true)),\n        );\n        if (!checkWarningExpiration(packageMaxExpired?.expiredAt)) {\n            return;\n        }\n        let listName: Array<string> = [];\n        selectedRows.forEach((item: IPackageDetail) => {\n            if (item.packageType & EBillingPackageType.Omni) {\n                listName.push(AliasPackage[EBillingPackageType.Omni]);\n            }\n            if (item.packageType & EBillingPackageType.Facebook) {\n                listName.push(AliasPackage[EBillingPackageType.Facebook]);\n            }\n        });\n        setListNamePackage(listName);\n    };\n\n    const getPackages = async () => {\n        const packages: IPackage[] = await getPackagesActive(store._id);\n        handelGetMaxExpiredAt(packages);\n        handleCheckPackageType(packages);\n    };\n    useEffect(() => {\n        getPackages();\n    }, []);\n\n    const handleCloseBannerTrial = useCallback(() => {\n        setIsTrial(false);\n    }, []);\n\n    const handleCloseBannerFacebook = useCallback(() => {\n        setIsExpired(false);\n    }, []);\n\n    const values = useMemo(\n        () => ({\n            isExpired,\n            isTrial,\n            handleCloseBannerTrial,\n            handleCloseBannerFacebook,\n            expiredPackage,\n            listNamePackage,\n            expiredTrial,\n        }),\n        [\n            isExpired,\n            isTrial,\n            handleCloseBannerTrial,\n            handleCloseBannerFacebook,\n            expiredPackage,\n            listNamePackage,\n            expiredTrial,\n        ],\n    );\n\n    return <Context.Provider value={values}>{children}</Context.Provider>;\n};\n\nconst useExpriedPackage = () => {\n    const context = useContext(Context);\n\n    return { ...context };\n};\n\nexport { ExpriedPackageContext, useExpriedPackage };\n"]},"metadata":{},"sourceType":"module"}