{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/tab-pages/pages.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport BtnPage from './btn-page';\nimport { useSelector } from 'react-redux';\nimport { difference, intersection } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pages = ({\n  items,\n  pages,\n  pageActive,\n  handleSelectPage,\n  setItems,\n  setPagesHide\n}) => {\n  _s();\n\n  const storeId = useSelector(({\n    store\n  }) => store.store._id);\n  useEffect(() => {\n    const data = localStorage.getItem('pages-setting');\n\n    if (data) {\n      const pagesSetting = JSON.parse(data);\n\n      if (pagesSetting.storeId !== storeId) {\n        localStorage.removeItem('pages-setting');\n        return;\n      }\n\n      let pagesShow = intersection(pagesSetting.setting, items);\n\n      if (pagesShow.length === 0) {\n        pagesShow = items;\n      }\n\n      setItems(pagesShow);\n      setPagesHide(difference(items, pagesShow));\n    }\n  }, []);\n  useEffect(() => {\n    const pagesSetting = {\n      storeId: storeId,\n      setting: [...items]\n    };\n    localStorage.setItem('pages-setting', JSON.stringify(pagesSetting));\n  }, [items, storeId]);\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  const hidePage = page => {\n    if (items.length <= 1) {\n      return;\n    }\n\n    function isNot(item, page) {\n      return item !== page._id;\n    }\n\n    setItems(prev => prev.filter(item => isNot(item, page)));\n    setPagesHide(prev => [...prev, page._id]);\n  };\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    setItems(reorder(items, source.index, destination.index));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"droppable\",\n      direction: \"horizontal\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pages-draggable\",\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        children: [items.map((key, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: key,\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            draggable: true,\n            children: /*#__PURE__*/_jsxDEV(BtnPage, {\n              page: pages[key],\n              active: pageActive._id === pages[key]._id,\n              onClick: handleSelectPage,\n              hidePage: hidePage\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pages, \"R0R6bPNaPlHdeIYhzfx/AFvWFLo=\", false, function () {\n  return [useSelector];\n});\n\n_c = Pages;\nexport default Pages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pages\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/tab-pages/pages.tsx"],"names":["React","useEffect","DragDropContext","Droppable","Draggable","BtnPage","useSelector","difference","intersection","Pages","items","pages","pageActive","handleSelectPage","setItems","setPagesHide","storeId","store","_id","data","localStorage","getItem","pagesSetting","JSON","parse","removeItem","pagesShow","setting","length","setItem","stringify","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","hidePage","page","isNot","item","prev","filter","onDragEnd","source","destination","index","provided","innerRef","droppableProps","map","key","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["\nimport React, { FC, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport BtnPage from './btn-page';\nimport { useSelector } from 'react-redux';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { difference, intersection } from 'lodash';\n\ninterface Props {\n    items: any[];\n    pages: any[];\n    pageActive: any;\n    handleSelectPage: (page: any) => void;\n    setItems: (items: any) => void;\n    setPagesHide: (pages: any) => void;\n}\n\n\nconst Pages: FC<Props> = ({ items, pages, pageActive, handleSelectPage, setItems, setPagesHide }): JSX.Element => {\n    const storeId = useSelector(({ store }: { store: IStoreState }) => store.store._id);\n\n    useEffect(() => {\n        const data = localStorage.getItem('pages-setting');\n        if (data) {\n            const pagesSetting = JSON.parse(data);\n            if (pagesSetting.storeId !== storeId) {\n                localStorage.removeItem('pages-setting');\n                return;\n            }\n            \n            let pagesShow = intersection(pagesSetting.setting, items);\n            if (pagesShow.length === 0) {\n                pagesShow = items;\n            }\n            \n            setItems(pagesShow);\n            setPagesHide(difference(items, pagesShow));\n        }\n    }, [])\n\n    useEffect(() => {\n        const pagesSetting = {\n            storeId: storeId,\n            setting: [...items]\n        }\n        localStorage.setItem('pages-setting', JSON.stringify(pagesSetting));\n    }, [items, storeId])\n\n    const reorder = (list: any, startIndex: number, endIndex: number) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n        return result;\n    };\n\n    const hidePage = (page: any) => {\n        if (items.length <= 1) {\n            return;\n        }\n\n        function isNot(item: string, page: any) {\n            return item !== page._id\n        }\n        setItems(prev => prev.filter(item => isNot(item, page)));\n        setPagesHide(prev => [...prev, page._id]);\n    }\n\n    const onDragEnd = (result: any) => {\n        const { source, destination } = result;\n        if (!destination) {\n            return;\n        }\n\n        setItems(reorder(items, source.index, destination.index));\n    }\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"droppable\" direction='horizontal'>\n                {(provided) => (\n                    <div\n                        className='pages-draggable'\n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                    >\n                        {items.map((key, index) => (\n                            <Draggable key={key} draggableId={key} index={index}  >\n                                {(provided) => (\n                                    <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        draggable={true}\n                                    >\n                                        <BtnPage\n                                            key={key}\n                                            page={pages[key]}\n                                            active={pageActive._id === pages[key]._id}\n                                            onClick={handleSelectPage}\n                                            hidePage={hidePage}\n                                        />\n                                    </div>\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n    )\n}\n\nexport default Pages;"]},"metadata":{},"sourceType":"module"}