{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/shipping-list.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Checkbox, Table } from 'antd';\nimport { compact, flatten, pick } from 'lodash';\nimport React, { memo, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport shippingApi from '../../api/shipping-api';\nimport { API_URI } from '../../configs/vars';\nimport formatMoney from '../../utils/format-money';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst formatShips = ships => ships.map(ship => {\n  const {\n    info,\n    shipmentFees\n  } = ship;\n  const ship_items = shipmentFees.map(s => ({\n    avatar: info.avatar,\n    serviceId: info.id,\n    transportType: s.transportType,\n    shipmentFee: s.total,\n    name: info.name\n  }));\n  return compact(ship_items);\n});\n\nconst Shipping = ({\n  order,\n  changeShip,\n  edit = false,\n  disabled = false,\n  updateIsEditShip\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const store = useSelector(state => state.store.store);\n  const token = useSelector(state => state.auth.token);\n  const [ships, setShips] = useState([]);\n\n  const loadShipping = async () => {\n    setLoading(true);\n\n    try {\n      const response = await shippingApi.servicesTransport({\n        storeId: store._id,\n        token: token.accessToken,\n        data: {\n          toProvinceId: order.customer.province,\n          toDistrictId: order.customer.district,\n          toWardId: order.customer.ward,\n          warehouseId: order.warehouseId._id,\n          weight: order.products.reduce((value, o) => o.productId.weight * o.count + value, 0),\n          length: 20,\n          width: 20,\n          height: 10\n        }\n      });\n      const format_ships = formatShips(response);\n      const res_ships = flatten(format_ships).map((s, i) => ({ ...s,\n        key: i\n      }));\n      setShips(res_ships);\n      const ship_exist = res_ships.find(ship => order.deliveryOptions.serviceId == ship.serviceId && order.deliveryOptions.transportType == ship.transportType);\n\n      if (ship_exist) {\n        const shipmentFeeForCustomer = !order.deliveryOptions.shipmentFeeForCustomer || ship_exist.shipmentFee > order.deliveryOptions.shipmentFeeForCustomer ? 0 : order.deliveryOptions.shipmentFeeForCustomer;\n        const newOrder = { ...order,\n          deliveryOptions: { ...order.deliveryOptions,\n            ...pick(ship_exist, ['serviceId', 'transportType', 'shipmentFee']),\n            shipmentFeeForCustomer\n          }\n        };\n        changeShip(newOrder);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  const updateFeeShip = () => {\n    const valid = order.customer.province && order.customer.district && order.customer.ward && order.warehouseId && order.products.length > 0;\n\n    if (valid) {\n      updateIsEditShip();\n      loadShipping();\n    }\n  };\n\n  useEffect(() => {\n    const valid = order.customer.province && order.customer.district && order.customer.ward && order.warehouseId && order.products.length > 0;\n\n    if (valid) {\n      loadShipping();\n    }\n  }, []);\n  const columns = [{\n    title: '',\n    dataIndex: '',\n    key: 'x',\n    render: ship => {\n      const checked = order.deliveryOptions.serviceId == ship.serviceId && order.deliveryOptions.transportType == ship.transportType;\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        style: {\n          margin: 0\n        },\n        checked: checked,\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    title: 'Hãng',\n    dataIndex: 'avatar',\n    key: 'avatar',\n    render: avatar => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${API_URI}/store${avatar}`,\n        style: {\n          width: 100\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    title: 'Gói',\n    dataIndex: 'transportType',\n    key: 'transportType',\n    render: transportType => {\n      if (transportType == 1) return 'Nhanh';\n      if (transportType == 2) return 'Tiêu chuẩn';\n      return '';\n    }\n  }, {\n    title: 'Giá',\n    dataIndex: 'shipmentFee',\n    key: 'shipmentFee',\n    render: shipmentFee => {\n      return formatMoney(shipmentFee);\n    }\n  }];\n  const disableBtn = !order.customer.province || !order.customer.district || !order.customer.ward || !edit;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      loading: loading,\n      size: \"small\",\n      onRow: ship => {\n        return {\n          onClick: () => {\n            if (disabled) return;\n\n            if (order.deliveryOptions.serviceId !== 0) {\n              const shipmentFeeForCustomer = !order.deliveryOptions.shipmentFeeForCustomer || ship.shipmentFee > order.deliveryOptions.shipmentFeeForCustomer ? 0 : order.deliveryOptions.shipmentFeeForCustomer;\n              const newOrder = { ...order,\n                deliveryOptions: { ...order.deliveryOptions,\n                  ...pick(ship, ['serviceId', 'transportType', 'shipmentFee']),\n                  shipmentFeeForCustomer\n                }\n              };\n              changeShip(newOrder);\n            }\n          }\n        };\n      },\n      style: {\n        marginBottom: 20\n      },\n      columns: columns,\n      bordered: true,\n      dataSource: ships,\n      pagination: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: updateFeeShip,\n        type: \"primary\",\n        size: \"small\",\n        disabled: disableBtn,\n        children: \"T\\xEDnh l\\u1EA1i ph\\xED v\\u1EADn chuy\\u1EC3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Shipping, \"gd8oy6T/BzQ7eiEFRBZdBC5zum8=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Shipping;\nexport default _c2 = /*#__PURE__*/memo(Shipping);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shipping\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/shipping-list.tsx"],"names":["Button","Checkbox","Table","compact","flatten","pick","React","memo","useEffect","useState","useSelector","shippingApi","API_URI","formatMoney","formatShips","ships","map","ship","info","shipmentFees","ship_items","s","avatar","serviceId","id","transportType","shipmentFee","total","name","Shipping","order","changeShip","edit","disabled","updateIsEditShip","loading","setLoading","store","state","token","auth","setShips","loadShipping","response","servicesTransport","storeId","_id","accessToken","data","toProvinceId","customer","province","toDistrictId","district","toWardId","ward","warehouseId","weight","products","reduce","value","o","productId","count","length","width","height","format_ships","res_ships","i","key","ship_exist","find","deliveryOptions","shipmentFeeForCustomer","newOrder","error","updateFeeShip","valid","columns","title","dataIndex","render","checked","margin","disableBtn","onClick","marginBottom","textAlign"],"mappings":"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","sourcesContent":["import { Button, Checkbox, Table } from 'antd';\nimport { compact, flatten, pick } from 'lodash';\nimport React, { FC, memo, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport shippingApi from '../../api/shipping-api';\nimport { API_URI } from '../../configs/vars';\nimport formatMoney from '../../utils/format-money';\n\nexport interface IService {\n    id: string;\n    name: string;\n    ServiceID: string;\n    shiper: {\n        id: string;\n    };\n    price: number;\n}\n\ninterface Props {\n    order: any;\n    changeShip: (order: any) => void;\n    disabled?: boolean;\n    edit?: boolean;\n    updateIsEditShip: () => void;\n}\n\nconst formatShips = (ships: any[]) =>\n    ships.map((ship: any) => {\n        const { info, shipmentFees } = ship;\n\n        const ship_items = shipmentFees.map((s: any) => ({\n            avatar: info.avatar,\n            serviceId: info.id,\n            transportType: s.transportType,\n            shipmentFee: s.total,\n            name: info.name,\n        }));\n\n        return compact(ship_items);\n    });\n\nconst Shipping: FC<Props> = ({\n    order,\n    changeShip,\n    edit = false,\n    disabled = false,\n    updateIsEditShip,\n}): JSX.Element => {\n    const [loading, setLoading] = useState(false);\n\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n    const [ships, setShips] = useState<any>([]);\n\n    const loadShipping = async () => {\n        setLoading(true);\n        try {\n            const response = await shippingApi.servicesTransport({\n                storeId: store._id,\n                token: token.accessToken,\n                data: {\n                    toProvinceId: order.customer.province,\n                    toDistrictId: order.customer.district,\n                    toWardId: order.customer.ward,\n                    warehouseId: order.warehouseId._id,\n                    weight: order.products.reduce(\n                        (value: number, o: any) => o.productId.weight * o.count + value,\n                        0\n                    ),\n                    length: 20,\n                    width: 20,\n                    height: 10,\n                },\n            });\n\n            const format_ships = formatShips(response);\n\n            const res_ships = flatten(format_ships).map((s: any, i: number) => ({\n                ...s,\n                key: i,\n            }));\n\n            setShips(res_ships);\n\n            const ship_exist = res_ships.find(\n                (ship: any) =>\n                    order.deliveryOptions.serviceId == ship.serviceId &&\n                    order.deliveryOptions.transportType == ship.transportType\n            );\n\n            if (ship_exist) {\n                const shipmentFeeForCustomer =\n                    !order.deliveryOptions.shipmentFeeForCustomer ||\n                    ship_exist.shipmentFee > order.deliveryOptions.shipmentFeeForCustomer\n                        ? 0\n                        : order.deliveryOptions.shipmentFeeForCustomer;\n\n                const newOrder = {\n                    ...order,\n\n                    deliveryOptions: {\n                        ...order.deliveryOptions,\n                        ...pick(ship_exist, ['serviceId', 'transportType', 'shipmentFee']),\n                        shipmentFeeForCustomer,\n                    },\n                };\n\n                changeShip(newOrder);\n            }\n\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n\n    const updateFeeShip = () => {\n        const valid =\n            order.customer.province &&\n            order.customer.district &&\n            order.customer.ward &&\n            order.warehouseId &&\n            order.products.length > 0;\n\n        if (valid) {\n            updateIsEditShip();\n            loadShipping();\n        }\n    };\n\n    useEffect(() => {\n        const valid =\n            order.customer.province &&\n            order.customer.district &&\n            order.customer.ward &&\n            order.warehouseId &&\n            order.products.length > 0;\n\n        if (valid) {\n            loadShipping();\n        }\n    }, []);\n\n    const columns = [\n        {\n            title: '',\n            dataIndex: '',\n            key: 'x',\n            render: (ship: any) => {\n                const checked =\n                    order.deliveryOptions.serviceId == ship.serviceId &&\n                    order.deliveryOptions.transportType == ship.transportType;\n                return <Checkbox style={{ margin: 0 }} checked={checked} disabled={disabled} />;\n            },\n        },\n        {\n            title: 'Hãng',\n            dataIndex: 'avatar',\n            key: 'avatar',\n            render: (avatar: string) => {\n                return <img src={`${API_URI}/store${avatar}`} style={{ width: 100 }} />;\n            },\n        },\n        {\n            title: 'Gói',\n            dataIndex: 'transportType',\n            key: 'transportType',\n            render: (transportType: any) => {\n                if (transportType == 1) return 'Nhanh';\n                if (transportType == 2) return 'Tiêu chuẩn';\n\n                return '';\n            },\n        },\n        {\n            title: 'Giá',\n            dataIndex: 'shipmentFee',\n            key: 'shipmentFee',\n            render: (shipmentFee: any) => {\n                return formatMoney(shipmentFee);\n            },\n        },\n    ];\n\n    const disableBtn =\n        !order.customer.province || !order.customer.district || !order.customer.ward || !edit;\n\n    return (\n        <>\n            <Table\n                loading={loading}\n                size='small'\n                onRow={(ship) => {\n                    return {\n                        onClick: () => {\n                            if (disabled) return;\n                            if (order.deliveryOptions.serviceId !== 0) {\n                                const shipmentFeeForCustomer =\n                                    !order.deliveryOptions.shipmentFeeForCustomer ||\n                                    ship.shipmentFee > order.deliveryOptions.shipmentFeeForCustomer\n                                        ? 0\n                                        : order.deliveryOptions.shipmentFeeForCustomer;\n\n                                const newOrder = {\n                                    ...order,\n\n                                    deliveryOptions: {\n                                        ...order.deliveryOptions,\n                                        ...pick(ship, [\n                                            'serviceId',\n                                            'transportType',\n                                            'shipmentFee',\n                                        ]),\n                                        shipmentFeeForCustomer,\n                                    },\n                                };\n\n                                changeShip(newOrder);\n                            }\n                        },\n                    };\n                }}\n                style={{ marginBottom: 20 }}\n                columns={columns}\n                bordered\n                dataSource={ships}\n                pagination={false}\n            />\n            <div style={{ textAlign: 'right' }}>\n                <Button onClick={updateFeeShip} type='primary' size='small' disabled={disableBtn}>\n                    Tính lại phí vận chuyển\n                </Button>\n            </div>\n        </>\n    );\n};\n\nexport default memo(Shipping);\n"]},"metadata":{},"sourceType":"module"}