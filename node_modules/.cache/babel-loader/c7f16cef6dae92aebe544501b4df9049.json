{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/context-order.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialOrder = {\n  use_transformer: true,\n  customer: {\n    _id: '',\n    fbUserId: '',\n    name: '',\n    phoneNo: '',\n    address: '',\n    province: undefined,\n    district: undefined,\n    ward: undefined\n  },\n  products: [],\n  deliveryOptions: {\n    serviceId: undefined,\n    transportType: undefined,\n    shipmentFeeForCustomer: 0,\n    shipmentFee: 0,\n    customerNote: '',\n    noteForCustomerCare: '',\n    discount: 0,\n    noteForDelivery: undefined,\n    discountBy: 0\n  },\n  warehouseId: undefined\n};\nconst initialCustomer = {\n  _id: '',\n  name: '',\n  phoneNo: '',\n  address: '',\n  province: undefined,\n  district: undefined,\n  ward: undefined\n};\nconst initialState = {\n  loading: false,\n  order: initialOrder,\n  infoCustomer: initialCustomer,\n  customerObjectId: ''\n};\nconst initalContext = {\n  state: initialState,\n  setState: state => state\n};\nconst OrderContext = /*#__PURE__*/createContext(initalContext);\n\nconst ProviderOrderContext = ({\n  children,\n  order\n}) => {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  useEffect(() => {\n    if (order) {\n      setState({ ...state,\n        order,\n        infoCustomer: order.customer\n      });\n    }\n  }, [order]);\n  const value = {\n    state,\n    setState\n  };\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProviderOrderContext, \"g9yWDQF6ixWa1r5sfsm7YAeGJG4=\");\n\n_c = ProviderOrderContext;\n\nconst useOrder = () => {\n  _s2();\n\n  const value = useContext(OrderContext);\n  const {\n    state,\n    setState\n  } = value;\n\n  const setOrder = order => {\n    setState({ ...state,\n      order\n    });\n  };\n\n  const setProducts = products => {\n    setState({ ...state,\n      order: { ...state.order,\n        products\n      }\n    });\n  };\n\n  const resetOrder = () => {\n    setState({ ...state,\n      order: initialOrder\n    });\n  };\n\n  const setInfoCustomer = infoCustomer => {\n    setState({ ...state,\n      infoCustomer,\n      customerObjectId: infoCustomer._id,\n      order: { ...state.order,\n        customer: infoCustomer\n      }\n    });\n  };\n\n  const setCustomerObjectId = customerObjectId => {\n    setState({ ...state,\n      customerObjectId\n    });\n  };\n\n  return { ...state,\n    setOrder,\n    setProducts,\n    resetOrder,\n    setInfoCustomer,\n    setCustomerObjectId\n  };\n};\n\n_s2(useOrder, \"ksutO2/Ix3UeCrGnhyM+QEP505Y=\");\n\nexport { ProviderOrderContext, useOrder };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderOrderContext\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/context-order.tsx"],"names":["React","createContext","useState","useContext","useEffect","initialOrder","use_transformer","customer","_id","fbUserId","name","phoneNo","address","province","undefined","district","ward","products","deliveryOptions","serviceId","transportType","shipmentFeeForCustomer","shipmentFee","customerNote","noteForCustomerCare","discount","noteForDelivery","discountBy","warehouseId","initialCustomer","initialState","loading","order","infoCustomer","customerObjectId","initalContext","state","setState","OrderContext","ProviderOrderContext","children","value","useOrder","setOrder","setProducts","resetOrder","setInfoCustomer","setCustomerObjectId"],"mappings":"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","sourcesContent":["import React, { createContext, FC, ReactNode, useState, useContext, useEffect } from 'react';\n\ninterface Product {\n    productId: string;\n    count: number;\n    price: number;\n}\n\ninterface State {\n    customer: {\n        name: string;\n        phoneNo: string;\n        address: string;\n        province: string | undefined;\n        district: string | undefined;\n        ward: string | undefined;\n    };\n    products: Product[];\n\n    deliveryOptions: {\n        serviceId?: number;\n        transportType: number;\n        shipmentFee: number;\n        shipmentFeeForCustomer: number;\n        shipmentFeeByTotal: boolean;\n        discount: number;\n        discountBy: number;\n        feeForReceiver: Number;\n        moneyForSender: number;\n        customerNote: string;\n        noteForCustomerCare: string;\n        transportStatus: number;\n        noteForDelivery?: string;\n        transportLogs: {\n            status: number;\n            updatedAt: string;\n        };\n    };\n}\n\nexport const initialOrder = {\n    use_transformer: true,\n    customer: {\n        _id: '',\n        fbUserId: '',\n        name: '',\n        phoneNo: '',\n        address: '',\n        province: undefined,\n        district: undefined,\n        ward: undefined,\n    },\n    products: [],\n    deliveryOptions: {\n        serviceId: undefined,\n        transportType: undefined,\n        shipmentFeeForCustomer: 0,\n        shipmentFee: 0,\n        customerNote: '',\n        noteForCustomerCare: '',\n        discount: 0,\n        noteForDelivery: undefined,\n        discountBy: 0,\n    },\n    warehouseId: undefined,\n};\n\nconst initialCustomer = {\n    _id: '',\n    name: '',\n    phoneNo: '',\n    address: '',\n    province: undefined,\n    district: undefined,\n    ward: undefined,\n};\n\nconst initialState = {\n    loading: false,\n    order: initialOrder,\n    infoCustomer: initialCustomer,\n    customerObjectId: '',\n};\n\nconst initalContext = {\n    state: initialState,\n    setState: (state: any): any => state,\n};\n\nconst OrderContext = createContext(initalContext);\n\ninterface Props {\n    children: ReactNode;\n    order?: any;\n}\n\nconst ProviderOrderContext: FC<Props> = ({ children, order }) => {\n    const [state, setState] = useState(initialState);\n\n    useEffect(() => {\n        if (order) {\n            setState({ ...state, order, infoCustomer: order.customer });\n        }\n    }, [order]);\n\n    const value = { state, setState };\n    return <OrderContext.Provider value={value}>{children}</OrderContext.Provider>;\n};\n\nconst useOrder = () => {\n    const value = useContext(OrderContext);\n\n    const { state, setState } = value;\n\n    const setOrder = (order: any) => {\n        setState({ ...state, order });\n    };\n\n    const setProducts = (products: any[]) => {\n        setState({ ...state, order: { ...state.order, products } });\n    };\n\n    const resetOrder = () => {\n        setState({\n            ...state,\n            order: initialOrder,\n        });\n    };\n\n    const setInfoCustomer = (infoCustomer: any) => {\n        setState({\n            ...state,\n            infoCustomer,\n            customerObjectId: infoCustomer._id,\n            order: { ...state.order, customer: infoCustomer },\n        });\n    };\n\n    const setCustomerObjectId = (customerObjectId: string) => {\n        setState({ ...state, customerObjectId });\n    };\n\n    return { ...state, setOrder, setProducts, resetOrder, setInfoCustomer, setCustomerObjectId };\n};\n\nexport { ProviderOrderContext, useOrder };\n"]},"metadata":{},"sourceType":"module"}