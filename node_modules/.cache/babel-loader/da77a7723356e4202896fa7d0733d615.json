{"ast":null,"code":"import types from './staffType';\nimport staffApi from '../../api/staff-api';\n\nfunction loadStaffSuccess(staffs) {\n  return {\n    type: types.LOAD_STAFF_SUCCESS,\n    payload: staffs\n  };\n}\n\nexport function updateStaff(data) {\n  return {\n    type: types.UPDATE_STAFF,\n    payload: data\n  };\n}\nexport function addStaff(staff) {\n  return {\n    type: types.ADD_STAFF,\n    payload: staff\n  };\n}\nexport function deleteStaff(staffId) {\n  return {\n    type: types.DELETE_STAFF,\n    payload: staffId\n  };\n}\nexport const loadStaffs = () => async (dispatch, getState) => {\n  dispatch({\n    type: types.LOADING\n  });\n\n  try {\n    const {\n      store,\n      auth\n    } = getState();\n    const storeId = store.store._id;\n    const token = auth.token.accessToken;\n    const response = await staffApi.listStaff({\n      storeId,\n      token\n    });\n    dispatch(loadStaffSuccess(response));\n  } catch (error) {\n    dispatch(loadStaffSuccess([]));\n  }\n};","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/staffState/staffAction.ts"],"names":["types","staffApi","loadStaffSuccess","staffs","type","LOAD_STAFF_SUCCESS","payload","updateStaff","data","UPDATE_STAFF","addStaff","staff","ADD_STAFF","deleteStaff","staffId","DELETE_STAFF","loadStaffs","dispatch","getState","LOADING","store","auth","storeId","_id","token","accessToken","response","listStaff","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AAEA,OAAOC,QAAP,MAAqB,qBAArB;;AAGA,SAASC,gBAAT,CAA0BC,MAA1B,EAAqD;AACjD,SAAO;AACHC,IAAAA,IAAI,EAAEJ,KAAK,CAACK,kBADT;AAEHC,IAAAA,OAAO,EAAEH;AAFN,GAAP;AAIH;;AAED,OAAO,SAASI,WAAT,CAAqBC,IAArB,EAAgC;AACnC,SAAO;AACHJ,IAAAA,IAAI,EAAEJ,KAAK,CAACS,YADT;AAEHH,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH;AAED,OAAO,SAASE,QAAT,CAAkBC,KAAlB,EAAiC;AACpC,SAAO;AACHP,IAAAA,IAAI,EAAEJ,KAAK,CAACY,SADT;AAEHN,IAAAA,OAAO,EAAEK;AAFN,GAAP;AAIH;AAED,OAAO,SAASE,WAAT,CAAqBC,OAArB,EAAsC;AACzC,SAAO;AACHV,IAAAA,IAAI,EAAEJ,KAAK,CAACe,YADT;AAEHT,IAAAA,OAAO,EAAEQ;AAFN,GAAP;AAIH;AAED,OAAO,MAAME,UAAU,GAAG,MAAM,OAAOC,QAAP,EAA2BC,QAA3B,KAA2D;AACvFD,EAAAA,QAAQ,CAAC;AACLb,IAAAA,IAAI,EAAEJ,KAAK,CAACmB;AADP,GAAD,CAAR;;AAGA,MAAI;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBH,QAAQ,EAAhC;AACA,UAAMI,OAAO,GAAGF,KAAK,CAACA,KAAN,CAAYG,GAA5B;AACA,UAAMC,KAAK,GAAGH,IAAI,CAACG,KAAL,CAAWC,WAAzB;AACA,UAAMC,QAAQ,GAAG,MAAMzB,QAAQ,CAAC0B,SAAT,CAAmB;AAAEL,MAAAA,OAAF;AAAWE,MAAAA;AAAX,KAAnB,CAAvB;AAEAP,IAAAA,QAAQ,CAACf,gBAAgB,CAACwB,QAAD,CAAjB,CAAR;AACH,GAPD,CAOE,OAAOE,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAACf,gBAAgB,CAAC,EAAD,CAAjB,CAAR;AACH;AACJ,CAdM","sourcesContent":["import types from './staffType';\nimport { Dispatch } from 'redux';\nimport staffApi from '../../api/staff-api';\nimport { IAction, IStaff } from './staffReducer';\n\nfunction loadStaffSuccess(staffs: IStaff[]): IAction {\n    return {\n        type: types.LOAD_STAFF_SUCCESS,\n        payload: staffs,\n    };\n}\n\nexport function updateStaff(data: any) {\n    return {\n        type: types.UPDATE_STAFF,\n        payload: data,\n    };\n}\n\nexport function addStaff(staff: IStaff) {\n    return {\n        type: types.ADD_STAFF,\n        payload: staff,\n    };\n}\n\nexport function deleteStaff(staffId: string) {\n    return {\n        type: types.DELETE_STAFF,\n        payload: staffId,\n    };\n}\n\nexport const loadStaffs = () => async (dispatch: Dispatch, getState: any): Promise<any> => {\n    dispatch({\n        type: types.LOADING,\n    });\n    try {\n        const { store, auth } = getState();\n        const storeId = store.store._id;\n        const token = auth.token.accessToken;\n        const response = await staffApi.listStaff({ storeId, token });\n\n        dispatch(loadStaffSuccess(response));\n    } catch (error) {\n        dispatch(loadStaffSuccess([]));\n    }\n};\n"]},"metadata":{},"sourceType":"module"}