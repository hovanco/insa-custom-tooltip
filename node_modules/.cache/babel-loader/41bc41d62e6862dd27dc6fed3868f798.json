{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/modal-answers.tsx\",\n    _s = $RefreshSig$();\n\nimport { SettingFilled } from '@ant-design/icons';\nimport { Button, Col, Input, Modal, Row, Tooltip } from 'antd';\nimport { push } from 'connected-react-router';\nimport { filter, keyBy, map } from 'lodash';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ChatIcon } from '../../../assets/icon';\nimport { Loading } from '../../../components';\nimport useModal from '../../../hooks/use-modal';\nimport { setDefaultActiveKey } from '../../../reducers/setting/settingAction';\nimport QuickMessageItem from './quick-message-item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalAnswers = ({\n  chat = false,\n  disabled = false\n}) => {\n  _s();\n\n  const [text, setText] = useState('');\n  const {\n    visible,\n    toggle\n  } = useModal();\n  const dispatch = useDispatch();\n  const loading = useSelector(({\n    setting\n  }) => setting.loading);\n  const quickMessage = useSelector(({\n    setting\n  }) => setting.quickMessage);\n  const conversation = useSelector(({\n    fanpage\n  }) => fanpage.conversation);\n\n  const searchQuickMessage = e => {\n    let str = e.target.value;\n    setText(str);\n  };\n\n  const renderQuickMessage = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }, this);\n    const filter_quick_message = keyBy(filter(quickMessage, item => {\n      return item.message.includes(text);\n    }), '_id');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: map(filter_quick_message, message => {\n        return /*#__PURE__*/_jsxDEV(QuickMessageItem, {\n          conversation: conversation,\n          message: message,\n          toggleModal: toggle,\n          chat: chat,\n          fbUsername: conversation.fbUsername\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleSetting = () => {\n    dispatch(setDefaultActiveKey('quick_message'));\n    dispatch(push('/customer/other/setting'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: !disabled ? toggle : undefined,\n      className: `item${disabled ? ' item-disabled' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Tr\\u1EA3 l\\u1EDDi nhanh\",\n        placement: \"top\",\n        children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      closable: false,\n      visible: visible,\n      onCancel: toggle,\n      onOk: toggle,\n      footer: null,\n      bodyStyle: {\n        padding: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-modal-quick-message\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 15,\n          style: {\n            padding: 15\n          },\n          align: \"middle\",\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: \"Tr\\u1EA3 l\\u1EDDi nhanh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              flex: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: text,\n              onChange: searchQuickMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(SettingFilled, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 43\n              }, this),\n              onClick: handleSetting,\n              children: \"C\\xE0i \\u0111\\u1EB7t\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderQuickMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ModalAnswers, \"t+26+XudxpmvAY3VGxymWnjdaK4=\", false, function () {\n  return [useModal, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ModalAnswers;\nexport default ModalAnswers;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalAnswers\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/modal-answers.tsx"],"names":["SettingFilled","Button","Col","Input","Modal","Row","Tooltip","push","filter","keyBy","map","React","useState","useDispatch","useSelector","ChatIcon","Loading","useModal","setDefaultActiveKey","QuickMessageItem","ModalAnswers","chat","disabled","text","setText","visible","toggle","dispatch","loading","setting","quickMessage","conversation","fanpage","searchQuickMessage","e","str","target","value","renderQuickMessage","filter_quick_message","item","message","includes","fbUsername","_id","handleSetting","undefined","padding","flex"],"mappings":"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","sourcesContent":["import { SettingFilled } from '@ant-design/icons';\nimport { Button, Col, Input, Modal, Row, Tooltip } from 'antd';\nimport { push } from 'connected-react-router';\nimport { filter, keyBy, map } from 'lodash';\nimport React, { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ChatIcon } from '../../../assets/icon';\nimport { Loading } from '../../../components';\nimport useModal from '../../../hooks/use-modal';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { QuickMessageInterface } from '../../../reducers/setting/interfaces';\nimport { setDefaultActiveKey } from '../../../reducers/setting/settingAction';\nimport { IState as SettingState } from '../../../reducers/setting/settingReducer';\nimport QuickMessageItem from './quick-message-item';\n\ninterface Props {\n    chat?: boolean;\n    disabled?: boolean;\n}\n\nconst ModalAnswers: FC<Props> = ({ chat = false, disabled = false }): JSX.Element => {\n    const [text, setText] = useState('');\n    const { visible, toggle } = useModal();\n    const dispatch = useDispatch();\n    const loading = useSelector(({ setting }: { setting: SettingState }) => setting.loading);\n\n    const quickMessage = useSelector(\n        ({ setting }: { setting: SettingState }) => setting.quickMessage\n    );\n\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n\n    const searchQuickMessage = (e: any) => {\n        let str = e.target.value;\n\n        setText(str);\n    };\n\n    const renderQuickMessage = () => {\n        if (loading) return <Loading />;\n\n        const filter_quick_message = keyBy(\n            filter(quickMessage, (item: QuickMessageInterface) => {\n                return (item.message as string).includes(text);\n            }),\n            '_id'\n        );\n\n        return (\n            <div>\n                {map(filter_quick_message, (message: QuickMessageInterface) => {\n                    return (\n                        <QuickMessageItem\n                            conversation={conversation}\n                            key={message._id}\n                            message={message}\n                            toggleModal={toggle}\n                            chat={chat}\n                            fbUsername={conversation.fbUsername}\n                        />\n                    );\n                })}\n            </div>\n        );\n    };\n\n    const handleSetting = () => {\n        dispatch(setDefaultActiveKey('quick_message'));\n        dispatch(push('/customer/other/setting'));\n    };\n\n    return (\n        <>\n            <div\n                onClick={!disabled ? toggle : undefined}\n                className={`item${disabled ? ' item-disabled' : ''}`}\n            >\n                <Tooltip title='Trả lời nhanh' placement='top'>\n                    <ChatIcon />\n                </Tooltip>\n            </div>\n            <Modal\n                closable={false}\n                visible={visible}\n                onCancel={toggle}\n                onOk={toggle}\n                footer={null}\n                bodyStyle={{ padding: 0 }}\n            >\n                <div className='title-modal-quick-message'>\n                    <Row gutter={15} style={{ padding: 15 }} align='middle' justify='center'>\n                        <Col>Trả lời nhanh</Col>\n                        <Col style={{ flex: 1 }}>\n                            <Input value={text} onChange={searchQuickMessage} />\n                        </Col>\n                        <Col>\n                            <Button icon={<SettingFilled />} onClick={handleSetting}>\n                                Cài đặt\n                            </Button>\n                        </Col>\n                    </Row>\n                </div>\n\n                <div>{renderQuickMessage()}</div>\n            </Modal>\n        </>\n    );\n};\n\nexport default ModalAnswers;\n"]},"metadata":{},"sourceType":"module"}