{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/create-store/create-store-form.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Form, Input, message, Row, Select } from 'antd';\nimport { push } from 'connected-react-router';\nimport { map } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { connectFanpageApi } from '../../api/fanpage';\nimport locationApi from '../../api/location-api';\nimport storeApi from '../../api/store-api';\nimport { Loading } from '../../components';\nimport useHiddenModalExpired from '../../hooks/use-hidden-modal-expired';\nimport { loadFanpageAction } from '../../reducers/fanpageState/fanpageAction';\nimport types from '../../reducers/fanpageState/fanpageTypes';\nimport { addStore, updateStore } from '../../reducers/storeState/storeAction';\nimport { disabledAutosuggestion } from '../../utils/disabled-autosuggestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst size = 'large';\nconst style = {\n  width: '100%'\n};\n\nconst CreateStoreForm = ({\n  toggleLoading = () => {}\n}) => {\n  _s();\n\n  const loadingStore = useSelector(state => state.store.loading);\n  const [loadingConnect, setLoadingConnect] = useState(false);\n  const store = useSelector(state => state.store.store);\n  const [form] = Form.useForm();\n  const [provinceId, setProvinceId] = useState(store ? `${store.province}` : undefined);\n  const [provinces, setProvinces] = useState([]);\n  const [districtId, setDistrictId] = useState(store ? `${store.district}` : undefined);\n  const [districts, setDistricts] = useState([]);\n  const [wards, setWards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingProvince, setLoadingProvince] = useState(true);\n  const [loadingDistrict, setLoadingDistrict] = useState(false);\n  const [loadingWard, setLoadingWard] = useState(false);\n  const dispatch = useDispatch();\n  const token = useSelector(({\n    auth\n  }) => auth.token);\n  const {\n    hiddenModalExpired\n  } = useHiddenModalExpired();\n\n  const addNewStore = async values => {\n    try {\n      toggleLoading(true);\n      const resCreateStore = await storeApi.createStore({\n        token: token.accessToken,\n        name: values.name,\n        address: values.address,\n        province: values.province,\n        district: values.district,\n        ward: values.ward,\n        phoneNo: values.phoneNo\n      });\n      dispatch(addStore({ ...resCreateStore,\n        role: 0\n      }));\n      const shortLiveToken = localStorage.getItem('shortLiveToken');\n\n      if (shortLiveToken) {\n        try {\n          const resConnectFanpage = await connectFanpageApi({\n            payload: {\n              shortLiveToken\n            },\n            storeId: resCreateStore._id,\n            token: token.accessToken\n          });\n          dispatch({\n            type: types.CONNECT_FANPAGE_SUCCESSS,\n            payload: resConnectFanpage.data\n          });\n          dispatch(loadFanpageAction());\n          localStorage.removeItem('shortLiveToken');\n          setLoading(false);\n          dispatch(push('/customer'));\n          message.success('Đã tạo xong cửa hàng');\n          setLoadingConnect(false);\n        } catch (e) {\n          toggleLoading(false);\n          dispatch({\n            type: types.CONNECT_FANPAGE_FAILED\n          });\n        }\n      } else {\n        dispatch(loadFanpageAction());\n        setLoading(false);\n        dispatch(push('/customer'));\n        message.success('Đã tạo xong cửa hàng');\n        setLoadingConnect(false);\n      }\n\n      toggleLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  const editStore = async values => {\n    try {\n      const response = await storeApi.editStore({\n        storeId: store._id,\n        token: token.accessToken,\n        data: values\n      });\n      console.log(\"response\", response);\n      dispatch(updateStore(response));\n      setLoading(false);\n      message.success('Đã cập nhật cửa hàng');\n    } catch (error) {\n      setLoading(false);\n      message.error('Lỗi cập nhật cửa hàng');\n    }\n  };\n\n  const onFinish = async values => {\n    setLoading(true);\n\n    if (store && store) {\n      editStore(values);\n    } else {\n      addNewStore(values);\n    }\n  };\n\n  const validatePhone = (_, value, callback) => {\n    if (value) {\n      const vnf_regex = /^(0|\\+84)(9|3|7|8|5){1}([0-9]{8})$/g;\n\n      if (vnf_regex.test(value) === false) {\n        callback('Vui lòng nhập số điện thoại hợp lệ');\n      } else {\n        callback();\n      }\n    } else {\n      callback();\n    }\n  };\n\n  const selectProvince = value => {\n    setProvinceId(value);\n    setDistrictId(undefined);\n    form.setFieldsValue({\n      district: undefined,\n      ward: undefined\n    });\n  };\n\n  const selectDistrict = value => {\n    setDistrictId(value);\n    setWards([]);\n    form.setFieldsValue({\n      ward: undefined\n    });\n  };\n\n  useEffect(() => {\n    if (store) {\n      setProvinceId(`${store.province}`);\n      setDistrictId(`${store.district}`);\n    }\n  }, [store]);\n  useEffect(() => {\n    const fixAutocomplete = () => {\n      document.querySelectorAll('.ant-select-selector input').forEach(e => {\n        e.setAttribute('autocomplete', 'stopDamnAutocomplete');\n      });\n    };\n\n    fixAutocomplete();\n  }, []);\n  useEffect(() => {\n    const initialValues = {\n      province: '-1',\n      district: '-1',\n      ward: '-1'\n    };\n\n    if (store) {\n      form.setFieldsValue(store);\n    } else {\n      form.setFieldsValue(initialValues);\n    }\n  }, []);\n  useEffect(() => {\n    async function getListProvinces() {\n      try {\n        const response = await locationApi.getProvinces();\n        setProvinces(response);\n        setLoadingProvince(false);\n      } catch (error) {\n        setProvinces([]);\n        setLoadingProvince(false);\n      }\n    }\n\n    getListProvinces();\n  }, []);\n  useEffect(() => {\n    async function getListDistricts() {\n      if (!provinceId) return null;\n      setLoadingDistrict(true);\n\n      try {\n        const response = await locationApi.getDistricts(provinceId);\n        setDistricts(response);\n        setLoadingDistrict(false);\n      } catch (error) {\n        setDistricts([]);\n        setLoadingDistrict(false);\n      }\n    }\n\n    getListDistricts();\n  }, [provinceId]);\n  useEffect(() => {\n    async function getListWard() {\n      if (!districtId) return null;\n      setLoadingWard(true);\n\n      try {\n        const response = await locationApi.getWards({\n          provinceId,\n          districtId\n        });\n        setWards(response);\n        setLoadingWard(false);\n      } catch (error) {\n        setWards([]);\n        setLoadingWard(false);\n      }\n    }\n\n    getListWard();\n  }, [districtId]);\n  if (loadingStore) return /*#__PURE__*/_jsxDEV(Loading, {\n    full: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 30\n  }, this);\n  const initialValues = {\n    name: store ? store.name : '',\n    phoneNo: store ? store.phoneNo : '',\n    province: store ? `${store.province}` : '',\n    district: store ? `${store.district}` : '',\n    ward: store ? `${store.ward}` : '',\n    address: store ? store.address : ''\n  };\n\n  if (loadingConnect) {\n    return /*#__PURE__*/_jsxDEV(Loading, {\n      full: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    layout: \"vertical\",\n    form: form,\n    onFinish: onFinish,\n    initialValues: initialValues,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"name\",\n      label: \"T\\xEAn c\\u1EEDa h\\xE0ng\",\n      rules: [{\n        required: true,\n        message: 'Điền tên cửa hàng'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        size: size,\n        placeholder: \"T\\xEAn c\\u1EEDa h\\xE0ng\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"phoneNo\",\n      label: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n      rules: [{\n        required: true,\n        message: 'Điền số điện thoại'\n      }, {\n        validator: validatePhone\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        style: style,\n        size: size,\n        placeholder: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i c\\u1EEDa h\\xE0ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 15,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"province\",\n          label: \"T\\u1EC9nh/th\\xE0nh ph\\u1ED1\",\n          rules: [{\n            required: true,\n            message: 'Chọn tỉnh/thành phố'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            size: size,\n            placeholder: \"Ch\\u1ECDn t\\u1EC9nh/th\\xE0nh ph\\u1ED1\",\n            onChange: selectProvince,\n            showSearch: true,\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            loading: loadingProvince,\n            onFocus: disabledAutosuggestion,\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: '-1',\n              disabled: true,\n              children: \"Ch\\u1ECDn t\\u1EC9nh/th\\xE0nh ph\\u1ED1\"\n            }, '-1', false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this), map(provinces, province => /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: province.code,\n              children: province.name\n            }, province.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"district\",\n          label: \"Qu\\u1EADn/huy\\u1EC7n\",\n          rules: [{\n            required: true,\n            message: 'Chọn quận/huyện'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            size: size,\n            placeholder: \"Ch\\u1ECDn qu\\u1EADn/huy\\u1EC7n\",\n            onChange: selectDistrict,\n            showSearch: true,\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            value: districtId,\n            disabled: !provinceId,\n            loading: loadingDistrict,\n            onFocus: disabledAutosuggestion,\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: '-1',\n              disabled: true,\n              children: \"Ch\\u1ECDn qu\\u1EADn/huy\\u1EC7n\"\n            }, '-1', false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, this), map(districts, district => /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: district.code,\n              children: district.name\n            }, district.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"ward\",\n          label: \"X\\xE3/ph\\u01B0\\u1EDDng\",\n          rules: [{\n            required: true,\n            message: 'Chọn xã/phường'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            size: size,\n            placeholder: \"Ch\\u1ECDn x\\xE3/ph\\u01B0\\u1EDDng\",\n            showSearch: true,\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            disabled: !districtId,\n            loading: loadingWard,\n            onFocus: disabledAutosuggestion,\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: '-1',\n              disabled: true,\n              children: \"Ch\\u1ECDn x\\xE3/ph\\u01B0\\u1EDDng\"\n            }, '-1', false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 29\n            }, this), map(wards, ward => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: ward.code,\n                children: ward.name\n              }, ward.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"address\",\n      rules: [{\n        required: true,\n        message: 'Điền địa chỉ cửa hàng'\n      }],\n      label: \"\\u0110\\u1ECBa ch\\u1EC9\",\n      children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n        autoComplete: \"off\",\n        placeholder: \"\\u0110i\\u1EC1n \\u0111\\u1ECBa ch\\u1EC9 c\\u1EEDa h\\xE0ng\",\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        size: size,\n        htmlType: \"submit\",\n        block: true,\n        loading: loading,\n        disabled: hiddenModalExpired || (store ? store.role !== 0 ? true : false : false),\n        children: store && store ? 'Cập nhật cửa hàng' : 'Tạo cửa hàng'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateStoreForm, \"EvnA7uCWJtUCqtfXBwK8l9PH3Xg=\", false, function () {\n  return [useSelector, useSelector, Form.useForm, useDispatch, useSelector, useHiddenModalExpired];\n});\n\n_c = CreateStoreForm;\nexport default CreateStoreForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateStoreForm\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/create-store/create-store-form.tsx"],"names":["Button","Col","Form","Input","message","Row","Select","push","map","React","useEffect","useState","useDispatch","useSelector","connectFanpageApi","locationApi","storeApi","Loading","useHiddenModalExpired","loadFanpageAction","types","addStore","updateStore","disabledAutosuggestion","size","style","width","CreateStoreForm","toggleLoading","loadingStore","state","store","loading","loadingConnect","setLoadingConnect","form","useForm","provinceId","setProvinceId","province","undefined","provinces","setProvinces","districtId","setDistrictId","district","districts","setDistricts","wards","setWards","setLoading","loadingProvince","setLoadingProvince","loadingDistrict","setLoadingDistrict","loadingWard","setLoadingWard","dispatch","token","auth","hiddenModalExpired","addNewStore","values","resCreateStore","createStore","accessToken","name","address","ward","phoneNo","role","shortLiveToken","localStorage","getItem","resConnectFanpage","payload","storeId","_id","type","CONNECT_FANPAGE_SUCCESSS","data","removeItem","success","e","CONNECT_FANPAGE_FAILED","error","editStore","response","console","log","onFinish","validatePhone","_","value","callback","vnf_regex","test","selectProvince","setFieldsValue","selectDistrict","fixAutocomplete","document","querySelectorAll","forEach","setAttribute","initialValues","getListProvinces","getProvinces","getListDistricts","getDistricts","getListWard","getWards","required","validator","input","option","children","toLowerCase","indexOf","code"],"mappings":"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","sourcesContent":["import { Button, Col, Form, Input, message, Row, Select } from 'antd';\nimport { push } from 'connected-react-router';\nimport { map } from 'lodash';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { connectFanpageApi } from '../../api/fanpage';\nimport locationApi from '../../api/location-api';\nimport storeApi from '../../api/store-api';\nimport { Loading } from '../../components';\nimport useHiddenModalExpired from '../../hooks/use-hidden-modal-expired';\nimport { IAuthState } from '../../reducers/authState/authReducer';\nimport { loadFanpageAction } from '../../reducers/fanpageState/fanpageAction';\nimport types from '../../reducers/fanpageState/fanpageTypes';\nimport { addStore, updateStore } from '../../reducers/storeState/storeAction';\nimport { disabledAutosuggestion } from '../../utils/disabled-autosuggestion';\n\nconst size = 'large';\nconst style = { width: '100%' };\n\nexport interface Province {\n    code: string;\n    name: string;\n    name_with_type: string;\n    slug: string;\n    type: string;\n}\n\nexport interface District {\n    code: string;\n    name: string;\n    name_with_type: string;\n    parent_code: string;\n    path: string;\n    path_with_type: string;\n    slug: string;\n    type: string;\n}\nexport interface Ward {\n    code: string;\n    name: string;\n    name_with_type: string;\n    parent_code: string;\n    path: string;\n    path_with_type: string;\n    slug: string;\n    type: string;\n}\n\ninterface Props {\n    toggleLoading?: (boolean: boolean) => void;\n}\n\nconst CreateStoreForm: FC<Props> = ({ toggleLoading = () => {} }): JSX.Element => {\n    const loadingStore = useSelector((state: any) => state.store.loading);\n    const [loadingConnect, setLoadingConnect] = useState(false);\n    const store = useSelector((state: any) => state.store.store);\n\n    const [form] = Form.useForm();\n\n    const [provinceId, setProvinceId] = useState<string | undefined>(\n        store ? `${store.province}` : undefined,\n    );\n    const [provinces, setProvinces] = useState<Province[]>([]);\n\n    const [districtId, setDistrictId] = useState<string | undefined>(\n        store ? `${store.district}` : undefined,\n    );\n    const [districts, setDistricts] = useState<District[]>([]);\n\n    const [wards, setWards] = useState<District[]>([]);\n\n    const [loading, setLoading] = useState<boolean>(false);\n    const [loadingProvince, setLoadingProvince] = useState<boolean>(true);\n    const [loadingDistrict, setLoadingDistrict] = useState<boolean>(false);\n    const [loadingWard, setLoadingWard] = useState<boolean>(false);\n    const dispatch = useDispatch();\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n    const { hiddenModalExpired } = useHiddenModalExpired();\n\n    const addNewStore = async (values: any) => {\n        try {\n            toggleLoading(true);\n            const resCreateStore = await storeApi.createStore({\n                token: token.accessToken,\n                name: values.name,\n                address: values.address,\n                province: values.province,\n                district: values.district,\n                ward: values.ward,\n                phoneNo: values.phoneNo,\n            });\n\n            dispatch(addStore({ ...resCreateStore, role: 0 }));\n\n            const shortLiveToken = localStorage.getItem('shortLiveToken');\n\n            if (shortLiveToken) {\n                try {\n                    const resConnectFanpage = await connectFanpageApi({\n                        payload: { shortLiveToken },\n                        storeId: resCreateStore._id,\n                        token: token.accessToken,\n                    });\n                    dispatch({\n                        type: types.CONNECT_FANPAGE_SUCCESSS,\n                        payload: resConnectFanpage.data,\n                    });\n\n                    dispatch(loadFanpageAction());\n                    localStorage.removeItem('shortLiveToken');\n                    setLoading(false);\n                    dispatch(push('/customer'));\n                    message.success('Đã tạo xong cửa hàng');\n                    setLoadingConnect(false);\n                } catch (e) {\n                    toggleLoading(false);\n                    dispatch({\n                        type: types.CONNECT_FANPAGE_FAILED,\n                    });\n                }\n            } else {\n                dispatch(loadFanpageAction());\n                setLoading(false);\n                dispatch(push('/customer'));\n                message.success('Đã tạo xong cửa hàng');\n                setLoadingConnect(false);\n            }\n            toggleLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n\n    const editStore = async (values: any) => {\n        try {\n            const response = await storeApi.editStore({\n                storeId: store._id,\n                token: token.accessToken,\n                data: values,\n            });\n            console.log(\"response\",response);\n            dispatch(updateStore(response));\n            setLoading(false);\n            message.success('Đã cập nhật cửa hàng');\n        } catch (error) {\n            setLoading(false);\n            message.error('Lỗi cập nhật cửa hàng');\n        }\n        \n    };\n    \n\n    const onFinish = async (values: any) => {\n        setLoading(true);\n\n        if (store && store) {\n            editStore(values);\n        } else {\n            addNewStore(values);\n        }\n    };\n\n    const validatePhone = (_: any, value: any, callback: any) => {\n        if (value) {\n            const vnf_regex = /^(0|\\+84)(9|3|7|8|5){1}([0-9]{8})$/g;\n            if (vnf_regex.test(value) === false) {\n                callback('Vui lòng nhập số điện thoại hợp lệ');\n            } else {\n                callback();\n            }\n        } else {\n            callback();\n        }\n    };\n\n    const selectProvince = (value: any) => {\n        setProvinceId(value);\n        setDistrictId(undefined);\n\n        form.setFieldsValue({\n            district: undefined,\n            ward: undefined,\n        });\n    };\n\n    const selectDistrict = (value: any) => {\n        setDistrictId(value);\n        setWards([]);\n        form.setFieldsValue({\n            ward: undefined,\n        });\n    };\n\n    useEffect(() => {\n        if (store) {\n            setProvinceId(`${store.province}`);\n            setDistrictId(`${store.district}`);\n        }\n    }, [store]);\n\n    useEffect(() => {\n        const fixAutocomplete = () => {\n            document.querySelectorAll('.ant-select-selector input').forEach((e) => {\n                e.setAttribute('autocomplete', 'stopDamnAutocomplete');\n            });\n        };\n\n        fixAutocomplete();\n    }, []);\n\n    useEffect(() => {\n        const initialValues = {\n            province: '-1',\n            district: '-1',\n            ward: '-1',\n        };\n\n        if (store) {\n            form.setFieldsValue(store);\n        } else {\n            form.setFieldsValue(initialValues);\n        }\n    }, []);\n\n    useEffect(() => {\n        async function getListProvinces() {\n            try {\n                const response = await locationApi.getProvinces();\n                setProvinces(response);\n                setLoadingProvince(false);\n            } catch (error) {\n                setProvinces([]);\n                setLoadingProvince(false);\n            }\n        }\n        getListProvinces();\n    }, []);\n\n    useEffect(() => {\n        async function getListDistricts() {\n            if (!provinceId) return null;\n            setLoadingDistrict(true);\n            try {\n                const response = await locationApi.getDistricts(provinceId);\n                setDistricts(response);\n                setLoadingDistrict(false);\n            } catch (error) {\n                setDistricts([]);\n                setLoadingDistrict(false);\n            }\n        }\n        getListDistricts();\n    }, [provinceId]);\n\n    useEffect(() => {\n        async function getListWard() {\n            if (!districtId) return null;\n            setLoadingWard(true);\n            try {\n                const response = await locationApi.getWards({\n                    provinceId,\n                    districtId,\n                });\n                setWards(response);\n                setLoadingWard(false);\n            } catch (error) {\n                setWards([]);\n                setLoadingWard(false);\n            }\n        }\n        getListWard();\n    }, [districtId]);\n\n    if (loadingStore) return <Loading full />;\n\n    const initialValues = {\n        name: store ? store.name : '',\n        phoneNo: store ? store.phoneNo : '',\n        province: store ? `${store.province}` : '',\n        district: store ? `${store.district}` : '',\n        ward: store ? `${store.ward}` : '',\n        address: store ? store.address : '',\n    };\n\n    if (loadingConnect) {\n        return <Loading full />;\n    }\n\n    return (\n        <Form layout='vertical' form={form} onFinish={onFinish} initialValues={initialValues}>\n            <Form.Item\n                name='name'\n                label='Tên cửa hàng'\n                rules={[{ required: true, message: 'Điền tên cửa hàng' }]}\n            >\n                <Input size={size} placeholder='Tên cửa hàng' autoFocus />\n            </Form.Item>\n\n            <Form.Item\n                name='phoneNo'\n                label='Số điện thoại'\n                rules={[\n                    { required: true, message: 'Điền số điện thoại' },\n                    {\n                        validator: validatePhone,\n                    },\n                ]}\n            >\n                <Input style={style} size={size} placeholder='Số điện thoại cửa hàng' />\n            </Form.Item>\n\n            <Row gutter={15}>\n                <Col md={8}>\n                    <Form.Item\n                        name='province'\n                        label='Tỉnh/thành phố'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Chọn tỉnh/thành phố',\n                            },\n                        ]}\n                    >\n                        <Select\n                            size={size}\n                            placeholder='Chọn tỉnh/thành phố'\n                            onChange={selectProvince}\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            loading={loadingProvince}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-1'} key={'-1'} disabled>\n                                Chọn tỉnh/thành phố\n                            </Select.Option>\n                            {map(provinces, (province: Province) => (\n                                <Select.Option value={province.code} key={province.code}>\n                                    {province.name}\n                                </Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                </Col>\n\n                <Col md={8}>\n                    <Form.Item\n                        name='district'\n                        label='Quận/huyện'\n                        rules={[{ required: true, message: 'Chọn quận/huyện' }]}\n                    >\n                        <Select\n                            size={size}\n                            placeholder='Chọn quận/huyện'\n                            onChange={selectDistrict}\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            value={districtId}\n                            disabled={!provinceId}\n                            loading={loadingDistrict}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-1'} key={'-1'} disabled>\n                                Chọn quận/huyện\n                            </Select.Option>\n                            {map(districts, (district: District) => (\n                                <Select.Option value={district.code} key={district.code}>\n                                    {district.name}\n                                </Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                </Col>\n\n                <Col md={8}>\n                    <Form.Item\n                        name='ward'\n                        label='Xã/phường'\n                        rules={[{ required: true, message: 'Chọn xã/phường' }]}\n                    >\n                        <Select\n                            size={size}\n                            placeholder='Chọn xã/phường'\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            disabled={!districtId}\n                            loading={loadingWard}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-1'} key={'-1'} disabled>\n                                Chọn xã/phường\n                            </Select.Option>\n                            {map(wards, (ward: Ward) => {\n                                return (\n                                    <Select.Option value={ward.code} key={ward.code}>\n                                        {ward.name}\n                                    </Select.Option>\n                                );\n                            })}\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n\n            <Form.Item\n                name='address'\n                rules={[{ required: true, message: 'Điền địa chỉ cửa hàng' }]}\n                label='Địa chỉ'\n            >\n                <Input.TextArea\n                    autoComplete='off'\n                    placeholder='Điền địa chỉ cửa hàng'\n                    rows={4}\n                ></Input.TextArea>\n            </Form.Item>\n\n            <Form.Item>\n                <Button\n                    type='primary'\n                    size={size}\n                    htmlType='submit'\n                    block\n                    loading={loading}\n                    disabled={\n                        hiddenModalExpired || (store ? (store.role !== 0 ? true : false) : false)\n                    }\n                >\n                    {store && store ? 'Cập nhật cửa hàng' : 'Tạo cửa hàng'}\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default CreateStoreForm;\n"]},"metadata":{},"sourceType":"module"}