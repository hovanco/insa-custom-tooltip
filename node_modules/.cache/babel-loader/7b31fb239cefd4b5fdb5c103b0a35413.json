{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/table-keywords.tsx\";\nimport React from 'react';\nimport { Table, Row, Col, Avatar, Space, Tooltip } from 'antd';\nimport formatMoney from '../../../utils/format-money';\nimport { PictureFilled } from '@ant-design/icons';\nimport { TextEllipsis } from '../../../components';\nimport { IMG_URL } from '../../../configs/vars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'STT',\n  dataIndex: 'no',\n  key: 'no',\n  align: 'center',\n  width: 50\n}, {\n  title: 'Từ khóa',\n  dataIndex: 'keyword',\n  key: 'keyword',\n  align: 'center',\n  width: 250,\n  render: keyword => /*#__PURE__*/_jsxDEV(Tooltip, {\n    placement: \"top\",\n    title: keyword,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        lineHeight: 2.21\n      },\n      children: /*#__PURE__*/_jsxDEV(TextEllipsis, {\n        width: 218,\n        children: keyword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this)\n}, {\n  title: 'Sản phẩm',\n  dataIndex: 'products',\n  key: 'products',\n  className: 'custom-padding-col',\n  align: 'center',\n  render: products => {\n    let children = products.map((product, index) => {\n      let productData = typeof product.productId === 'object' ? product.productId : product;\n      return /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"space-between\",\n        align: \"middle\",\n        style: {\n          marginBottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            children: [!productData.images || productData.images.length === 0 ? /*#__PURE__*/_jsxDEV(Avatar, {\n              size: \"large\",\n              icon: /*#__PURE__*/_jsxDEV(PictureFilled, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 64\n              }, this),\n              shape: \"square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n              size: \"large\",\n              src: `${IMG_URL}${productData.images[0]}`,\n              shape: \"square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"product-name\",\n                children: /*#__PURE__*/_jsxDEV(TextEllipsis, {\n                  width: 400,\n                  children: productData.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"product-code\",\n                children: productData.code || ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            lineHeight: 2.21\n          },\n          children: [formatMoney(product.price), \"\\u0111\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, `${productData._id}_${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n    });\n    return {\n      children,\n      props: {\n        colSpan: 2\n      }\n    };\n  }\n}, {\n  title: 'Đơn giá',\n  dataIndex: 'products',\n  key: 'products',\n  align: 'right',\n  render: () => ({\n    props: {\n      colSpan: 0\n    }\n  })\n}];\n\nconst TableKeywords = props => {\n  const dataSource = props.keywords.map((keyword, index) => ({ ...keyword,\n    no: index + 1,\n    key: index + 1\n  }));\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    dataSource: dataSource,\n    pagination: false,\n    rowClassName: (record, index) => index % 2 === 0 ? 'table-row-dark' : 'table-row-light'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TableKeywords;\nexport default TableKeywords;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableKeywords\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/table-keywords.tsx"],"names":["React","Table","Row","Col","Avatar","Space","Tooltip","formatMoney","PictureFilled","TextEllipsis","IMG_URL","columns","title","dataIndex","key","align","width","render","keyword","lineHeight","className","products","children","map","product","index","productData","productId","marginBottom","images","length","textAlign","name","code","price","_id","props","colSpan","TableKeywords","dataSource","keywords","no","record"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Row, Col, Avatar, Space, Tooltip } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport formatMoney from '../../../utils/format-money';\nimport { PictureFilled } from '@ant-design/icons';\nimport { TextEllipsis } from '../../../components';\nimport { IMG_URL } from '../../../configs/vars';\n\ninterface Props {\n    keywords: any[];\n}\n\nconst columns: ColumnsType<any> = [\n    {\n        title: 'STT',\n        dataIndex: 'no',\n        key: 'no',\n        align: 'center',\n        width: 50,\n    },\n    {\n        title: 'Từ khóa',\n        dataIndex: 'keyword',\n        key: 'keyword',\n        align: 'center',\n        width: 250,\n        render: (keyword) => (\n            <Tooltip placement='top' title={keyword}>\n                <span style={{ lineHeight: 2.21 }}>\n                    <TextEllipsis width={218}>{keyword}</TextEllipsis>\n                </span>\n            </Tooltip>\n        ),\n    },\n\n    {\n        title: 'Sản phẩm',\n        dataIndex: 'products',\n        key: 'products',\n        className: 'custom-padding-col',\n        align: 'center',\n        render: (products) => {\n            let children = products.map((product: any, index: number) => {\n                let productData =\n                    typeof product.productId === 'object' ? product.productId : product;\n\n                return (\n                    <Row\n                        key={`${productData._id}_${index}`}\n                        justify='space-between'\n                        align='middle'\n                        style={{ marginBottom: 5 }}\n                    >\n                        <Col>\n                            <Space>\n                                {!productData.images || productData.images.length === 0 ? (\n                                    <Avatar size='large' icon={<PictureFilled />} shape='square' />\n                                ) : (\n                                    <Avatar\n                                        size='large'\n                                        src={`${IMG_URL}${productData.images[0]}`}\n                                        shape='square'\n                                    />\n                                )}\n                                <div style={{ textAlign: 'left' }}>\n                                    <span className='product-name'>\n                                        <TextEllipsis width={400}>{productData.name}</TextEllipsis>\n                                    </span>\n                                    <div className='product-code'>{productData.code || ''}</div>\n                                </div>\n                            </Space>\n                        </Col>\n                        <Col style={{ lineHeight: 2.21 }}>{formatMoney(product.price)}đ</Col>\n                    </Row>\n                );\n            });\n\n            return {\n                children,\n                props: {\n                    colSpan: 2,\n                },\n            };\n        },\n    },\n\n    {\n        title: 'Đơn giá',\n        dataIndex: 'products',\n        key: 'products',\n        align: 'right',\n        render: () => ({\n            props: {\n                colSpan: 0,\n            },\n        }),\n    },\n];\n\nconst TableKeywords = (props: Props) => {\n    const dataSource = props.keywords.map((keyword: any, index: number) => ({\n        ...keyword,\n        no: index + 1,\n        key: index + 1,\n    }));\n\n    return (\n        <Table\n            columns={columns}\n            dataSource={dataSource}\n            pagination={false}\n            rowClassName={(record, index) =>\n                index % 2 === 0 ? 'table-row-dark' : 'table-row-light'\n            }\n        />\n    );\n};\n\nexport default TableKeywords;\n"]},"metadata":{},"sourceType":"module"}