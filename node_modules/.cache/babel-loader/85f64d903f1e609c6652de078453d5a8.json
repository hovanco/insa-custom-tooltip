{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-customer-info.tsx\",\n    _s = $RefreshSig$();\n\nimport { Col, Collapse, Form, Input, Row, Select } from 'antd';\nimport { isNil, map, trim } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport locationApi from '../../../api/location-api';\nimport { DownIcon } from '../../../assets/icon';\nimport { Loading } from '../../../components';\nimport { disabledAutosuggestion } from '../../../utils/disabled-autosuggestion';\nimport { validatePhone } from '../../../utils/validate-phone';\nimport { useOrder } from './context-order';\nimport './order-customer-info.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  marginBottom: 10\n};\n\nconst OrderCustomerInfo = ({\n  defaultActiveKey,\n  dataCustomer\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const {\n    order,\n    setOrder,\n    infoCustomer\n  } = useOrder();\n  const [formOrderCustomerInfo] = Form.useForm();\n  const [customer, setCustomer] = useState({ ...order.customer,\n    ...infoCustomer\n  });\n  const [provinces, setProvinces] = useState([]);\n  const [loadingProvince, setLoadingProvince] = useState(true);\n  const [districts, setDistricts] = useState([]);\n  const [loadingDistrict, setLoadingDistrict] = useState(false);\n  const [wards, setWards] = useState([]);\n  const [loadingWard, setLoadingWard] = useState(false);\n  const [addressWarning, setAddressWarning] = useState(false);\n\n  const onChange = e => {\n    setCustomer({ ...customer,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const changeLocationCustomer = ({\n    field,\n    value\n  }) => {\n    setCustomer({ ...customer,\n      [field]: value\n    });\n  };\n\n  const onChangeProvince = value => {\n    setCustomer({ ...customer,\n      province: value,\n      district: undefined,\n      ward: undefined\n    });\n  };\n\n  const onChangeDistrict = value => {\n    setCustomer({ ...customer,\n      district: value,\n      ward: undefined\n    });\n  };\n\n  const onChangeWard = value => {\n    changeLocationCustomer({\n      field: 'ward',\n      value\n    });\n  };\n\n  useEffect(() => {\n    async function initCustomer() {\n      setLoading(true);\n      await setCustomer({ ...order.customer,\n        ...infoCustomer\n      });\n      setLoading(false);\n    }\n\n    initCustomer();\n  }, [infoCustomer]);\n  useEffect(() => {\n    setOrder({ ...order,\n      customer\n    });\n  }, [customer]);\n  useEffect(() => {\n    if (!isNil(customer.ward) && !trim(customer.address)) {\n      setAddressWarning(true);\n      return;\n    }\n\n    setAddressWarning(false);\n  }, [customer.ward, customer.address]); // load province\n\n  useEffect(() => {\n    async function getListProvinces() {\n      try {\n        const response = await locationApi.getProvinces();\n        setProvinces(response);\n        setLoadingProvince(false);\n      } catch (error) {\n        setProvinces([]);\n        setLoadingProvince(false);\n      }\n    }\n\n    getListProvinces();\n\n    if (dataCustomer) {\n      setCustomer({ ...customer,\n        ...dataCustomer\n      });\n    }\n  }, []); // load districts\n\n  useEffect(() => {\n    async function getListDistricts() {\n      if (!customer.province) return null;\n      setLoadingDistrict(true);\n\n      try {\n        const response = await locationApi.getDistricts(customer.province);\n        setDistricts(response);\n        setLoadingDistrict(false);\n      } catch (error) {\n        setDistricts([]);\n        setLoadingDistrict(false);\n      }\n    }\n\n    getListDistricts();\n  }, [customer.province]); // load wards\n\n  useEffect(() => {\n    async function getListWard() {\n      if (!customer.district) return null;\n      setLoadingWard(true);\n\n      try {\n        const response = await locationApi.getWards({\n          provinceId: customer.province,\n          districtId: customer.district\n        });\n        setWards(response);\n        setLoadingWard(false);\n      } catch (error) {\n        setWards([]);\n        setLoadingWard(false);\n      }\n    }\n\n    getListWard();\n  }, [customer.district, customer.province]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Collapse, {\n    ghost: true,\n    defaultActiveKey: defaultActiveKey,\n    children: /*#__PURE__*/_jsxDEV(Collapse.Panel, {\n      className: \"panel-customer\",\n      showArrow: false,\n      header: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          fontSize: 14\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: 4,\n            color: '#ff0000',\n            fontSize: 10\n          },\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Th\\xF4ng tin kh\\xE1ch h\\xE0ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DownIcon, {\n          style: {\n            fontSize: 20,\n            marginLeft: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        form: formOrderCustomerInfo,\n        className: \"box-gray order-customer-info-form\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 10,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              style: style,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"name\",\n                rules: [{\n                  required: true,\n                  message: 'Vui lòng nhập Tên khách hàng'\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  value: customer.name,\n                  placeholder: \"T\\xEAn kh\\xE1ch h\\xE0ng\",\n                  name: \"name\",\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"phoneNo\",\n              style: style,\n              rules: [{\n                required: true,\n                message: 'Vui lòng nhập Số điện thoại'\n              }, {\n                validator: validatePhone\n              }],\n              initialValue: customer.phoneNo,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                value: customer.phoneNo,\n                placeholder: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n                name: \"phoneNo\",\n                onChange: onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              style: style,\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                placeholder: \"T\\u1EC9nh/th\\xE0nh ph\\u1ED1\",\n                onChange: onChangeProvince,\n                showSearch: true,\n                value: customer.province,\n                filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n                loading: loadingProvince,\n                onFocus: disabledAutosuggestion,\n                children: map(provinces, province => /*#__PURE__*/_jsxDEV(Select.Option, {\n                  value: province.code,\n                  children: province.name\n                }, province.code, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              style: style,\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                placeholder: \"Qu\\u1EADn/huy\\u1EC7n\",\n                onChange: onChangeDistrict,\n                showSearch: true,\n                filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n                value: customer.district,\n                disabled: !customer.province,\n                loading: loadingDistrict,\n                onFocus: disabledAutosuggestion,\n                children: map(districts, district => /*#__PURE__*/_jsxDEV(Select.Option, {\n                  value: district.code,\n                  children: district.name\n                }, district.code, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              style: style,\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                placeholder: \"X\\xE3/ph\\u01B0\\u1EDDng\",\n                onChange: onChangeWard,\n                showSearch: true,\n                filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n                value: customer.ward,\n                disabled: !customer.district,\n                loading: loadingWard,\n                onFocus: disabledAutosuggestion,\n                children: map(wards, district => /*#__PURE__*/_jsxDEV(Select.Option, {\n                  value: district.code,\n                  children: district.name\n                }, district.code, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              style: style,\n              hasFeedback: true,\n              validateStatus: addressWarning ? `warning` : '',\n              children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n                name: \"address\",\n                placeholder: \"\\u0110\\u1ECBa ch\\u1EC9 kh\\xE1ch h\\xE0ng \",\n                value: customer.address,\n                onChange: onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)\n    }, 'customer', false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderCustomerInfo, \"yN31+EiNg4K7BK/Zshi2aAxLGBA=\", false, function () {\n  return [useOrder, Form.useForm];\n});\n\n_c = OrderCustomerInfo;\nexport default OrderCustomerInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderCustomerInfo\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-customer-info.tsx"],"names":["Col","Collapse","Form","Input","Row","Select","isNil","map","trim","React","useEffect","useState","locationApi","DownIcon","Loading","disabledAutosuggestion","validatePhone","useOrder","style","marginBottom","OrderCustomerInfo","defaultActiveKey","dataCustomer","loading","setLoading","order","setOrder","infoCustomer","formOrderCustomerInfo","useForm","customer","setCustomer","provinces","setProvinces","loadingProvince","setLoadingProvince","districts","setDistricts","loadingDistrict","setLoadingDistrict","wards","setWards","loadingWard","setLoadingWard","addressWarning","setAddressWarning","onChange","e","target","name","value","changeLocationCustomer","field","onChangeProvince","province","district","undefined","ward","onChangeDistrict","onChangeWard","initCustomer","address","getListProvinces","response","getProvinces","error","getListDistricts","getDistricts","getListWard","getWards","provinceId","districtId","display","alignItems","fontSize","marginRight","color","marginLeft","required","message","validator","phoneNo","input","option","children","toLowerCase","indexOf","code"],"mappings":"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","sourcesContent":["import { Col, Collapse, Form, Input, Row, Select } from 'antd';\nimport { isNil, map, trim } from 'lodash';\nimport React, { FC, useEffect, useState } from 'react';\nimport locationApi from '../../../api/location-api';\nimport { DownIcon } from '../../../assets/icon';\nimport { Loading } from '../../../components';\nimport { disabledAutosuggestion } from '../../../utils/disabled-autosuggestion';\nimport { validatePhone } from '../../../utils/validate-phone';\nimport { District, Province } from '../../create-store/create-store-form';\nimport { useOrder } from './context-order';\nimport './order-customer-info.less';\n\nconst style = { marginBottom: 10 };\n\ninterface Props {\n    defaultActiveKey?: string[];\n    dataCustomer?: any;\n}\n\nconst OrderCustomerInfo: FC<Props> = ({ defaultActiveKey, dataCustomer }) => {\n    const [loading, setLoading] = useState(true);\n    const { order, setOrder, infoCustomer } = useOrder();\n    const [formOrderCustomerInfo] = Form.useForm();\n    const [customer, setCustomer] = useState<any>({\n        ...order.customer,\n        ...infoCustomer,\n    });\n\n    const [provinces, setProvinces] = useState<Province[]>([]);\n    const [loadingProvince, setLoadingProvince] = useState<boolean>(true);\n\n    const [districts, setDistricts] = useState<District[]>([]);\n    const [loadingDistrict, setLoadingDistrict] = useState<boolean>(false);\n\n    const [wards, setWards] = useState<District[]>([]);\n    const [loadingWard, setLoadingWard] = useState<boolean>(false);\n\n    const [addressWarning, setAddressWarning] = useState<boolean>(false);\n\n    const onChange = (e: any) => {\n        setCustomer({\n            ...customer,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const changeLocationCustomer = ({ field, value }: { field: string; value: string }) => {\n        setCustomer({\n            ...customer,\n            [field]: value,\n        });\n    };\n\n    const onChangeProvince = (value: string) => {\n        setCustomer({\n            ...customer,\n            province: value,\n            district: undefined,\n            ward: undefined,\n        });\n    };\n\n    const onChangeDistrict = (value: string) => {\n        setCustomer({\n            ...customer,\n            district: value,\n            ward: undefined,\n        });\n    };\n\n    const onChangeWard = (value: string) => {\n        changeLocationCustomer({ field: 'ward', value });\n    };\n\n    useEffect(() => {\n        async function initCustomer() {\n            setLoading(true);\n            await setCustomer({\n                ...order.customer,\n                ...infoCustomer,\n            });\n            setLoading(false);\n        }\n        initCustomer();\n    }, [infoCustomer]);\n\n    useEffect(() => {\n        setOrder({ ...order, customer });\n    }, [customer]);\n\n    useEffect(() => {\n        if (!isNil(customer.ward) && !trim(customer.address)) {\n            setAddressWarning(true);\n            return;\n        }\n        setAddressWarning(false);\n    }, [customer.ward, customer.address]);\n\n    // load province\n    useEffect(() => {\n        async function getListProvinces() {\n            try {\n                const response = await locationApi.getProvinces();\n\n                setProvinces(response);\n                setLoadingProvince(false);\n            } catch (error) {\n                setProvinces([]);\n                setLoadingProvince(false);\n            }\n        }\n        getListProvinces();\n\n        if (dataCustomer) {\n            setCustomer({\n                ...customer,\n                ...dataCustomer,\n            });\n        }\n    }, []);\n\n    // load districts\n    useEffect(() => {\n        async function getListDistricts() {\n            if (!customer.province) return null;\n            setLoadingDistrict(true);\n            try {\n                const response = await locationApi.getDistricts(customer.province);\n                setDistricts(response);\n                setLoadingDistrict(false);\n            } catch (error) {\n                setDistricts([]);\n                setLoadingDistrict(false);\n            }\n        }\n        getListDistricts();\n    }, [customer.province]);\n\n    // load wards\n    useEffect(() => {\n        async function getListWard() {\n            if (!customer.district) return null;\n            setLoadingWard(true);\n            try {\n                const response = await locationApi.getWards({\n                    provinceId: customer.province,\n                    districtId: customer.district,\n                });\n                setWards(response);\n                setLoadingWard(false);\n            } catch (error) {\n                setWards([]);\n                setLoadingWard(false);\n            }\n        }\n        getListWard();\n    }, [customer.district, customer.province]);\n\n    if (loading) return <Loading />;\n\n    return (\n        <Collapse ghost defaultActiveKey={defaultActiveKey}>\n            <Collapse.Panel\n                className='panel-customer'\n                showArrow={false}\n                key='customer'\n                header={\n                    <div style={{ display: 'flex', alignItems: 'center', fontSize: 14 }}>\n                        <span style={{ marginRight: 4, color: '#ff0000', fontSize: 10 }}>*</span>\n                        <span>Thông tin khách hàng</span>\n\n                        <DownIcon style={{ fontSize: 20, marginLeft: 2 }} />\n                    </div>\n                }\n            >\n                <Form\n                    layout='vertical'\n                    form={formOrderCustomerInfo}\n                    className='box-gray order-customer-info-form'\n                >\n                    <Row gutter={10}>\n                        <Col span={12}>\n                            {/* <Form.Item style={style}>\n                                <Input\n                                    value={customer.name}\n                                    placeholder='Tên khách hàng'\n                                    name='name'\n                                    onChange={onChange}\n                                />\n                            </Form.Item> */}\n\n                            <Col span={12} style={style}>\n                                <Form.Item\n                                    name='name'\n                                    rules={[\n                                        { required: true, message: 'Vui lòng nhập Tên khách hàng' },\n                                    ]}\n                                >\n                                    <Input\n                                        value={customer.name}\n                                        placeholder='Tên khách hàng'\n                                        name='name'\n                                        onChange={onChange}\n                                    />\n                                </Form.Item>\n                            </Col>\n\n                            <Form.Item\n                                name='phoneNo'\n                                style={style}\n                                rules={[\n                                    { required: true, message: 'Vui lòng nhập Số điện thoại' },\n                                    {\n                                        validator: validatePhone,\n                                    },\n                                ]}\n                                initialValue={customer.phoneNo}\n                            >\n                                <Input\n                                    value={customer.phoneNo}\n                                    placeholder='Số điện thoại'\n                                    name='phoneNo'\n                                    onChange={onChange}\n                                />\n                            </Form.Item>\n                        </Col>\n\n                        <Col span={12}>\n                            <Form.Item style={style}>\n                                <Select\n                                    placeholder='Tỉnh/thành phố'\n                                    onChange={onChangeProvince}\n                                    showSearch\n                                    value={customer.province}\n                                    filterOption={(input, option: any) =>\n                                        option.children\n                                            .toLowerCase()\n                                            .indexOf(input.toLowerCase()) >= 0\n                                    }\n                                    loading={loadingProvince}\n                                    onFocus={disabledAutosuggestion}\n                                >\n                                    {map(provinces, (province: Province) => (\n                                        <Select.Option value={province.code} key={province.code}>\n                                            {province.name}\n                                        </Select.Option>\n                                    ))}\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item style={style}>\n                                <Select\n                                    placeholder='Quận/huyện'\n                                    onChange={onChangeDistrict}\n                                    showSearch\n                                    filterOption={(input, option: any) =>\n                                        option.children\n                                            .toLowerCase()\n                                            .indexOf(input.toLowerCase()) >= 0\n                                    }\n                                    value={customer.district}\n                                    disabled={!customer.province}\n                                    loading={loadingDistrict}\n                                    onFocus={disabledAutosuggestion}\n                                >\n                                    {map(districts, (district: District) => (\n                                        <Select.Option value={district.code} key={district.code}>\n                                            {district.name}\n                                        </Select.Option>\n                                    ))}\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item style={style}>\n                                <Select\n                                    placeholder='Xã/phường'\n                                    onChange={onChangeWard}\n                                    showSearch\n                                    filterOption={(input, option: any) =>\n                                        option.children\n                                            .toLowerCase()\n                                            .indexOf(input.toLowerCase()) >= 0\n                                    }\n                                    value={customer.ward}\n                                    disabled={!customer.district}\n                                    loading={loadingWard}\n                                    onFocus={disabledAutosuggestion}\n                                >\n                                    {map(wards, (district: District) => (\n                                        <Select.Option value={district.code} key={district.code}>\n                                            {district.name}\n                                        </Select.Option>\n                                    ))}\n                                </Select>\n                            </Form.Item>\n                        </Col>\n\n                        <Col span={24}>\n                            <Form.Item\n                                style={style}\n                                hasFeedback\n                                validateStatus={addressWarning ? `warning` : ''}\n                            >\n                                <Input.TextArea\n                                    name='address'\n                                    placeholder='Địa chỉ khách hàng '\n                                    value={customer.address}\n                                    onChange={onChange}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Collapse.Panel>\n        </Collapse>\n    );\n};\n\nexport default OrderCustomerInfo;\n"]},"metadata":{},"sourceType":"module"}