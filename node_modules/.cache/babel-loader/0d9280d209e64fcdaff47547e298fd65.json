{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders-draft/table-order-draft.tsx\",\n    _s = $RefreshSig$();\n\nimport { Table, Tag } from 'antd';\nimport { push } from 'connected-react-router';\nimport moment from 'moment';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LIMIT } from '.';\nimport { loadOrdersDraft } from '../../reducers/orderDraftState/orderDraftAction';\nimport formatMoney from '../../utils/format-money';\nimport Action from '../orders/action';\nimport { getValue } from '../orders/order-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"th\",\n    children: \"Ng\\xE0y\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 16\n  }, this),\n  dataIndex: 'createdAt',\n  key: 'createdAt',\n  sorter: (a, b) => moment(a.createdAt).valueOf() - moment(b.createdAt).valueOf(),\n  render: createdAt => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [moment(createdAt).format('HH:mm'), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), moment(createdAt).format('DD/MM/YYYY')]\n  }, void 0, true)\n}, {\n  title: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"th\",\n    children: \"Kh\\xE1ch h\\xE0ng\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 16\n  }, this),\n  dataIndex: 'customer',\n  key: 'customer',\n  sorter: (a, b) => a.customer.name.length - b.customer.name.length,\n  render: customer => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [customer.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), customer.phoneNo]\n    }, void 0, true);\n  }\n}, {\n  title: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"th\",\n    children: \"M\\xE3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 16\n  }, this),\n  dataIndex: 'code',\n  key: 'code',\n  render: code => /*#__PURE__*/_jsxDEV(Tag, {\n    children: code\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 35\n  }, this)\n}, {\n  title: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"th\",\n    children: \"T\\u1ED5ng ti\\u1EC1n(VND)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 16\n  }, this),\n  dataIndex: 'totalPrice',\n  key: 'totalPrice',\n  sorter: (a, b) => a.totalPrice - b.totalPrice,\n  render: totalPrice => formatMoney(totalPrice)\n}, {\n  title: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"th\",\n    children: \"KL(g)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 16\n  }, this),\n  dataIndex: 'products',\n  key: 'weight',\n  sorter: (a, b) => getValue(a.products, 'weight') - getValue(b.products, 'weight'),\n  render: products => getValue(products, 'weight')\n}, {\n  title: '',\n  align: 'right',\n  dataIndex: '',\n  key: 'action',\n  render: order => /*#__PURE__*/_jsxDEV(Action, {\n    order: order\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 33\n  }, this)\n}];\n\nconst TableOrderDraft = () => {\n  _s();\n\n  const loading = useSelector(state => state.orderDraft.loading);\n  const orders = useSelector(state => state.orderDraft.orders);\n  const dispatch = useDispatch();\n\n  const onChangePage = (page, pageSize) => {\n    dispatch(loadOrdersDraft({\n      page,\n      limit: pageSize || LIMIT\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    loading: loading,\n    columns: columns,\n    className: \"orders-table\",\n    dataSource: orders.data,\n    rowKey: item => item._id,\n    onRow: record => {\n      return {\n        onClick: event => {\n          if (event.target.className && event.target.className === 'ant-table-cell') {\n            dispatch(push(`/customer/order-draft/${record._id}`));\n          }\n        }\n      };\n    },\n    pagination: {\n      onChange: onChangePage,\n      total: orders.total,\n      pageSize: LIMIT\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableOrderDraft, \"skBiWZCPxX94S1QnqJ8OR9GOvL8=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = TableOrderDraft;\nexport default TableOrderDraft;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableOrderDraft\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders-draft/table-order-draft.tsx"],"names":["Table","Tag","push","moment","React","useDispatch","useSelector","LIMIT","loadOrdersDraft","formatMoney","Action","getValue","columns","title","dataIndex","key","sorter","a","b","createdAt","valueOf","render","format","customer","name","length","phoneNo","code","totalPrice","products","align","order","TableOrderDraft","loading","state","orderDraft","orders","dispatch","onChangePage","page","pageSize","limit","data","item","_id","record","onClick","event","target","className","onChange","total"],"mappings":"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","sourcesContent":["import { Table, Tag } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { push } from 'connected-react-router';\nimport moment from 'moment';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LIMIT } from '.';\nimport { loadOrdersDraft } from '../../reducers/orderDraftState/orderDraftAction';\nimport formatMoney from '../../utils/format-money';\nimport Action from '../orders/action';\nimport { getValue } from '../orders/order-table';\n\nconst columns: ColumnsType<any> | undefined = [\n    {\n        title: <span className='th'>Ngày</span>,\n        dataIndex: 'createdAt',\n        key: 'createdAt',\n        sorter: (a, b) => moment(a.createdAt).valueOf() - moment(b.createdAt).valueOf(),\n        render: (createdAt: Date) => (\n            <>\n                {moment(createdAt).format('HH:mm')}\n                <br />\n                {moment(createdAt).format('DD/MM/YYYY')}\n            </>\n        ),\n    },\n\n    {\n        title: <span className='th'>Khách hàng</span>,\n        dataIndex: 'customer',\n        key: 'customer',\n        sorter: (a, b) => a.customer.name.length - b.customer.name.length,\n        render: (customer: any) => {\n            return (\n                <>\n                    {customer.name}\n                    <br />\n                    {customer.phoneNo}\n                </>\n            );\n        },\n    },\n    {\n        title: <span className='th'>Mã</span>,\n        dataIndex: 'code',\n        key: 'code',\n        render: (code: string) => <Tag>{code}</Tag>,\n    },\n    {\n        title: <span className='th'>Tổng tiền(VND)</span>,\n        dataIndex: 'totalPrice',\n        key: 'totalPrice',\n        sorter: (a, b) => a.totalPrice - b.totalPrice,\n        render: (totalPrice: number) => formatMoney(totalPrice),\n    },\n\n    {\n        title: <span className='th'>KL(g)</span>,\n        dataIndex: 'products',\n        key: 'weight',\n        sorter: (a, b) => getValue(a.products, 'weight') - getValue(b.products, 'weight'),\n\n        render: (products: any) => getValue(products, 'weight'),\n    },\n\n    {\n        title: '',\n        align: 'right',\n        dataIndex: '',\n        key: 'action',\n        render: (order: any) => <Action order={order} />,\n    },\n];\n\nconst TableOrderDraft = () => {\n    const loading = useSelector((state: any) => state.orderDraft.loading);\n    const orders = useSelector((state: any) => state.orderDraft.orders);\n    const dispatch = useDispatch();\n\n    const onChangePage = (page: number, pageSize?: number | undefined) => {\n        dispatch(loadOrdersDraft({ page, limit: pageSize || LIMIT }));\n    };\n\n    return (\n        <Table\n            loading={loading}\n            columns={columns}\n            className='orders-table'\n            dataSource={orders.data}\n            rowKey={(item) => item._id}\n            onRow={(record) => {\n                return {\n                    onClick: (event) => {\n                        if (\n                            (event.target as any).className &&\n                            (event.target as any).className === 'ant-table-cell'\n                        ) {\n                            dispatch(push(`/customer/order-draft/${record._id}`));\n                        }\n                    },\n                };\n            }}\n            pagination={{\n                onChange: onChangePage,\n                total: orders.total,\n                pageSize: LIMIT,\n            }}\n        />\n    );\n};\n\nexport default TableOrderDraft;\n"]},"metadata":{},"sourceType":"module"}