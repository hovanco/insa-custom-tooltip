{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/box-reply.tsx\",\n    _s = $RefreshSig$();\n\nimport { Col, Input, message, Row } from 'antd';\nimport { get } from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sendReply } from '../../../api/conversation-api';\nimport { SendIcon } from '../../../assets/icon';\nimport { useConversationDetail } from './context';\nimport ModalEmoji from './modal-emoji';\nimport QuickmessageList from './quick-message-list';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoxReply = ({\n  privateReply = false,\n  handlePrivateReply,\n  disabled = false\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const inputRef = useRef(null);\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState(null);\n  const {\n    text,\n    changeText,\n    isFocus,\n    messages,\n    setIdMessage,\n    changeIsFocus,\n    removeMessageError,\n    setMessageSending\n  } = useConversationDetail();\n  const conversation = useSelector(({\n    fanpage\n  }) => fanpage.conversation);\n  const page = useSelector(({\n    fanpage\n  }) => fanpage.page);\n  const store = useSelector(({\n    store\n  }) => store.store);\n  const token = useSelector(({\n    auth\n  }) => auth.token);\n\n  const toggle = () => setShow(!show);\n\n  useEffect(() => {\n    if (data) {\n      setIdMessage(data);\n      setData(null);\n    }\n  }, [data]);\n\n  const handleKeyPress = async e => {\n    const isValid = e.shiftKey !== true && e.key === 'Enter';\n\n    if (show) {\n      return toggle();\n    }\n\n    if (isValid && !show && text.trim()) {\n      e.preventDefault();\n      const regex = new RegExp(`{${conversation.fbUsername}}`, 'g');\n      let convertText = text;\n\n      if (conversation.type === 2) {\n        convertText = (text || '').replace(regex, conversation.fbUsername || '');\n      }\n\n      const fakeId = Date.now();\n      const message_sending = {\n        create_time: moment(new Date()).format(),\n        message: convertText,\n        from: {\n          name: page.name,\n          email: '',\n          id: page.fbObjectId\n        },\n        id: fakeId\n      };\n      changeText('');\n      setMessageSending(message_sending);\n\n      if (privateReply && handlePrivateReply) {\n        handlePrivateReply(text);\n      } else {\n        convertText = text;\n\n        if (conversation.type === 2) {\n          convertText = (text || '').replace(regex, `@[${conversation.fbUserId}]`);\n        }\n\n        try {\n          const res = await sendReply({\n            text: convertText,\n            fbPageId: conversation.fbPageId,\n            token: token.accessToken,\n            storeId: store._id,\n            id: conversation.fbUserId,\n            type: conversation.type,\n            fbObjectId: conversation.fbObjectId\n          });\n\n          if (res) {\n            setData({\n              realId: get(res, '[1].data.id') || get(res, '[1].data.message_id'),\n              fakeId\n            });\n          }\n        } catch (e) {\n          message.error('Đã xảy ra lỗi');\n          removeMessageError(message_sending);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  const onChangeText = e => {\n    if (e.target.value.length === 0) {\n      setShow(false);\n    }\n\n    if (e.target.value[0] === '/') {\n      setShow(true);\n    }\n\n    if (show) {\n      changeText(e.target.value.trim());\n    } else {\n      changeText(e.target.value);\n    }\n  };\n\n  const onBlur = () => {\n    changeIsFocus(false);\n  };\n\n  const sendMessage = () => {\n    if (!show && text.trim()) {\n      const regex = new RegExp(`{${conversation.fbUsername}}`, 'g');\n      let convertText = text;\n\n      if (conversation.type === 2) {\n        convertText = (text || '').replace(regex, conversation.fbUsername || '');\n      }\n\n      const fakeId = Date.now();\n      const message_sending = {\n        create_time: moment(new Date()).format(),\n        message: convertText,\n        from: {\n          name: page.name,\n          email: '',\n          id: page.fbObjectId\n        },\n        id: fakeId\n      };\n      changeText('');\n      setMessageSending(message_sending);\n\n      if (privateReply && handlePrivateReply) {\n        handlePrivateReply(text);\n      } else {\n        convertText = text;\n\n        if (conversation.type === 2) {\n          convertText = (text || '').replace(regex, `@[${conversation.fbUserId}]`);\n        }\n\n        sendReply({\n          text: convertText,\n          fbPageId: conversation.fbPageId,\n          token: token.accessToken,\n          storeId: store._id,\n          id: conversation.fbUserId,\n          type: conversation.type,\n          fbObjectId: conversation.fbObjectId\n        }).then(res => {\n          if (res) {\n            setData({\n              realId: get(res, '[1].data.id') || get(res, '[1].data.message_id'),\n              fakeId\n            });\n          }\n        }).catch(error => {\n          message.error('Đã xảy ra lỗi');\n          removeMessageError(message_sending);\n        });\n      }\n    }\n\n    return null;\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [text]);\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [isFocus]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box-reply\",\n    children: [show && /*#__PURE__*/_jsxDEV(QuickmessageList, {\n      toggle: toggle,\n      textFilter: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      align: \"middle\",\n      justify: \"space-between\",\n      gutter: 10,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap-input\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            ref: inputRef,\n            onBlur: onBlur,\n            autoFocus: true,\n            onChange: onChangeText,\n            onKeyPress: handleKeyPress,\n            disabled: disabled,\n            className: \"input\",\n            value: text,\n            placeholder: disabled ? 'Bạn chỉ có thể phản hồi tin nhắn của khách hàng trong vòng 24h' : 'Viết tin nhắn. (Enter để gửi tin và Shift + Enter để xuống hàng)'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), !disabled && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emoji-btn\",\n            children: /*#__PURE__*/_jsxDEV(ModalEmoji, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          lineHeight: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {\n          className: text.length === 0 ? 'send-btn disable' : 'send-btn',\n          style: {\n            fontSize: 20\n          },\n          onClick: text.length === 0 ? null : sendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BoxReply, \"Wjy+5Si6EPJJgNuaRk0lkhtd1so=\", false, function () {\n  return [useDispatch, useConversationDetail, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = BoxReply;\nexport default BoxReply;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxReply\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/box-reply.tsx"],"names":["Col","Input","message","Row","get","moment","React","useEffect","useRef","useState","useDispatch","useSelector","sendReply","SendIcon","useConversationDetail","ModalEmoji","QuickmessageList","BoxReply","privateReply","handlePrivateReply","disabled","dispatch","inputRef","show","setShow","data","setData","text","changeText","isFocus","messages","setIdMessage","changeIsFocus","removeMessageError","setMessageSending","conversation","fanpage","page","store","token","auth","toggle","handleKeyPress","e","isValid","shiftKey","key","trim","preventDefault","regex","RegExp","fbUsername","convertText","type","replace","fakeId","Date","now","message_sending","create_time","format","from","name","email","id","fbObjectId","fbUserId","res","fbPageId","accessToken","storeId","_id","realId","error","onChangeText","target","value","length","onBlur","sendMessage","then","catch","current","focus","flex","lineHeight","fontSize"],"mappings":"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","sourcesContent":["import { Col, Input, message, Row } from 'antd';\nimport { findLast, get, isObject } from 'lodash';\nimport moment from 'moment';\nimport React, { FC, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sendReply } from '../../../api/conversation-api';\nimport { SendIcon } from '../../../assets/icon';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { useConversationDetail } from './context';\nimport ModalEmoji from './modal-emoji';\nimport QuickmessageList from './quick-message-list';\n\ninterface Props {\n    privateReply?: boolean;\n    handlePrivateReply?: (text: string) => void;\n    disabled?: boolean;\n}\n\nconst BoxReply: FC<Props> = ({\n    privateReply = false,\n    handlePrivateReply,\n    disabled = false,\n}): JSX.Element => {\n    const dispatch = useDispatch();\n    const inputRef = useRef<any>(null);\n    const [show, setShow] = useState(false);\n    const [data, setData] = useState<any | null>(null);\n    const {\n        text,\n        changeText,\n        isFocus,\n        messages,\n        setIdMessage,\n        changeIsFocus,\n        removeMessageError,\n        setMessageSending,\n    } = useConversationDetail();\n\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n    const page: { fbObjectId: string; name: string } = useSelector(\n        ({ fanpage }: { fanpage: any }) => fanpage.page\n    );\n\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n\n    const toggle = () => setShow(!show);\n\n    useEffect(() => {\n        if (data) {\n            setIdMessage(data);\n            setData(null);\n        }\n    }, [data]);\n\n    const handleKeyPress = async (e: any) => {\n        const isValid = e.shiftKey !== true && e.key === 'Enter';\n\n        if (show) {\n            return toggle();\n        }\n\n        if (isValid && !show && text.trim()) {\n            e.preventDefault();\n\n            const regex = new RegExp(`{${conversation.fbUsername}}`, 'g');\n\n            let convertText = text;\n            if (conversation.type === 2) {\n                convertText = (text || '').replace(regex, conversation.fbUsername || '');\n            }\n\n            const fakeId = Date.now();\n\n            const message_sending = {\n                create_time: moment(new Date()).format(),\n                message: convertText,\n                from: {\n                    name: page.name,\n                    email: '',\n                    id: page.fbObjectId,\n                },\n                id: fakeId,\n            };\n\n            changeText('');\n            setMessageSending(message_sending);\n\n            if (privateReply && handlePrivateReply) {\n                handlePrivateReply(text);\n            } else {\n                convertText = text;\n                if (conversation.type === 2) {\n                    convertText = (text || '').replace(regex, `@[${conversation.fbUserId}]`);\n                }\n\n                try {\n                    const res = await sendReply({\n                        text: convertText,\n                        fbPageId: conversation.fbPageId,\n                        token: token.accessToken,\n                        storeId: store._id,\n                        id: conversation.fbUserId,\n                        type: conversation.type,\n                        fbObjectId: conversation.fbObjectId,\n                    });\n                    if (res) {\n                        setData({\n                            realId: get(res, '[1].data.id') || get(res, '[1].data.message_id'),\n                            fakeId,\n                        });\n                    }\n                } catch (e) {\n                    message.error('Đã xảy ra lỗi');\n                    removeMessageError(message_sending);\n                }\n            }\n        }\n\n        return null;\n    };\n\n    const onChangeText = (e: any) => {\n        if (e.target.value.length === 0) {\n            setShow(false);\n        }\n        if (e.target.value[0] === '/') {\n            setShow(true);\n        }\n\n        if (show) {\n            changeText((e.target.value as string).trim());\n        } else {\n            changeText(e.target.value as string);\n        }\n    };\n\n    const onBlur = () => {\n        changeIsFocus(false);\n    };\n\n    const sendMessage = () => {\n        if (!show && text.trim()) {\n            const regex = new RegExp(`{${conversation.fbUsername}}`, 'g');\n\n            let convertText = text;\n            if (conversation.type === 2) {\n                convertText = (text || '').replace(regex, conversation.fbUsername || '');\n            }\n\n            const fakeId = Date.now();\n\n            const message_sending = {\n                create_time: moment(new Date()).format(),\n                message: convertText,\n                from: {\n                    name: page.name,\n                    email: '',\n                    id: page.fbObjectId,\n                },\n                id: fakeId,\n            };\n\n            changeText('');\n            setMessageSending(message_sending);\n\n            if (privateReply && handlePrivateReply) {\n                handlePrivateReply(text);\n            } else {\n                convertText = text;\n                if (conversation.type === 2) {\n                    convertText = (text || '').replace(regex, `@[${conversation.fbUserId}]`);\n                }\n\n                sendReply({\n                    text: convertText,\n                    fbPageId: conversation.fbPageId,\n                    token: token.accessToken,\n                    storeId: store._id,\n                    id: conversation.fbUserId,\n                    type: conversation.type,\n                    fbObjectId: conversation.fbObjectId,\n                })\n                    .then((res: any) => {\n                        if (res) {\n                            setData({\n                                realId: get(res, '[1].data.id') || get(res, '[1].data.message_id'),\n                                fakeId,\n                            });\n                        }\n                    })\n                    .catch((error) => {\n                        message.error('Đã xảy ra lỗi');\n                        removeMessageError(message_sending);\n                    });\n            }\n        }\n\n        return null;\n    };\n\n    useEffect(() => {\n        inputRef.current.focus();\n    }, [text]);\n\n    useEffect(() => {\n        inputRef.current.focus();\n    }, [isFocus]);\n\n    return (\n        <div className='box-reply'>\n            {show && <QuickmessageList toggle={toggle} textFilter={text} />}\n\n            <Row align='middle' justify='space-between' gutter={10}>\n                <Col style={{ flex: 1 }}>\n                    <div className='wrap-input'>\n                        <Input\n                            ref={inputRef}\n                            onBlur={onBlur}\n                            autoFocus\n                            onChange={onChangeText}\n                            onKeyPress={handleKeyPress}\n                            disabled={disabled}\n                            className='input'\n                            value={text}\n                            placeholder={\n                                disabled\n                                    ? 'Bạn chỉ có thể phản hồi tin nhắn của khách hàng trong vòng 24h'\n                                    : 'Viết tin nhắn. (Enter để gửi tin và Shift + Enter để xuống hàng)'\n                            }\n                        />\n                        {!disabled && (\n                            <div className='emoji-btn'>\n                                <ModalEmoji />\n                            </div>\n                        )}\n                    </div>\n                </Col>\n\n                <Col style={{ lineHeight: 1 }}>\n                    <SendIcon\n                        className={text.length === 0 ? 'send-btn disable' : 'send-btn'}\n                        style={{ fontSize: 20 }}\n                        onClick={text.length === 0 ? null : sendMessage}\n                    />\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default BoxReply;\n"]},"metadata":{},"sourceType":"module"}