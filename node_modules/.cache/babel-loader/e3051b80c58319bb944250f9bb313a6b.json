{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-tab.tsx\",\n    _s = $RefreshSig$();\n\nimport { SaveOutlined } from '@ant-design/icons';\nimport { Button, message, Space, Divider } from 'antd';\nimport { get, isEmpty, pick } from 'lodash';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport storeApi from '../../../api/store-api';\nimport AddProduct from './add-product';\nimport { useOrder } from './context-order';\nimport OrderDone from './order-done';\nimport OrderProductList from './order-product-list';\nimport OrderStore from './order-store';\nimport OrderTransport from './order-transport';\nimport SearchProduct from './search-product';\nimport { getFee } from './util';\nimport OrderCustomerInfo from './order-customer-info';\nimport useHiddenModalExpired from '../../../hooks/use-hidden-modal-expired';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderTab = props => {\n  _s();\n\n  const token = useSelector(state => state.auth.token);\n  const store = useSelector(state => state.store.store);\n  const page = useSelector(state => state.fanpage.page);\n  const conversation = useSelector(state => state.fanpage.conversation);\n  const {\n    order,\n    resetOrder,\n    customerObjectId,\n    setCustomerObjectId\n  } = useOrder();\n  const [submit, setSubmit] = useState(false);\n  const [done, setDone] = useState(false);\n  const {\n    hiddenModalExpired\n  } = useHiddenModalExpired();\n\n  const toggleDone = () => {\n    resetOrder();\n    setDone(!done);\n  };\n\n  const saveOrder = async () => {\n    try {\n      setSubmit(true);\n      let newCustomerId;\n\n      if (isEmpty(customerObjectId)) {\n        const dataCustomer = { ...pick(order.customer, ['name', 'phoneNo', 'address', 'province', 'district', 'ward']),\n          fbPageId: store.activePage._id,\n          fbUserId: conversation.fbUserId\n        };\n        const newCustomer = await storeApi.createCustomer({\n          token: token.accessToken,\n          storeId: store._id,\n          data: dataCustomer\n        });\n        newCustomerId = newCustomer._id;\n        order.customer = newCustomer;\n      }\n\n      const products = order.products.map(p => pick(p, ['count', 'productId', 'price']));\n      const valueShipmentFeeForCustomer = get(order, 'deliveryOptions.shipmentFeeForCustomer');\n      const shipmentFeeForCustomer = !valueShipmentFeeForCustomer || valueShipmentFeeForCustomer === 0 ? get(order, 'deliveryOptions.shipmentFee') : valueShipmentFeeForCustomer;\n      const data = {\n        products,\n        customer: pick(order.customer, ['_id', 'fbUserId', 'name', 'phoneNo', 'address', 'province', 'district', 'ward']),\n        fbPageId: page.fbObjectId,\n        deliveryOptions: { ...pick(order.deliveryOptions, ['shipmentFee', 'discount', 'discountBy', 'noteForDelivery']),\n          shipmentFeeForCustomer,\n          serviceId: order.deliveryOptions.serviceId || 0,\n          transportType: order.deliveryOptions.transportType || 0,\n          customerNote: order.deliveryOptions.customerNote.length > 0 ? order.deliveryOptions.customerNote : undefined,\n          noteForCustomerCare: order.deliveryOptions.noteForCustomerCare.length > 0 ? order.deliveryOptions.noteForCustomerCare : undefined,\n          feeForReceiver: getFee(order).feeForReceiver,\n          shipmentFeeByTotal: true\n        },\n        warehouseId: order.warehouseId\n      };\n      await storeApi.createOrder({\n        storeId: store._id,\n        token: token.accessToken,\n        data\n      });\n      setSubmit(false);\n      message.success('Đã tạo đơn thành công');\n\n      if (isEmpty(customerObjectId)) {\n        const dataCustomer = { ...order.customer,\n          fbPageId: store.activePage._id,\n          fbUserId: conversation.fbUserId\n        };\n        const newCustomer = await storeApi.createCustomer({\n          token: token.accessToken,\n          storeId: store._id,\n          data: dataCustomer\n        });\n        setCustomerObjectId(newCustomer._id);\n      }\n\n      toggleDone();\n    } catch (error) {\n      setSubmit(false);\n\n      if (get(error, 'response.data.message') === 'INVALID_PRODUCTS_QUANTITY') {\n        message.error('Sản phẩm được chọn có thể không tồn tại hoặc không đủ số lượng ở kho lấy hàng mà bạn đã chọn');\n      } else {\n        message.error('Lỗi tạo đơn');\n      }\n    }\n  };\n\n  const notValidDelivery = () => {\n    const hasSelectDelivery = order.deliveryOptions.serviceId && order.deliveryOptions.serviceId !== 0; // if(!hasSelectDelivery) return true;\n\n    if (hasSelectDelivery && !order.deliveryOptions.transportType || hasSelectDelivery && typeof order.deliveryOptions.noteForDelivery === 'undefined') {\n      return true;\n    }\n\n    return false;\n  };\n\n  const checkValid = () => {\n    if (order.customer.name.length === 0 || order.customer.phoneNo.length === 0 || typeof order.customer.province === 'undefined' || typeof order.customer.district === 'undefined' || typeof order.customer.ward === 'undefined' || typeof order.warehouseId === 'undefined' || order.products.length === 0 || notValidDelivery() || hiddenModalExpired) return false;\n    return true;\n  };\n\n  if (done) {\n    return /*#__PURE__*/_jsxDEV(OrderDone, {\n      toggleDone: toggleDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-tab\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-tab-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content-inner\",\n        style: {\n          paddingTop: 5\n        },\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          direction: \"vertical\",\n          size: 20,\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(OrderCustomerInfo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(OrderStore, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(SearchProduct, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(OrderProductList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(AddProduct, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(OrderTransport, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-tab-bottom\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: submit,\n        disabled: !checkValid(),\n        icon: /*#__PURE__*/_jsxDEV(SaveOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 27\n        }, this),\n        onClick: saveOrder,\n        style: {\n          height: 35\n        },\n        children: \"L\\u01B0u\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderTab, \"cxihhpGVGGvldNgRCxpe+9yupVQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useOrder, useHiddenModalExpired];\n});\n\n_c = OrderTab;\nexport default OrderTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderTab\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-tab.tsx"],"names":["SaveOutlined","Button","message","Space","Divider","get","isEmpty","pick","React","useState","useSelector","storeApi","AddProduct","useOrder","OrderDone","OrderProductList","OrderStore","OrderTransport","SearchProduct","getFee","OrderCustomerInfo","useHiddenModalExpired","OrderTab","props","token","state","auth","store","page","fanpage","conversation","order","resetOrder","customerObjectId","setCustomerObjectId","submit","setSubmit","done","setDone","hiddenModalExpired","toggleDone","saveOrder","newCustomerId","dataCustomer","customer","fbPageId","activePage","_id","fbUserId","newCustomer","createCustomer","accessToken","storeId","data","products","map","p","valueShipmentFeeForCustomer","shipmentFeeForCustomer","fbObjectId","deliveryOptions","serviceId","transportType","customerNote","length","undefined","noteForCustomerCare","feeForReceiver","shipmentFeeByTotal","warehouseId","createOrder","success","error","notValidDelivery","hasSelectDelivery","noteForDelivery","checkValid","name","phoneNo","province","district","ward","paddingTop","width","height"],"mappings":"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","sourcesContent":["import { SaveOutlined } from '@ant-design/icons';\nimport { Button, message, Space, Divider } from 'antd';\nimport { get, isEmpty, pick } from 'lodash';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport storeApi from '../../../api/store-api';\nimport AddProduct from './add-product';\nimport { useOrder } from './context-order';\nimport OrderDone from './order-done';\nimport OrderProductList from './order-product-list';\nimport OrderStore from './order-store';\nimport OrderTransport from './order-transport';\nimport SearchProduct from './search-product';\nimport { getFee } from './util';\nimport OrderCustomerInfo from './order-customer-info';\nimport useHiddenModalExpired from '../../../hooks/use-hidden-modal-expired';\n\nexport interface IOrder {\n    pageId: string;\n    order_name: string;\n    order_phone: string;\n    order_email: string;\n    address: string;\n    addressInfo: {\n        city: any;\n        district: any;\n        ward: any;\n    };\n    list_order: any[];\n    type_order: string;\n    shiper: string | null;\n    phi_van_chuyen: number;\n    phi_bao_khach: number;\n    chiet_khau: {\n        type: string;\n        value: number;\n    };\n    customer_note: string;\n    cskh_note: string;\n    store: any;\n    tien_chuyen_khoan: number;\n    tien_coc: number;\n}\n\ninterface Props {}\n\nconst OrderTab = (props: Props) => {\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n    const page = useSelector((state: any) => state.fanpage.page);\n    const conversation = useSelector((state: any) => state.fanpage.conversation);\n\n    const { order, resetOrder, customerObjectId, setCustomerObjectId } = useOrder();\n    const [submit, setSubmit] = useState(false);\n    const [done, setDone] = useState(false);\n    const { hiddenModalExpired } = useHiddenModalExpired();\n\n    const toggleDone = () => {\n        resetOrder();\n        setDone(!done);\n    };\n\n    const saveOrder = async () => {\n        try {\n            setSubmit(true);\n            let newCustomerId;\n            if (isEmpty(customerObjectId)) {\n                const dataCustomer = {\n                    ...pick(order.customer, [\n                        'name',\n                        'phoneNo',\n                        'address',\n                        'province',\n                        'district',\n                        'ward',\n                    ]),\n                    fbPageId: store.activePage._id,\n                    fbUserId: conversation.fbUserId,\n                };\n                const newCustomer = await storeApi.createCustomer({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    data: dataCustomer,\n                });\n                newCustomerId = newCustomer._id;\n                order.customer = newCustomer;\n            }\n\n            const products = order.products.map((p: any) =>\n                pick(p, ['count', 'productId', 'price']),\n            );\n\n            const valueShipmentFeeForCustomer = get(\n                order,\n                'deliveryOptions.shipmentFeeForCustomer',\n            );\n\n            const shipmentFeeForCustomer =\n                !valueShipmentFeeForCustomer || valueShipmentFeeForCustomer === 0\n                    ? get(order, 'deliveryOptions.shipmentFee')\n                    : valueShipmentFeeForCustomer;\n\n            const data = {\n                products,\n                customer: pick(order.customer, [\n                    '_id',\n                    'fbUserId',\n                    'name',\n                    'phoneNo',\n                    'address',\n                    'province',\n                    'district',\n                    'ward',\n                ]),\n                fbPageId: page.fbObjectId,\n                deliveryOptions: {\n                    ...pick(order.deliveryOptions, [\n                        'shipmentFee',\n                        'discount',\n                        'discountBy',\n                        'noteForDelivery',\n                    ]),\n                    shipmentFeeForCustomer,\n                    serviceId: order.deliveryOptions.serviceId || 0,\n                    transportType: order.deliveryOptions.transportType || 0,\n                    customerNote:\n                        order.deliveryOptions.customerNote.length > 0\n                            ? order.deliveryOptions.customerNote\n                            : undefined,\n                    noteForCustomerCare:\n                        order.deliveryOptions.noteForCustomerCare.length > 0\n                            ? order.deliveryOptions.noteForCustomerCare\n                            : undefined,\n\n                    feeForReceiver: getFee(order).feeForReceiver,\n                    shipmentFeeByTotal: true,\n                },\n                warehouseId: order.warehouseId,\n            };\n\n            await storeApi.createOrder({\n                storeId: store._id,\n                token: token.accessToken,\n                data,\n            });\n\n            setSubmit(false);\n            message.success('Đã tạo đơn thành công');\n            if (isEmpty(customerObjectId)) {\n                const dataCustomer = {\n                    ...order.customer,\n                    fbPageId: store.activePage._id,\n                    fbUserId: conversation.fbUserId,\n                };\n                const newCustomer = await storeApi.createCustomer({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    data: dataCustomer,\n                });\n                setCustomerObjectId(newCustomer._id);\n            }\n            toggleDone();\n        } catch (error) {\n            setSubmit(false);\n            if (get(error, 'response.data.message') === 'INVALID_PRODUCTS_QUANTITY') {\n                message.error(\n                    'Sản phẩm được chọn có thể không tồn tại hoặc không đủ số lượng ở kho lấy hàng mà bạn đã chọn',\n                );\n            } else {\n                message.error('Lỗi tạo đơn');\n            }\n        }\n    };\n\n    const notValidDelivery = () => {\n        const hasSelectDelivery =\n            order.deliveryOptions.serviceId && order.deliveryOptions.serviceId !== 0;\n\n        // if(!hasSelectDelivery) return true;\n\n        if (\n            (hasSelectDelivery && !order.deliveryOptions.transportType) ||\n            (hasSelectDelivery && typeof order.deliveryOptions.noteForDelivery === 'undefined')\n        ) {\n            return true;\n        }\n\n        return false;\n    };\n\n    const checkValid = () => {\n        if (\n            order.customer.name.length === 0 ||\n            order.customer.phoneNo.length === 0 ||\n            typeof order.customer.province === 'undefined' ||\n            typeof order.customer.district === 'undefined' ||\n            typeof order.customer.ward === 'undefined' ||\n            typeof order.warehouseId === 'undefined' ||\n            order.products.length === 0 ||\n            notValidDelivery() ||\n            hiddenModalExpired\n        )\n            return false;\n\n        return true;\n    };\n\n    if (done) {\n        return <OrderDone toggleDone={toggleDone} />;\n    }\n\n    return (\n        <div className='order-tab'>\n            <div className='order-tab-content'>\n                <div className='tab-content-inner' style={{ paddingTop: 5 }}>\n                    <Space direction='vertical' size={20} style={{ width: '100%' }}>\n                       <div>\n                           <OrderCustomerInfo />\n                           <Divider />\n                           <OrderStore />\n                           <Divider />\n                           <SearchProduct />\n                           <OrderProductList />\n                           <AddProduct />\n                       </div>\n                       <OrderTransport />\n                    </Space>\n                </div>\n            </div>\n\n            <div className='order-tab-bottom'>\n                <Button\n                    type='primary'\n                    htmlType='submit'\n                    loading={submit}\n                    disabled={!checkValid()}\n                    icon={<SaveOutlined />}\n                    onClick={saveOrder}\n                    style={{ height: 35 }}\n                >\n                    Lưu\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default OrderTab;\n"]},"metadata":{},"sourceType":"module"}