{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/add-image-gallery.tsx\",\n    _s = $RefreshSig$();\n\nimport { Badge, Button, Form, Modal, Select } from 'antd';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateImageRequest } from '../../../api/images-api';\nimport useModal from '../../../hooks/use-modal';\nimport { fetchImages } from '../../../reducers/imagesState/imagesAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddImageGallery = ({\n  images,\n  callBack\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const {\n    toggle,\n    visible\n  } = useModal();\n  const gallery = useSelector(state => state.images.gallery);\n  const store = useSelector(state => state.store.store);\n  const token = useSelector(state => state.auth.token);\n  const dispatch = useDispatch();\n\n  const onFinish = async values => {\n    setLoading(true);\n\n    try {\n      const data = values.gallery === 'star' ? {\n        star: true\n      } : {\n        galleryId: values.gallery\n      };\n      const reponse = await Promise.all(images.map(async imageId => {\n        const res = await updateImageRequest({\n          token: token.accessToken,\n          storeId: store._id,\n          imageId,\n          data: { ...data\n          }\n        });\n        return res;\n      }));\n      setLoading(false);\n      toggle();\n      dispatch(fetchImages());\n\n      if (callBack) {\n        callBack();\n      }\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  const renderNumber = images.length > 0 ? /*#__PURE__*/_jsxDEV(Badge, {\n    style: {\n      marginRight: 10\n    },\n    count: images.length\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 13\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggle,\n      children: [renderNumber, \" Th\\xEAm v\\xE0o danh m\\u1EE5c\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visible,\n      onCancel: toggle,\n      title: \"Th\\xEAm v\\xE0o danh m\\u1EE5c\",\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onFinish: onFinish,\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Ch\\u1ECDn danh m\\u1EE5c\",\n          name: \"gallery\",\n          rules: [{\n            required: true,\n            message: 'Chọn danh mục'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Ch\\u1ECDn th\\u01B0 m\\u1EE5c\",\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"star\",\n              children: \"Y\\xEAu th\\xEDch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), (gallery || []).map(item => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: item._id,\n                children: item.name\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: toggle,\n            children: \"H\\u1EE7y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            style: {\n              marginLeft: 15\n            },\n            loading: loading,\n            children: \"\\u0110\\u1ED3ng \\xFD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddImageGallery, \"P+vyrFvXTqQVxaYP2BCXq95e7uY=\", false, function () {\n  return [useModal, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = AddImageGallery;\nexport default AddImageGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddImageGallery\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/add-image-gallery.tsx"],"names":["Badge","Button","Form","Modal","Select","React","useState","useDispatch","useSelector","updateImageRequest","useModal","fetchImages","AddImageGallery","images","callBack","loading","setLoading","toggle","visible","gallery","state","store","token","auth","dispatch","onFinish","values","data","star","galleryId","reponse","Promise","all","map","imageId","res","accessToken","storeId","_id","error","renderNumber","length","marginRight","required","message","item","name","marginLeft"],"mappings":"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","sourcesContent":["import { Badge, Button, Form, Modal, Select } from 'antd';\nimport { Store } from 'antd/lib/form/interface';\nimport React, { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { updateImageRequest } from '../../../api/images-api';\nimport useModal from '../../../hooks/use-modal';\nimport { fetchImages } from '../../../reducers/imagesState/imagesAction';\nimport { IGallery } from './imgs-library';\n\ninterface Props {\n    images: string[];\n    callBack?: () => void;\n}\n\nconst AddImageGallery: FC<Props> = ({ images, callBack }): JSX.Element => {\n    const [loading, setLoading] = useState(false);\n    const { toggle, visible } = useModal();\n    const gallery = useSelector((state: any) => state.images.gallery);\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n\n    const dispatch = useDispatch();\n\n    const onFinish = async (values: Store) => {\n        setLoading(true);\n\n        try {\n            const data =\n                values.gallery === 'star'\n                    ? { star: true }\n                    : {\n                          galleryId: values.gallery,\n                      };\n\n            const reponse = await Promise.all(\n                images.map(\n                    async (imageId: string): Promise<any> => {\n                        const res = await updateImageRequest({\n                            token: token.accessToken,\n                            storeId: store._id,\n                            imageId,\n                            data: {\n                                ...data,\n                            },\n                        });\n\n                        return res;\n                    }\n                )\n            );\n\n            setLoading(false);\n            toggle();\n\n            dispatch(fetchImages());\n            if (callBack) {\n                callBack();\n            }\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n\n    const renderNumber =\n        images.length > 0 ? (\n            <Badge style={{ marginRight: 10 }} count={images.length}></Badge>\n        ) : null;\n\n    return (\n        <>\n            <Button onClick={toggle}>{renderNumber} Thêm vào danh mục</Button>\n\n            <Modal visible={visible} onCancel={toggle} title='Thêm vào danh mục' footer={null}>\n                <Form onFinish={onFinish} layout='vertical'>\n                    <Form.Item\n                        label='Chọn danh mục'\n                        name='gallery'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Chọn danh mục',\n                            },\n                        ]}\n                    >\n                        <Select placeholder='Chọn thư mục'>\n                            <Select.Option value='star'>Yêu thích</Select.Option>\n                            {(gallery || []).map((item: IGallery) => {\n                                return (\n                                    <Select.Option key={item._id} value={item._id}>\n                                        {item.name}\n                                    </Select.Option>\n                                );\n                            })}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button onClick={toggle}>Hủy</Button>\n                        <Button\n                            type='primary'\n                            htmlType='submit'\n                            style={{ marginLeft: 15 }}\n                            loading={loading}\n                        >\n                            Đồng ý\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    );\n};\n\nexport default AddImageGallery;\n"]},"metadata":{},"sourceType":"module"}