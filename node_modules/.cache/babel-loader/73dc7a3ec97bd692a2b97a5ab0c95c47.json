{"ast":null,"code":"import types from './types';\nconst initialState = {\n  isLoaded: false,\n  hasScript: false,\n  loading: true,\n  fbPageId: undefined,\n  name: undefined,\n  total: 1,\n  page: 1,\n  limit: 15,\n  scripts: [],\n  startTime: undefined,\n  endTime: undefined,\n  sort: 'createdAt',\n  direction: 'desc',\n  status: undefined,\n  active: undefined\n};\n\nconst livestreamReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case types.SELECT_PAGE:\n      return { ...state,\n        fbPageId: action.payload\n      };\n\n    case types.CHANGE_PAGE:\n      return { ...state,\n        page: action.payload\n      };\n\n    case types.CHANGE_NAME:\n      return { ...state,\n        name: action.payload\n      };\n\n    case types.CHANGE_DATE:\n      {\n        return { ...state,\n          startTime: action.payload[0],\n          endTime: action.payload[1]\n        };\n      }\n\n    case types.CHANGE_FILTER:\n      return { ...state,\n        ...action.payload\n      };\n\n    case types.UPDATE_SCRIPT:\n      {\n        const new_scripts = state.scripts.map(script => {\n          if (script._id === action.payload._id) return action.payload;\n          return script;\n        });\n        return { ...state,\n          scripts: new_scripts\n        };\n      }\n\n    case types.LOAD_FAILED:\n      return { ...state,\n        loading: false\n      };\n\n    case types.LOAD_SUCCESS:\n      {\n        const {\n          scripts,\n          total\n        } = action.payload;\n        const hasScript = state.hasScript || scripts.length > 0;\n        return { ...state,\n          isLoaded: true,\n          scripts,\n          hasScript,\n          total,\n          loading: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default livestreamReducer;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/livestreamState/livestreamReducer.ts"],"names":["types","initialState","isLoaded","hasScript","loading","fbPageId","undefined","name","total","page","limit","scripts","startTime","endTime","sort","direction","status","active","livestreamReducer","state","action","type","LOADING","SELECT_PAGE","payload","CHANGE_PAGE","CHANGE_NAME","CHANGE_DATE","CHANGE_FILTER","UPDATE_SCRIPT","new_scripts","map","script","_id","LOAD_FAILED","LOAD_SUCCESS","length"],"mappings":"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","sourcesContent":["import types from './types';\n\nexport interface IAction {\n    type: string;\n    payload: any;\n}\n\nexport interface ILiveStream {}\n\ninterface IState {\n    isLoaded: boolean;\n    hasScript: boolean;\n    loading: boolean;\n    fbPageId?: string;\n    scripts: any[];\n    name?: string;\n    total: number;\n    page?: number;\n    limit: number;\n    startTime?: number;\n    endTime?: number;\n    sort?: string;\n    direction?: string;\n    status?: number;\n    active?: number;\n}\n\nconst initialState = {\n    isLoaded: false,\n    hasScript: false,\n    loading: true,\n    fbPageId: undefined,\n    name: undefined,\n    total: 1,\n    page: 1,\n    limit: 15,\n    scripts: [],\n    startTime: undefined,\n    endTime: undefined,\n    sort: 'createdAt',\n    direction: 'desc',\n    status: undefined,\n    active: undefined,\n};\n\nconst livestreamReducer = (state: IState = initialState, action: IAction) => {\n    switch (action.type) {\n        case types.LOADING:\n            return {\n                ...state,\n                loading: true,\n            };\n\n        case types.SELECT_PAGE:\n            return { ...state, fbPageId: action.payload };\n\n        case types.CHANGE_PAGE:\n            return { ...state, page: action.payload };\n\n        case types.CHANGE_NAME:\n            return { ...state, name: action.payload };\n\n        case types.CHANGE_DATE: {\n            return { ...state, startTime: action.payload[0], endTime: action.payload[1] };\n        }\n\n        case types.CHANGE_FILTER:\n            return {\n                ...state,\n                ...action.payload,\n            };\n\n        case types.UPDATE_SCRIPT: {\n            const new_scripts = state.scripts.map((script: any) => {\n                if (script._id === action.payload._id) return action.payload;\n                return script;\n            });\n\n            return {\n                ...state,\n                scripts: new_scripts,\n            };\n        }\n\n        case types.LOAD_FAILED:\n            return { ...state, loading: false };\n\n        case types.LOAD_SUCCESS: {\n            const { scripts, total } = action.payload;\n            const hasScript = state.hasScript || scripts.length > 0;\n            return {\n                ...state,\n                isLoaded: true,\n                scripts,\n                hasScript,\n                total,\n                loading: false,\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport default livestreamReducer;\n"]},"metadata":{},"sourceType":"module"}