{"ast":null,"code":"import axios from './axios-client';\n\nasync function fetchImagesRequest({\n  token,\n  storeId,\n  galleryId,\n  star,\n  name\n}) {\n  const url = `/store/v1/stores/${storeId}/images`;\n  const res = await axios({\n    method: 'GET',\n    url,\n    params: {\n      galleryId: galleryId || '',\n      star: star ? 'true' : '',\n      name: name || ''\n    }\n  });\n  return res.data;\n}\n\nasync function createImagesRequest({\n  token,\n  storeId,\n  data\n}) {\n  const url = `/store/v1/stores/${storeId}/images`;\n  const res = await axios({\n    method: 'POST',\n    url,\n    data\n  });\n  return res.data;\n}\n\nasync function likeImageRequest({\n  token,\n  storeId,\n  imageId,\n  star\n}) {\n  const url = `/store/v1/stores/${storeId}/images/${imageId}/star`;\n  const response = await axios({\n    url,\n    method: 'PUT',\n    data: {\n      star\n    }\n  });\n  return response.data;\n}\n\nasync function removeImageRequest({\n  storeId,\n  imageId,\n  token\n}) {\n  const url = `/store/v1/stores/${storeId}/images/${imageId}`;\n  const response = await axios({\n    url,\n    method: 'DELETE'\n  });\n  return response.data;\n}\n\nconst updateImageRequest = async ({\n  token,\n  storeId,\n  imageId,\n  data\n}) => {\n  const url = `/store/v1/stores/${storeId}/images/${imageId}`;\n  const response = await axios({\n    url,\n    method: 'PUT',\n    data\n  });\n  return response.data;\n};\n\nexport { fetchImagesRequest, createImagesRequest, removeImageRequest, likeImageRequest, updateImageRequest };","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/api/images-api.ts"],"names":["axios","fetchImagesRequest","token","storeId","galleryId","star","name","url","res","method","params","data","createImagesRequest","likeImageRequest","imageId","response","removeImageRequest","updateImageRequest"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;;AAEA,eAAeC,kBAAf,CAAkC;AAC9BC,EAAAA,KAD8B;AAE9BC,EAAAA,OAF8B;AAG9BC,EAAAA,SAH8B;AAI9BC,EAAAA,IAJ8B;AAK9BC,EAAAA;AAL8B,CAAlC,EAYiB;AACb,QAAMC,GAAG,GAAI,oBAAmBJ,OAAQ,SAAxC;AAEA,QAAMK,GAAG,GAAG,MAAMR,KAAK,CAAC;AACpBS,IAAAA,MAAM,EAAE,KADY;AAEpBF,IAAAA,GAFoB;AAGpBG,IAAAA,MAAM,EAAE;AACJN,MAAAA,SAAS,EAAEA,SAAS,IAAI,EADpB;AAEJC,MAAAA,IAAI,EAAEA,IAAI,GAAG,MAAH,GAAY,EAFlB;AAGJC,MAAAA,IAAI,EAAEA,IAAI,IAAI;AAHV;AAHY,GAAD,CAAvB;AAUA,SAAOE,GAAG,CAACG,IAAX;AACH;;AAED,eAAeC,mBAAf,CAAmC;AAC/BV,EAAAA,KAD+B;AAE/BC,EAAAA,OAF+B;AAG/BQ,EAAAA;AAH+B,CAAnC,EAaiB;AACb,QAAMJ,GAAG,GAAI,oBAAmBJ,OAAQ,SAAxC;AACA,QAAMK,GAAG,GAAG,MAAMR,KAAK,CAAC;AACpBS,IAAAA,MAAM,EAAE,MADY;AAEpBF,IAAAA,GAFoB;AAGpBI,IAAAA;AAHoB,GAAD,CAAvB;AAMA,SAAOH,GAAG,CAACG,IAAX;AACH;;AAED,eAAeE,gBAAf,CAAgC;AAC5BX,EAAAA,KAD4B;AAE5BC,EAAAA,OAF4B;AAG5BW,EAAAA,OAH4B;AAI5BT,EAAAA;AAJ4B,CAAhC,EAUiB;AACb,QAAME,GAAG,GAAI,oBAAmBJ,OAAQ,WAAUW,OAAQ,OAA1D;AAEA,QAAMC,QAAQ,GAAG,MAAMf,KAAK,CAAC;AACzBO,IAAAA,GADyB;AAEzBE,IAAAA,MAAM,EAAE,KAFiB;AAIzBE,IAAAA,IAAI,EAAE;AACFN,MAAAA;AADE;AAJmB,GAAD,CAA5B;AAQA,SAAOU,QAAQ,CAACJ,IAAhB;AACH;;AAED,eAAeK,kBAAf,CAAkC;AAC9Bb,EAAAA,OAD8B;AAE9BW,EAAAA,OAF8B;AAG9BZ,EAAAA;AAH8B,CAAlC,EASiB;AACb,QAAMK,GAAG,GAAI,oBAAmBJ,OAAQ,WAAUW,OAAQ,EAA1D;AAEA,QAAMC,QAAQ,GAAG,MAAMf,KAAK,CAAC;AACzBO,IAAAA,GADyB;AAEzBE,IAAAA,MAAM,EAAE;AAFiB,GAAD,CAA5B;AAIA,SAAOM,QAAQ,CAACJ,IAAhB;AACH;;AAED,MAAMM,kBAAkB,GAAG,OAAO;AAC9Bf,EAAAA,KAD8B;AAE9BC,EAAAA,OAF8B;AAG9BW,EAAAA,OAH8B;AAI9BH,EAAAA;AAJ8B,CAAP,KAcP;AAChB,QAAMJ,GAAG,GAAI,oBAAmBJ,OAAQ,WAAUW,OAAQ,EAA1D;AACA,QAAMC,QAAQ,GAAG,MAAMf,KAAK,CAAC;AACzBO,IAAAA,GADyB;AAEzBE,IAAAA,MAAM,EAAE,KAFiB;AAGzBE,IAAAA;AAHyB,GAAD,CAA5B;AAMA,SAAOI,QAAQ,CAACJ,IAAhB;AACH,CAvBD;;AAyBA,SACIV,kBADJ,EAEIW,mBAFJ,EAGII,kBAHJ,EAIIH,gBAJJ,EAKII,kBALJ","sourcesContent":["import axios from './axios-client';\n\nasync function fetchImagesRequest({\n    token,\n    storeId,\n    galleryId,\n    star,\n    name,\n}: {\n    token: string;\n    storeId: string;\n    galleryId?: string;\n    star?: boolean;\n    name?: string;\n}): Promise<any> {\n    const url = `/store/v1/stores/${storeId}/images`;\n\n    const res = await axios({\n        method: 'GET',\n        url,\n        params: {\n            galleryId: galleryId || '',\n            star: star ? 'true' : '',\n            name: name || '',\n        },\n    });\n\n    return res.data;\n}\n\nasync function createImagesRequest({\n    token,\n    storeId,\n    data,\n}: {\n    token: string;\n    storeId: string;\n    data: {\n        galleryId?: string;\n        name: string;\n        key: string;\n        star: boolean;\n    };\n}): Promise<any> {\n    const url = `/store/v1/stores/${storeId}/images`;\n    const res = await axios({\n        method: 'POST',\n        url,\n        data,\n    });\n\n    return res.data;\n}\n\nasync function likeImageRequest({\n    token,\n    storeId,\n    imageId,\n    star,\n}: {\n    token: string;\n    storeId: string;\n    imageId: string;\n    star: boolean;\n}): Promise<any> {\n    const url = `/store/v1/stores/${storeId}/images/${imageId}/star`;\n\n    const response = await axios({\n        url,\n        method: 'PUT',\n\n        data: {\n            star,\n        },\n    });\n    return response.data;\n}\n\nasync function removeImageRequest({\n    storeId,\n    imageId,\n    token,\n}: {\n    storeId: string;\n    imageId: string;\n\n    token: string;\n}): Promise<any> {\n    const url = `/store/v1/stores/${storeId}/images/${imageId}`;\n\n    const response = await axios({\n        url,\n        method: 'DELETE',\n    });\n    return response.data;\n}\n\nconst updateImageRequest = async ({\n    token,\n    storeId,\n    imageId,\n    data,\n}: {\n    token: string;\n    storeId: string;\n    imageId: string;\n    data: {\n        star?: boolean;\n        galleryId?: string;\n        name?: string;\n    };\n}): Promise<any> => {\n    const url = `/store/v1/stores/${storeId}/images/${imageId}`;\n    const response = await axios({\n        url,\n        method: 'PUT',\n        data,\n    });\n\n    return response.data;\n};\n\nexport {\n    fetchImagesRequest,\n    createImagesRequest,\n    removeImageRequest,\n    likeImageRequest,\n    updateImageRequest,\n};\n"]},"metadata":{},"sourceType":"module"}