{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/warehouses/warehouses-table.tsx\",\n    _s = $RefreshSig$();\n\nimport { ReloadOutlined, PlusOutlined, DashOutlined } from '@ant-design/icons';\nimport { Button, Col, Row, Table, Modal } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteWarehouse, fetchWarehouses } from '../../reducers/warehouseState/warehouseAction';\nimport Action from './action';\nimport BtnRemoveWarehouse from './btn-remove-warehouse';\nimport FormAddWarehouse from './form-add-warehouse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LIMIT = 20;\n\nconst WarehousesTable = () => {\n  _s();\n\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [page, setPage] = useState(1);\n  const [visible, setVisible] = useState(false);\n  const dispatch = useDispatch();\n  const warehouses = useSelector(({\n    warehouse\n  }) => warehouse.warehouses.data);\n  const total = useSelector(({\n    warehouse\n  }) => warehouse.warehouses.total);\n  const loading = useSelector(({\n    warehouse\n  }) => warehouse.loading);\n  const store = useSelector(({\n    store\n  }) => store.store);\n  const [dataSource, setDataSource] = useState((warehouses || []).map(i => ({ ...i,\n    key: i._id\n  })));\n\n  const reloadTable = () => {\n    dispatch(fetchWarehouses({\n      page,\n      limit: LIMIT\n    }));\n    setSelectedRowKeys([]);\n  };\n\n  const refreshWarehouses = () => {\n    onChangePage(1);\n  };\n\n  useEffect(() => {\n    dispatch(fetchWarehouses({\n      page: 1,\n      limit: LIMIT\n    }));\n  }, []);\n  useEffect(() => {\n    setDataSource((warehouses || []).map(i => ({ ...i,\n      key: i._id\n    })));\n  }, [warehouses]);\n  const columns = [{\n    title: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"th\",\n      children: \"T\\xEAn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 20\n    }, this),\n    dataIndex: '',\n    key: 'name',\n    render: ({\n      name\n    }) => {\n      return name;\n    }\n  }, {\n    title: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"th\",\n      children: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 20\n    }, this),\n    dataIndex: '',\n    key: 'phoneNo',\n    render: ({\n      phoneNo\n    }) => {\n      return phoneNo;\n    }\n  }, {\n    title: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"th\",\n      children: \"T\\u1EC9nh/ Th\\xE0nh ph\\u1ED1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 20\n    }, this),\n    dataIndex: '',\n    key: 'province',\n    render: ({\n      provinceName\n    }) => {\n      return provinceName;\n    }\n  }, {\n    title: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"th\",\n      children: \"Qu\\u1EADn/ Huy\\u1EC7n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 20\n    }, this),\n    dataIndex: '',\n    key: 'district',\n    render: ({\n      districtName\n    }) => {\n      return districtName;\n    }\n  }, {\n    title: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"th\",\n      children: \"Ph\\u01B0\\u1EDDng/ X\\xE3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 20\n    }, this),\n    dataIndex: '',\n    key: 'ward',\n    render: ({\n      wardName\n    }) => {\n      return wardName;\n    }\n  }, {\n    title: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"th\",\n      children: \"\\u0110\\u1ECBa ch\\u1EC9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 20\n    }, this),\n    dataIndex: '',\n    key: 'address',\n    render: ({\n      address\n    }) => {\n      return address;\n    }\n  }, {\n    title: '',\n    dataIndex: '',\n    align: 'right',\n    key: 'x',\n    render: warehouse => {\n      const onEdit = () => {\n        setSelected(warehouse);\n        toggle();\n      };\n\n      const removeWarehouse = () => {\n        dispatch(deleteWarehouse(warehouse._id));\n      };\n\n      const onCancel = () => {\n        setSelected(null);\n      };\n\n      if (store.role !== 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            icon: /*#__PURE__*/_jsxDEV(DashOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 58\n            }, this),\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: selected && selected._id === warehouse._id ? /*#__PURE__*/_jsxDEV(Button, {\n          loading: true,\n          type: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Action, {\n          warehouse: warehouse,\n          removeWarehouse: removeWarehouse,\n          onCancel: onCancel,\n          onEdit: onEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this);\n    }\n  }];\n\n  const onSelectChange = selectedRows => {\n    let data = selectedRows;\n\n    if (selectedRows.includes(store.warehouseId)) {\n      data = selectedRows.filter(item => item !== store.warehouseId);\n    }\n\n    setSelectedRowKeys(data);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange\n  };\n\n  const onChangePage = (page, pageSize) => {\n    setPage(page);\n    dispatch(fetchWarehouses({\n      page,\n      limit: pageSize || LIMIT\n    }));\n  };\n\n  const resetSelect = () => {\n    setSelectedRowKeys([]);\n  };\n\n  const toggle = () => {\n    if (visible) {\n      setSelected(null);\n    }\n\n    setVisible(!visible);\n  };\n\n  const createNew = () => {\n    setSelected(null);\n    toggle();\n  };\n\n  const onCancelForm = () => {\n    setSelected(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginBottom: 20\n      },\n      justify: \"space-between\",\n      align: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"space-between\",\n          align: \"middle\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 39\n              }, this),\n              onClick: createNew,\n              disabled: store.role !== 0,\n              children: \"Th\\xEAm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: refreshWarehouses,\n              style: {\n                margin: '0 10px'\n              },\n              icon: /*#__PURE__*/_jsxDEV(ReloadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: selectedRowKeys.length > 0 && store.role === 0 && /*#__PURE__*/_jsxDEV(BtnRemoveWarehouse, {\n          warehouses: selectedRowKeys,\n          resetSelect: resetSelect,\n          page: page,\n          limit: LIMIT\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      loading: loading,\n      rowSelection: store.role === 0 ? rowSelection : undefined,\n      dataSource: dataSource,\n      columns: columns,\n      rowKey: \"_id\",\n      pagination: {\n        onChange: onChangePage,\n        current: page,\n        total,\n        pageSize: LIMIT\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visible,\n      onCancel: toggle,\n      onOk: toggle,\n      title: selected ? 'Cập nhật chi nhánh' : 'Tạo mới chi nhánh',\n      footer: null,\n      afterClose: onCancelForm,\n      destroyOnClose: true,\n      children: /*#__PURE__*/_jsxDEV(FormAddWarehouse, {\n        reloadTable: reloadTable,\n        toggle: toggle,\n        warehouse: selected,\n        visible: visible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WarehousesTable, \"pf57frj5DjnKHJKucFgpOdijPfw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = WarehousesTable;\nexport default WarehousesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"WarehousesTable\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/warehouses/warehouses-table.tsx"],"names":["ReloadOutlined","PlusOutlined","DashOutlined","Button","Col","Row","Table","Modal","React","useEffect","useState","useDispatch","useSelector","deleteWarehouse","fetchWarehouses","Action","BtnRemoveWarehouse","FormAddWarehouse","LIMIT","WarehousesTable","selectedRowKeys","setSelectedRowKeys","selected","setSelected","page","setPage","visible","setVisible","dispatch","warehouses","warehouse","data","total","loading","store","dataSource","setDataSource","map","i","key","_id","reloadTable","limit","refreshWarehouses","onChangePage","columns","title","dataIndex","render","name","phoneNo","provinceName","districtName","wardName","address","align","onEdit","toggle","removeWarehouse","onCancel","role","textAlign","onSelectChange","selectedRows","includes","warehouseId","filter","item","rowSelection","onChange","pageSize","resetSelect","createNew","onCancelForm","marginBottom","margin","length","undefined","current"],"mappings":"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","sourcesContent":["import {\n    CheckOutlined,\n    CloseOutlined,\n    ReloadOutlined,\n    PlusOutlined,\n    DashOutlined,\n} from '@ant-design/icons';\nimport {\n    Button,\n    Col,\n    Divider,\n    Input,\n    InputNumber,\n    Row,\n    Table,\n    AutoComplete,\n    message,\n    Modal,\n    Dropdown,\n} from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport React, { FC, useEffect, useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n    deleteWarehouse,\n    fetchWarehouses,\n    updateWarehouse,\n} from '../../reducers/warehouseState/warehouseAction';\nimport Action from './action';\nimport BtnRemoveWarehouse from './btn-remove-warehouse';\nimport { IWarehouse } from './interface';\nimport FormAddWarehouse from './form-add-warehouse';\nimport { IStoreState } from '../../reducers/storeState/storeReducer';\n\nconst LIMIT = 20;\n\nconst WarehousesTable: FC = (): JSX.Element => {\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n    const [selected, setSelected] = useState<any | null>(null);\n    const [page, setPage] = useState<number>(1);\n    const [visible, setVisible] = useState<boolean>(false);\n\n    const dispatch = useDispatch();\n    const warehouses = useSelector(\n        ({ warehouse }: { warehouse: any }) => warehouse.warehouses.data\n    );\n    const total = useSelector(({ warehouse }: { warehouse: any }) => warehouse.warehouses.total);\n    const loading = useSelector(({ warehouse }: { warehouse: any }) => warehouse.loading);\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const [dataSource, setDataSource] = useState(\n        (warehouses || []).map((i: IWarehouse) => ({\n            ...i,\n            key: i._id,\n        }))\n    );\n\n    const reloadTable = () => {\n        dispatch(fetchWarehouses({ page, limit: LIMIT }));\n        setSelectedRowKeys([]);\n    };\n\n    const refreshWarehouses = () => {\n        onChangePage(1);\n    };\n\n    useEffect(() => {\n        dispatch(fetchWarehouses({ page: 1, limit: LIMIT }));\n    }, []);\n\n    useEffect(() => {\n        setDataSource(\n            (warehouses || []).map((i: IWarehouse) => ({\n                ...i,\n                key: i._id,\n            }))\n        );\n    }, [warehouses]);\n\n    const columns: ColumnsType<any> | undefined = [\n        {\n            title: <span className='th'>Tên</span>,\n            dataIndex: '',\n            key: 'name',\n            render: ({ name }) => {\n                return name;\n            },\n        },\n        {\n            title: <span className='th'>Số điện thoại</span>,\n            dataIndex: '',\n            key: 'phoneNo',\n            render: ({ phoneNo }) => {\n                return phoneNo;\n            },\n        },\n        {\n            title: <span className='th'>Tỉnh/ Thành phố</span>,\n            dataIndex: '',\n            key: 'province',\n            render: ({ provinceName }) => {\n                return provinceName;\n            },\n        },\n        {\n            title: <span className='th'>Quận/ Huyện</span>,\n            dataIndex: '',\n            key: 'district',\n            render: ({ districtName }) => {\n                return districtName;\n            },\n        },\n        {\n            title: <span className='th'>Phường/ Xã</span>,\n            dataIndex: '',\n            key: 'ward',\n            render: ({ wardName }) => {\n                return wardName;\n            },\n        },\n        {\n            title: <span className='th'>Địa chỉ</span>,\n            dataIndex: '',\n            key: 'address',\n            render: ({ address }) => {\n                return address;\n            },\n        },\n        {\n            title: '',\n            dataIndex: '',\n            align: 'right',\n            key: 'x',\n            render: (warehouse) => {\n                const onEdit = () => {\n                    setSelected(warehouse);\n                    toggle();\n                };\n\n                const removeWarehouse = () => {\n                    dispatch(deleteWarehouse(warehouse._id));\n                };\n\n                const onCancel = () => {\n                    setSelected(null);\n                };\n\n                if (store.role !== 0) {\n                    return (\n                        <div style={{ textAlign: 'right' }}>\n                            <Button type='primary' icon={<DashOutlined />} disabled={true}></Button>\n                        </div>\n                    );\n                }\n\n                return (\n                    <div style={{ textAlign: 'right' }}>\n                        {selected && selected._id === warehouse._id ? (\n                            <Button loading={true} type='primary'></Button>\n                        ) : (\n                            <Action\n                                warehouse={warehouse}\n                                removeWarehouse={removeWarehouse}\n                                onCancel={onCancel}\n                                onEdit={onEdit}\n                            />\n                        )}\n                    </div>\n                );\n            },\n        },\n    ];\n\n    const onSelectChange = (selectedRows: any) => {\n        let data = selectedRows;\n        if (selectedRows.includes(store.warehouseId)) {\n            data = selectedRows.filter((item: any) => item !== store.warehouseId);\n        }\n        setSelectedRowKeys(data);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    const onChangePage = (page: number, pageSize?: number | undefined) => {\n        setPage(page);\n        dispatch(fetchWarehouses({ page, limit: pageSize || LIMIT }));\n    };\n\n    const resetSelect = () => {\n        setSelectedRowKeys([]);\n    };\n\n    const toggle = () => {\n        if (visible) {\n            setSelected(null);\n        }\n        setVisible(!visible);\n    };\n\n    const createNew = () => {\n        setSelected(null);\n        toggle();\n    };\n\n    const onCancelForm = () => {\n        setSelected(null);\n    };\n\n    return (\n        <>\n            <Row style={{ marginBottom: 20 }} justify='space-between' align='middle'>\n                <Col>\n                    <Row justify='space-between' align='middle'>\n                        <Col>\n                            <Button\n                                type='primary'\n                                icon={<PlusOutlined />}\n                                onClick={createNew}\n                                disabled={store.role !== 0}\n                            >\n                                Thêm\n                            </Button>\n                        </Col>\n                        <Col>\n                            <Button\n                                onClick={refreshWarehouses}\n                                style={{ margin: '0 10px' }}\n                                icon={<ReloadOutlined />}\n                            ></Button>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col>\n                    {selectedRowKeys.length > 0 && store.role === 0 && (\n                        <BtnRemoveWarehouse\n                            warehouses={selectedRowKeys}\n                            resetSelect={resetSelect}\n                            page={page}\n                            limit={LIMIT}\n                        />\n                    )}\n                </Col>\n            </Row>\n\n            <Table\n                loading={loading}\n                rowSelection={store.role === 0 ? rowSelection : undefined}\n                dataSource={dataSource}\n                columns={columns}\n                rowKey='_id'\n                pagination={{\n                    onChange: onChangePage,\n                    current: page,\n                    total,\n                    pageSize: LIMIT,\n                }}\n            />\n\n            <Modal\n                visible={visible}\n                onCancel={toggle}\n                onOk={toggle}\n                title={selected ? 'Cập nhật chi nhánh' : 'Tạo mới chi nhánh'}\n                footer={null}\n                afterClose={onCancelForm}\n                destroyOnClose\n            >\n                <FormAddWarehouse\n                    reloadTable={reloadTable}\n                    toggle={toggle}\n                    warehouse={selected}\n                    visible={visible}\n                />\n            </Modal>\n        </>\n    );\n};\n\nexport default WarehousesTable;\n"]},"metadata":{},"sourceType":"module"}