{"ast":null,"code":"import { union } from 'lodash';\nimport { parsePhoneNumber, removeAccents } from '../../../utils/string';\n\nconst getProductFromKeyword = ({\n  keywords,\n  text\n}) => {\n  let products = [];\n\n  if (!text) {\n    return products;\n  }\n\n  keywords.forEach(keyword => {\n    const regex = new RegExp(`\\\\s\\\\b${removeAccents(keyword.keyword).toLowerCase()}\\\\b\\\\s`, 'i');\n\n    if (` ${removeAccents(text).toLowerCase()} `.match(regex)) {\n      products = union(products, keyword.products);\n    }\n  });\n  return products;\n};\n\nexport const checkRightSyntax = ({\n  keywords,\n  text,\n  syntax\n}) => {\n  const products = getProductFromKeyword({\n    keywords,\n    text\n  });\n  const phone = parsePhoneNumber(text);\n\n  if (products.length === 0) {\n    return {\n      valid: false,\n      products: [],\n      phoneNo: phone\n    };\n  }\n\n  if (syntax === 1) {\n    if (phone) {\n      return {\n        valid: true,\n        products,\n        phoneNo: phone\n      };\n    }\n\n    return {\n      valid: false,\n      products,\n      phoneNo: phone\n    };\n  }\n\n  return {\n    valid: true,\n    products,\n    phoneNo: phone\n  };\n};","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/util.ts"],"names":["union","parsePhoneNumber","removeAccents","getProductFromKeyword","keywords","text","products","forEach","keyword","regex","RegExp","toLowerCase","match","checkRightSyntax","syntax","phone","length","valid","phoneNo"],"mappings":"AAAA,SAASA,KAAT,QAAsB,QAAtB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,uBAAhD;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAkE;AAC5F,MAAIC,QAAe,GAAG,EAAtB;;AAEA,MAAI,CAACD,IAAL,EAAW;AACP,WAAOC,QAAP;AACH;;AAEDF,EAAAA,QAAQ,CAACG,OAAT,CAAkBC,OAAD,IAAkB;AAC/B,UAAMC,KAAK,GAAG,IAAIC,MAAJ,CACT,SAAQR,aAAa,CAACM,OAAO,CAACA,OAAT,CAAb,CAA+BG,WAA/B,EAA6C,QAD5C,EAEV,GAFU,CAAd;;AAKA,QAAK,IAAGT,aAAa,CAACG,IAAD,CAAb,CAAoBM,WAApB,EAAkC,GAAtC,CAAyCC,KAAzC,CAA+CH,KAA/C,CAAJ,EAA2D;AACvDH,MAAAA,QAAQ,GAAGN,KAAK,CAACM,QAAD,EAAWE,OAAO,CAACF,QAAnB,CAAhB;AACH;AACJ,GATD;AAWA,SAAOA,QAAP;AACH,CAnBD;;AAqBA,OAAO,MAAMO,gBAAgB,GAAG,CAAC;AAC7BT,EAAAA,QAD6B;AAE7BC,EAAAA,IAF6B;AAG7BS,EAAAA;AAH6B,CAAD,KAQ8B;AAC1D,QAAMR,QAAQ,GAAGH,qBAAqB,CAAC;AACnCC,IAAAA,QADmC;AAEnCC,IAAAA;AAFmC,GAAD,CAAtC;AAIA,QAAMU,KAAK,GAAGd,gBAAgB,CAACI,IAAD,CAA9B;;AAEA,MAAIC,QAAQ,CAACU,MAAT,KAAoB,CAAxB,EAA2B;AACvB,WAAO;AACHC,MAAAA,KAAK,EAAE,KADJ;AAEHX,MAAAA,QAAQ,EAAE,EAFP;AAGHY,MAAAA,OAAO,EAAEH;AAHN,KAAP;AAKH;;AAED,MAAID,MAAM,KAAK,CAAf,EAAkB;AACd,QAAIC,KAAJ,EAAW;AACP,aAAO;AACHE,QAAAA,KAAK,EAAE,IADJ;AAEHX,QAAAA,QAFG;AAGHY,QAAAA,OAAO,EAAEH;AAHN,OAAP;AAKH;;AAED,WAAO;AACHE,MAAAA,KAAK,EAAE,KADJ;AAEHX,MAAAA,QAFG;AAGHY,MAAAA,OAAO,EAAEH;AAHN,KAAP;AAKH;;AAED,SAAO;AACHE,IAAAA,KAAK,EAAE,IADJ;AAEHX,IAAAA,QAFG;AAGHY,IAAAA,OAAO,EAAEH;AAHN,GAAP;AAKH,CA5CM","sourcesContent":["import { union } from 'lodash';\nimport { parsePhoneNumber, removeAccents } from '../../../utils/string';\n\nconst getProductFromKeyword = ({ keywords, text }: { keywords: any[]; text: string }): any[] => {\n    let products: any[] = [];\n\n    if (!text) {\n        return products;\n    }\n\n    keywords.forEach((keyword: any) => {\n        const regex = new RegExp(\n            `\\\\s\\\\b${removeAccents(keyword.keyword).toLowerCase()}\\\\b\\\\s`,\n            'i'\n        );\n\n        if (` ${removeAccents(text).toLowerCase()} `.match(regex)) {\n            products = union(products, keyword.products);\n        }\n    });\n\n    return products;\n};\n\nexport const checkRightSyntax = ({\n    keywords,\n    text,\n    syntax,\n}: {\n    keywords: any[];\n    text: string;\n    syntax: number;\n}): { valid: boolean; products?: any[]; phoneNo?: string } => {\n    const products = getProductFromKeyword({\n        keywords,\n        text,\n    });\n    const phone = parsePhoneNumber(text);\n\n    if (products.length === 0) {\n        return {\n            valid: false,\n            products: [],\n            phoneNo: phone,\n        };\n    }\n\n    if (syntax === 1) {\n        if (phone) {\n            return {\n                valid: true,\n                products,\n                phoneNo: phone,\n            };\n        }\n\n        return {\n            valid: false,\n            products,\n            phoneNo: phone,\n        };\n    }\n\n    return {\n        valid: true,\n        products,\n        phoneNo: phone,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}