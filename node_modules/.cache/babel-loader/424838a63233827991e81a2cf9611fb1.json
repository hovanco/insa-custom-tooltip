{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/edit-field.tsx\",\n    _s = $RefreshSig$();\n\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { Button, Col, Form, Input, message, Row, Space } from 'antd';\nimport { omit } from 'lodash';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport storeApi from '../../../api/store-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditField = ({\n  value,\n  field,\n  onChange,\n  empty,\n  dataCustomer\n}) => {\n  _s();\n\n  const token = useSelector(({\n    auth\n  }) => auth.token);\n  const store = useSelector(({\n    store\n  }) => store.store);\n  const conversation = useSelector(({\n    fanpage\n  }) => fanpage.conversation);\n  const [loading, setLoading] = useState(false);\n  const [edit, setEdit] = useState(false);\n\n  const toggleEdit = () => setEdit(!edit);\n\n  const onSubmit = async values => {\n    try {\n      const data = { ...omit(dataCustomer, ['_id']),\n        ...values,\n        fbPageId: store.activePage._id,\n        fbUserId: conversation.fbUserId\n      };\n      let res;\n\n      if (dataCustomer._id || dataCustomer._id.length === 0) {\n        res = await storeApi.createCustomer({\n          token: token.accessToken,\n          storeId: store._id,\n          data\n        });\n        message.success('Đã tạo thành công khách hàng');\n      } else {\n        res = await storeApi.updateCustomer({\n          token: token.accessToken,\n          storeId: store._id,\n          customerId: dataCustomer._id,\n          data\n        });\n        message.success('Cập nhật thành công khách hàng');\n      }\n\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      message.error('Đã có lỗi xảy ra!');\n    }\n  };\n\n  if (edit) {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      initialValues: {\n        [field]: value\n      },\n      onFinish: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        justify: \"space-between\",\n        gutter: 5,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            flex: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            style: {\n              margin: 0\n            },\n            name: field,\n            rules: [{\n              required: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              size: \"small\",\n              placeholder: empty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            style: {\n              margin: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(Space, {\n              size: 2,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                size: \"small\",\n                loading: loading,\n                children: /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: toggleEdit,\n                size: \"small\",\n                children: /*#__PURE__*/_jsxDEV(CloseCircleOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    align: \"middle\",\n    justify: \"space-between\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: value || empty\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditField, \"9H6jF7MAUwdPTwZaw/MZLTVF2Fw=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = EditField;\nexport default EditField;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditField\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/edit-field.tsx"],"names":["CheckCircleOutlined","CloseCircleOutlined","Button","Col","Form","Input","message","Row","Space","omit","React","useState","useSelector","storeApi","EditField","value","field","onChange","empty","dataCustomer","token","auth","store","conversation","fanpage","loading","setLoading","edit","setEdit","toggleEdit","onSubmit","values","data","fbPageId","activePage","_id","fbUserId","res","length","createCustomer","accessToken","storeId","success","updateCustomer","customerId","error","flex","margin","required"],"mappings":"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","sourcesContent":["import { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { Button, Col, Form, Input, message, Row, Space } from 'antd';\nimport { Store } from 'antd/lib/form/interface';\nimport { omit } from 'lodash';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport storeApi from '../../../api/store-api';\n\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\n\ninterface Props {\n    value: string;\n    field: string;\n    dataCustomer: any;\n    empty?: string;\n\n    onChange: (field: string, value: any) => void;\n}\n\nconst EditField = ({ value, field, onChange, empty, dataCustomer }: Props) => {\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n\n    const [loading, setLoading] = useState(false);\n    const [edit, setEdit] = useState(false);\n\n    const toggleEdit = () => setEdit(!edit);\n\n    const onSubmit = async (values: Store) => {\n        try {\n            const data = {\n                ...omit(dataCustomer, ['_id']),\n                ...values,\n                fbPageId: store.activePage._id,\n                fbUserId: conversation.fbUserId,\n            };\n\n            let res;\n\n            if (dataCustomer._id || dataCustomer._id.length === 0) {\n                res = await storeApi.createCustomer({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    data,\n                });\n\n                message.success('Đã tạo thành công khách hàng');\n            } else {\n                res = await storeApi.updateCustomer({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    customerId: dataCustomer._id,\n                    data,\n                });\n                message.success('Cập nhật thành công khách hàng');\n            }\n\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            message.error('Đã có lỗi xảy ra!');\n        }\n    };\n\n    if (edit) {\n        return (\n            <Form\n                initialValues={{\n                    [field]: value,\n                }}\n                onFinish={onSubmit}\n            >\n                <Row align='middle' justify='space-between' gutter={5}>\n                    <Col style={{ flex: 1 }}>\n                        <Form.Item\n                            style={{ margin: 0 }}\n                            name={field}\n                            rules={[\n                                {\n                                    required: true,\n                                },\n                            ]}\n                        >\n                            <Input size='small' placeholder={empty} />\n                        </Form.Item>\n                    </Col>\n\n                    <Col>\n                        <Form.Item style={{ margin: 0 }}>\n                            <Space size={2}>\n                                <Button\n                                    type='primary'\n                                    htmlType='submit'\n                                    size='small'\n                                    loading={loading}\n                                >\n                                    <CheckCircleOutlined />\n                                </Button>\n                                <Button onClick={toggleEdit} size='small'>\n                                    <CloseCircleOutlined />\n                                </Button>\n                            </Space>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        );\n    }\n    return (\n        <Row align='middle' justify='space-between'>\n            <Col>{value || empty}</Col>\n            {/* <Col>\n                <EditOutlined onClick={toggleEdit} />\n            </Col> */}\n        </Row>\n    );\n};\n\nexport default EditField;\n"]},"metadata":{},"sourceType":"module"}