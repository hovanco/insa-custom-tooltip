{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/order-table.tsx\",\n    _s = $RefreshSig$();\n\nimport { Table } from 'antd';\nimport { push } from 'connected-react-router';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchOrders, setOrders } from '../../reducers/orderState/orderAction';\nimport formatMoney from '../../utils/format-money';\nimport Action from './action';\nimport ChangeStatus from './change-status';\nimport ExpanedOrderTable from './expaned-order-table';\nimport ShipStatus from './ship-status';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LIMIT = 20;\nexport const getValue = (products, type) => {\n  return products.reduce((value, p) => (p.productId ? p.productId[type] : 0) * p.count + value, 0);\n};\nconst columns = [{\n  title: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"th\",\n    children: \"Ng\\xE0y\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 16\n  }, this),\n  dataIndex: 'createdAt',\n  key: 'createdAt',\n  sorter: (a, b) => moment(a.createdAt).valueOf() - moment(b.createdAt).valueOf(),\n  render: createdAt => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [moment(createdAt).format('HH:mm'), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), moment(createdAt).format('DD/MM/YYYY')]\n  }, void 0, true)\n}, {\n  title: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"th\",\n    children: \"Kh\\xE1ch h\\xE0ng\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 16\n  }, this),\n  dataIndex: 'customer',\n  key: 'customer',\n  sorter: (a, b) => a.customer.name.length - b.customer.name.length,\n  render: customer => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [customer.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), customer.phoneNo]\n    }, void 0, true);\n  }\n}, {\n  title: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"th\",\n    children: \"Ng\\u01B0\\u1EDDi t\\u1EA1o\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 16\n  }, this),\n  dataIndex: 'createdBy',\n  key: 'createdBy',\n  render: createdBy => {\n    if (!createdBy) return null;\n    const color = createdBy.role === 'admin' ? '#f50' : '#108ee9';\n    const text = createdBy.role === 'admin' ? 'Chủ shop' : 'Nhân viên';\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: createdBy.name\n    }, void 0, false);\n  }\n}, {\n  title: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"th\",\n    children: \"KL(g)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 16\n  }, this),\n  dataIndex: 'products',\n  key: 'weight',\n  sorter: (a, b) => getValue(a.products, 'weight') - getValue(b.products, 'weight'),\n  render: products => getValue(products, 'weight')\n}, {\n  title: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"th\",\n    children: \"T\\u1ED5ng ti\\u1EC1n(VND)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 16\n  }, this),\n  dataIndex: 'totalPrice',\n  key: 'totalPrice',\n  sorter: (a, b) => a.totalPrice - b.totalPrice,\n  render: totalPrice => formatMoney(totalPrice)\n}, {\n  title: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"th\",\n    children: \"Tr\\u1EA1ng th\\xE1i\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 16\n  }, this),\n  dataIndex: 'status',\n  key: 'trang_thai',\n  render: (status, record) => {\n    return /*#__PURE__*/_jsxDEV(ChangeStatus, {\n      status: status,\n      orderId: record._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 20\n    }, this);\n  }\n}, {\n  title: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"th\",\n    children: \"V\\u1EADn chuy\\u1EC3n\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 16\n  }, this),\n  dataIndex: 'deliveryOptions',\n  key: 'ship',\n  render: ({\n    serviceId\n  }) => {\n    return /*#__PURE__*/_jsxDEV(ShipStatus, {\n      ship: serviceId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 20\n    }, this);\n  }\n}, {\n  title: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"th\",\n    children: \"Ch\\xEAnh l\\u1EC7ch PVC(VND)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 16\n  }, this),\n  dataIndex: 'deliveryOptions',\n  sorter: (a, b) => {\n    const value1 = a.deliveryOptions.shipmentFeeForCustomer - a.deliveryOptions.shipmentFee;\n    const value2 = b.deliveryOptions.shipmentFeeForCustomer - b.deliveryOptions.shipmentFee;\n    return value1 - value2;\n  },\n  key: 'xx',\n  render: ({\n    shipmentFee,\n    shipmentFeeForCustomer\n  }) => {\n    return formatMoney(shipmentFeeForCustomer - shipmentFee);\n  }\n}, {\n  title: '',\n  align: 'center',\n  dataIndex: '_id',\n  key: 'action',\n  render: (_, order) => /*#__PURE__*/_jsxDEV(Action, {\n    order: order\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 39\n  }, this)\n}];\n\nconst OrderTable = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const type = useSelector(({\n    order\n  }) => order.type);\n  const loading = useSelector(({\n    order\n  }) => order.loading);\n  const orders = useSelector(({\n    order\n  }) => order.orders.data);\n  const total = useSelector(({\n    order\n  }) => order.orders.total);\n  useEffect(() => {\n    const dataPost = {\n      page: 1,\n      limit: LIMIT\n    };\n\n    if (type && type !== 'all') {\n      dataPost.status = type;\n      dispatch(fetchOrders(dataPost));\n    } else {\n      dispatch(fetchOrders({\n        page: 1,\n        limit: LIMIT\n      }));\n    }\n\n    return () => {\n      dispatch(setOrders({\n        data: [],\n        total: 0\n      }));\n    };\n  }, [type]);\n  const dataSource = orders.map(o => ({ ...o,\n    key: o._id\n  }));\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {// setSelectOrder(selectedRows);\n    },\n    getCheckboxProps: record => ({\n      disabled: record.name === 'Disabled User',\n      // Column configuration not to be checked\n      name: record.name\n    })\n  };\n\n  const expandedRowRender = record => {\n    return /*#__PURE__*/_jsxDEV(ExpanedOrderTable, {\n      order: record\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 16\n    }, this);\n  };\n\n  const onChangePage = (page, pageSize) => {\n    dispatch(fetchOrders({\n      page,\n      limit: pageSize || LIMIT\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-content\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: dataSource,\n      columns: columns //  rowSelection={rowSelection}\n      ,\n      loading: loading,\n      className: \"orders-table\",\n      onRow: record => {\n        return {\n          onClick: event => {\n            if (event.target.className && event.target.className === 'ant-table-cell') {\n              dispatch(push(`/customer/order/${record._id}`));\n            }\n          }\n        };\n      },\n      pagination: {\n        onChange: onChangePage,\n        total,\n        pageSize: LIMIT\n      },\n      rowKey: \"_id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderTable, \"+/JqC+yX3rgCVCds4TJrmENSfew=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = OrderTable;\nexport default OrderTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderTable\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/order-table.tsx"],"names":["Table","push","moment","React","useEffect","useDispatch","useSelector","fetchOrders","setOrders","formatMoney","Action","ChangeStatus","ExpanedOrderTable","ShipStatus","LIMIT","getValue","products","type","reduce","value","p","productId","count","columns","title","dataIndex","key","sorter","a","b","createdAt","valueOf","render","format","customer","name","length","phoneNo","createdBy","color","role","text","totalPrice","status","record","_id","serviceId","value1","deliveryOptions","shipmentFeeForCustomer","shipmentFee","value2","align","_","order","OrderTable","dispatch","loading","orders","data","total","dataPost","page","limit","dataSource","map","o","rowSelection","onChange","selectedRowKeys","selectedRows","getCheckboxProps","disabled","expandedRowRender","onChangePage","pageSize","onClick","event","target","className"],"mappings":"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","sourcesContent":["import { Table } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { push } from 'connected-react-router';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchOrders, setOrders } from '../../reducers/orderState/orderAction';\nimport formatMoney from '../../utils/format-money';\nimport Action from './action';\nimport ChangeStatus from './change-status';\nimport ExpanedOrderTable from './expaned-order-table';\nimport { IOrder } from './interface';\nimport ShipStatus from './ship-status';\n\nconst LIMIT = 20;\n\nexport const getValue = (products: any, type: string) => {\n    return products.reduce(\n        (value: number, p: any) => (p.productId ? p.productId[type] : 0) * p.count + value,\n        0\n    );\n};\n\nconst columns: ColumnsType<any> | undefined = [\n    {\n        title: <span className='th'>Ngày</span>,\n        dataIndex: 'createdAt',\n        key: 'createdAt',\n        sorter: (a, b) => moment(a.createdAt).valueOf() - moment(b.createdAt).valueOf(),\n        render: (createdAt: Date) => (\n            <>\n                {moment(createdAt).format('HH:mm')}\n                <br />\n                {moment(createdAt).format('DD/MM/YYYY')}\n            </>\n        ),\n    },\n    {\n        title: <span className='th'>Khách hàng</span>,\n        dataIndex: 'customer',\n        key: 'customer',\n        sorter: (a, b) => a.customer.name.length - b.customer.name.length,\n        render: (customer: any) => {\n            return (\n                <>\n                    {customer.name}\n                    <br />\n                    {customer.phoneNo}\n                </>\n            );\n        },\n    },\n    {\n        title: <span className='th'>Người tạo</span>,\n        dataIndex: 'createdBy',\n        key: 'createdBy',\n        render: (createdBy: any) => {\n            if (!createdBy) return null;\n\n            const color = createdBy.role === 'admin' ? '#f50' : '#108ee9';\n            const text = createdBy.role === 'admin' ? 'Chủ shop' : 'Nhân viên';\n\n            return (\n                <>\n                    {createdBy.name}\n                    {/* <br />\n                    <Tag color={color}>{text}</Tag> */}\n                </>\n            );\n        },\n    },\n    {\n        title: <span className='th'>KL(g)</span>,\n        dataIndex: 'products',\n        key: 'weight',\n        sorter: (a, b) => getValue(a.products, 'weight') - getValue(b.products, 'weight'),\n\n        render: (products: any) => getValue(products, 'weight'),\n    },\n    {\n        title: <span className='th'>Tổng tiền(VND)</span>,\n        dataIndex: 'totalPrice',\n        key: 'totalPrice',\n        sorter: (a, b) => a.totalPrice - b.totalPrice,\n\n        render: (totalPrice: number) => formatMoney(totalPrice),\n    },\n    {\n        title: <span className='th'>Trạng thái</span>,\n        dataIndex: 'status',\n        key: 'trang_thai',\n        render: (status: any, record: { _id: string }) => {\n            return <ChangeStatus status={status} orderId={record._id} />;\n        },\n    },\n\n    {\n        title: <span className='th'>Vận chuyển</span>,\n        dataIndex: 'deliveryOptions',\n        key: 'ship',\n        render: ({ serviceId }: { serviceId?: number }) => {\n            return <ShipStatus ship={serviceId} />;\n        },\n    },\n    {\n        title: <span className='th'>Chênh lệch PVC(VND)</span>,\n        dataIndex: 'deliveryOptions',\n        sorter: (a, b) => {\n            const value1 = a.deliveryOptions.shipmentFeeForCustomer - a.deliveryOptions.shipmentFee;\n            const value2 = b.deliveryOptions.shipmentFeeForCustomer - b.deliveryOptions.shipmentFee;\n            return value1 - value2;\n        },\n        key: 'xx',\n        render: ({\n            shipmentFee,\n            shipmentFeeForCustomer,\n        }: {\n            shipmentFee: any;\n            shipmentFeeForCustomer: any;\n        }) => {\n            return formatMoney(shipmentFeeForCustomer - shipmentFee);\n        },\n    },\n    {\n        title: '',\n        align: 'center',\n        dataIndex: '_id',\n        key: 'action',\n        render: (_, order: IOrder) => <Action order={order} />,\n    },\n];\n\nconst OrderTable = (): JSX.Element => {\n    const dispatch = useDispatch();\n    const type = useSelector(({ order }: { order: any }) => order.type);\n    const loading = useSelector(({ order }: { order: any }) => order.loading);\n    const orders = useSelector(({ order }: { order: any }) => order.orders.data);\n    const total = useSelector(({ order }: { order: any }) => order.orders.total);\n\n    useEffect(() => {\n        const dataPost: any = { page: 1, limit: LIMIT };\n\n        if (type && type !== 'all') {\n            dataPost.status = type;\n            dispatch(fetchOrders(dataPost));\n        } else {\n            dispatch(fetchOrders({ page: 1, limit: LIMIT }));\n        }\n\n        return () => {\n            dispatch(setOrders({ data: [], total: 0 }));\n        };\n    }, [type]);\n\n    const dataSource = orders.map((o: any) => ({ ...o, key: o._id }));\n\n    const rowSelection = {\n        onChange: (selectedRowKeys: any, selectedRows: any) => {\n            // setSelectOrder(selectedRows);\n        },\n        getCheckboxProps: (record: any) => ({\n            disabled: record.name === 'Disabled User', // Column configuration not to be checked\n            name: record.name,\n        }),\n    };\n\n    const expandedRowRender = (record: any) => {\n        return <ExpanedOrderTable order={record} />;\n    };\n\n    const onChangePage = (page: number, pageSize?: number | undefined) => {\n        dispatch(fetchOrders({ page, limit: pageSize || LIMIT }));\n    };\n\n    return (\n        <div className='table-content'>\n            <Table\n                dataSource={dataSource}\n                columns={columns}\n                //  rowSelection={rowSelection}\n                loading={loading}\n                className='orders-table'\n                onRow={(record) => {\n                    return {\n                        onClick: (event) => {\n                            if (\n                                (event.target as any).className &&\n                                (event.target as any).className === 'ant-table-cell'\n                            ) {\n                                dispatch(push(`/customer/order/${record._id}`));\n                            }\n                        },\n                    };\n                }}\n                pagination={{\n                    onChange: onChangePage,\n                    total,\n                    pageSize: LIMIT,\n                }}\n                rowKey='_id'\n            />\n        </div>\n    );\n};\n\nexport default OrderTable;\n"]},"metadata":{},"sourceType":"module"}