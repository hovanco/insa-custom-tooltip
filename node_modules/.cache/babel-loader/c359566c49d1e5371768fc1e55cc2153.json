{"ast":null,"code":"import typesAuth from '../authState/authTypes';\nimport types from './storeTypes';\nconst initialState = {\n  loading: true,\n  store: null\n};\n\nfunction storeReducer(state = initialState, action) {\n  switch (action.type) {\n    case types.LOADING_STORE:\n      return { ...state,\n        loading: true\n      };\n\n    case types.LOAD_STORE_SUCCESS:\n      return { ...state,\n        store: action.payload,\n        loading: false\n      };\n\n    case types.LOAD_STORE_FAILED:\n      return { ...state,\n        loading: false\n      };\n\n    case types.UPDATE_STORE:\n      {\n        return { ...state,\n          store: { ...action.payload,\n            role: state.store.role\n          }\n        };\n      }\n\n    case types.CHANGE_PAGE:\n      return { ...state,\n        store: { ...state.store,\n          activePage: action.payload\n        }\n      };\n\n    case types.ADD_STORE:\n      return { ...state,\n        store: action.payload\n      };\n\n    case typesAuth.LOGOUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n}\n\nexport default storeReducer;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/storeState/storeReducer.ts"],"names":["typesAuth","types","initialState","loading","store","storeReducer","state","action","type","LOADING_STORE","LOAD_STORE_SUCCESS","payload","LOAD_STORE_FAILED","UPDATE_STORE","role","CHANGE_PAGE","activePage","ADD_STORE","LOGOUT"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAcA,MAAMC,YAAyB,GAAG;AAC9BC,EAAAA,OAAO,EAAE,IADqB;AAE9BC,EAAAA,KAAK,EAAE;AAFuB,CAAlC;;AAKA,SAASC,YAAT,CAAsBC,KAAK,GAAGJ,YAA9B,EAA4CK,MAA5C,EAA0E;AACtE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,KAAK,CAACQ,aAAX;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYH,QAAAA,OAAO,EAAE;AAArB,OAAP;;AAEJ,SAAKF,KAAK,CAACS,kBAAX;AACI,aAAO,EAAE,GAAGJ,KAAL;AAAYF,QAAAA,KAAK,EAAEG,MAAM,CAACI,OAA1B;AAAmCR,QAAAA,OAAO,EAAE;AAA5C,OAAP;;AAEJ,SAAKF,KAAK,CAACW,iBAAX;AACI,aAAO,EAAE,GAAGN,KAAL;AAAYH,QAAAA,OAAO,EAAE;AAArB,OAAP;;AAEJ,SAAKF,KAAK,CAACY,YAAX;AAAyB;AACrB,eAAO,EAAE,GAAGP,KAAL;AAAYF,UAAAA,KAAK,EAAE,EAAE,GAAGG,MAAM,CAACI,OAAZ;AAAqBG,YAAAA,IAAI,EAAER,KAAK,CAACF,KAAN,CAAYU;AAAvC;AAAnB,SAAP;AACH;;AAED,SAAKb,KAAK,CAACc,WAAX;AACI,aAAO,EACH,GAAGT,KADA;AAEHF,QAAAA,KAAK,EAAE,EACH,GAAGE,KAAK,CAACF,KADN;AAEHY,UAAAA,UAAU,EAAET,MAAM,CAACI;AAFhB;AAFJ,OAAP;;AAQJ,SAAKV,KAAK,CAACgB,SAAX;AACI,aAAO,EAAE,GAAGX,KAAL;AAAYF,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAA1B,OAAP;;AAEJ,SAAKX,SAAS,CAACkB,MAAf;AACI,aAAOhB,YAAP;;AAEJ;AACI,aAAOI,KAAP;AA9BR;AAgCH;;AAED,eAAeD,YAAf","sourcesContent":["import typesAuth from '../authState/authTypes';\nimport types from './storeTypes';\n\nexport interface Store {}\n\nexport interface IStoreState {\n    loading: boolean;\n    store: any;\n}\n\nexport interface IAction {\n    type: string;\n    payload?: any;\n}\n\nconst initialState: IStoreState = {\n    loading: true,\n    store: null,\n};\n\nfunction storeReducer(state = initialState, action: IAction): IStoreState {\n    switch (action.type) {\n        case types.LOADING_STORE:\n            return { ...state, loading: true };\n\n        case types.LOAD_STORE_SUCCESS:\n            return { ...state, store: action.payload, loading: false };\n\n        case types.LOAD_STORE_FAILED:\n            return { ...state, loading: false };\n\n        case types.UPDATE_STORE: {\n            return { ...state, store: { ...action.payload, role: state.store.role } };\n        }\n\n        case types.CHANGE_PAGE:\n            return {\n                ...state,\n                store: {\n                    ...state.store,\n                    activePage: action.payload,\n                },\n            };\n\n        case types.ADD_STORE:\n            return { ...state, store: action.payload };\n\n        case typesAuth.LOGOUT:\n            return initialState;\n\n        default:\n            return state;\n    }\n}\n\nexport default storeReducer;\n"]},"metadata":{},"sourceType":"module"}