{"ast":null,"code":"import * as setingApi from '../../api/setting';\nimport types from './types';\n\nfunction loadLabelSuccess(labels) {\n  return {\n    type: types.LOAD_LABEL_SUCCESS,\n    payload: labels\n  };\n}\n\nexport const loadLabels = pageId => async (dispatch, getState) => {\n  dispatch({\n    type: types.LOADING\n  });\n  const {\n    store\n  } = getState();\n  const storeId = store.store._id;\n  const response = await setingApi.getListLabels({\n    storeId,\n    pageId,\n    limit: 20\n  });\n  dispatch(loadLabelSuccess(response));\n};\nexport function removeLabel(labelId) {\n  return {\n    type: types.REMOVE_LABEL,\n    payload: labelId\n  };\n}\nexport function updateOrderLabel(labelId, order) {\n  return {\n    type: types.UPDATE_ORDER_LABEL,\n    payload: {\n      labelId,\n      order\n    }\n  };\n}","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/labelState/labelAction.ts"],"names":["setingApi","types","loadLabelSuccess","labels","type","LOAD_LABEL_SUCCESS","payload","loadLabels","pageId","dispatch","getState","LOADING","store","storeId","_id","response","getListLabels","limit","removeLabel","labelId","REMOVE_LABEL","updateOrderLabel","order","UPDATE_ORDER_LABEL"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,gBAAT,CAA0BC,MAA1B,EAAuC;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAEH,KAAK,CAACI,kBADT;AAEHC,IAAAA,OAAO,EAAEH;AAFN,GAAP;AAIH;;AAED,OAAO,MAAMI,UAAU,GAAIC,MAAD,IAAoB,OAAOC,QAAP,EAAsBC,QAAtB,KAAwC;AAClFD,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEH,KAAK,CAACU;AAAd,GAAD,CAAR;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAYF,QAAQ,EAA1B;AAEA,QAAMG,OAAO,GAAGD,KAAK,CAACA,KAAN,CAAYE,GAA5B;AAEA,QAAMC,QAAQ,GAAG,MAAMf,SAAS,CAACgB,aAAV,CAAwB;AAC3CH,IAAAA,OAD2C;AAE3CL,IAAAA,MAF2C;AAG3CS,IAAAA,KAAK,EAAE;AAHoC,GAAxB,CAAvB;AAMAR,EAAAA,QAAQ,CAACP,gBAAgB,CAACa,QAAD,CAAjB,CAAR;AACH,CAdM;AAgBP,OAAO,SAASG,WAAT,CAAqBC,OAArB,EAAsC;AACzC,SAAO;AACHf,IAAAA,IAAI,EAAEH,KAAK,CAACmB,YADT;AAEHd,IAAAA,OAAO,EAAEa;AAFN,GAAP;AAIH;AAED,OAAO,SAASE,gBAAT,CAA0BF,OAA1B,EAA2CG,KAA3C,EAA0D;AAC7D,SAAO;AACHlB,IAAAA,IAAI,EAAEH,KAAK,CAACsB,kBADT;AAEHjB,IAAAA,OAAO,EAAE;AAAEa,MAAAA,OAAF;AAAWG,MAAAA;AAAX;AAFN,GAAP;AAIH","sourcesContent":["import * as setingApi from '../../api/setting';\nimport types from './types';\n\nfunction loadLabelSuccess(labels: any) {\n    return {\n        type: types.LOAD_LABEL_SUCCESS,\n        payload: labels,\n    };\n}\n\nexport const loadLabels = (pageId: string) => async (dispatch: any, getState: any) => {\n    dispatch({ type: types.LOADING });\n\n    const { store } = getState();\n\n    const storeId = store.store._id;\n\n    const response = await setingApi.getListLabels({\n        storeId,\n        pageId,\n        limit: 20,\n    });\n\n    dispatch(loadLabelSuccess(response));\n};\n\nexport function removeLabel(labelId: string) {\n    return {\n        type: types.REMOVE_LABEL,\n        payload: labelId,\n    };\n}\n\nexport function updateOrderLabel(labelId: string, order: number) {\n    return {\n        type: types.UPDATE_ORDER_LABEL,\n        payload: { labelId, order },\n    };\n}\n"]},"metadata":{},"sourceType":"module"}