{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/label.tsx\",\n    _s = $RefreshSig$();\n\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Col, Row } from 'antd';\nimport React, { memo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { labelConversationApi } from '../../../api/conversation-api';\nimport { CloseIcon } from '../../../assets/icon';\nimport { updateLabelConversations } from '../../../reducers/fanpageState/fanpageAction';\nimport { useConversationDetail } from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Label = ({\n  label,\n  close = false,\n  block = false\n}) => {\n  _s();\n\n  const conversation = useSelector(({\n    fanpage\n  }) => fanpage.conversation);\n  const store = useSelector(({\n    store\n  }) => store.store);\n  const token = useSelector(({\n    auth\n  }) => auth.token);\n  const dispatch = useDispatch();\n  const {\n    labelIds,\n    updateLabels\n  } = useConversationDetail();\n  const [loading, setLoading] = useState(false);\n  const isActive = labelIds && labelIds.filter(item => item._id === label._id).length > 0;\n\n  const handleClickLabel = () => {\n    if (!loading) {\n      setLoading(true);\n      labelConversationApi({\n        storeId: store._id,\n        fbPageId: conversation.fbPageId,\n        token: token.accessToken,\n        conversationId: conversation._id,\n        action: isActive ? 'unset' : 'set',\n        labelId: label._id\n      }).then(res => {\n        updateLabels(label);\n        dispatch(updateLabelConversations({\n          conversation,\n          label\n        }));\n        setLoading(false);\n      }).catch(err => {\n        setLoading(false);\n      });\n    }\n  };\n\n  const style = {\n    background: label.backgroundColor,\n    color: label.color,\n    opacity: isActive || loading ? 1 : 0.5,\n    display: block ? 'block' : 'inline-block'\n  };\n  const className = close ? 'label close' : 'label';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    style: style,\n    onClick: handleClickLabel,\n    title: label.name,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      align: \"middle\",\n      justify: \"space-between\",\n      gutter: 15,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: label.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), close && /*#__PURE__*/_jsxDEV(Col, {\n        children: loading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 43\n        }, this) : /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Label, \"14IshH0xJAw3EWk1jqb9zmFGMk4=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useConversationDetail];\n});\n\n_c = Label;\nexport default _c2 = /*#__PURE__*/memo(Label);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Label\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/label.tsx"],"names":["LoadingOutlined","Col","Row","React","memo","useState","useDispatch","useSelector","labelConversationApi","CloseIcon","updateLabelConversations","useConversationDetail","Label","label","close","block","conversation","fanpage","store","token","auth","dispatch","labelIds","updateLabels","loading","setLoading","isActive","filter","item","_id","length","handleClickLabel","storeId","fbPageId","accessToken","conversationId","action","labelId","then","res","catch","err","style","background","backgroundColor","color","opacity","display","className","name"],"mappings":"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","sourcesContent":["import { LoadingOutlined } from '@ant-design/icons';\nimport { Col, Row } from 'antd';\nimport React, { FC, memo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { labelConversationApi } from '../../../api/conversation-api';\nimport { CloseIcon } from '../../../assets/icon';\nimport { ILabel } from '../../../collections/label';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport { updateLabelConversations } from '../../../reducers/fanpageState/fanpageAction';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { useConversationDetail } from './context';\nimport { LabelType } from './labels';\n\ninterface Props {\n    label: ILabel;\n    close?: boolean;\n    block?: boolean;\n}\n\nconst Label: FC<Props> = ({ label, close = false, block = false }): JSX.Element => {\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n\n    const dispatch = useDispatch();\n\n    const { labelIds, updateLabels } = useConversationDetail();\n    const [loading, setLoading] = useState(false);\n\n    const isActive = labelIds && labelIds.filter((item) => item._id === label._id).length > 0;\n\n    const handleClickLabel = () => {\n        if (!loading) {\n            setLoading(true);\n            labelConversationApi({\n                storeId: store._id,\n                fbPageId: conversation.fbPageId,\n                token: token.accessToken,\n                conversationId: conversation._id,\n                action: isActive ? 'unset' : 'set',\n                labelId: label._id,\n            })\n                .then((res: any) => {\n                    updateLabels(label);\n                    dispatch(\n                        updateLabelConversations({\n                            conversation,\n                            label,\n                        })\n                    );\n                    setLoading(false);\n                })\n                .catch((err) => {\n                    setLoading(false);\n                });\n        }\n    };\n\n    const style = {\n        background: label.backgroundColor,\n        color: label.color,\n        opacity: isActive || loading ? 1 : 0.5,\n        display: block ? 'block' : 'inline-block',\n    };\n\n    const className = close ? 'label close' : 'label';\n\n    return (\n        <div className={className} style={style} onClick={handleClickLabel} title={label.name}>\n            <Row align='middle' justify='space-between' gutter={15}>\n                <Col>{label.name}</Col>\n\n                {close && <Col>{loading ? <LoadingOutlined /> : <CloseIcon />}</Col>}\n            </Row>\n        </div>\n    );\n};\n\nexport default memo(Label);\n"]},"metadata":{},"sourceType":"module"}