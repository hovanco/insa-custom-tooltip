{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-product-list.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo } from 'react';\nimport { useOrder } from './context-order';\nimport OrderProductRow from './order-product-row';\nimport { Space, Row, Col } from 'antd';\nimport formatMoney from '../../../utils/format-money';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderProductList = () => {\n  _s();\n\n  const {\n    order,\n    setOrder\n  } = useOrder();\n\n  const removeOrderProduct = productId => {\n    const newProducts = order.products.filter(p => p.productId !== productId);\n    setOrder({ ...order,\n      products: newProducts\n    });\n  };\n\n  const changeCount = ({\n    productId,\n    count\n  }) => {\n    const newProducts = order.products.map(p => {\n      if (p.productId === productId) return { ...p,\n        count\n      };\n      return p;\n    });\n    setOrder({ ...order,\n      products: newProducts\n    });\n  };\n\n  if (order.products.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 45\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Space, {\n    direction: \"vertical\",\n    size: 5,\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-products\",\n      children: order.products.map(product => {\n        return /*#__PURE__*/_jsxDEV(OrderProductRow, {\n          product: product,\n          removeOrderProduct: removeOrderProduct,\n          changeCount: changeCount\n        }, product.productId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total-order-product\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        justify: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [\"S\\u1ED1 l\\u01B0\\u1EE3ng:\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"number\",\n            children: order.products.reduce((number, product) => number + product.count, 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"T\\u1ED5ng ti\\u1EC1n:\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"number\",\n            children: [formatMoney(order.products.reduce((number, product) => number + product.count * product.price, 0)), \"\\u0111\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderProductList, \"A18+GEg8U2eBDRGY95NyxGgKPXA=\", false, function () {\n  return [useOrder];\n});\n\n_c = OrderProductList;\nexport default _c2 = /*#__PURE__*/memo(OrderProductList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderProductList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-product-list.tsx"],"names":["React","memo","useOrder","OrderProductRow","Space","Row","Col","formatMoney","OrderProductList","order","setOrder","removeOrderProduct","productId","newProducts","products","filter","p","changeCount","count","map","length","width","product","reduce","number","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,QAAgC,MAAhC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBR,QAAQ,EAApC;;AAEA,QAAMS,kBAAkB,GAAIC,SAAD,IAAuB;AAC9C,UAAMC,WAAW,GAAGJ,KAAK,CAACK,QAAN,CAAeC,MAAf,CAAuBC,CAAD,IAAYA,CAAC,CAACJ,SAAF,KAAgBA,SAAlD,CAApB;AACAF,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYK,MAAAA,QAAQ,EAAED;AAAtB,KAAD,CAAR;AACH,GAHD;;AAKA,QAAMI,WAAW,GAAG,CAAC;AAAEL,IAAAA,SAAF;AAAaM,IAAAA;AAAb,GAAD,KAAgE;AAChF,UAAML,WAAW,GAAGJ,KAAK,CAACK,QAAN,CAAeK,GAAf,CAAoBH,CAAD,IAAY;AAC/C,UAAIA,CAAC,CAACJ,SAAF,KAAgBA,SAApB,EAA+B,OAAO,EAAE,GAAGI,CAAL;AAAQE,QAAAA;AAAR,OAAP;AAC/B,aAAOF,CAAP;AACH,KAHmB,CAApB;AAKAN,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYK,MAAAA,QAAQ,EAAED;AAAtB,KAAD,CAAR;AACH,GAPD;;AASA,MAAIJ,KAAK,CAACK,QAAN,CAAeM,MAAf,KAA0B,CAA9B,EAAiC,oBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AAEjC,sBACI,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,IAAI,EAAE,CAAlC;AAAqC,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA5C;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACKZ,KAAK,CAACK,QAAN,CAAeK,GAAf,CAAoBG,OAAD,IAAkB;AAClC,4BACI,QAAC,eAAD;AAEI,UAAA,OAAO,EAAEA,OAFb;AAGI,UAAA,kBAAkB,EAAEX,kBAHxB;AAII,UAAA,WAAW,EAAEM;AAJjB,WACSK,OAAO,CAACV,SADjB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OATA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,QAAX;AAAoB,QAAA,OAAO,EAAC,eAA5B;AAAA,gCACI,QAAC,GAAD;AAAA,iDACc,GADd,eAEI;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,sBACKH,KAAK,CAACK,QAAN,CAAeS,MAAf,CACG,CAACC,MAAD,EAAiBF,OAAjB,KAAkCE,MAAM,GAAGF,OAAO,CAACJ,KADtD,EAEG,CAFH;AADL;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,GAAD;AAAA,6CACe,GADf,eAEI;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,uBACKX,WAAW,CACRE,KAAK,CAACK,QAAN,CAAeS,MAAf,CACI,CAACC,MAAD,EAAiBF,OAAjB,KACIE,MAAM,GAAGF,OAAO,CAACJ,KAAR,GAAgBI,OAAO,CAACG,KAFzC,EAGI,CAHJ,CADQ,CADhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH,CA9DD;;GAAMjB,gB;UAC0BN,Q;;;KAD1BM,gB;AAgEN,kCAAeP,IAAI,CAACO,gBAAD,CAAnB","sourcesContent":["import React, { memo } from 'react';\nimport { useOrder } from './context-order';\nimport OrderProductRow from './order-product-row';\nimport { Space, Row, Col } from 'antd';\nimport formatMoney from '../../../utils/format-money';\n\nconst OrderProductList = () => {\n    const { order, setOrder } = useOrder();\n\n    const removeOrderProduct = (productId: string) => {\n        const newProducts = order.products.filter((p: any) => p.productId !== productId);\n        setOrder({ ...order, products: newProducts });\n    };\n\n    const changeCount = ({ productId, count }: { productId: string; count: number }) => {\n        const newProducts = order.products.map((p: any) => {\n            if (p.productId === productId) return { ...p, count };\n            return p;\n        });\n\n        setOrder({ ...order, products: newProducts });\n    };\n\n    if (order.products.length === 0) return <div />;\n\n    return (\n        <Space direction='vertical' size={5} style={{ width: '100%' }}>\n            <div className='order-products'>\n                {order.products.map((product: any) => {\n                    return (\n                        <OrderProductRow\n                            key={product.productId}\n                            product={product}\n                            removeOrderProduct={removeOrderProduct}\n                            changeCount={changeCount}\n                        />\n                    );\n                })}\n            </div>\n\n            <div className='total-order-product'>\n                <Row align='middle' justify='space-between'>\n                    <Col>\n                        Số lượng:{' '}\n                        <span className='number'>\n                            {order.products.reduce(\n                                (number: number, product: any) => number + product.count,\n                                0\n                            )}\n                        </span>\n                    </Col>\n                    <Col>\n                        Tổng tiền:{' '}\n                        <span className='number'>\n                            {formatMoney(\n                                order.products.reduce(\n                                    (number: number, product: any) =>\n                                        number + product.count * product.price,\n                                    0\n                                )\n                            )}\n                            đ\n                        </span>\n                    </Col>\n                </Row>\n            </div>\n        </Space>\n    );\n};\n\nexport default memo(OrderProductList);\n"]},"metadata":{},"sourceType":"module"}