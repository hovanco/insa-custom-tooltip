{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/shipping.tsx\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, Col, Row } from 'antd';\nimport FormItem from 'antd/lib/form/FormItem';\nimport { compact, flatten, pick } from 'lodash';\nimport React, { memo, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport shippingApi from '../../../api/shipping-api';\nimport { Loading } from '../../../components';\nimport { API_URI } from '../../../configs/vars';\nimport formatMoney from '../../../utils/format-money';\nimport NoteForDelivery from '../../order-detail/note-for-delivery';\nimport { useOrder } from './context-order';\nimport './shipping.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Shipping = () => {\n  _s();\n\n  const {\n    order,\n    setOrder\n  } = useOrder();\n  const [loading, setLoading] = useState(false);\n  const store = useSelector(state => state.store.store);\n  const token = useSelector(state => state.auth.token);\n  const [ships, setShips] = useState(null);\n\n  const changeNoteForDelivery = noteForDelivery => {\n    const newOrder = { ...order,\n      deliveryOptions: { ...order.deliveryOptions,\n        noteForDelivery\n      }\n    };\n    setOrder(newOrder);\n  };\n\n  useEffect(() => {\n    async function loadShipping() {\n      setLoading(true);\n\n      try {\n        const response = await shippingApi.servicesTransport({\n          storeId: store._id,\n          token: token.accessToken,\n          data: {\n            toProvinceId: order.customer.province,\n            toDistrictId: order.customer.district,\n            toWardId: order.customer.ward,\n            warehouseId: order.warehouseId,\n            weight: order.products.reduce((value, o) => o.weight * o.count + value, 0),\n            length: 20,\n            width: 20,\n            height: 10\n          }\n        });\n        setShips(response);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n      }\n    }\n\n    const valid = order.customer.province && order.customer.district && order.customer.ward && order.warehouseId && order.products.length > 0;\n\n    if (valid) {\n      loadShipping();\n    }\n  }, [order.customer.province, order.customer.district, order.customer.ward, order.products, order.warehouseId]);\n\n  function handleUpdateShip(service) {\n    setOrder({ ...order,\n      shiper: service,\n      phi_van_chuyen: service ? service.price : 0,\n      order_type: 'use_carrier'\n    });\n  }\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ships\",\n    children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 13\n  }, this);\n  if (!ships) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 24\n  }, this);\n  const formatShips = ships.map(ship => {\n    const {\n      info,\n      shipmentFees\n    } = ship;\n    const ship_items = shipmentFees.map(s => ({\n      avatar: info.avatar,\n      serviceId: info.id,\n      transportType: s.transportType,\n      shipmentFee: s.total,\n      name: info.name\n    }));\n    return compact(ship_items);\n  });\n  const mergeShipArr = flatten(formatShips).map((s, i) => ({ ...s,\n    key: i\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ships\",\n      children: mergeShipArr.map(ship => {\n        const selectShip = () => {\n          const newOrder = { ...order,\n            deliveryOptions: { ...order.deliveryOptions,\n              ...pick(ship, ['serviceId', 'transportType', 'shipmentFee'])\n            }\n          };\n          setOrder(newOrder);\n        };\n\n        const checked = order.deliveryOptions.serviceId == ship.serviceId && order.deliveryOptions.transportType == ship.transportType;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ship\",\n          onClick: selectShip,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 5,\n            justify: \"space-between\",\n            align: \"middle\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 3,\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 9,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `${API_URI}/store${ship.avatar}`,\n                style: {\n                  width: 80\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 5,\n              children: ship.transportType == 1 ? 'Nhanh' : ship.transportType == 2 ? 'Tiêu chuẩn' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 7,\n              style: {\n                textAlign: 'right'\n              },\n              children: [formatMoney(ship.shipmentFee), \"\\u0111\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this)\n        }, ship.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n      label: \"Ghi ch\\xFA\",\n      children: /*#__PURE__*/_jsxDEV(NoteForDelivery, {\n        changeNoteForDelivery: changeNoteForDelivery,\n        noteForDelivery: order.deliveryOptions.noteForDelivery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Shipping, \"yMlxrNvLvSULErSZpvdVmfqpnxk=\", false, function () {\n  return [useOrder, useSelector, useSelector];\n});\n\n_c = Shipping;\nexport default _c2 = /*#__PURE__*/memo(Shipping);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shipping\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/shipping.tsx"],"names":["Checkbox","Col","Row","FormItem","compact","flatten","pick","React","memo","useEffect","useState","useSelector","shippingApi","Loading","API_URI","formatMoney","NoteForDelivery","useOrder","Shipping","order","setOrder","loading","setLoading","store","state","token","auth","ships","setShips","changeNoteForDelivery","noteForDelivery","newOrder","deliveryOptions","loadShipping","response","servicesTransport","storeId","_id","accessToken","data","toProvinceId","customer","province","toDistrictId","district","toWardId","ward","warehouseId","weight","products","reduce","value","o","count","length","width","height","error","valid","handleUpdateShip","service","shiper","phi_van_chuyen","price","order_type","formatShips","map","ship","info","shipmentFees","ship_items","s","avatar","serviceId","id","transportType","shipmentFee","total","name","mergeShipArr","i","key","selectShip","checked","textAlign"],"mappings":"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","sourcesContent":["import { Checkbox, Col, Row } from 'antd';\nimport FormItem from 'antd/lib/form/FormItem';\nimport { compact, flatten, pick } from 'lodash';\nimport React, { FC, memo, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport shippingApi from '../../../api/shipping-api';\nimport { Loading } from '../../../components';\nimport { API_URI } from '../../../configs/vars';\nimport formatMoney from '../../../utils/format-money';\nimport NoteForDelivery from '../../order-detail/note-for-delivery';\nimport { useOrder } from './context-order';\nimport './shipping.less';\n\nexport interface IService {\n    id: string;\n    name: string;\n    ServiceID: string;\n    shiper: {\n        id: string;\n    };\n    price: number;\n}\n\nconst Shipping: FC = (): JSX.Element => {\n    const { order, setOrder } = useOrder();\n    const [loading, setLoading] = useState(false);\n\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n    const [ships, setShips] = useState<any>(null);\n\n    const changeNoteForDelivery = (noteForDelivery: string) => {\n        const newOrder = {\n            ...order,\n            deliveryOptions: {\n                ...order.deliveryOptions,\n                noteForDelivery,\n            },\n        };\n        setOrder(newOrder);\n    };\n\n    useEffect(() => {\n        async function loadShipping() {\n            setLoading(true);\n            try {\n                const response = await shippingApi.servicesTransport({\n                    storeId: store._id,\n                    token: token.accessToken,\n                    data: {\n                        toProvinceId: order.customer.province,\n                        toDistrictId: order.customer.district,\n                        toWardId: order.customer.ward,\n                        warehouseId: order.warehouseId,\n                        weight: order.products.reduce(\n                            (value: number, o: any) => o.weight * o.count + value,\n                            0\n                        ),\n                        length: 20,\n                        width: 20,\n                        height: 10,\n                    },\n                });\n                setShips(response);\n                setLoading(false);\n            } catch (error) {\n                setLoading(false);\n            }\n        }\n\n        const valid =\n            order.customer.province &&\n            order.customer.district &&\n            order.customer.ward &&\n            order.warehouseId &&\n            order.products.length > 0;\n\n        if (valid) {\n            loadShipping();\n        }\n    }, [\n        order.customer.province,\n        order.customer.district,\n        order.customer.ward,\n        order.products,\n        order.warehouseId,\n    ]);\n\n    function handleUpdateShip(service: any) {\n        setOrder({\n            ...order,\n            shiper: service,\n            phi_van_chuyen: service ? service.price : 0,\n            order_type: 'use_carrier',\n        });\n    }\n\n    if (loading)\n        return (\n            <div className='ships'>\n                <Loading />\n            </div>\n        );\n\n    if (!ships) return <div />;\n\n    const formatShips = ships.map((ship: any) => {\n        const { info, shipmentFees } = ship;\n\n        const ship_items = shipmentFees.map((s: any) => ({\n            avatar: info.avatar,\n            serviceId: info.id,\n            transportType: s.transportType,\n            shipmentFee: s.total,\n            name: info.name,\n        }));\n\n        return compact(ship_items);\n    });\n\n    const mergeShipArr = flatten(formatShips).map((s: any, i: number) => ({\n        ...s,\n        key: i,\n    }));\n\n    return (\n        <>\n            <div className='ships'>\n                {mergeShipArr.map((ship: any) => {\n                    const selectShip = () => {\n                        const newOrder = {\n                            ...order,\n                            deliveryOptions: {\n                                ...order.deliveryOptions,\n                                ...pick(ship, ['serviceId', 'transportType', 'shipmentFee']),\n                            },\n                        };\n\n                        setOrder(newOrder);\n                    };\n\n                    const checked =\n                        order.deliveryOptions.serviceId == ship.serviceId &&\n                        order.deliveryOptions.transportType == ship.transportType;\n\n                    return (\n                        <div key={ship.key} className='ship' onClick={selectShip}>\n                            <Row gutter={5} justify='space-between' align='middle'>\n                                <Col span={3}>\n                                    <Checkbox checked={checked}></Checkbox>\n                                </Col>\n                                <Col span={9}>\n                                    <img\n                                        src={`${API_URI}/store${ship.avatar}`}\n                                        style={{ width: 80 }}\n                                    />\n                                </Col>\n                                <Col span={5}>\n                                    {ship.transportType == 1\n                                        ? 'Nhanh'\n                                        : ship.transportType == 2\n                                        ? 'Tiêu chuẩn'\n                                        : ''}\n                                </Col>\n                                <Col span={7} style={{ textAlign: 'right' }}>\n                                    {formatMoney(ship.shipmentFee)}đ\n                                </Col>\n                            </Row>\n                        </div>\n                    );\n                })}\n            </div>\n\n            <FormItem label='Ghi chú'>\n                <NoteForDelivery\n                    changeNoteForDelivery={changeNoteForDelivery}\n                    noteForDelivery={order.deliveryOptions.noteForDelivery}\n                />\n            </FormItem>\n        </>\n    );\n};\n\nexport default memo(Shipping);\n"]},"metadata":{},"sourceType":"module"}