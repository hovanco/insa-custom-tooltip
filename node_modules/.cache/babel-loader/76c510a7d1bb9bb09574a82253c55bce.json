{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/table-order-list.tsx\";\nimport { CloseCircleFilled } from '@ant-design/icons';\nimport { InputNumber, Table } from 'antd';\nimport React from 'react';\nimport formatMoney from '../../utils/format-money';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableOrderList = ({\n  order,\n  products,\n  removeProduct,\n  updateProduct,\n  disabled = false\n}) => {\n  const dataSource = products.map((product, key) => {\n    return { ...product,\n      key: product.productId._id,\n      stt: key + 1\n    };\n  });\n  const columns = [{\n    title: 'STT',\n    width: 30,\n    dataIndex: 'stt',\n    align: 'center',\n    key: 'stt'\n  }, {\n    title: 'Tên',\n    dataIndex: '',\n    render: product => {\n      return product.productId.name;\n    },\n    key: 'name'\n  }, {\n    title: 'KL',\n    dataIndex: '',\n    key: 'weight',\n    render: product => {\n      return product.productId.weight;\n    }\n  }, {\n    title: 'SL',\n    dataIndex: '',\n    key: 'count',\n    render: product => {\n      const onChangeCount = value => {\n        const new_products = products.map(p => {\n          if (p.productId._id === product.productId._id) return { ...p,\n            count: value\n          };\n          return p;\n        });\n        updateProduct(new_products);\n      };\n\n      return /*#__PURE__*/_jsxDEV(InputNumber, {\n        value: product.count,\n        min: 1,\n        onChange: onChangeCount,\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    title: 'Giá',\n    dataIndex: 'price',\n    key: 'price',\n    render: price => {\n      if (!price) return '--';\n      return formatMoney(price);\n    }\n  }, {\n    title: '',\n    dataIndex: '',\n    width: 50,\n    align: 'center',\n    key: '',\n    render: ({\n      productId\n    }) => {\n      const removeOrder = () => {\n        if (disabled) return;\n        removeProduct(productId._id);\n      };\n\n      return /*#__PURE__*/_jsxDEV(CloseCircleFilled, {\n        style: {\n          color: 'red'\n        },\n        onClick: removeOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 24\n      }, this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    size: \"small\",\n    dataSource: dataSource,\n    columns: columns,\n    bordered: true,\n    pagination: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TableOrderList;\nexport default TableOrderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableOrderList\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/table-order-list.tsx"],"names":["CloseCircleFilled","InputNumber","Table","React","formatMoney","TableOrderList","order","products","removeProduct","updateProduct","disabled","dataSource","map","product","key","productId","_id","stt","columns","title","width","dataIndex","align","render","name","weight","onChangeCount","value","new_products","p","count","price","removeOrder","color"],"mappings":"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","sourcesContent":["import { CloseCircleFilled } from '@ant-design/icons';\nimport { InputNumber, Table } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport React, { FC } from 'react';\nimport formatMoney from '../../utils/format-money';\n\ninterface Props {\n    order?: any;\n    products: any;\n    removeProduct: any;\n    updateProduct: any;\n    disabled?: boolean;\n}\n\nconst TableOrderList: FC<Props> = ({\n    order,\n    products,\n    removeProduct,\n    updateProduct,\n    disabled = false,\n}): JSX.Element => {\n    const dataSource: any[] = products.map((product: any, key: number) => {\n        return {\n            ...product,\n            key: product.productId._id,\n            stt: key + 1,\n        };\n    });\n\n    const columns: ColumnsType<any> = [\n        {\n            title: 'STT',\n            width: 30,\n            dataIndex: 'stt',\n            align: 'center',\n            key: 'stt',\n        },\n        {\n            title: 'Tên',\n            dataIndex: '',\n            render: (product: any) => {\n                return product.productId.name;\n            },\n            key: 'name',\n        },\n        {\n            title: 'KL',\n            dataIndex: '',\n            key: 'weight',\n            render: (product: any) => {\n                return product.productId.weight;\n            },\n        },\n\n        {\n            title: 'SL',\n            dataIndex: '',\n            key: 'count',\n            render: (product: any) => {\n                const onChangeCount = (value: any) => {\n                    const new_products = products.map((p: any) => {\n                        if (p.productId._id === product.productId._id)\n                            return { ...p, count: value };\n                        return p;\n                    });\n\n                    updateProduct(new_products);\n                };\n\n                return (\n                    <InputNumber\n                        value={product.count}\n                        min={1}\n                        onChange={onChangeCount}\n                        disabled={disabled}\n                    />\n                );\n            },\n        },\n        {\n            title: 'Giá',\n            dataIndex: 'price',\n            key: 'price',\n            render: (price: any) => {\n                if (!price) return '--';\n                return formatMoney(price);\n            },\n        },\n        {\n            title: '',\n            dataIndex: '',\n            width: 50,\n            align: 'center',\n            key: '',\n            render: ({ productId }: { productId: any }) => {\n                const removeOrder = () => {\n                    if (disabled) return;\n                    removeProduct(productId._id as string);\n                };\n                return <CloseCircleFilled style={{ color: 'red' }} onClick={removeOrder} />;\n            },\n        },\n    ];\n\n    return (\n        <Table size='small' dataSource={dataSource} columns={columns} bordered pagination={false} />\n    );\n};\n\nexport default TableOrderList;\n"]},"metadata":{},"sourceType":"module"}