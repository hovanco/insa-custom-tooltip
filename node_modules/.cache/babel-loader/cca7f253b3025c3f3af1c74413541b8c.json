{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/warehouses/form-add-warehouse.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Form, Input, Row, Select } from 'antd';\nimport { get, map } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport locationApi from '../../api/location-api';\nimport { createWarehouse, updateWarehouse } from '../../reducers/warehouseState/warehouseAction';\nimport { disabledAutosuggestion } from '../../utils/disabled-autosuggestion';\nimport { validatePhone } from '../../utils/validate-phone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  width: '100%'\n};\nconst size = 'middle';\n\nconst FormAddWarehouse = props => {\n  _s();\n\n  const {\n    toggle,\n    reloadTable,\n    visible,\n    warehouse\n  } = props;\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [dataForm, setDataForm] = useState({});\n\n  const resetForm = () => {\n    setDataForm({});\n    form.resetFields();\n  };\n\n  const onFinish = async values => {\n    const data = { ...values\n    };\n    let result;\n\n    if (get(warehouse, '_id')) {\n      result = await dispatch(updateWarehouse({ ...data,\n        _id: warehouse._id\n      }));\n    } else {\n      result = await dispatch(createWarehouse(data));\n    }\n\n    if (!!result) {\n      resetForm();\n      toggle();\n      reloadTable();\n    }\n  };\n\n  const onCancel = () => {\n    resetForm();\n    toggle();\n  };\n\n  const [provinces, setProvinces] = useState([]);\n  const [loadingProvince, setLoadingProvince] = useState(true);\n  const [districts, setDistricts] = useState([]);\n  const [loadingDistrict, setLoadingDistrict] = useState(false);\n  const [wards, setWards] = useState([]);\n  const [loadingWard, setLoadingWard] = useState(false);\n  useEffect(() => {\n    setDataForm({ ...dataForm,\n      ...warehouse\n    });\n    form.setFieldsValue(warehouse); // if (warehouse) {\n    //     form.setFieldsValue(warehouse);\n    // } else {\n    //     form.setFieldsValue(dataForm);\n    // }\n  }, [warehouse]);\n\n  const onChange = e => {\n    setDataForm({ ...dataForm,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onChangeProvince = value => {\n    setDataForm({ ...dataForm,\n      province: value,\n      district: undefined,\n      ward: undefined\n    });\n    form.setFieldsValue({\n      district: undefined,\n      ward: undefined\n    });\n  };\n\n  const onChangeDistrict = value => {\n    setDataForm({ ...dataForm,\n      district: value,\n      ward: undefined\n    });\n    form.setFieldsValue({\n      ward: undefined\n    });\n  };\n\n  const onChangeWard = value => {\n    setDataForm({ ...dataForm,\n      ward: value\n    });\n  };\n\n  const dataInput = form.getFieldsValue();\n  const isValidForm = dataInput.name && dataInput.phoneNo && dataInput.province && dataInput.district && dataInput.ward && dataInput.address;\n  useEffect(() => {\n    const fixAutocomplete = () => {\n      document.querySelectorAll('.ant-select-selector input').forEach(e => {\n        e.setAttribute('autocomplete', 'stopDamnAutocomplete');\n      });\n    };\n\n    fixAutocomplete();\n  }, []);\n  useEffect(() => {\n    async function getListProvinces() {\n      try {\n        const response = await locationApi.getProvinces();\n        setProvinces(response);\n        setLoadingProvince(false);\n      } catch (error) {\n        setProvinces([]);\n        setLoadingProvince(false);\n      }\n    }\n\n    getListProvinces();\n  }, []);\n  useEffect(() => {\n    async function getListDistricts() {\n      if (!dataForm.province) return null;\n      setLoadingDistrict(true);\n\n      try {\n        const response = await locationApi.getDistricts(dataForm.province);\n        setDistricts(response);\n        setLoadingDistrict(false);\n      } catch (error) {\n        setDistricts([]);\n        setLoadingDistrict(false);\n      }\n    }\n\n    getListDistricts();\n  }, [dataForm.province]);\n  useEffect(() => {\n    async function getListWard() {\n      if (!dataForm.district) return null;\n      setLoadingWard(true);\n\n      try {\n        const response = await locationApi.getWards({\n          provinceId: dataForm.province,\n          districtId: dataForm.district\n        });\n        setWards(response);\n        setLoadingWard(false);\n      } catch (error) {\n        setWards([]);\n        setLoadingWard(false);\n      }\n    }\n\n    getListWard();\n  }, [dataForm.district]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    layout: \"vertical\",\n    onFinish: onFinish,\n    form: form,\n    initialValues: dataForm,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"name\",\n      label: \"T\\xEAn chi nh\\xE1nh\",\n      rules: [{\n        required: true,\n        message: 'Điền tên chi nhánh'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        size: size,\n        placeholder: \"T\\xEAn chi nh\\xE1nh\",\n        onChange: onChange,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"phoneNo\",\n      label: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n      rules: [{\n        required: true,\n        message: 'Điền số điện thoại'\n      }, {\n        validator: validatePhone\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        style: style,\n        size: size,\n        placeholder: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i chi nh\\xE1nh\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 15,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"province\",\n          label: \"T\\u1EC9nh/th\\xE0nh ph\\u1ED1\",\n          rules: [{\n            required: true,\n            message: 'Chọn tỉnh/thành phố'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            size: size,\n            placeholder: \"Ch\\u1ECDn t\\u1EC9nh/th\\xE0nh ph\\u1ED1\",\n            onChange: onChangeProvince,\n            showSearch: true,\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            loading: loadingProvince,\n            onFocus: disabledAutosuggestion,\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: '-1',\n              disabled: true,\n              children: \"Ch\\u1ECDn t\\u1EC9nh/th\\xE0nh ph\\u1ED1\"\n            }, '-1', false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), map(provinces, province => /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: province.code,\n              children: province.name\n            }, province.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"district\",\n          label: \"Qu\\u1EADn/huy\\u1EC7n\",\n          rules: [{\n            required: true,\n            message: 'Chọn quận/huyện'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            size: size,\n            placeholder: \"Ch\\u1ECDn qu\\u1EADn/huy\\u1EC7n\",\n            onChange: onChangeDistrict,\n            showSearch: true,\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            disabled: !dataForm.province,\n            loading: loadingDistrict,\n            onFocus: disabledAutosuggestion,\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: '-2',\n              disabled: true,\n              children: \"Ch\\u1ECDn qu\\u1EADn/huy\\u1EC7n\"\n            }, '-2', false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this), map(districts, district => /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: district.code,\n              children: district.name\n            }, district.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"ward\",\n          label: \"Ph\\u01B0\\u1EDDng/x\\xE3\",\n          rules: [{\n            required: true,\n            message: 'Chọn phường/xã'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            size: size,\n            placeholder: \"Ch\\u1ECDn ph\\u01B0\\u1EDDng/x\\xE3\",\n            onChange: onChangeWard,\n            showSearch: true,\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            disabled: !dataForm.district,\n            loading: loadingWard,\n            onFocus: disabledAutosuggestion,\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: '-3',\n              disabled: true,\n              children: \"Ch\\u1ECDn ph\\u01B0\\u1EDDng/x\\xE3\"\n            }, '-3', false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this), map(wards, ward => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: ward.code,\n                children: ward.name\n              }, ward.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"address\",\n      rules: [{\n        required: true,\n        message: 'Điền địa chỉ chi nhánh'\n      }],\n      label: \"\\u0110\\u1ECBa ch\\u1EC9\",\n      children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n        autoComplete: \"off\",\n        placeholder: \"\\u0110i\\u1EC1n \\u0111\\u1ECBa ch\\u1EC9 chi nh\\xE1nh\",\n        rows: 4,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        textAlign: 'end'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginRight: 15\n        },\n        onClick: onCancel,\n        children: \"H\\u1EE7y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: loading,\n        disabled: !isValidForm,\n        children: warehouse && warehouse ? 'Cập nhật chi nhánh' : 'Tạo mới chi nhánh'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormAddWarehouse, \"kIzxfmzt4QYFxclWPKl2rEwVYvo=\", false, function () {\n  return [useDispatch, Form.useForm];\n});\n\n_c = FormAddWarehouse;\nexport default FormAddWarehouse;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormAddWarehouse\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/warehouses/form-add-warehouse.tsx"],"names":["Button","Col","Form","Input","Row","Select","get","map","React","useEffect","useState","useDispatch","locationApi","createWarehouse","updateWarehouse","disabledAutosuggestion","validatePhone","style","width","size","FormAddWarehouse","props","toggle","reloadTable","visible","warehouse","dispatch","form","useForm","loading","setLoading","dataForm","setDataForm","resetForm","resetFields","onFinish","values","data","result","_id","onCancel","provinces","setProvinces","loadingProvince","setLoadingProvince","districts","setDistricts","loadingDistrict","setLoadingDistrict","wards","setWards","loadingWard","setLoadingWard","setFieldsValue","onChange","e","target","name","value","onChangeProvince","province","district","undefined","ward","onChangeDistrict","onChangeWard","dataInput","getFieldsValue","isValidForm","phoneNo","address","fixAutocomplete","document","querySelectorAll","forEach","setAttribute","getListProvinces","response","getProvinces","error","getListDistricts","getDistricts","getListWard","getWards","provinceId","districtId","required","message","validator","input","option","children","toLowerCase","indexOf","code","textAlign","marginRight"],"mappings":"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","sourcesContent":["import { Button, Col, Form, Input, Row, Select } from 'antd';\nimport { get, map } from 'lodash';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport locationApi from '../../api/location-api';\nimport { createWarehouse, updateWarehouse } from '../../reducers/warehouseState/warehouseAction';\nimport { disabledAutosuggestion } from '../../utils/disabled-autosuggestion';\nimport { validatePhone } from '../../utils/validate-phone';\n\nconst style = {\n    width: '100%',\n};\n\nconst size = 'middle';\n\ninterface Props {\n    toggle: any;\n    reloadTable: any;\n    visible: boolean;\n    warehouse?: any;\n}\n\nconst FormAddWarehouse: FC<Props> = (props): JSX.Element => {\n    const { toggle, reloadTable, visible, warehouse } = props;\n\n    const dispatch = useDispatch();\n    const [form] = Form.useForm();\n\n    const [loading, setLoading] = useState<boolean>(false);\n    const [dataForm, setDataForm] = useState<any>({});\n\n    const resetForm = () => {\n        setDataForm({});\n        form.resetFields();\n    };\n\n    const onFinish = async (values: any) => {\n        const data = {\n            ...values,\n        };\n        let result;\n        if (get(warehouse, '_id')) {\n            result = await dispatch(updateWarehouse({ ...data, _id: warehouse._id }));\n        } else {\n            result = await dispatch(createWarehouse(data));\n        }\n        if (!!result) {\n            resetForm();\n            toggle();\n            reloadTable();\n        }\n    };\n\n    const onCancel = () => {\n        resetForm();\n        toggle();\n    };\n\n    const [provinces, setProvinces] = useState<any[]>([]);\n    const [loadingProvince, setLoadingProvince] = useState<boolean>(true);\n\n    const [districts, setDistricts] = useState<any[]>([]);\n    const [loadingDistrict, setLoadingDistrict] = useState<boolean>(false);\n\n    const [wards, setWards] = useState<any[]>([]);\n    const [loadingWard, setLoadingWard] = useState<boolean>(false);\n\n    useEffect(() => {\n        setDataForm({\n            ...dataForm,\n            ...warehouse,\n        });\n        form.setFieldsValue(warehouse);\n        // if (warehouse) {\n        //     form.setFieldsValue(warehouse);\n        // } else {\n        //     form.setFieldsValue(dataForm);\n        // }\n    }, [warehouse]);\n\n    const onChange = (e: any) => {\n        setDataForm({\n            ...dataForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const onChangeProvince = (value: string) => {\n        setDataForm({\n            ...dataForm,\n            province: value,\n            district: undefined,\n            ward: undefined,\n        });\n        form.setFieldsValue({\n            district: undefined,\n            ward: undefined,\n        });\n    };\n\n    const onChangeDistrict = (value: string) => {\n        setDataForm({\n            ...dataForm,\n            district: value,\n            ward: undefined,\n        });\n        form.setFieldsValue({\n            ward: undefined,\n        });\n    };\n\n    const onChangeWard = (value: string) => {\n        setDataForm({\n            ...dataForm,\n            ward: value,\n        });\n    };\n\n    const dataInput = form.getFieldsValue();\n    const isValidForm =\n        dataInput.name &&\n        dataInput.phoneNo &&\n        dataInput.province &&\n        dataInput.district &&\n        dataInput.ward &&\n        dataInput.address;\n\n    useEffect(() => {\n        const fixAutocomplete = () => {\n            document.querySelectorAll('.ant-select-selector input').forEach((e) => {\n                e.setAttribute('autocomplete', 'stopDamnAutocomplete');\n            });\n        };\n\n        fixAutocomplete();\n    }, []);\n\n    useEffect(() => {\n        async function getListProvinces() {\n            try {\n                const response = await locationApi.getProvinces();\n\n                setProvinces(response);\n                setLoadingProvince(false);\n            } catch (error) {\n                setProvinces([]);\n                setLoadingProvince(false);\n            }\n        }\n        getListProvinces();\n    }, []);\n\n    useEffect(() => {\n        async function getListDistricts() {\n            if (!dataForm.province) return null;\n            setLoadingDistrict(true);\n            try {\n                const response = await locationApi.getDistricts(dataForm.province);\n                setDistricts(response);\n                setLoadingDistrict(false);\n            } catch (error) {\n                setDistricts([]);\n                setLoadingDistrict(false);\n            }\n        }\n        getListDistricts();\n    }, [dataForm.province]);\n\n    useEffect(() => {\n        async function getListWard() {\n            if (!dataForm.district) return null;\n            setLoadingWard(true);\n            try {\n                const response = await locationApi.getWards({\n                    provinceId: dataForm.province,\n                    districtId: dataForm.district,\n                });\n                setWards(response);\n                setLoadingWard(false);\n            } catch (error) {\n                setWards([]);\n                setLoadingWard(false);\n            }\n        }\n        getListWard();\n    }, [dataForm.district]);\n\n    return (\n        <Form layout='vertical' onFinish={onFinish} form={form} initialValues={dataForm}>\n            <Form.Item\n                name='name'\n                label='Tên chi nhánh'\n                rules={[{ required: true, message: 'Điền tên chi nhánh' }]}\n            >\n                <Input size={size} placeholder='Tên chi nhánh' onChange={onChange} autoFocus />\n            </Form.Item>\n\n            <Form.Item\n                name='phoneNo'\n                label='Số điện thoại'\n                rules={[\n                    { required: true, message: 'Điền số điện thoại' },\n                    {\n                        validator: validatePhone,\n                    },\n                ]}\n            >\n                <Input\n                    style={style}\n                    size={size}\n                    placeholder='Số điện thoại chi nhánh'\n                    onChange={onChange}\n                />\n            </Form.Item>\n\n            <Row gutter={15}>\n                <Col md={8}>\n                    <Form.Item\n                        name='province'\n                        label='Tỉnh/thành phố'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Chọn tỉnh/thành phố',\n                            },\n                        ]}\n                    >\n                        <Select\n                            size={size}\n                            placeholder='Chọn tỉnh/thành phố'\n                            onChange={onChangeProvince}\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            loading={loadingProvince}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-1'} key={'-1'} disabled>\n                                Chọn tỉnh/thành phố\n                            </Select.Option>\n                            {map(provinces, (province: any) => (\n                                <Select.Option value={province.code} key={province.code}>\n                                    {province.name}\n                                </Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                </Col>\n\n                <Col md={8}>\n                    <Form.Item\n                        name='district'\n                        label='Quận/huyện'\n                        rules={[{ required: true, message: 'Chọn quận/huyện' }]}\n                    >\n                        <Select\n                            size={size}\n                            placeholder='Chọn quận/huyện'\n                            onChange={onChangeDistrict}\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            disabled={!dataForm.province}\n                            loading={loadingDistrict}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-2'} key={'-2'} disabled>\n                                Chọn quận/huyện\n                            </Select.Option>\n                            {map(districts, (district: any) => (\n                                <Select.Option value={district.code} key={district.code}>\n                                    {district.name}\n                                </Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                </Col>\n\n                <Col md={8}>\n                    <Form.Item\n                        name='ward'\n                        label='Phường/xã'\n                        rules={[{ required: true, message: 'Chọn phường/xã' }]}\n                    >\n                        <Select\n                            size={size}\n                            placeholder='Chọn phường/xã'\n                            onChange={onChangeWard}\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            disabled={!dataForm.district}\n                            loading={loadingWard}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-3'} key={'-3'} disabled>\n                                Chọn phường/xã\n                            </Select.Option>\n                            {map(wards, (ward: any) => {\n                                return (\n                                    <Select.Option value={ward.code} key={ward.code}>\n                                        {ward.name}\n                                    </Select.Option>\n                                );\n                            })}\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n\n            <Form.Item\n                name='address'\n                rules={[{ required: true, message: 'Điền địa chỉ chi nhánh' }]}\n                label='Địa chỉ'\n            >\n                <Input.TextArea\n                    autoComplete='off'\n                    placeholder='Điền địa chỉ chi nhánh'\n                    rows={4}\n                    onChange={onChange}\n                ></Input.TextArea>\n            </Form.Item>\n\n            <Form.Item style={{ textAlign: 'end' }}>\n                <Button style={{ marginRight: 15 }} onClick={onCancel}>\n                    Hủy\n                </Button>\n                <Button type='primary' htmlType='submit' loading={loading} disabled={!isValidForm}>\n                    {warehouse && warehouse ? 'Cập nhật chi nhánh' : 'Tạo mới chi nhánh'}\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default FormAddWarehouse;\n"]},"metadata":{},"sourceType":"module"}