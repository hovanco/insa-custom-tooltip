{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/modal-imgs.tsx\",\n    _s = $RefreshSig$();\n\nimport { Badge, Modal, Spin, Tooltip } from 'antd';\nimport _get from 'lodash/get';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { sendReply } from '../../../api/conversation-api';\nimport { PhotoIcon } from '../../../assets/icon';\nimport useModal from '../../../hooks/use-modal';\nimport { useConversationDetail } from './context';\nimport ImgsLibrary from './imgs-library';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalImgs = ({\n  disabled = false\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const {\n    visible,\n    toggle\n  } = useModal();\n  const {\n    images,\n    removeMessageError,\n    setMessagesSending\n  } = useConversationDetail();\n  const conversation = useSelector(state => state.fanpage.conversation);\n  const store = useSelector(state => state.store.store);\n  const token = useSelector(state => state.auth.token);\n  const renderNumber = images.length > 0 ? /*#__PURE__*/_jsxDEV(Badge, {\n    count: images.length\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 46\n  }, this) : null;\n\n  const handleImageSelect = (images, messages) => {\n    setLoading(true);\n    sendReply({\n      fbPageId: conversation.fbPageId,\n      token: token.accessToken,\n      storeId: store._id,\n      id: conversation.fbUserId,\n      type: conversation.type,\n      fbObjectId: conversation.fbObjectId,\n      images\n    }).then(res => {\n      messages = messages.map((message, messageIndex) => {\n        return { ...message,\n          id: _get(res, `[0].${messageIndex}.data.id`) || _get(res, `[0].${messageIndex}.data.message_id`)\n        };\n      });\n      setMessagesSending(messages);\n      setLoading(false);\n    }).catch(error => {\n      for (const message of messages) {\n        removeMessageError(message);\n      }\n\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: !disabled ? toggle : undefined,\n      className: `item${disabled ? ' item-disabled' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Ch\\u1ECDn h\\xECnh \\u1EA3nh\",\n        placement: \"top\",\n        children: /*#__PURE__*/_jsxDEV(PhotoIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: [\" \", renderNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(Spin, {\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      footer: null,\n      visible: visible,\n      onCancel: toggle,\n      onOk: toggle,\n      bodyStyle: {\n        padding: 0\n      },\n      width: 900,\n      closeIcon: null,\n      closable: false,\n      destroyOnClose: true,\n      children: /*#__PURE__*/_jsxDEV(ImgsLibrary, {\n        toggle: toggle,\n        handleImageSelect: handleImageSelect,\n        type: conversation && conversation.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ModalImgs, \"/lz8vbY02g7eSaecbbzoQXA2iIw=\", false, function () {\n  return [useModal, useConversationDetail, useSelector, useSelector, useSelector];\n});\n\n_c = ModalImgs;\nexport default ModalImgs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalImgs\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/modal-imgs.tsx"],"names":["Badge","Modal","Spin","Tooltip","_get","React","useState","useSelector","sendReply","PhotoIcon","useModal","useConversationDetail","ImgsLibrary","ModalImgs","disabled","loading","setLoading","visible","toggle","images","removeMessageError","setMessagesSending","conversation","state","fanpage","store","token","auth","renderNumber","length","handleImageSelect","messages","fbPageId","accessToken","storeId","_id","id","fbUserId","type","fbObjectId","then","res","map","message","messageIndex","catch","error","undefined","padding"],"mappings":"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","sourcesContent":["import { Badge, Modal, Spin, Tooltip } from 'antd';\nimport _get from 'lodash/get';\nimport React, { FC, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { sendReply } from '../../../api/conversation-api';\nimport { PhotoIcon } from '../../../assets/icon';\nimport { IImage } from '../../../collections/image';\nimport useModal from '../../../hooks/use-modal';\nimport { IConversation } from '../../../reducers/fanpageState/fanpageReducer';\nimport { useConversationDetail } from './context';\nimport ImgsLibrary from './imgs-library';\n\ninterface Props {\n    disabled?: boolean;\n}\n\nconst ModalImgs: FC<Props> = ({ disabled = false }): JSX.Element => {\n    const [loading, setLoading] = useState(false);\n    const { visible, toggle } = useModal();\n    const { images, removeMessageError, setMessagesSending } = useConversationDetail();\n\n    const conversation: IConversation = useSelector((state: any) => state.fanpage.conversation);\n\n    const store = useSelector((state: any) => state.store.store);\n\n    const token: any = useSelector((state: any) => state.auth.token);\n\n    const renderNumber = images.length > 0 ? <Badge count={images.length} /> : null;\n\n    const handleImageSelect = (images: IImage[], messages: any) => {\n        setLoading(true);\n        sendReply({\n            fbPageId: conversation.fbPageId,\n            token: token.accessToken,\n            storeId: store._id,\n            id: conversation.fbUserId,\n            type: conversation.type,\n            fbObjectId: conversation.fbObjectId,\n            images,\n        })\n            .then((res: any) => {\n                messages = messages.map((message: any, messageIndex: number) => {\n                    return {\n                        ...message,\n                        id:\n                            _get(res, `[0].${messageIndex}.data.id`) ||\n                            _get(res, `[0].${messageIndex}.data.message_id`),\n                    };\n                });\n\n                setMessagesSending(messages);\n                setLoading(false);\n            })\n            .catch((error) => {\n                for (const message of messages) {\n                    removeMessageError(message);\n                }\n                setLoading(false);\n            });\n    };\n\n    return (\n        <>\n            <div\n                onClick={!disabled ? toggle : undefined}\n                className={`item${disabled ? ' item-disabled' : ''}`}\n            >\n                <Tooltip title='Chọn hình ảnh' placement='top'>\n                    <PhotoIcon />\n                </Tooltip>\n                <span className='text'> {renderNumber}</span>\n                {loading && <Spin size='small' />}\n            </div>\n            <Modal\n                footer={null}\n                visible={visible}\n                onCancel={toggle}\n                onOk={toggle}\n                bodyStyle={{ padding: 0 }}\n                width={900}\n                closeIcon={null}\n                closable={false}\n                destroyOnClose\n            >\n                <ImgsLibrary\n                    toggle={toggle}\n                    handleImageSelect={handleImageSelect}\n                    type={conversation && conversation.type}\n                />\n            </Modal>\n        </>\n    );\n};\n\nexport default ModalImgs;\n"]},"metadata":{},"sourceType":"module"}