{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/color-picker.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { Popover, Input } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ColorPicker = ({\n  color,\n  pickColor,\n  label,\n  style\n}) => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [color_state, setColorState] = useState(color);\n\n  const handleVisibleChange = () => setVisible(!visible);\n\n  const selectColor = (color_pick, event) => {\n    setColorState(color_pick.hex);\n    pickColor(color_pick.hex); // setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Popover, {\n      content: /*#__PURE__*/_jsxDEV(ChromePicker, {\n        onChangeComplete: selectColor,\n        color: color_state || 'yellow'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this),\n      trigger: \"click\",\n      visible: visible,\n      onVisibleChange: handleVisibleChange,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker-trigger\",\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: label,\n          value: color_state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-picker-trigger__color-value\",\n          style: {\n            background: color_state\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ColorPicker, \"DQOojqtQ8+JReBUyYS5/isJV7yc=\");\n\n_c = ColorPicker;\nexport default ColorPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorPicker\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/color-picker.tsx"],"names":["React","useState","ChromePicker","Popover","Input","ColorPicker","color","pickColor","label","style","visible","setVisible","color_state","setColorState","handleVisibleChange","selectColor","color_pick","event","hex","background"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,MAA/B;;;;AASA,MAAMC,WAAsB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA,KAApB;AAA2BC,EAAAA;AAA3B,CAAD,KAAwC;AAAA;;AACnE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,WAAD,EAAcC,aAAd,IAA+BZ,QAAQ,CAACK,KAAD,CAA7C;;AAEA,QAAMQ,mBAAmB,GAAG,MAAMH,UAAU,CAAC,CAACD,OAAF,CAA5C;;AAEA,QAAMK,WAAW,GAAG,CAACC,UAAD,EAAkBC,KAAlB,KAAiC;AACjDJ,IAAAA,aAAa,CAACG,UAAU,CAACE,GAAZ,CAAb;AACAX,IAAAA,SAAS,CAACS,UAAU,CAACE,GAAZ,CAAT,CAFiD,CAGjD;AACH,GAJD;;AAMA,sBACI;AAAA,2BACI,QAAC,OAAD;AACI,MAAA,OAAO,eACH,QAAC,YAAD;AAAc,QAAA,gBAAgB,EAAEH,WAAhC;AAA6C,QAAA,KAAK,EAAEH,WAAW,IAAI;AAAnE;AAAA;AAAA;AAAA;AAAA,cAFR;AAII,MAAA,OAAO,EAAC,OAJZ;AAKI,MAAA,OAAO,EAAEF,OALb;AAMI,MAAA,eAAe,EAAEI,mBANrB;AAAA,6BAQI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAsC,QAAA,KAAK,EAAEL,KAA7C;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,WAAW,EAAED,KAApB;AAA2B,UAAA,KAAK,EAAEI;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,SAAS,EAAC,mCADd;AAEI,UAAA,KAAK,EAAE;AAAEO,YAAAA,UAAU,EAAEP;AAAd;AAFX;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAoBH,CAhCD;;GAAMP,W;;KAAAA,W;AAkCN,eAAeA,WAAf","sourcesContent":["import React, { FC, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { Popover, Input } from 'antd';\n\ninterface Props {\n    color?: string;\n    pickColor: any;\n    label: string;\n    style?: any;\n}\n\nconst ColorPicker: FC<Props> = ({ color, pickColor, label, style }) => {\n    const [visible, setVisible] = useState(false);\n    const [color_state, setColorState] = useState(color);\n\n    const handleVisibleChange = () => setVisible(!visible);\n\n    const selectColor = (color_pick: any, event: any) => {\n        setColorState(color_pick.hex);\n        pickColor(color_pick.hex);\n        // setVisible(false);\n    };\n\n    return (\n        <>\n            <Popover\n                content={\n                    <ChromePicker onChangeComplete={selectColor} color={color_state || 'yellow'} />\n                }\n                trigger='click'\n                visible={visible}\n                onVisibleChange={handleVisibleChange}\n            >\n                <div className='color-picker-trigger' style={style}>\n                    <Input placeholder={label} value={color_state} />\n                    <div\n                        className='color-picker-trigger__color-value'\n                        style={{ background: color_state }}\n                    ></div>\n                </div>\n            </Popover>\n        </>\n    );\n};\n\nexport default ColorPicker;\n"]},"metadata":{},"sourceType":"module"}