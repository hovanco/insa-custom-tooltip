{"ast":null,"code":"import moment from 'moment';\nconst format_date = 'DD/MM/YYYY';\nexport function getStartTime({\n  type,\n  date\n}) {\n  // day\n  if (type === 'day') {\n    return moment(date).startOf('day').toDate().getTime();\n  } // week\n\n\n  if (type === 'week') {\n    const weekStart = moment(date).startOf('week');\n    return moment(weekStart).add(0, 'days').startOf('day').valueOf();\n  } // custom\n\n\n  if (type === 'custom') {\n    return moment(date[0]).startOf('day').valueOf();\n  }\n\n  const month = moment(date).format('MM');\n  const year = moment(date).format('YYYY');\n  return moment(`1/${month}/${year}`, format_date).startOf('day').valueOf();\n}\nexport function getEndTime({\n  type,\n  date\n}) {\n  // day\n  if (type === 'day') {\n    return moment(date).endOf('day').toDate().getTime();\n  } // week\n\n\n  if (type === 'week') {\n    const weekStart = moment(date).startOf('week');\n    return moment(weekStart).add(6, 'days').endOf('day').valueOf();\n  } // custom\n\n\n  if (type === 'custom') {\n    return date[1] ? moment(date[1]).endOf('day').valueOf() : moment().endOf('day').valueOf();\n  }\n\n  const dateInMonth = moment(date).daysInMonth();\n  const month = moment(date).format('MM');\n  const year = moment(date).format('YYYY');\n  return moment(`${dateInMonth}/${month}/${year}`, format_date).endOf('day').valueOf();\n}","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/util.ts"],"names":["moment","format_date","getStartTime","type","date","startOf","toDate","getTime","weekStart","add","valueOf","month","format","year","getEndTime","endOf","dateInMonth","daysInMonth"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AASA,MAAMC,WAAW,GAAG,YAApB;AAEA,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAtB,EAAwD;AAC3D;AACA,MAAID,IAAI,KAAK,KAAb,EAAoB;AAChB,WAAOH,MAAM,CAACI,IAAD,CAAN,CAAaC,OAAb,CAAqB,KAArB,EAA4BC,MAA5B,GAAqCC,OAArC,EAAP;AACH,GAJ0D,CAM3D;;;AACA,MAAIJ,IAAI,KAAK,MAAb,EAAqB;AACjB,UAAMK,SAAS,GAAGR,MAAM,CAACI,IAAD,CAAN,CAAaC,OAAb,CAAqB,MAArB,CAAlB;AAEA,WAAOL,MAAM,CAACQ,SAAD,CAAN,CAAkBC,GAAlB,CAAsB,CAAtB,EAAyB,MAAzB,EAAiCJ,OAAjC,CAAyC,KAAzC,EAAgDK,OAAhD,EAAP;AACH,GAX0D,CAa3D;;;AACA,MAAIP,IAAI,KAAK,QAAb,EAAuB;AACnB,WAAOH,MAAM,CAACI,IAAI,CAAC,CAAD,CAAL,CAAN,CAAgBC,OAAhB,CAAwB,KAAxB,EAA+BK,OAA/B,EAAP;AACH;;AAED,QAAMC,KAAK,GAAGX,MAAM,CAACI,IAAD,CAAN,CAAaQ,MAAb,CAAoB,IAApB,CAAd;AACA,QAAMC,IAAI,GAAGb,MAAM,CAACI,IAAD,CAAN,CAAaQ,MAAb,CAAoB,MAApB,CAAb;AAEA,SAAOZ,MAAM,CAAE,KAAIW,KAAM,IAAGE,IAAK,EAApB,EAAuBZ,WAAvB,CAAN,CAA0CI,OAA1C,CAAkD,KAAlD,EAAyDK,OAAzD,EAAP;AACH;AAED,OAAO,SAASI,UAAT,CAAoB;AAAEX,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAApB,EAAsD;AACzD;AACA,MAAID,IAAI,KAAK,KAAb,EAAoB;AAChB,WAAOH,MAAM,CAACI,IAAD,CAAN,CAAaW,KAAb,CAAmB,KAAnB,EAA0BT,MAA1B,GAAmCC,OAAnC,EAAP;AACH,GAJwD,CAMzD;;;AACA,MAAIJ,IAAI,KAAK,MAAb,EAAqB;AACjB,UAAMK,SAAS,GAAGR,MAAM,CAACI,IAAD,CAAN,CAAaC,OAAb,CAAqB,MAArB,CAAlB;AAEA,WAAOL,MAAM,CAACQ,SAAD,CAAN,CAAkBC,GAAlB,CAAsB,CAAtB,EAAyB,MAAzB,EAAiCM,KAAjC,CAAuC,KAAvC,EAA8CL,OAA9C,EAAP;AACH,GAXwD,CAazD;;;AACA,MAAIP,IAAI,KAAK,QAAb,EAAuB;AACnB,WAAOC,IAAI,CAAC,CAAD,CAAJ,GAAUJ,MAAM,CAACI,IAAI,CAAC,CAAD,CAAL,CAAN,CAAgBW,KAAhB,CAAsB,KAAtB,EAA6BL,OAA7B,EAAV,GAAmDV,MAAM,GAAGe,KAAT,CAAe,KAAf,EAAsBL,OAAtB,EAA1D;AACH;;AACD,QAAMM,WAAmB,GAAGhB,MAAM,CAACI,IAAD,CAAN,CAAaa,WAAb,EAA5B;AACA,QAAMN,KAAK,GAAGX,MAAM,CAACI,IAAD,CAAN,CAAaQ,MAAb,CAAoB,IAApB,CAAd;AACA,QAAMC,IAAI,GAAGb,MAAM,CAACI,IAAD,CAAN,CAAaQ,MAAb,CAAoB,MAApB,CAAb;AAEA,SAAOZ,MAAM,CAAE,GAAEgB,WAAY,IAAGL,KAAM,IAAGE,IAAK,EAAjC,EAAoCZ,WAApC,CAAN,CAAuDc,KAAvD,CAA6D,KAA7D,EAAoEL,OAApE,EAAP;AACH","sourcesContent":["import moment from 'moment';\n\ntype ITypeTime = 'month' | 'day' | 'week' | 'custom';\n\ninterface IGetTime {\n    type: string;\n    date: any;\n}\n\nconst format_date = 'DD/MM/YYYY';\n\nexport function getStartTime({ type, date }: IGetTime): number {\n    // day\n    if (type === 'day') {\n        return moment(date).startOf('day').toDate().getTime();\n    }\n\n    // week\n    if (type === 'week') {\n        const weekStart = moment(date).startOf('week');\n\n        return moment(weekStart).add(0, 'days').startOf('day').valueOf();\n    }\n\n    // custom\n    if (type === 'custom') {\n        return moment(date[0]).startOf('day').valueOf();\n    }\n\n    const month = moment(date).format('MM');\n    const year = moment(date).format('YYYY');\n\n    return moment(`1/${month}/${year}`, format_date).startOf('day').valueOf();\n}\n\nexport function getEndTime({ type, date }: IGetTime): number {\n    // day\n    if (type === 'day') {\n        return moment(date).endOf('day').toDate().getTime();\n    }\n\n    // week\n    if (type === 'week') {\n        const weekStart = moment(date).startOf('week');\n\n        return moment(weekStart).add(6, 'days').endOf('day').valueOf();\n    }\n\n    // custom\n    if (type === 'custom') {\n        return date[1] ? moment(date[1]).endOf('day').valueOf() : moment().endOf('day').valueOf();\n    }\n    const dateInMonth: number = moment(date).daysInMonth();\n    const month = moment(date).format('MM');\n    const year = moment(date).format('YYYY');\n\n    return moment(`${dateInMonth}/${month}/${year}`, format_date).endOf('day').valueOf();\n}\n"]},"metadata":{},"sourceType":"module"}