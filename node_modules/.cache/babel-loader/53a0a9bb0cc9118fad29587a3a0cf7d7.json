{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/imgs-library.tsx\",\n    _s = $RefreshSig$();\n\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Badge, Button, Col, Row } from 'antd';\nimport { get } from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateImageRequest } from '../../../api/images-api';\nimport { uploadImagesRequest } from '../../../api/upload-api';\nimport { BtnUpload, Image, Loading } from '../../../components';\nimport { IMG_URL } from '../../../configs/vars';\nimport { addImages, fetchGallery, fetchImages, fetchImagesBookmark, toggleBookmark } from '../../../reducers/imagesState/imagesAction';\nimport AddCategoryImg from './add-category-img';\nimport AddImageGallery from './add-image-gallery';\nimport BtnActionImages from './btn-action-images';\nimport { useConversationDetail } from './context';\nimport GalleryItem from './gallery-item';\nimport './imgs-library.less';\nimport SearchImage from './search-image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ImgsLibrary = ({\n  toggle,\n  affterClose,\n  handleImageSelect,\n  type,\n  imagesSeleted = []\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    setImageSend,\n    ...state\n  } = useConversationDetail();\n  const [loading, setLoading] = useState(false);\n  const [images_select, setImagesSelect] = useState(() => {\n    if (imagesSeleted.length > 0) {\n      return imagesSeleted;\n    } else {\n      return state.images.map(image => image.key);\n    }\n  });\n  const [todoGallery, setTodoGallery] = useState(null);\n  const [idImagesSelected, setIdImagesSelected] = useState([]);\n  const token = useSelector(state => state.auth.token);\n  const store = useSelector(state => state.store.store);\n  const gallery = useSelector(state => state.images.gallery);\n  const images = useSelector(state => state.images.images);\n  const page = useSelector(({\n    fanpage\n  }) => fanpage.page);\n  const text_search = useSelector(state => state.images.text_search);\n  const loadingImages = useSelector(state => state.images.loading);\n\n  const handleUpload = async e => {\n    setLoading(true);\n\n    try {\n      const files = Array.from(e.target.files).map(file => {\n        return file;\n      });\n      e.target.value = null;\n      const res = await uploadImagesRequest({\n        storeId: store._id,\n        galleryId: get(todoGallery, '_id'),\n        token: token.accessToken,\n        files\n      });\n\n      if (Array.isArray(res)) {\n        dispatch(addImages(res));\n\n        if (todoGallery === 'bookmark') {\n          for (const image of res) {\n            await updateImageRequest({\n              token: token.accessToken,\n              storeId: store._id,\n              imageId: image._id,\n              data: {\n                star: true\n              }\n            });\n            dispatch(toggleBookmark(image._id));\n          }\n        }\n\n        setLoading(false);\n      } else {\n        setLoading(false);\n      }\n    } catch (error) {}\n  };\n\n  const handleSelect = img => {\n    setImagesSelect([...images_select, img]);\n  };\n\n  const removeSelect = img => {\n    const filterImgs = images_select.filter(i => i !== img);\n    setImagesSelect(filterImgs);\n  };\n\n  const selectImageSend = () => {\n    const arr_images = filterInfoImages(images_select);\n\n    if (type === undefined) {\n      handleImageSelect(arr_images);\n    } else {\n      const messages = [];\n\n      for (let i = 0; i < arr_images.length; i++) {\n        let newMessage = {\n          create_time: moment(new Date()).format(),\n          from: {\n            name: page.name,\n            email: '',\n            id: page.fbObjectId\n          },\n          id: Date.now() + i,\n          type\n        };\n\n        if (type === 2) {\n          newMessage.attachment = {\n            type: 'photo',\n            media: {\n              image: {\n                src: IMG_URL + arr_images[i].key\n              }\n            }\n          };\n        } else if (type === 1) {\n          newMessage.attachments = {\n            data: [{\n              image_data: {\n                preview_url: IMG_URL + arr_images[i].key\n              }\n            }]\n          };\n        }\n\n        messages.push(newMessage);\n      }\n\n      handleImageSelect(arr_images, messages);\n    }\n\n    toggle();\n  };\n\n  useEffect(() => {\n    dispatch(fetchGallery());\n  }, []);\n  useEffect(() => {\n    const arr_images = filterInfoImages(imagesSeleted);\n    setImagesSelect(arr_images.map(item => item.key));\n  }, [images]);\n  useEffect(() => {\n    const ids = images.filter(i => images_select.includes(i.key)).map(img => img._id);\n    setIdImagesSelected(ids);\n  }, [images_select]);\n  useEffect(() => {\n    if (todoGallery && todoGallery !== 'bookmark') {\n      dispatch(fetchImages(todoGallery._id));\n    } else if (todoGallery === 'bookmark') {\n      // load message bookmar\n      dispatch(fetchImagesBookmark());\n    } else {\n      dispatch(fetchImages());\n    }\n  }, [todoGallery]);\n\n  const filterInfoImages = tempData => {\n    const arr_images = tempData.map(imageId => {\n      const image = images.find(i => i.key === imageId);\n      if (!image) return null;\n      return image;\n    }).filter(item => !!item);\n    return arr_images;\n  };\n\n  const renderContent = () => {\n    if (loadingImages) {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (images.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 41\n    }, this);\n\n    const filter_images = () => {\n      if (text_search.length === 0) return images;\n      return images.filter(image => image.name.includes(text_search));\n    };\n\n    return /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 15,\n      children: filter_images().map(image => {\n        const select = images_select.includes(image.key);\n        return /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            marginBottom: 15\n          },\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            select: select,\n            image: image,\n            handleSelect: handleSelect,\n            removeSelect: removeSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this)\n        }, image.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handelClickGallery = item => {\n    setTodoGallery(item);\n  };\n\n  const elmGallery = () => {\n    return (gallery || []).map(item => {\n      return /*#__PURE__*/_jsxDEV(GalleryItem, {\n        active: todoGallery && todoGallery !== 'bookmark' && todoGallery._id === item._id,\n        gallery: item,\n        handelClickGallery: handelClickGallery\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  const renderBadge = images_select.length > 0 && /*#__PURE__*/_jsxDEV(Badge, {\n    style: {\n      marginRight: 10\n    },\n    count: images_select.length\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"imgs-library\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        className: \"imgs-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: \"Danh m\\u1EE5c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listCate\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setTodoGallery(null),\n              className: `cate ${!todoGallery ? 'active' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inner\",\n                children: \"T\\u1EA5t c\\u1EA3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setTodoGallery('bookmark'),\n              className: `cate ${todoGallery === 'bookmark' ? 'active' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inner\",\n                children: \"Y\\xEAu th\\xEDch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this), elmGallery()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-img\",\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(AddCategoryImg, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 18,\n        className: \"imgs-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            align: \"middle\",\n            justify: \"space-between\",\n            gutter: 15,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              style: {\n                flex: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(SearchImage, {\n                gallery: todoGallery\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(CloseOutlined, {\n                onClick: toggle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: renderContent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-img\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            align: \"middle\",\n            gutter: 15,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(BtnUpload, {\n                loading: loading,\n                multiple: true,\n                handleUpload: handleUpload\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this), images_select.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(BtnActionImages, {\n                  images: idImagesSelected,\n                  action: \"remove\",\n                  callBack: () => setImagesSelect([])\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(AddImageGallery, {\n                  images: idImagesSelected,\n                  callBack: () => setImagesSelect([])\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                onClick: selectImageSend,\n                children: [renderBadge, \"G\\u1EEDi \\u1EA3nh \\u0111\\xE3 ch\\u1ECDn\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImgsLibrary, \"hEwNapZMmDH8WONo+C5e6qJ777M=\", false, function () {\n  return [useDispatch, useConversationDetail, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ImgsLibrary;\nexport default ImgsLibrary;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgsLibrary\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/imgs-library.tsx"],"names":["CloseOutlined","Badge","Button","Col","Row","get","moment","React","useEffect","useState","useDispatch","useSelector","updateImageRequest","uploadImagesRequest","BtnUpload","Image","Loading","IMG_URL","addImages","fetchGallery","fetchImages","fetchImagesBookmark","toggleBookmark","AddCategoryImg","AddImageGallery","BtnActionImages","useConversationDetail","GalleryItem","SearchImage","ImgsLibrary","toggle","affterClose","handleImageSelect","type","imagesSeleted","dispatch","setImageSend","state","loading","setLoading","images_select","setImagesSelect","length","images","map","image","key","todoGallery","setTodoGallery","idImagesSelected","setIdImagesSelected","token","auth","store","gallery","page","fanpage","text_search","loadingImages","handleUpload","e","files","Array","from","target","file","value","res","storeId","_id","galleryId","accessToken","isArray","imageId","data","star","error","handleSelect","img","removeSelect","filterImgs","filter","i","selectImageSend","arr_images","filterInfoImages","undefined","messages","newMessage","create_time","Date","format","name","email","id","fbObjectId","now","attachment","media","src","attachments","image_data","preview_url","push","item","ids","includes","tempData","find","renderContent","filter_images","select","marginBottom","handelClickGallery","elmGallery","renderBadge","marginRight","textAlign","flex"],"mappings":"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","sourcesContent":["import { CloseOutlined } from '@ant-design/icons';\nimport { Badge, Button, Col, Row } from 'antd';\nimport { get } from 'lodash';\nimport moment from 'moment';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateImageRequest } from '../../../api/images-api';\nimport { uploadImagesRequest } from '../../../api/upload-api';\nimport { IImage } from '../../../collections/image';\nimport { BtnUpload, Image, Loading } from '../../../components';\nimport { IMG_URL } from '../../../configs/vars';\nimport {\n    addImages,\n    fetchGallery,\n    fetchImages,\n    fetchImagesBookmark,\n    toggleBookmark,\n} from '../../../reducers/imagesState/imagesAction';\nimport AddCategoryImg from './add-category-img';\nimport AddImageGallery from './add-image-gallery';\nimport BtnActionImages from './btn-action-images';\nimport { useConversationDetail } from './context';\nimport GalleryItem from './gallery-item';\nimport './imgs-library.less';\nimport SearchImage from './search-image';\n\ninterface Props {\n    toggle: () => void;\n    affterClose?: () => void;\n    handleImageSelect: (images: IImage[], message?: any) => void;\n    type?: number;\n    imagesSeleted?: any[];\n}\n\nexport interface IGallery {\n    _id: string;\n    name: string;\n}\n\nconst ImgsLibrary: FC<Props> = ({\n    toggle,\n    affterClose,\n    handleImageSelect,\n    type,\n    imagesSeleted = [],\n}): JSX.Element => {\n    const dispatch = useDispatch();\n    const { setImageSend, ...state } = useConversationDetail();\n\n    const [loading, setLoading] = useState(false);\n    const [images_select, setImagesSelect] = useState<any[]>(() => {\n        if (imagesSeleted.length > 0) {\n            return imagesSeleted;\n        } else {\n            return state.images.map((image: IImage) => image.key);\n        }\n    });\n    const [todoGallery, setTodoGallery] = useState<IGallery | null | 'bookmark'>(null);\n    const [idImagesSelected, setIdImagesSelected] = useState<string[]>([]);\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n    const gallery = useSelector((state: any) => state.images.gallery);\n    const images = useSelector((state: any) => state.images.images);\n    const page: { fbObjectId: string; name: string } = useSelector(\n        ({ fanpage }: { fanpage: any }) => fanpage.page\n    );\n\n    const text_search = useSelector((state: any) => state.images.text_search);\n    const loadingImages = useSelector((state: any) => state.images.loading);\n\n    const handleUpload = async (e: any) => {\n        setLoading(true);\n        try {\n            const files = Array.from(e.target.files).map((file: any) => {\n                return file;\n            });\n            e.target.value = null;\n\n            const res = await uploadImagesRequest({\n                storeId: store._id,\n                galleryId: get(todoGallery, '_id'),\n                token: token.accessToken,\n                files,\n            });\n\n            if (Array.isArray(res)) {\n                dispatch(addImages(res));\n                if (todoGallery === 'bookmark') {\n                    for (const image of res) {\n                        await updateImageRequest({\n                            token: token.accessToken,\n                            storeId: store._id,\n                            imageId: image._id,\n                            data: {\n                                star: true,\n                            },\n                        });\n                        dispatch(toggleBookmark(image._id));\n                    }\n                }\n                setLoading(false);\n            } else {\n                setLoading(false);\n            }\n        } catch (error) {}\n    };\n\n    const handleSelect = (img: string) => {\n        setImagesSelect([...images_select, img]);\n    };\n\n    const removeSelect = (img: string) => {\n        const filterImgs = images_select.filter((i: string) => i !== img);\n        setImagesSelect(filterImgs);\n    };\n\n    const selectImageSend = () => {\n        const arr_images = filterInfoImages(images_select);\n        if (type === undefined) {\n            handleImageSelect(arr_images);\n        } else {\n            const messages = [];\n\n            for (let i = 0; i < arr_images.length; i++) {\n                let newMessage: any = {\n                    create_time: moment(new Date()).format(),\n                    from: {\n                        name: page.name,\n                        email: '',\n                        id: page.fbObjectId,\n                    },\n                    id: Date.now() + i,\n                    type,\n                };\n\n                if (type === 2) {\n                    newMessage.attachment = {\n                        type: 'photo',\n                        media: {\n                            image: {\n                                src: IMG_URL + arr_images[i].key,\n                            },\n                        },\n                    };\n                } else if (type === 1) {\n                    newMessage.attachments = {\n                        data: [{ image_data: { preview_url: IMG_URL + arr_images[i].key } }],\n                    };\n                }\n\n                messages.push(newMessage);\n            }\n\n            handleImageSelect(arr_images, messages);\n        }\n        toggle();\n    };\n\n    useEffect(() => {\n        dispatch(fetchGallery());\n    }, []);\n\n    useEffect(() => {\n        const arr_images = filterInfoImages(imagesSeleted);\n        setImagesSelect(arr_images.map((item: any) => item.key));\n    }, [images]);\n\n    useEffect(() => {\n        const ids = images\n            .filter((i: IImage) => images_select.includes(i.key))\n            .map((img: IImage) => img._id);\n        setIdImagesSelected(ids);\n    }, [images_select]);\n\n    useEffect(() => {\n        if (todoGallery && todoGallery !== 'bookmark') {\n            dispatch(fetchImages(todoGallery._id));\n        } else if (todoGallery === 'bookmark') {\n            // load message bookmar\n            dispatch(fetchImagesBookmark());\n        } else {\n            dispatch(fetchImages());\n        }\n    }, [todoGallery]);\n\n    const filterInfoImages = (tempData: any[]) => {\n        const arr_images = tempData\n            .map((imageId: string) => {\n                const image = images.find((i: IImage) => i.key === imageId);\n                if (!image) return null;\n                return image;\n            })\n            .filter((item) => !!item);\n        return arr_images;\n    };\n\n    const renderContent = () => {\n        if (loadingImages) {\n            return <Loading />;\n        }\n\n        if (images.length === 0) return <div></div>;\n\n        const filter_images = () => {\n            if (text_search.length === 0) return images;\n\n            return images.filter((image: IImage) => image.name.includes(text_search));\n        };\n\n        return (\n            <Row gutter={15}>\n                {filter_images().map((image: IImage) => {\n                    const select = images_select.includes(image.key);\n\n                    return (\n                        <Col key={image.key} style={{ marginBottom: 15 }}>\n                            <Image\n                                select={select}\n                                image={image}\n                                handleSelect={handleSelect}\n                                removeSelect={removeSelect}\n                            />\n                        </Col>\n                    );\n                })}\n            </Row>\n        );\n    };\n\n    const handelClickGallery = (item: IGallery) => {\n        setTodoGallery(item);\n    };\n\n    const elmGallery = () => {\n        return (gallery || []).map((item: IGallery) => {\n            return (\n                <GalleryItem\n                    key={item._id}\n                    active={\n                        todoGallery && todoGallery !== 'bookmark' && todoGallery._id === item._id\n                    }\n                    gallery={item}\n                    handelClickGallery={handelClickGallery}\n                />\n            );\n        });\n    };\n\n    const renderBadge = images_select.length > 0 && (\n        <Badge style={{ marginRight: 10 }} count={images_select.length} />\n    );\n\n    return (\n        <div className='imgs-library'>\n            <Row>\n                <Col span={6} className='imgs-col'>\n                    <div className='heading'>Danh mục</div>\n\n                    <div className='content'>\n                        <div className='listCate'>\n                            <div\n                                onClick={() => setTodoGallery(null)}\n                                className={`cate ${!todoGallery ? 'active' : ''}`}\n                            >\n                                <div className='inner'>Tất cả</div>\n                            </div>\n\n                            <div\n                                onClick={() => setTodoGallery('bookmark')}\n                                className={`cate ${todoGallery === 'bookmark' ? 'active' : ''}`}\n                            >\n                                <div className='inner'>Yêu thích</div>\n                            </div>\n\n                            {elmGallery()}\n                        </div>\n                    </div>\n                    <div className='footer-img' style={{ textAlign: 'center' }}>\n                        <AddCategoryImg />\n                    </div>\n                </Col>\n                <Col span={18} className='imgs-col'>\n                    <div className='heading'>\n                        <Row align='middle' justify='space-between' gutter={15}>\n                            <Col style={{ flex: 1 }}>\n                                <SearchImage gallery={todoGallery} />\n                            </Col>\n                            <Col>\n                                <CloseOutlined onClick={toggle} />\n                            </Col>\n                        </Row>\n                    </div>\n\n                    <div className='content'>{renderContent()}</div>\n\n                    <div className='footer-img'>\n                        <Row align='middle' gutter={15}>\n                            <Col>\n                                <BtnUpload loading={loading} multiple handleUpload={handleUpload} />\n                            </Col>\n                            {images_select.length > 0 && (\n                                <>\n                                    <Col>\n                                        <BtnActionImages\n                                            images={idImagesSelected}\n                                            action='remove'\n                                            callBack={() => setImagesSelect([])}\n                                        />\n                                    </Col>\n                                    <Col>\n                                        <AddImageGallery\n                                            images={idImagesSelected}\n                                            callBack={() => setImagesSelect([])}\n                                        />\n                                    </Col>\n                                </>\n                            )}\n                            <Col>\n                                <Button type='primary' onClick={selectImageSend}>\n                                    {renderBadge}\n                                    Gửi ảnh đã chọn\n                                </Button>\n                            </Col>\n                        </Row>\n                    </div>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default ImgsLibrary;\n"]},"metadata":{},"sourceType":"module"}