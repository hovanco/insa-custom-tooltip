{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/like-comment.tsx\",\n    _s = $RefreshSig$();\n\nimport { LikeOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport React, { useState, memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { likeComment } from '../../../api/conversation-api';\nimport { updateLikeCommentsConversation } from '../../../reducers/fanpageState/fanpageAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Like = ({\n  comment,\n  handleLike,\n  liked\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const conversation = useSelector(({\n    fanpage\n  }) => fanpage.conversation);\n  const store = useSelector(({\n    store\n  }) => store.store);\n  const token = useSelector(({\n    auth\n  }) => auth.token);\n  const [loading, setLoading] = useState(false);\n\n  const toggleLike = async () => {\n    setLoading(true);\n    likeComment({\n      commentId: comment.id,\n      fbPageId: conversation.fbPageId,\n      storeId: store._id,\n      token: token.accessToken,\n      data: {\n        fbConversationId: conversation._id\n      }\n    }).then(() => {\n      setLoading(false);\n      handleLike();\n      dispatch(updateLikeCommentsConversation({\n        conversationId: conversation._id,\n        commentId: comment.id,\n        value: !liked\n      }));\n    }).catch(() => {\n      setLoading(false);\n    });\n  };\n\n  const title = liked ? 'Bỏ thích bình luận' : 'Thích bình luận';\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    placement: \"top\",\n    title: title,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bubble_action-item\",\n      children: loading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(LikeOutlined, {\n        onClick: toggleLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Like, \"0vHZPk1vR7576IX5DCml5dwGDew=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Like;\nexport default _c2 = /*#__PURE__*/memo(Like);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Like\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/like-comment.tsx"],"names":["LikeOutlined","LoadingOutlined","Tooltip","React","useState","memo","useDispatch","useSelector","likeComment","updateLikeCommentsConversation","Like","comment","handleLike","liked","dispatch","conversation","fanpage","store","token","auth","loading","setLoading","toggleLike","commentId","id","fbPageId","storeId","_id","accessToken","data","fbConversationId","then","conversationId","value","catch","title"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,eAAvB,QAA8C,mBAA9C;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAOC,KAAP,IAAoBC,QAApB,EAA8BC,IAA9B,QAA0C,OAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,+BAA5B;AAEA,SAASC,8BAAT,QAA+C,8CAA/C;;;AAWA,MAAMC,IAAe,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAD,KAAiD;AAAA;;AACrE,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,YAA2B,GAAGR,WAAW,CAC3C,CAAC;AAAES,IAAAA;AAAF,GAAD,KAA8CA,OAAO,CAACD,YADX,CAA/C;AAGA,QAAME,KAAK,GAAGV,WAAW,CAAC,CAAC;AAAEU,IAAAA;AAAF,GAAD,KAAuCA,KAAK,CAACA,KAA9C,CAAzB;AAEA,QAAMC,KAAU,GAAGX,WAAW,CAAC,CAAC;AAAEY,IAAAA;AAAF,GAAD,KAAoCA,IAAI,CAACD,KAA1C,CAA9B;AAEA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMkB,UAAU,GAAG,YAAY;AAC3BD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAb,IAAAA,WAAW,CAAC;AACRe,MAAAA,SAAS,EAAEZ,OAAO,CAACa,EADX;AAERC,MAAAA,QAAQ,EAAEV,YAAY,CAACU,QAFf;AAGRC,MAAAA,OAAO,EAAET,KAAK,CAACU,GAHP;AAIRT,MAAAA,KAAK,EAAEA,KAAK,CAACU,WAJL;AAKRC,MAAAA,IAAI,EAAE;AACFC,QAAAA,gBAAgB,EAAEf,YAAY,CAACY;AAD7B;AALE,KAAD,CAAX,CASKI,IATL,CASU,MAAM;AACRV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAT,MAAAA,UAAU;AACVE,MAAAA,QAAQ,CACJL,8BAA8B,CAAC;AAC3BuB,QAAAA,cAAc,EAAEjB,YAAY,CAACY,GADF;AAE3BJ,QAAAA,SAAS,EAAEZ,OAAO,CAACa,EAFQ;AAG3BS,QAAAA,KAAK,EAAE,CAACpB;AAHmB,OAAD,CAD1B,CAAR;AAOH,KAnBL,EAoBKqB,KApBL,CAoBW,MAAM;AACTb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAtBL;AAuBH,GAzBD;;AA2BA,QAAMc,KAAK,GAAGtB,KAAK,GAAG,oBAAH,GAA0B,iBAA7C;AAEA,sBACI,QAAC,OAAD;AAAS,IAAA,SAAS,EAAC,KAAnB;AAAyB,IAAA,KAAK,EAAEsB,KAAhC;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBACKf,OAAO,gBAAG,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAyB,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEE;AAAvB;AAAA;AAAA;AAAA;AAAA;AADrC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA/CD;;GAAMZ,I;UACeJ,W,EACmBC,W,EAGtBA,W,EAEKA,W;;;KAPjBG,I;AAiDN,kCAAeL,IAAI,CAACK,IAAD,CAAnB","sourcesContent":["import { LikeOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport React, { FC, useState, memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { likeComment } from '../../../api/conversation-api';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport { updateLikeCommentsConversation } from '../../../reducers/fanpageState/fanpageAction';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { Comment } from './context';\n\ninterface Props {\n    comment: Comment;\n    handleLike: () => void;\n    liked: boolean;\n}\n\nconst Like: FC<Props> = ({ comment, handleLike, liked }): JSX.Element => {\n    const dispatch = useDispatch();\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n\n    const [loading, setLoading] = useState(false);\n\n    const toggleLike = async () => {\n        setLoading(true);\n        likeComment({\n            commentId: comment.id,\n            fbPageId: conversation.fbPageId,\n            storeId: store._id,\n            token: token.accessToken,\n            data: {\n                fbConversationId: conversation._id,\n            },\n        })\n            .then(() => {\n                setLoading(false);\n                handleLike();\n                dispatch(\n                    updateLikeCommentsConversation({\n                        conversationId: conversation._id,\n                        commentId: comment.id,\n                        value: !liked,\n                    })\n                );\n            })\n            .catch(() => {\n                setLoading(false);\n            });\n    };\n\n    const title = liked ? 'Bỏ thích bình luận' : 'Thích bình luận';\n\n    return (\n        <Tooltip placement='top' title={title}>\n            <div className='bubble_action-item'>\n                {loading ? <LoadingOutlined /> : <LikeOutlined onClick={toggleLike} />}\n            </div>\n        </Tooltip>\n    );\n};\n\nexport default memo(Like);\n"]},"metadata":{},"sourceType":"module"}