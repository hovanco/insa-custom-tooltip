{"ast":null,"code":"import axios from './axios-client';\nconst staffApi = {\n  listStaff: async ({\n    storeId,\n    token\n  }) => {\n    const url = `/store/v1/stores/${storeId}/staffs`;\n    const reponse = await axios({\n      url,\n      method: 'GET'\n    });\n    return reponse.data;\n  },\n  createStaff: async ({\n    storeId,\n    data,\n    token\n  }) => {\n    const url = `/store/v1/stores/${storeId}/staffs`;\n    const response = await axios({\n      url,\n      method: 'POST',\n      data\n    });\n    return response.data;\n  },\n  updateStaff: async ({\n    storeId,\n    staffId,\n    data,\n    token\n  }) => {\n    const url = `/store/v1/stores/${storeId}/staffs/${staffId}`;\n    const response = await axios({\n      url,\n      method: 'PUT',\n      data\n    });\n    return response.data;\n  },\n  deleteStaff: async ({\n    storeId,\n    staffId,\n    token\n  }) => {\n    const url = `/store/v1/stores/${storeId}/staffs/${staffId}`;\n    const response = await axios({\n      url,\n      method: 'DELETE'\n    });\n    return response.data;\n  }\n};\nexport default staffApi;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/api/staff-api.ts"],"names":["axios","staffApi","listStaff","storeId","token","url","reponse","method","data","createStaff","response","updateStaff","staffId","deleteStaff"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,SAAS,EAAE,OAAO;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAP,KAAgF;AACvF,UAAMC,GAAG,GAAI,oBAAmBF,OAAQ,SAAxC;AAEA,UAAMG,OAAO,GAAG,MAAMN,KAAK,CAAC;AACxBK,MAAAA,GADwB;AAExBE,MAAAA,MAAM,EAAE;AAFgB,KAAD,CAA3B;AAKA,WAAOD,OAAO,CAACE,IAAf;AACH,GAVY;AAWbC,EAAAA,WAAW,EAAE,OAAO;AAChBN,IAAAA,OADgB;AAEhBK,IAAAA,IAFgB;AAGhBJ,IAAAA;AAHgB,GAAP,KAaO;AAChB,UAAMC,GAAG,GAAI,oBAAmBF,OAAQ,SAAxC;AACA,UAAMO,QAAQ,GAAG,MAAMV,KAAK,CAAC;AACzBK,MAAAA,GADyB;AAEzBE,MAAAA,MAAM,EAAE,MAFiB;AAGzBC,MAAAA;AAHyB,KAAD,CAA5B;AAMA,WAAOE,QAAQ,CAACF,IAAhB;AACH,GAjCY;AAmCbG,EAAAA,WAAW,EAAE,OAAO;AAChBR,IAAAA,OADgB;AAEhBS,IAAAA,OAFgB;AAGhBJ,IAAAA,IAHgB;AAIhBJ,IAAAA;AAJgB,GAAP,KAaO;AAChB,UAAMC,GAAG,GAAI,oBAAmBF,OAAQ,WAAUS,OAAQ,EAA1D;AACA,UAAMF,QAAQ,GAAG,MAAMV,KAAK,CAAC;AACzBK,MAAAA,GADyB;AAEzBE,MAAAA,MAAM,EAAE,KAFiB;AAGzBC,MAAAA;AAHyB,KAAD,CAA5B;AAMA,WAAOE,QAAQ,CAACF,IAAhB;AACH,GAzDY;AA2DbK,EAAAA,WAAW,EAAE,OAAO;AAChBV,IAAAA,OADgB;AAEhBS,IAAAA,OAFgB;AAGhBR,IAAAA;AAHgB,GAAP,KAQO;AAChB,UAAMC,GAAG,GAAI,oBAAmBF,OAAQ,WAAUS,OAAQ,EAA1D;AACA,UAAMF,QAAQ,GAAG,MAAMV,KAAK,CAAC;AACzBK,MAAAA,GADyB;AAEzBE,MAAAA,MAAM,EAAE;AAFiB,KAAD,CAA5B;AAKA,WAAOG,QAAQ,CAACF,IAAhB;AACH;AA3EY,CAAjB;AA8EA,eAAeP,QAAf","sourcesContent":["import axios from './axios-client';\n\nconst staffApi = {\n    listStaff: async ({ storeId, token }: { storeId: string; token: string }): Promise<any> => {\n        const url = `/store/v1/stores/${storeId}/staffs`;\n\n        const reponse = await axios({\n            url,\n            method: 'GET',\n        });\n\n        return reponse.data;\n    },\n    createStaff: async ({\n        storeId,\n        data,\n        token,\n    }: {\n        storeId: string;\n        token: string;\n        data: {\n            email: string;\n            password: string;\n            role: number;\n            name: string;\n        };\n    }): Promise<any> => {\n        const url = `/store/v1/stores/${storeId}/staffs`;\n        const response = await axios({\n            url,\n            method: 'POST',\n            data,\n        });\n\n        return response.data;\n    },\n\n    updateStaff: async ({\n        storeId,\n        staffId,\n        data,\n        token,\n    }: {\n        storeId: string;\n        staffId: string;\n        data: {\n            role: number;\n            name?: string;\n        };\n        token: string;\n    }): Promise<any> => {\n        const url = `/store/v1/stores/${storeId}/staffs/${staffId}`;\n        const response = await axios({\n            url,\n            method: 'PUT',\n            data,\n        });\n\n        return response.data;\n    },\n\n    deleteStaff: async ({\n        storeId,\n        staffId,\n        token,\n    }: {\n        storeId: string;\n        staffId: string;\n        token: string;\n    }): Promise<any> => {\n        const url = `/store/v1/stores/${storeId}/staffs/${staffId}`;\n        const response = await axios({\n            url,\n            method: 'DELETE',\n        });\n\n        return response.data;\n    },\n};\n\nexport default staffApi;\n"]},"metadata":{},"sourceType":"module"}