{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport function getBrowserVisibilityProp() {\n  if (typeof document.hidden !== \"undefined\") {\n    return \"visibilitychange\";\n  } else if (typeof document.msHidden !== \"undefined\") {\n    return \"msvisibilitychange\";\n  } else if (typeof document.webkitHidden !== \"undefined\") {\n    return \"webkitvisibilitychange\";\n  }\n}\nexport function getBrowserDocumentHiddenProp() {\n  if (typeof document.hidden !== \"undefined\") {\n    return \"hidden\";\n  } else if (typeof document.msHidden !== \"undefined\") {\n    return \"msHidden\";\n  } else if (typeof document.webkitHidden !== \"undefined\") {\n    return \"webkitHidden\";\n  }\n}\nexport function getIsDocumentHidden() {\n  return !document[getBrowserDocumentHiddenProp()];\n}\nexport function usePageVisibility() {\n  _s();\n\n  const [isVisible, setIsVisible] = useState(getIsDocumentHidden());\n\n  const onVisibilityChange = () => setIsVisible(getIsDocumentHidden());\n\n  useEffect(() => {\n    const visibilityChange = getBrowserVisibilityProp();\n    window.addEventListener(visibilityChange, onVisibilityChange, false);\n    return () => {\n      window.removeEventListener(visibilityChange, onVisibilityChange);\n    };\n  });\n  return isVisible;\n}\n\n_s(usePageVisibility, \"r4RithKWfNc2G+lplXqjoYS8M3k=\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/hooks/usePageVisibility.ts"],"names":["useEffect","useState","getBrowserVisibilityProp","document","hidden","msHidden","webkitHidden","getBrowserDocumentHiddenProp","getIsDocumentHidden","usePageVisibility","isVisible","setIsVisible","onVisibilityChange","visibilityChange","window","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,SAASC,wBAAT,GAAoC;AACvC,MAAI,OAAOC,QAAQ,CAACC,MAAhB,KAA2B,WAA/B,EAA4C;AACxC,WAAO,kBAAP;AACH,GAFD,MAEO,IAAI,OAAOD,QAAQ,CAACE,QAAhB,KAA6B,WAAjC,EAA8C;AACjD,WAAO,oBAAP;AACH,GAFM,MAEA,IAAI,OAAOF,QAAQ,CAACG,YAAhB,KAAiC,WAArC,EAAkD;AACrD,WAAO,wBAAP;AACH;AACJ;AAED,OAAO,SAASC,4BAAT,GAAwC;AAC3C,MAAI,OAAOJ,QAAQ,CAACC,MAAhB,KAA2B,WAA/B,EAA4C;AACxC,WAAO,QAAP;AACH,GAFD,MAEO,IAAI,OAAOD,QAAQ,CAACE,QAAhB,KAA6B,WAAjC,EAA8C;AACjD,WAAO,UAAP;AACH,GAFM,MAEA,IAAI,OAAOF,QAAQ,CAACG,YAAhB,KAAiC,WAArC,EAAkD;AACrD,WAAO,cAAP;AACH;AACJ;AAED,OAAO,SAASE,mBAAT,GAA+B;AAClC,SAAO,CAACL,QAAQ,CAACI,4BAA4B,EAA7B,CAAhB;AACH;AAED,OAAO,SAASE,iBAAT,GAA6B;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAACO,mBAAmB,EAApB,CAA1C;;AACA,QAAMI,kBAAkB,GAAG,MAAMD,YAAY,CAACH,mBAAmB,EAApB,CAA7C;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,gBAAgB,GAAGX,wBAAwB,EAAjD;AAEAY,IAAAA,MAAM,CAACC,gBAAP,CAAwBF,gBAAxB,EAA0CD,kBAA1C,EAA8D,KAA9D;AAEA,WAAO,MAAM;AACTE,MAAAA,MAAM,CAACE,mBAAP,CAA2BH,gBAA3B,EAA6CD,kBAA7C;AACH,KAFD;AAGH,GARQ,CAAT;AAUA,SAAOF,SAAP;AACH;;GAfeD,iB","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport function getBrowserVisibilityProp() {\n    if (typeof document.hidden !== \"undefined\") {\n        return \"visibilitychange\";\n    } else if (typeof document.msHidden !== \"undefined\") {\n        return \"msvisibilitychange\";\n    } else if (typeof document.webkitHidden !== \"undefined\") {\n        return \"webkitvisibilitychange\";\n    }\n}\n  \nexport function getBrowserDocumentHiddenProp() {\n    if (typeof document.hidden !== \"undefined\") {\n        return \"hidden\";\n    } else if (typeof document.msHidden !== \"undefined\") {\n        return \"msHidden\";\n    } else if (typeof document.webkitHidden !== \"undefined\") {\n        return \"webkitHidden\";\n    }\n}\n  \nexport function getIsDocumentHidden() {\n    return !document[getBrowserDocumentHiddenProp()!];\n}\n\nexport function usePageVisibility() {\n    const [isVisible, setIsVisible] = useState(getIsDocumentHidden());\n    const onVisibilityChange = () => setIsVisible(getIsDocumentHidden());\n  \n    useEffect(() => {\n        const visibilityChange = getBrowserVisibilityProp()!;\n  \n        window.addEventListener(visibilityChange, onVisibilityChange, false);\n  \n        return () => {\n            window.removeEventListener(visibilityChange, onVisibilityChange);\n        };\n    });\n  \n    return isVisible;\n}\n"]},"metadata":{},"sourceType":"module"}