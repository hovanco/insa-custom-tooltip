{"ast":null,"code":"import types from './imagesTypes';\nconst initialState = {\n  loading: true,\n  text_search: '',\n  images: [],\n  gallery: []\n};\n\nconst imagesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_IMAGES_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case types.FETCH_IMAGES_SUCCESS:\n      return { ...state,\n        images: action.payload,\n        loading: false\n      };\n\n    case types.ADD_IMAGES_SUCCESS:\n      return { ...state,\n        images: [...state.images, ...action.payload],\n        loading: false\n      };\n\n    case types.TOOGLE_LIKE_IMAGE:\n      {\n        const images = state.images.map(image => {\n          if (image._id === action.payload) return { ...image,\n            star: !image.star\n          };\n          return image;\n        });\n        return { ...state,\n          images\n        };\n      }\n\n    case types.DELETE_IMAGE:\n      {\n        const images = state.images.filter(image => image._id !== action.payload);\n        return { ...state,\n          images\n        };\n      }\n\n    case types.SEARCH:\n      return { ...state,\n        text_search: action.payload\n      };\n\n    case types.CREATE_GALLERY_SUCCESS:\n      return { ...state,\n        gallery: state.gallery.concat(action.payload),\n        loading: false\n      };\n\n    case types.FETCH_GALLERY_SUCCESS:\n      return { ...state,\n        gallery: action.payload,\n        loading: false\n      };\n\n    case types.DELETE_GALLERY:\n      {\n        const gallery = state.gallery.filter(g => g._id !== action.payload);\n        return { ...state,\n          gallery\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default imagesReducer;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/imagesState/imagesReducer.ts"],"names":["types","initialState","loading","text_search","images","gallery","imagesReducer","state","action","type","FETCH_IMAGES_LOADING","FETCH_IMAGES_SUCCESS","payload","ADD_IMAGES_SUCCESS","TOOGLE_LIKE_IMAGE","map","image","_id","star","DELETE_IMAGE","filter","SEARCH","CREATE_GALLERY_SUCCESS","concat","FETCH_GALLERY_SUCCESS","DELETE_GALLERY","g"],"mappings":"AACA,OAAOA,KAAP,MAAkB,eAAlB;AAOA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,WAAW,EAAE,EAFI;AAGjBC,EAAAA,MAAM,EAAE,EAHS;AAIjBC,EAAAA,OAAO,EAAE;AAJQ,CAArB;;AAOA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAA2C;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,KAAK,CAACU,oBAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHL,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ,SAAKF,KAAK,CAACW,oBAAX;AACI,aAAO,EACH,GAAGJ,KADA;AAEHH,QAAAA,MAAM,EAAEI,MAAM,CAACI,OAFZ;AAGHV,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKF,KAAK,CAACa,kBAAX;AACI,aAAO,EACH,GAAGN,KADA;AAEHH,QAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkB,GAAGI,MAAM,CAACI,OAA5B,CAFL;AAIHV,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAOJ,SAAKF,KAAK,CAACc,iBAAX;AAA8B;AAC1B,cAAMV,MAAM,GAAGG,KAAK,CAACH,MAAN,CAAaW,GAAb,CAAkBC,KAAD,IAAmB;AAC/C,cAAIA,KAAK,CAACC,GAAN,KAAcT,MAAM,CAACI,OAAzB,EAAkC,OAAO,EAAE,GAAGI,KAAL;AAAYE,YAAAA,IAAI,EAAE,CAACF,KAAK,CAACE;AAAzB,WAAP;AAClC,iBAAOF,KAAP;AACH,SAHc,CAAf;AAKA,eAAO,EACH,GAAGT,KADA;AAEHH,UAAAA;AAFG,SAAP;AAIH;;AAED,SAAKJ,KAAK,CAACmB,YAAX;AAAyB;AACrB,cAAMf,MAAM,GAAGG,KAAK,CAACH,MAAN,CAAagB,MAAb,CAAqBJ,KAAD,IAAmBA,KAAK,CAACC,GAAN,KAAcT,MAAM,CAACI,OAA5D,CAAf;AAEA,eAAO,EACH,GAAGL,KADA;AAEHH,UAAAA;AAFG,SAAP;AAIH;;AAED,SAAKJ,KAAK,CAACqB,MAAX;AACI,aAAO,EACH,GAAGd,KADA;AAEHJ,QAAAA,WAAW,EAAEK,MAAM,CAACI;AAFjB,OAAP;;AAKJ,SAAKZ,KAAK,CAACsB,sBAAX;AACI,aAAO,EACH,GAAGf,KADA;AAEHF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAckB,MAAd,CAAqBf,MAAM,CAACI,OAA5B,CAFN;AAGHV,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKF,KAAK,CAACwB,qBAAX;AACI,aAAO,EACH,GAAGjB,KADA;AAEHF,QAAAA,OAAO,EAAEG,MAAM,CAACI,OAFb;AAGHV,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKF,KAAK,CAACyB,cAAX;AAA2B;AACvB,cAAMpB,OAAO,GAAGE,KAAK,CAACF,OAAN,CAAce,MAAd,CAAsBM,CAAD,IAAYA,CAAC,CAACT,GAAF,KAAUT,MAAM,CAACI,OAAlD,CAAhB;AACA,eAAO,EACH,GAAGL,KADA;AAEHF,UAAAA;AAFG,SAAP;AAIH;;AAED;AACI,aAAOE,KAAP;AAxER;AA0EH,CA3ED;;AA6EA,eAAeD,aAAf","sourcesContent":["import { IImage } from '../../collections/image';\nimport types from './imagesTypes';\n\nexport interface IAction {\n    type: string;\n    payload: any;\n}\n\nconst initialState = {\n    loading: true,\n    text_search: '',\n    images: [],\n    gallery: [],\n};\n\nconst imagesReducer = (state = initialState, action: IAction) => {\n    switch (action.type) {\n        case types.FETCH_IMAGES_LOADING:\n            return {\n                ...state,\n                loading: true,\n            };\n\n        case types.FETCH_IMAGES_SUCCESS:\n            return {\n                ...state,\n                images: action.payload,\n                loading: false,\n            };\n\n        case types.ADD_IMAGES_SUCCESS:\n            return {\n                ...state,\n                images: [...state.images, ...action.payload],\n\n                loading: false,\n            };\n\n        case types.TOOGLE_LIKE_IMAGE: {\n            const images = state.images.map((image: IImage) => {\n                if (image._id === action.payload) return { ...image, star: !image.star };\n                return image;\n            });\n\n            return {\n                ...state,\n                images,\n            };\n        }\n\n        case types.DELETE_IMAGE: {\n            const images = state.images.filter((image: IImage) => image._id !== action.payload);\n\n            return {\n                ...state,\n                images,\n            };\n        }\n\n        case types.SEARCH:\n            return {\n                ...state,\n                text_search: action.payload,\n            };\n\n        case types.CREATE_GALLERY_SUCCESS:\n            return {\n                ...state,\n                gallery: state.gallery.concat(action.payload),\n                loading: false,\n            };\n\n        case types.FETCH_GALLERY_SUCCESS:\n            return {\n                ...state,\n                gallery: action.payload,\n                loading: false,\n            };\n\n        case types.DELETE_GALLERY: {\n            const gallery = state.gallery.filter((g: any) => g._id !== action.payload);\n            return {\n                ...state,\n                gallery,\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport default imagesReducer;\n"]},"metadata":{},"sourceType":"module"}