{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Button, Col, Row } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport livestreamApi from '../../../api/livestream-api';\nimport { Loading } from '../../../components';\nimport HeaderRight from '../../../components/header-customer/header-right';\nimport { BaseLayout } from '../../../layout';\nimport { loadLivestreams } from '../../../reducers/livestreamState/livestreamAction';\nimport EmptyLivestream from './empty-livestream';\nimport LivestreamList from './livestream-list';\nimport { PlusThickerIcon } from '../../../assets/icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst title_page = '';\n\nconst useCheckEmptyLiveStream = () => {\n  _s();\n\n  const store = useSelector(state => state.store.store);\n  const [loading, setLoading] = useState(true);\n  const [isEmpty, setIsEmpty] = useState(false);\n  useEffect(() => {\n    async function handleCheckEmptyLivestream(storeId) {\n      try {\n        setLoading(true);\n        const response = await livestreamApi.checkEmptyLivestream(storeId);\n        setIsEmpty(response.isEmpty);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n      }\n    }\n\n    if (store) {\n      handleCheckEmptyLivestream(store._id);\n    }\n  }, [store]);\n  return {\n    isEmpty,\n    loadingEmptyLivestream: loading\n  };\n};\n\n_s(useCheckEmptyLiveStream, \"hW/ceD0yh5B6oF1BJ8K+27xUz8o=\", false, function () {\n  return [useSelector];\n});\n\nconst LiveStreamList = props => {\n  _s2();\n\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.livestream.loading);\n  const isLoaded = useSelector(state => state.livestream.isLoaded);\n  const loadingPage = useSelector(state => state.fanpage.loading);\n  const {\n    isEmpty,\n    loadingEmptyLivestream\n  } = useCheckEmptyLiveStream();\n  useEffect(() => {\n    if (!loadingEmptyLivestream && !isEmpty) {\n      dispatch(loadLivestreams());\n    }\n  }, [isEmpty, loadingEmptyLivestream]);\n\n  const renderContent = () => {\n    if (isEmpty) return /*#__PURE__*/_jsxDEV(EmptyLivestream, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }, this);\n    if (loadingEmptyLivestream || (loadingPage || loading) && !isLoaded) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 87\n    }, this);\n    return /*#__PURE__*/_jsxDEV(LivestreamList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BaseLayout, {\n    title: title_page,\n    children: [/*#__PURE__*/_jsxDEV(HeaderRight, {\n      title: \"Danh s\\xE1ch k\\u1ECBch b\\u1EA3n livestream\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      style: {\n        backgroundColor: '#f6f8f8'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        justify: \"end\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/customer/livestream/new\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(PlusThickerIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 43\n              }, this),\n              type: \"primary\",\n              className: \"btn-add\",\n              children: \"Th\\xEAm m\\u1EDBi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      style: {\n        backgroundColor: '#edf1f2'\n      },\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(LiveStreamList, \"xgY/TOq8lpf82x3HuH6hmawOvS0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useCheckEmptyLiveStream];\n});\n\n_c = LiveStreamList;\nexport default LiveStreamList;\n\nvar _c;\n\n$RefreshReg$(_c, \"LiveStreamList\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/index.tsx"],"names":["Button","Col","Row","React","useEffect","useState","useDispatch","useSelector","Link","livestreamApi","Loading","HeaderRight","BaseLayout","loadLivestreams","EmptyLivestream","LivestreamList","PlusThickerIcon","title_page","useCheckEmptyLiveStream","store","state","loading","setLoading","isEmpty","setIsEmpty","handleCheckEmptyLivestream","storeId","response","checkEmptyLivestream","error","_id","loadingEmptyLivestream","LiveStreamList","props","dispatch","livestream","isLoaded","loadingPage","fanpage","renderContent","backgroundColor"],"mappings":"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","sourcesContent":["import { Button, Col, Row } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport livestreamApi from '../../../api/livestream-api';\nimport { Loading } from '../../../components';\nimport HeaderRight from '../../../components/header-customer/header-right';\nimport { BaseLayout } from '../../../layout';\nimport { loadLivestreams } from '../../../reducers/livestreamState/livestreamAction';\nimport EmptyLivestream from './empty-livestream';\nimport LivestreamList from './livestream-list';\nimport { PlusThickerIcon } from '../../../assets/icon';\n\ninterface Props {}\n\nconst title_page = '';\n\nconst useCheckEmptyLiveStream = () => {\n    const store = useSelector((state: any) => state.store.store);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [isEmpty, setIsEmpty] = useState<boolean>(false);\n\n    useEffect(() => {\n        async function handleCheckEmptyLivestream(storeId: string) {\n            try {\n                setLoading(true);\n                const response = await livestreamApi.checkEmptyLivestream(storeId);\n                setIsEmpty(response.isEmpty);\n                setLoading(false);\n            } catch (error) {\n                setLoading(false);\n            }\n        }\n\n        if (store) {\n            handleCheckEmptyLivestream(store._id);\n        }\n    }, [store]);\n\n    return {\n        isEmpty,\n        loadingEmptyLivestream: loading,\n    };\n};\n\nconst LiveStreamList = (props: Props) => {\n    const dispatch = useDispatch();\n\n    const loading = useSelector((state: any) => state.livestream.loading);\n    const isLoaded = useSelector((state: any) => state.livestream.isLoaded);\n    const loadingPage = useSelector((state: any) => state.fanpage.loading);\n\n    const { isEmpty, loadingEmptyLivestream } = useCheckEmptyLiveStream();\n\n    useEffect(() => {\n        if (!loadingEmptyLivestream && !isEmpty) {\n            dispatch(loadLivestreams());\n        }\n    }, [isEmpty, loadingEmptyLivestream]);\n\n    const renderContent = () => {\n        if (isEmpty) return <EmptyLivestream />;\n\n        if (loadingEmptyLivestream || ((loadingPage || loading) && !isLoaded)) return <Loading />;\n\n        return <LivestreamList />;\n    };\n\n    return (\n        <BaseLayout title={title_page}>\n            <HeaderRight title='Danh sách kịch bản livestream' />\n            <div className='heading' style={{ backgroundColor: '#f6f8f8' }}>\n                <Row align='middle' justify='end'>\n                    <Col>\n                        <Link to='/customer/livestream/new'>\n                            <Button icon={<PlusThickerIcon />} type='primary' className='btn-add'>\n                                Thêm mới\n                            </Button>\n                        </Link>\n                    </Col>\n                </Row>\n            </div>\n            <div className='content' style={{ backgroundColor: '#edf1f2' }}>\n                {renderContent()}\n            </div>\n        </BaseLayout>\n    );\n};\n\nexport default LiveStreamList;\n"]},"metadata":{},"sourceType":"module"}