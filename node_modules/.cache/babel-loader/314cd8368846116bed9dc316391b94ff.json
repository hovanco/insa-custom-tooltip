{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/delete-comment.tsx\",\n    _s = $RefreshSig$();\n\nimport { message, Modal, Tooltip } from 'antd';\nimport { isEmpty } from 'lodash';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteComment } from '../../../api/conversation-api';\nimport { TrashIcon } from '../../../assets/icon';\nimport { removeConversation, setNullForConversation, updateMainCommentConversation } from '../../../reducers/fanpageState/fanpageAction';\nimport { useConversationDetail } from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeleteComment = ({\n  comment\n}) => {\n  _s();\n\n  const conversation = useSelector(({\n    fanpage\n  }) => fanpage.conversation);\n  const store = useSelector(({\n    store\n  }) => store.store);\n  const token = useSelector(({\n    auth\n  }) => auth.token);\n  const {\n    deleteMessage,\n    getComments\n  } = useConversationDetail();\n  const dispatch = useDispatch();\n\n  const showDeleteConfirm = () => {\n    Modal.confirm({\n      title: 'Xóa bình luận?',\n      content: 'Bạn chắc chắn muốn xóa bình luận này?',\n      okText: 'Xóa bình luận',\n      okType: 'danger',\n      cancelText: 'Hủy',\n      width: 450,\n\n      onOk() {\n        handleDeleteComment();\n      },\n\n      onCancel() {}\n\n    });\n  };\n\n  const handleDeleteComment = async () => {\n    try {\n      const res = await deleteComment({\n        commentId: comment.id,\n        fbPageId: conversation.fbPageId,\n        storeId: store._id,\n        token: token.accessToken,\n        conversationId: conversation._id\n      });\n      deleteMessage(comment);\n\n      if (comment.id === conversation.fbObjectId) {\n        if (isEmpty(conversation.commentIds)) {\n          dispatch(setNullForConversation());\n          dispatch(removeConversation({\n            conversationId: conversation._id\n          }));\n        } else {\n          const fbObjectId = (conversation.commentIds || []).shift() || '';\n          dispatch(updateMainCommentConversation({\n            conversationId: conversation._id,\n            fbObjectId,\n            commentIds: conversation.commentIds || []\n          }));\n        }\n\n        return;\n      } else if (Array.isArray(conversation.commentIds) && conversation.commentIds.includes(comment.id)) {\n        dispatch(updateMainCommentConversation({\n          conversationId: conversation._id,\n          fbObjectId: conversation.fbObjectId,\n          commentIds: conversation.commentIds.filter(id => id !== comment.id)\n        }));\n      }\n    } catch (error) {\n      message.error('Đã có lỗi xảy ra!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    placement: \"top\",\n    title: \"X\\xF3a b\\xECnh lu\\u1EADn\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bubble_action-item\",\n      children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n        onClick: showDeleteConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeleteComment, \"AsH0kkaCKt9dXR0f9bxGBnMAYEk=\", false, function () {\n  return [useSelector, useSelector, useSelector, useConversationDetail, useDispatch];\n});\n\n_c = DeleteComment;\nexport default DeleteComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteComment\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/delete-comment.tsx"],"names":["message","Modal","Tooltip","isEmpty","React","useDispatch","useSelector","deleteComment","TrashIcon","removeConversation","setNullForConversation","updateMainCommentConversation","useConversationDetail","DeleteComment","comment","conversation","fanpage","store","token","auth","deleteMessage","getComments","dispatch","showDeleteConfirm","confirm","title","content","okText","okType","cancelText","width","onOk","handleDeleteComment","onCancel","res","commentId","id","fbPageId","storeId","_id","accessToken","conversationId","fbObjectId","commentIds","shift","Array","isArray","includes","filter","error"],"mappings":"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","sourcesContent":["import { message, Modal, Tooltip } from 'antd';\nimport { isEmpty } from 'lodash';\nimport React, { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteComment } from '../../../api/conversation-api';\nimport { TrashIcon } from '../../../assets/icon';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport {\n    removeConversation,\n    setNullForConversation,\n    updateMainCommentConversation,\n} from '../../../reducers/fanpageState/fanpageAction';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { Comment, useConversationDetail } from './context';\n\ninterface Props {\n    comment: Comment;\n}\n\nconst DeleteComment: FC<Props> = ({ comment }): JSX.Element => {\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n\n    const { deleteMessage, getComments } = useConversationDetail();\n\n    const dispatch = useDispatch();\n\n    const showDeleteConfirm = () => {\n        Modal.confirm({\n            title: 'Xóa bình luận?',\n            content: 'Bạn chắc chắn muốn xóa bình luận này?',\n            okText: 'Xóa bình luận',\n            okType: 'danger',\n            cancelText: 'Hủy',\n            width: 450,\n            onOk() {\n                handleDeleteComment();\n            },\n            onCancel() {},\n        });\n    };\n\n    const handleDeleteComment = async () => {\n        try {\n            const res = await deleteComment({\n                commentId: comment.id,\n                fbPageId: conversation.fbPageId,\n                storeId: store._id,\n                token: token.accessToken,\n                conversationId: conversation._id,\n            });\n            deleteMessage(comment);\n            if (comment.id === conversation.fbObjectId) {\n                if (isEmpty(conversation.commentIds)) {\n                    dispatch(setNullForConversation());\n                    dispatch(\n                        removeConversation({\n                            conversationId: conversation._id,\n                        })\n                    );\n                } else {\n                    const fbObjectId = (conversation.commentIds || []).shift() || '';\n                    dispatch(\n                        updateMainCommentConversation({\n                            conversationId: conversation._id,\n                            fbObjectId,\n                            commentIds: conversation.commentIds || [],\n                        })\n                    );\n                }\n                return;\n            } else if (\n                Array.isArray(conversation.commentIds) &&\n                conversation.commentIds.includes(comment.id)\n            ) {\n                dispatch(\n                    updateMainCommentConversation({\n                        conversationId: conversation._id,\n                        fbObjectId: conversation.fbObjectId,\n                        commentIds: conversation.commentIds.filter((id) => id !== comment.id),\n                    })\n                );\n            }\n        } catch (error) {\n            message.error('Đã có lỗi xảy ra!');\n        }\n    };\n\n    return (\n        <Tooltip placement='top' title='Xóa bình luận'>\n            <div className='bubble_action-item'>\n                <TrashIcon onClick={showDeleteConfirm} />\n            </div>\n        </Tooltip>\n    );\n};\n\nexport default DeleteComment;\n"]},"metadata":{},"sourceType":"module"}