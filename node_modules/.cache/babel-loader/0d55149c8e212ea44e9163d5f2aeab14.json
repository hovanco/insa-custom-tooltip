{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/order-address.tsx\",\n    _s = $RefreshSig$();\n\nimport { Select, Form } from 'antd';\nimport { map } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport locationApi from '../../api/location-api';\nimport { disabledAutosuggestion } from '../../utils/disabled-autosuggestion';\nimport { formItemLayout, style } from './form-update-order';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderAddress = ({\n  changeAddress,\n  order,\n  disabled = false\n}) => {\n  _s();\n\n  const [loadingProvince, setLoadingProvince] = useState(true);\n  const [provinceId, setProvinceId] = useState(order ? order.customer.province : undefined);\n  const [provinces, setProvinces] = useState([]);\n  const [districtId, setDistrictId] = useState(order ? order.customer.district : undefined);\n  const [loadingDistrict, setLoadingDistrict] = useState(false);\n  const [districts, setDistricts] = useState([]);\n  const [wardId, setWardId] = useState(order ? order.customer.ward : undefined);\n  const [wards, setWards] = useState([]);\n  const [loadingWard, setLoadingWard] = useState(false);\n  const [form] = Form.useForm();\n\n  const onChangeProvince = value => {\n    setProvinceId(value);\n    setDistrictId(undefined);\n    setWardId(undefined);\n    form.setFieldsValue({\n      districtId: undefined,\n      wardId: undefined\n    });\n    const newOrder = { ...order,\n      customer: { ...order.customer,\n        province: value,\n        district: undefined,\n        ward: undefined\n      }\n    };\n    changeAddress(newOrder);\n  };\n\n  const onChangeDistrict = value => {\n    setDistrictId(value);\n    setWardId(undefined);\n    form.setFieldsValue({\n      wardId: undefined\n    });\n    const newOrder = { ...order,\n      customer: { ...order.customer,\n        district: value,\n        ward: undefined\n      }\n    };\n    changeAddress(newOrder);\n  };\n\n  const onChangeWard = value => {\n    setWardId(value);\n    const newOrder = { ...order,\n      customer: { ...order.customer,\n        ward: value\n      }\n    };\n    changeAddress(newOrder);\n  };\n\n  useEffect(() => {\n    async function getListProvinces() {\n      try {\n        const response = await locationApi.getProvinces();\n        setProvinces(response);\n        setLoadingProvince(false);\n      } catch (error) {\n        setProvinces([]);\n        setLoadingProvince(false);\n      }\n    }\n\n    getListProvinces();\n  }, []);\n  useEffect(() => {\n    async function getListDistricts() {\n      if (!provinceId) return null;\n      setLoadingDistrict(true);\n\n      try {\n        const response = await locationApi.getDistricts(provinceId);\n        setDistricts(response);\n        setLoadingDistrict(false);\n      } catch (error) {\n        setDistricts([]);\n        setLoadingDistrict(false);\n      }\n    }\n\n    getListDistricts();\n  }, [provinceId]);\n  useEffect(() => {\n    async function getListWard() {\n      if (!districtId) return null;\n      setLoadingWard(true);\n\n      try {\n        const response = await locationApi.getWards({\n          provinceId,\n          districtId\n        });\n        setWards(response);\n        setLoadingWard(false);\n      } catch (error) {\n        setWards([]);\n        setLoadingWard(false);\n      }\n    }\n\n    getListWard();\n  }, [districtId]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"T\\u1EC9nh/TP\",\n      ...formItemLayout,\n      style: style,\n      rules: [{\n        required: true,\n        message: 'Chọn Tỉnh/thành phố'\n      }],\n      name: \"provinceId\",\n      initialValue: provinceId,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        loading: loadingProvince,\n        placeholder: \"T\\u1EC9nh/th\\xE0nh ph\\u1ED1\",\n        value: provinceId,\n        onChange: onChangeProvince,\n        disabled: disabled,\n        onFocus: disabledAutosuggestion,\n        children: map(provinces, province => /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: province.code,\n          children: province.name\n        }, province.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Qu\\u1EADn/Huy\\u1EC7n\",\n      ...formItemLayout,\n      style: style,\n      rules: [{\n        required: true,\n        message: 'Chọn Quận/Huyện'\n      }],\n      name: \"districtId\",\n      initialValue: districtId,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        style: {\n          width: '100%'\n        },\n        placeholder: \"Qu\\u1EADn/Huy\\u1EC7n\",\n        value: districtId,\n        loading: loadingDistrict,\n        onChange: onChangeDistrict,\n        disabled: disabled,\n        onFocus: disabledAutosuggestion,\n        children: map(districts, district => /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: district.code,\n          children: district.name\n        }, district.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"X\\xE3/Ph\\u01B0\\u1EDDng\",\n      ...formItemLayout,\n      style: style,\n      rules: [{\n        required: true,\n        message: 'Chọn Phường/Xã'\n      }],\n      name: \"wardId\",\n      initialValue: wardId,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        style: {\n          width: '100%'\n        },\n        placeholder: \"Ph\\u01B0\\u1EDDng/X\\xE3\",\n        value: wardId,\n        loading: loadingWard,\n        onChange: onChangeWard,\n        disabled: disabled || !order.customer.district,\n        onFocus: disabledAutosuggestion,\n        children: map(wards, ward => /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: ward.code,\n          children: ward.name\n        }, ward.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderAddress, \"U3qJfhSEjf9deLJ2HXtnfkjxLek=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = OrderAddress;\nexport default OrderAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderAddress\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/order-address.tsx"],"names":["Select","Form","map","React","useEffect","useState","locationApi","disabledAutosuggestion","formItemLayout","style","OrderAddress","changeAddress","order","disabled","loadingProvince","setLoadingProvince","provinceId","setProvinceId","customer","province","undefined","provinces","setProvinces","districtId","setDistrictId","district","loadingDistrict","setLoadingDistrict","districts","setDistricts","wardId","setWardId","ward","wards","setWards","loadingWard","setLoadingWard","form","useForm","onChangeProvince","value","setFieldsValue","newOrder","onChangeDistrict","onChangeWard","getListProvinces","response","getProvinces","error","getListDistricts","getDistricts","getListWard","getWards","required","message","code","name","width"],"mappings":"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","sourcesContent":["import { Select, Form } from 'antd';\nimport { map } from 'lodash';\nimport React, { useEffect, useState } from 'react';\n\nimport locationApi from '../../api/location-api';\nimport { disabledAutosuggestion } from '../../utils/disabled-autosuggestion';\nimport { Province, District, Ward } from '../create-store/create-store-form';\nimport { formItemLayout, style } from './form-update-order';\n\ninterface Props {\n    changeAddress: (order: any) => void;\n    order: any;\n    disabled?: boolean;\n}\n\nconst OrderAddress = ({ changeAddress, order, disabled = false }: Props): JSX.Element => {\n    const [loadingProvince, setLoadingProvince] = useState(true);\n    const [provinceId, setProvinceId] = useState<string | undefined>(\n        order ? (order as any).customer.province : undefined\n    );\n    const [provinces, setProvinces] = useState<Province[]>([]);\n\n    const [districtId, setDistrictId] = useState<string | undefined>(\n        order ? (order as any).customer.district : undefined\n    );\n    const [loadingDistrict, setLoadingDistrict] = useState<boolean>(false);\n    const [districts, setDistricts] = useState<District[]>([]);\n\n    const [wardId, setWardId] = useState<string | undefined>(\n        order ? (order as any).customer.ward : undefined\n    );\n    const [wards, setWards] = useState<District[]>([]);\n    const [loadingWard, setLoadingWard] = useState<boolean>(false);\n\n    const [form] = Form.useForm();\n\n    const onChangeProvince = (value: string) => {\n        setProvinceId(value);\n        setDistrictId(undefined);\n        setWardId(undefined);\n        form.setFieldsValue({\n            districtId: undefined,\n            wardId: undefined,\n        });\n        const newOrder = {\n            ...(order as any),\n            customer: {\n                ...(order as any).customer,\n                province: value,\n                district: undefined,\n                ward: undefined,\n            },\n        };\n        changeAddress(newOrder);\n    };\n\n    const onChangeDistrict = (value: string) => {\n        setDistrictId(value);\n        setWardId(undefined);\n        form.setFieldsValue({\n            wardId: undefined,\n        });\n        const newOrder = {\n            ...(order as any),\n            customer: {\n                ...(order as any).customer,\n                district: value,\n                ward: undefined,\n            },\n        };\n        changeAddress(newOrder);\n    };\n\n    const onChangeWard = (value: string) => {\n        setWardId(value);\n\n        const newOrder = {\n            ...(order as any),\n            customer: {\n                ...(order as any).customer,\n                ward: value,\n            },\n        };\n        changeAddress(newOrder);\n    };\n\n    useEffect(() => {\n        async function getListProvinces() {\n            try {\n                const response = await locationApi.getProvinces();\n\n                setProvinces(response);\n                setLoadingProvince(false);\n            } catch (error) {\n                setProvinces([]);\n                setLoadingProvince(false);\n            }\n        }\n        getListProvinces();\n    }, []);\n\n    useEffect(() => {\n        async function getListDistricts() {\n            if (!provinceId) return null;\n            setLoadingDistrict(true);\n            try {\n                const response = await locationApi.getDistricts(provinceId);\n                setDistricts(response);\n                setLoadingDistrict(false);\n            } catch (error) {\n                setDistricts([]);\n                setLoadingDistrict(false);\n            }\n        }\n        getListDistricts();\n    }, [provinceId]);\n\n    useEffect(() => {\n        async function getListWard() {\n            if (!districtId) return null;\n            setLoadingWard(true);\n            try {\n                const response = await locationApi.getWards({\n                    provinceId,\n                    districtId,\n                });\n                setWards(response);\n                setLoadingWard(false);\n            } catch (error) {\n                setWards([]);\n                setLoadingWard(false);\n            }\n        }\n        getListWard();\n    }, [districtId]);\n\n    return (\n        <Form form={form}>\n            <Form.Item\n                label='Tỉnh/TP'\n                {...formItemLayout}\n                style={style}\n                rules={[{ required: true, message: 'Chọn Tỉnh/thành phố' }]}\n                name='provinceId'\n                initialValue={provinceId}\n            >\n                <Select\n                    loading={loadingProvince}\n                    placeholder='Tỉnh/thành phố'\n                    value={provinceId}\n                    onChange={onChangeProvince}\n                    disabled={disabled}\n                    onFocus={disabledAutosuggestion}\n                >\n                    {map(provinces, (province: Province) => (\n                        <Select.Option key={province.code} value={province.code}>\n                            {province.name}\n                        </Select.Option>\n                    ))}\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                label='Quận/Huyện'\n                {...formItemLayout}\n                style={style}\n                rules={[{ required: true, message: 'Chọn Quận/Huyện' }]}\n                name='districtId'\n                initialValue={districtId}\n            >\n                <Select\n                    style={{ width: '100%' }}\n                    placeholder='Quận/Huyện'\n                    value={districtId}\n                    loading={loadingDistrict}\n                    onChange={onChangeDistrict}\n                    disabled={disabled}\n                    onFocus={disabledAutosuggestion}\n                >\n                    {map(districts, (district: District) => (\n                        <Select.Option value={district.code} key={district.code}>\n                            {district.name}\n                        </Select.Option>\n                    ))}\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                label='Xã/Phường'\n                {...formItemLayout}\n                style={style}\n                rules={[{ required: true, message: 'Chọn Phường/Xã' }]}\n                name='wardId'\n                initialValue={wardId}\n            >\n                <Select\n                    style={{ width: '100%' }}\n                    placeholder='Phường/Xã'\n                    value={wardId}\n                    loading={loadingWard}\n                    onChange={onChangeWard}\n                    disabled={disabled || !order.customer.district}\n                    onFocus={disabledAutosuggestion}\n                >\n                    {map(wards, (ward: Ward) => (\n                        <Select.Option value={ward.code} key={ward.code}>\n                            {ward.name}\n                        </Select.Option>\n                    ))}\n                </Select>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default OrderAddress;\n"]},"metadata":{},"sourceType":"module"}