{"ast":null,"code":"import { SOCIAL_NETWORK_PATH, SOCIAL_NETWORK_VER } from '../configs/vars';\nimport axios from './axios-client';\nexport const loadQuickMessage = payload => {\n  const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${payload.storeId}/pages/${payload.pageId}/quick-answers`;\n  return axios({\n    url,\n    method: 'GET'\n  });\n};\nexport const createQuickMessage = payload => {\n  const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${payload.storeId}/pages/${payload.pageId}/quick-answers`;\n  return axios({\n    url,\n    method: 'POST',\n    data: payload.data\n  });\n};\nexport const updateQuickMessage = payload => {\n  const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${payload.storeId}/pages/${payload.pageId}/quick-answers/${payload.quickId}`;\n  return axios({\n    url,\n    method: 'PUT',\n    data: payload.data\n  });\n};\nexport const deleteQuickMessage = payload => {\n  const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${payload.storeId}/pages/${payload.pageId}/quick-answers/${payload.quickId}`;\n  return axios({\n    url,\n    method: 'DELETE'\n  });\n};\nexport const cloneQuickMessage = async ({\n  storeId,\n  pageId,\n  data\n}) => {\n  const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/pages/${pageId}/quick-answers/clone`;\n  const response = await axios({\n    url,\n    method: 'POST',\n    data\n  });\n  return response.data;\n}; // get list label of page\n\nexport const getListLabels = async ({\n  storeId,\n  pageId,\n  limit = 10\n}) => {\n  const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/pages/${pageId}/labels?limit=${limit}`;\n  const response = await axios({\n    method: 'GET',\n    url\n  });\n  return response.data;\n}; // add label\n\nexport async function addLabel({\n  storeId,\n  pageId,\n  data\n}) {\n  const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/pages/${pageId}/labels`;\n  const response = await axios({\n    method: 'POST',\n    url,\n    data\n  });\n  return response.data;\n} // remove label\n\nexport async function removeLabel({\n  storeId,\n  pageId,\n  labelId\n}) {\n  const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/pages/${pageId}/labels/${labelId}`;\n  const response = await axios({\n    method: 'DELETE',\n    url\n  });\n  return response.data;\n} // update label\n\nexport async function updateLabel({\n  storeId,\n  pageId,\n  data,\n  labelId\n}) {\n  const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/pages/${pageId}/labels/${labelId}`;\n  const response = await axios({\n    method: 'PUT',\n    url,\n    data\n  });\n  return response.data;\n} // clone labels\n\nexport async function cloneLabels({\n  storeId,\n  pageId,\n  data\n}) {\n  const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/pages/${pageId}/labels/clone`;\n  const response = await axios({\n    method: 'POST',\n    url,\n    data\n  });\n  return response.data;\n}\nexport const getFacebookPageSetting = async ({\n  storeId,\n  fbPageId,\n  token\n}) => {\n  const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/facebook-pages/${fbPageId}/settings`;\n  const response = await axios({\n    method: 'GET',\n    url\n  });\n  return response.data;\n};\nexport const updateFacebookPageSetting = async ({\n  storeId,\n  fbPageId,\n  token,\n  data\n}) => {\n  const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/facebook-pages/${fbPageId}/settings`;\n  const response = await axios({\n    method: 'PUT',\n    url,\n    data\n  });\n  return response.data;\n};","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/api/setting.ts"],"names":["SOCIAL_NETWORK_PATH","SOCIAL_NETWORK_VER","axios","loadQuickMessage","payload","url","storeId","pageId","method","createQuickMessage","data","updateQuickMessage","quickId","deleteQuickMessage","cloneQuickMessage","response","getListLabels","limit","addLabel","removeLabel","labelId","updateLabel","cloneLabels","getFacebookPageSetting","fbPageId","token","updateFacebookPageSetting"],"mappings":"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","sourcesContent":["import { AxiosPromise } from 'axios';\nimport { SOCIAL_NETWORK_PATH, SOCIAL_NETWORK_VER } from '../configs/vars';\nimport { Payload } from '../reducers/setting/interfaces';\nimport axios from './axios-client';\n\nexport const loadQuickMessage = (payload: Payload): AxiosPromise => {\n    const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${payload.storeId}/pages/${payload.pageId}/quick-answers`;\n    return axios({\n        url,\n        method: 'GET',\n    });\n};\n\nexport const createQuickMessage = (payload: Payload): AxiosPromise => {\n    const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${payload.storeId}/pages/${payload.pageId}/quick-answers`;\n\n    return axios({\n        url,\n        method: 'POST',\n        data: payload.data,\n    });\n};\n\nexport const updateQuickMessage = (payload: Payload): AxiosPromise => {\n    const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${payload.storeId}/pages/${payload.pageId}/quick-answers/${payload.quickId}`;\n\n    return axios({\n        url,\n        method: 'PUT',\n        data: payload.data,\n    });\n};\n\nexport const deleteQuickMessage = (payload: Payload): AxiosPromise => {\n    const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${payload.storeId}/pages/${payload.pageId}/quick-answers/${payload.quickId}`;\n\n    return axios({\n        url,\n        method: 'DELETE',\n    });\n};\n\nexport const cloneQuickMessage = async ({\n    storeId,\n    pageId,\n    data,\n}: {\n    storeId: string;\n    pageId: string;\n    data: {\n        fbPageId: string;\n        replace?: boolean;\n        copyAll?: boolean;\n        quickAnswerIds?: string[];\n    };\n}): Promise<any> => {\n    const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/pages/${pageId}/quick-answers/clone`;\n    const response = await axios({\n        url,\n        method: 'POST',\n        data,\n    });\n\n    return response.data;\n};\n\n// get list label of page\n\nexport const getListLabels = async ({\n    storeId,\n    pageId,\n    limit = 10,\n}: {\n    storeId: string;\n    pageId: string;\n    limit?: number;\n}): Promise<any> => {\n    const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/pages/${pageId}/labels?limit=${limit}`;\n    const response = await axios({\n        method: 'GET',\n        url,\n    });\n    return response.data;\n};\n\n// add label\nexport async function addLabel({\n    storeId,\n    pageId,\n    data,\n}: {\n    storeId: string;\n    pageId: string;\n    data: any;\n}): Promise<any> {\n    const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/pages/${pageId}/labels`;\n\n    const response = await axios({\n        method: 'POST',\n        url,\n        data,\n    });\n\n    return response.data;\n}\n\n// remove label\nexport async function removeLabel({\n    storeId,\n    pageId,\n    labelId,\n}: {\n    storeId: string;\n    pageId: string;\n    labelId: string;\n}): Promise<any> {\n    const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/pages/${pageId}/labels/${labelId}`;\n\n    const response = await axios({\n        method: 'DELETE',\n        url,\n    });\n    return response.data;\n}\n\n// update label\nexport async function updateLabel({\n    storeId,\n    pageId,\n    data,\n    labelId,\n}: {\n    storeId: string;\n    pageId: string;\n    data: any;\n    labelId: string;\n}): Promise<any> {\n    const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/pages/${pageId}/labels/${labelId}`;\n\n    const response = await axios({\n        method: 'PUT',\n        url,\n        data,\n    });\n    return response.data;\n}\n\n// clone labels\nexport async function cloneLabels({\n    storeId,\n    pageId,\n    data,\n}: {\n    storeId: string;\n    pageId: string;\n    data: {\n        fbPageId: string;\n        replace?: boolean;\n        copyAll?: boolean;\n        labelIds?: string[];\n    };\n}): Promise<any> {\n    const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/pages/${pageId}/labels/clone`;\n\n    const response = await axios({\n        method: 'POST',\n        url,\n        data,\n    });\n    return response.data;\n}\n\nexport const getFacebookPageSetting = async ({\n    storeId,\n    fbPageId,\n    token,\n}: {\n    storeId: string;\n    fbPageId: string;\n    token: string;\n}): Promise<any> => {\n    const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/facebook-pages/${fbPageId}/settings`;\n    const response = await axios({\n        method: 'GET',\n        url,\n    });\n    return response.data;\n};\n\nexport const updateFacebookPageSetting = async ({\n    storeId,\n    fbPageId,\n    token,\n    data,\n}: {\n    storeId: string;\n    fbPageId: string;\n    token: string;\n    data: { hideAllComments: boolean; hidePhoneComments: boolean };\n}): Promise<any> => {\n    const url = `${SOCIAL_NETWORK_PATH}/${SOCIAL_NETWORK_VER}/stores/${storeId}/facebook-pages/${fbPageId}/settings`;\n\n    const response = await axios({\n        method: 'PUT',\n        url,\n        data,\n    });\n    return response.data;\n};\n"]},"metadata":{},"sourceType":"module"}