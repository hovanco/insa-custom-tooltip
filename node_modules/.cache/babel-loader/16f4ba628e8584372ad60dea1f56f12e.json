{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/save-token/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { message } from 'antd';\nimport * as queryString from 'query-string';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setToken } from '../../api/token';\nimport { Loading } from '../../components';\nimport useHiddenModalExpired from '../../hooks/use-hidden-modal-expired';\nimport { BaseLayout } from '../../layout';\nimport { getUserAction } from '../../reducers/authState/authAction';\nimport types from '../../reducers/authState/authTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SaveToken = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    removeValueHidden\n  } = useHiddenModalExpired();\n  const searchState = queryString.parse(history.location.search);\n\n  const saveAndLoadUser = async () => {\n    const {\n      token,\n      location,\n      guest\n    } = searchState;\n\n    if (!location) {\n      return;\n    }\n\n    const locationValue = JSON.parse(location);\n\n    if (guest === 'true') {\n      history.replace(locationValue);\n      return;\n    }\n\n    if (!token) {\n      return;\n    }\n\n    const tokenValue = JSON.parse(token);\n    await localStorage.removeItem('shortLiveToken');\n    await setToken({\n      token: tokenValue\n    });\n    await dispatch({\n      type: types.LOGIN_SUCCESSS,\n      payload: tokenValue\n    });\n    await dispatch(getUserAction());\n    message.success('Đăng nhập thành công');\n    removeValueHidden(); //  history.replace(`/customer`);\n  };\n\n  useEffect(() => {\n    saveAndLoadUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BaseLayout, {\n    title: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Loading, {\n      full: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SaveToken, \"VAHgPSnIE7mWNHf7O/bZMAbjVa0=\", false, function () {\n  return [useHistory, useDispatch, useHiddenModalExpired];\n});\n\n_c = SaveToken;\nexport default SaveToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveToken\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/save-token/index.tsx"],"names":["message","queryString","React","useEffect","useDispatch","useHistory","setToken","Loading","useHiddenModalExpired","BaseLayout","getUserAction","types","SaveToken","history","dispatch","removeValueHidden","searchState","parse","location","search","saveAndLoadUser","token","guest","locationValue","JSON","replace","tokenValue","localStorage","removeItem","type","LOGIN_SUCCESSS","payload","success"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,cAA7B;AACA,OAAOC,KAAP,IAAoBC,SAApB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,OAAOC,KAAP,MAAkB,oCAAlB;;;AAIA,MAAMC,SAAoB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAMS,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAwBP,qBAAqB,EAAnD;AAEA,QAAMQ,WAKL,GAAGf,WAAW,CAACgB,KAAZ,CAAkBJ,OAAO,CAACK,QAAR,CAAiBC,MAAnC,CALJ;;AAOA,QAAMC,eAAe,GAAG,YAA2B;AAC/C,UAAM;AAAEC,MAAAA,KAAF;AAASH,MAAAA,QAAT;AAAmBI,MAAAA;AAAnB,QAA6BN,WAAnC;;AAEA,QAAI,CAACE,QAAL,EAAe;AACX;AACH;;AACD,UAAMK,aAAuB,GAAGC,IAAI,CAACP,KAAL,CAAWC,QAAX,CAAhC;;AACA,QAAII,KAAK,KAAK,MAAd,EAAsB;AAClBT,MAAAA,OAAO,CAACY,OAAR,CAAgBF,aAAhB;AACA;AACH;;AACD,QAAI,CAACF,KAAL,EAAY;AACR;AACH;;AACD,UAAMK,UAAU,GAAGF,IAAI,CAACP,KAAL,CAAWI,KAAX,CAAnB;AAEA,UAAMM,YAAY,CAACC,UAAb,CAAwB,gBAAxB,CAAN;AACA,UAAMtB,QAAQ,CAAC;AAAEe,MAAAA,KAAK,EAAEK;AAAT,KAAD,CAAd;AACA,UAAMZ,QAAQ,CAAC;AACXe,MAAAA,IAAI,EAAElB,KAAK,CAACmB,cADD;AAEXC,MAAAA,OAAO,EAAEL;AAFE,KAAD,CAAd;AAIA,UAAMZ,QAAQ,CAACJ,aAAa,EAAd,CAAd;AACAV,IAAAA,OAAO,CAACgC,OAAR,CAAgB,sBAAhB;AACAjB,IAAAA,iBAAiB,GAxB8B,CA0B/C;AACH,GA3BD;;AA6BAZ,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,UAAD;AAAY,IAAA,KAAK,EAAC,OAAlB;AAAA,2BACI,QAAC,OAAD;AAAS,MAAA,IAAI;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlDD;;GAAMR,S;UACcP,U,EACCD,W,EACaI,qB;;;KAH5BI,S;AAoDN,eAAeA,SAAf","sourcesContent":["import { message } from 'antd';\nimport * as queryString from 'query-string';\nimport React, { FC, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setToken } from '../../api/token';\nimport { Loading } from '../../components';\nimport useHiddenModalExpired from '../../hooks/use-hidden-modal-expired';\nimport { BaseLayout } from '../../layout';\nimport { getUserAction } from '../../reducers/authState/authAction';\nimport types from '../../reducers/authState/authTypes';\n\ninterface Props {}\n\nconst SaveToken: FC<Props> = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const { removeValueHidden } = useHiddenModalExpired();\n\n    const searchState: {\n        token?: string;\n        remember?: string;\n        location?: string;\n        guest?: string;\n    } = queryString.parse(history.location.search);\n\n    const saveAndLoadUser = async (): Promise<void> => {\n        const { token, location, guest } = searchState;\n\n        if (!location) {\n            return;\n        }\n        const locationValue: Location = JSON.parse(location);\n        if (guest === 'true') {\n            history.replace(locationValue);\n            return;\n        }\n        if (!token) {\n            return;\n        }\n        const tokenValue = JSON.parse(token);\n\n        await localStorage.removeItem('shortLiveToken');\n        await setToken({ token: tokenValue });\n        await dispatch({\n            type: types.LOGIN_SUCCESSS,\n            payload: tokenValue,\n        });\n        await dispatch(getUserAction());\n        message.success('Đăng nhập thành công');\n        removeValueHidden();\n\n        //  history.replace(`/customer`);\n    };\n\n    useEffect(() => {\n        saveAndLoadUser();\n    }, []);\n\n    return (\n        <BaseLayout title='Login'>\n            <Loading full />\n        </BaseLayout>\n    );\n};\n\nexport default SaveToken;\n"]},"metadata":{},"sourceType":"module"}