{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/message-bubble.tsx\",\n    _s = $RefreshSig$();\n\nimport { message as MessageDesign, Space, Tooltip, Avatar } from 'antd';\nimport { get, isArray, find } from 'lodash';\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport DeleteComment from './delete-comment';\nimport HideComment from './hide-comment';\nimport LikeComment from './like-comment';\nimport ModalChat from './modal-chat';\nimport { generateUrlImgFb } from '../../../utils/generate-url-img-fb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst placement = 'left';\n\nconst MessageBubble = ({\n  message,\n  me = false,\n  userId,\n  type,\n  isShowAvatarHere = false\n}) => {\n  _s();\n\n  const likedComments = useSelector(({\n    fanpage\n  }) => fanpage.conversation.likedComments);\n  const conversation = useSelector(({\n    fanpage\n  }) => fanpage.conversation);\n  const pages = useSelector(({\n    fanpage\n  }) => fanpage.pages);\n  const page = find(pages, page => page.fbObjectId === conversation.fbPageId);\n  const [liked, setLiked] = useState(get(likedComments, `${message.id}`, false));\n  let className = me ? 'item me' : 'item';\n  className = liked ? `${className} liked` : className;\n\n  const handleLike = () => setLiked(!liked);\n\n  const renderAction = () => {\n    if (type === 2) {\n      if (me) {\n        return /*#__PURE__*/_jsxDEV(DeleteComment, {\n          comment: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 24\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Space, {\n        size: 10,\n        children: [!liked && /*#__PURE__*/_jsxDEV(LikeComment, {\n          comment: message,\n          handleLike: handleLike,\n          liked: liked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(HideComment, {\n          comment: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DeleteComment, {\n          comment: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalChat, {\n          name: message.from.name || '',\n          comment: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n    }\n\n    return null;\n  };\n\n  const renderText = () => {\n    var _from;\n\n    const name = (_from = message.from) === null || _from === void 0 ? void 0 : _from.name;\n    const date = message.created_time;\n\n    if (name && date) {\n      return `${name} - ${moment(date).format('DD-MM-YYYY HH:mm')}`;\n    }\n\n    return name ? name : date ? moment(date).format('DD-MM-YYYY HH:mm') : '...';\n  };\n\n  const selectText = node => {\n    const elm = document.getElementById(node);\n    const documentBody = document.body;\n\n    if (documentBody.createTextRange && elm) {\n      const range = documentBody.createTextRange();\n      range.moveToElementText(elm);\n      range.select();\n    } else if (window.getSelection && elm) {\n      const selection = window.getSelection();\n      const range = document.createRange();\n      range.selectNodeContents(elm);\n      selection.removeAllRanges();\n      selection.addRange(range);\n    } else {\n      console.warn('Could not select text in node: Unsupported browser.');\n    }\n  };\n\n  const copyText = text => {\n    selectText(message.id);\n    document.execCommand('copy');\n    MessageDesign.success('Đã copy nội dung');\n  };\n\n  const renderBubbleLike = liked && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bubble_like\",\n    children: /*#__PURE__*/_jsxDEV(LikeComment, {\n      comment: message,\n      handleLike: handleLike,\n      liked: liked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n\n  const renderMedia = () => {\n    if (type === 1) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [message.sticker && /*#__PURE__*/_jsxDEV(Tooltip, {\n          placement: placement,\n          title: renderText(),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.sticker,\n            className: \"sticker\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), message.attachments && isArray(message.attachments.data) && message.attachments.data.map(i => {\n          if (i.mime_type === 'video/mp4') {\n            return /*#__PURE__*/_jsxDEV(Tooltip, {\n              placement: placement,\n              title: renderText(),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: message.from.id === userId ? 'video item-inner img' : 'video item-inner item-inner-other img',\n                children: /*#__PURE__*/_jsxDEV(\"video\", {\n                  src: i.video_data.url,\n                  poster: i.video_data.preview_url,\n                  preload: \"auto\",\n                  controls: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 45\n                }, this)\n              }, i.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 37\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(Tooltip, {\n            placement: placement,\n            title: renderText(),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: message.from.id === userId ? 'item-inner img' : 'item-inner item-inner-other img',\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: i.image_data.preview_url,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 41\n              }, this)\n            }, `${message.id}-mess`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 37\n            }, this)\n          }, i.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true);\n    }\n\n    if (type === 2) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [message.attachment && message.attachment.media && message.attachment.type === 'sticker' && /*#__PURE__*/_jsxDEV(Tooltip, {\n          placement: placement,\n          title: renderText(),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.attachment.media.image.src,\n            className: \"sticker\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }, this), message.attachment && message.attachment.media && (message.attachment.type === 'animated_image_share' || message.attachment.type === 'photo') && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            placement: placement,\n            title: renderText(),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 5\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: message.from.id === userId ? 'item-inner img' : 'item-inner item-inner-other img',\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: message.attachment.media.image.src,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 45\n                }, this)\n              }, `${message.id}-mess`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: renderBubbleLike\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), message.attachment && message.attachment.media && message.attachment.type === 'video_inline' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            placement: placement,\n            title: renderText(),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: message.from.id === userId ? 'video item-inner img' : 'video item-inner item-inner-other img',\n              style: {\n                marginTop: 5\n              },\n              children: /*#__PURE__*/_jsxDEV(\"video\", {\n                src: message.attachment.media.source,\n                poster: message.attachment.media.image.src,\n                preload: \"auto\",\n                controls: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: renderBubbleLike\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true);\n    }\n\n    return null;\n  };\n\n  const _message = get(message, 'message', '');\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    style: {\n      flexDirection: me ? 'row-reverse' : 'row',\n      alignItems: 'center'\n    },\n    children: [type === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-avatar\",\n      children: isShowAvatarHere ? me ? /*#__PURE__*/_jsxDEV(Avatar, {\n        src: generateUrlImgFb(page.fbObjectId, page.accessToken),\n        alt: page.name,\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n        alt: conversation.fbUsername,\n        src: generateUrlImgFb(conversation.fbUserId, page.accessToken),\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 29\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-message\",\n      children: [_message.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          placement: placement,\n          title: renderText(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: message.from.id === userId ? 'item-inner' : 'item-inner item-inner-other',\n            onDoubleClick: () => copyText(_message),\n            style: {\n              paddingBottom: liked ? 12 : 5\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              id: message.id,\n              children: _message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 33\n            }, this)\n          }, `${message.id}-mess`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: renderBubbleLike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), renderMedia()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bubble_action\",\n      children: renderAction()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this)]\n  }, message.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MessageBubble, \"iUmbKbgMLGpgYtPO5kEESghkyiM=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = MessageBubble;\nexport default MessageBubble;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageBubble\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/message-bubble.tsx"],"names":["message","MessageDesign","Space","Tooltip","Avatar","get","isArray","find","moment","React","useState","useSelector","DeleteComment","HideComment","LikeComment","ModalChat","generateUrlImgFb","placement","MessageBubble","me","userId","type","isShowAvatarHere","likedComments","fanpage","conversation","pages","page","fbObjectId","fbPageId","liked","setLiked","id","className","handleLike","renderAction","from","name","renderText","date","created_time","format","selectText","node","elm","document","getElementById","documentBody","body","createTextRange","range","moveToElementText","select","window","getSelection","selection","createRange","selectNodeContents","removeAllRanges","addRange","console","warn","copyText","text","execCommand","success","renderBubbleLike","renderMedia","sticker","attachments","data","map","i","mime_type","video_data","url","preview_url","image_data","attachment","media","image","src","marginTop","position","source","_message","flexDirection","alignItems","accessToken","fbUsername","fbUserId","length","paddingBottom"],"mappings":"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","sourcesContent":["import { message as MessageDesign, Space, Tooltip, Avatar } from 'antd';\nimport { get, isArray, find } from 'lodash';\nimport moment from 'moment';\nimport React, { FC, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { IConversation, IFacebookState, Page } from '../../../reducers/fanpageState/fanpageReducer';\nimport { Comment, Message } from './context';\nimport DeleteComment from './delete-comment';\nimport HideComment from './hide-comment';\nimport LikeComment from './like-comment';\nimport ModalChat from './modal-chat';\nimport { generateUrlImgFb } from '../../../utils/generate-url-img-fb';\n\ninterface Props {\n    message: Comment | Message | any;\n    me?: boolean;\n    userId?: string;\n    type: number;\n    isShowAvatarHere?: boolean;\n}\n\nconst placement = 'left';\n\nconst MessageBubble: FC<Props> = ({\n    message,\n    me = false,\n    userId,\n    type,\n    isShowAvatarHere = false,\n}): JSX.Element => {\n    const likedComments: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation.likedComments\n    );\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n    const pages = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.pages);\n    const page = find(pages, (page: Page) => page.fbObjectId === conversation.fbPageId);\n\n    const [liked, setLiked] = useState(get(likedComments, `${message.id}`, false));\n\n    let className = me ? 'item me' : 'item';\n    className = liked ? `${className} liked` : className;\n\n    const handleLike = () => setLiked(!liked);\n\n    const renderAction = () => {\n        if (type === 2) {\n            if (me) {\n                return <DeleteComment comment={message as Comment} />;\n            }\n\n            return (\n                <Space size={10}>\n                    {!liked && (\n                        <LikeComment\n                            comment={message as Comment}\n                            handleLike={handleLike}\n                            liked={liked}\n                        />\n                    )}\n                    <HideComment comment={message as Comment} />\n                    <DeleteComment comment={message as Comment} />\n                    <ModalChat\n                        name={(message as Comment).from.name || ''}\n                        comment={message as Comment}\n                    />\n                </Space>\n            );\n        }\n\n        return null;\n    };\n\n    const renderText = () => {\n        const name = (message as Comment).from?.name;\n        const date = (message as Comment).created_time;\n        if (name && date) {\n            return `${name} - ${moment(date).format('DD-MM-YYYY HH:mm')}`;\n        }\n        return name ? name : date ? moment(date).format('DD-MM-YYYY HH:mm') : '...';\n    };\n\n    const selectText = (node: string) => {\n        const elm: HTMLElement | null = document.getElementById(node);\n        const documentBody: any = document.body;\n\n        if (documentBody.createTextRange && elm) {\n            const range = documentBody.createTextRange();\n            range.moveToElementText(elm);\n            range.select();\n        } else if (window.getSelection && elm) {\n            const selection: any = window.getSelection();\n            const range = document.createRange();\n            range.selectNodeContents(elm);\n            selection.removeAllRanges();\n            selection.addRange(range);\n        } else {\n            console.warn('Could not select text in node: Unsupported browser.');\n        }\n    };\n\n    const copyText = (text: string) => {\n        selectText(message.id);\n        document.execCommand('copy');\n        MessageDesign.success('Đã copy nội dung');\n    };\n\n    const renderBubbleLike = liked && (\n        <div className='bubble_like'>\n            <LikeComment comment={message as Comment} handleLike={handleLike} liked={liked} />\n        </div>\n    );\n\n    const renderMedia = () => {\n        if (type === 1) {\n            return (\n                <>\n                    {message.sticker && (\n                        <Tooltip placement={placement} title={renderText()}>\n                            <img src={message.sticker} className='sticker' alt='' />\n                        </Tooltip>\n                    )}\n\n                    {message.attachments &&\n                        isArray(message.attachments.data) &&\n                        message.attachments.data.map((i: any) => {\n                            if (i.mime_type === 'video/mp4') {\n                                return (\n                                    <Tooltip placement={placement} title={renderText()}>\n                                        <div\n                                            key={i.id}\n                                            className={\n                                                message.from.id === userId\n                                                    ? 'video item-inner img'\n                                                    : 'video item-inner item-inner-other img'\n                                            }\n                                        >\n                                            <video\n                                                src={i.video_data.url}\n                                                poster={i.video_data.preview_url}\n                                                preload='auto'\n                                                controls\n                                            ></video>\n                                        </div>\n                                    </Tooltip>\n                                );\n                            }\n                            return (\n                                <Tooltip placement={placement} title={renderText()} key={i.id}>\n                                    <div\n                                        key={`${message.id}-mess`}\n                                        className={\n                                            message.from.id === userId\n                                                ? 'item-inner img'\n                                                : 'item-inner item-inner-other img'\n                                        }\n                                    >\n                                        <img src={i.image_data.preview_url} alt='' />\n                                    </div>\n                                </Tooltip>\n                            );\n                        })}\n                </>\n            );\n        }\n\n        if (type === 2) {\n            return (\n                <>\n                    {message.attachment &&\n                        message.attachment.media &&\n                        message.attachment.type === 'sticker' && (\n                            <Tooltip placement={placement} title={renderText()}>\n                                <img\n                                    src={message.attachment.media.image.src}\n                                    className='sticker'\n                                    alt=''\n                                />\n                            </Tooltip>\n                        )}\n\n                    {message.attachment &&\n                        message.attachment.media &&\n                        (message.attachment.type === 'animated_image_share' ||\n                            message.attachment.type === 'photo') && (\n                            <>\n                                <Tooltip placement={placement} title={renderText()}>\n                                    <div style={{ marginTop: 5 }}>\n                                        <div\n                                            key={`${message.id}-mess`}\n                                            className={\n                                                message.from.id === userId\n                                                    ? 'item-inner img'\n                                                    : 'item-inner item-inner-other img'\n                                            }\n                                        >\n                                            <img src={message.attachment.media.image.src} alt='' />\n                                        </div>\n                                    </div>\n                                </Tooltip>\n                                <div style={{ position: 'relative' }}>\n                                    {renderBubbleLike}\n                                </div>\n                            </>\n                        )}\n\n                    {message.attachment &&\n                        message.attachment.media &&\n                        message.attachment.type === 'video_inline' && (\n                            <>\n                                <Tooltip placement={placement} title={renderText()}>\n                                    <div\n                                        className={\n                                            message.from.id === userId\n                                                ? 'video item-inner img'\n                                                : 'video item-inner item-inner-other img'\n                                        }\n                                        style={{ marginTop: 5 }}\n                                    >\n                                        <video\n                                            src={message.attachment.media.source}\n                                            poster={message.attachment.media.image.src}\n                                            preload='auto'\n                                            controls\n                                        ></video>\n                                    </div>\n                                </Tooltip>\n                                <div style={{ position: 'relative' }}>\n                                    {renderBubbleLike}\n                                </div>\n                            </>\n                        )}\n                </>\n            );\n        }\n\n        return null;\n    };\n\n    const _message = get(message, 'message', '');\n\n    return (\n        <div\n            className={className}\n            key={message.id}\n            style={{ flexDirection: me ? 'row-reverse' : 'row', alignItems: 'center' }}\n        >\n            {type === 1 ? (\n                <div className='content-avatar'>\n                    {isShowAvatarHere ? (\n                        me ? (\n                            <Avatar\n                                src={generateUrlImgFb(page.fbObjectId, page.accessToken)}\n                                alt={page.name}\n                                size={30}\n                            />\n                        ) : (\n                            <Avatar\n                                alt={conversation.fbUsername}\n                                src={generateUrlImgFb(conversation.fbUserId, page.accessToken)}\n                                size={30}\n                            />\n                        )\n                    ) : (\n                        ''\n                    )}\n                </div>\n            ) : (\n                <></>\n            )}\n\n            <div className='content-message'>\n                {_message.length > 0 && (\n                    <>\n                        <Tooltip placement={placement} title={renderText()}>\n                            <div\n                                key={`${message.id}-mess`}\n                                className={\n                                    message.from.id === userId\n                                        ? 'item-inner'\n                                        : 'item-inner item-inner-other'\n                                }\n                                onDoubleClick={() => copyText(_message)}\n                                style={{ paddingBottom: liked ? 12 : 5 }}\n                            >\n                                <span id={message.id}>{_message}</span>\n                            </div>\n                        </Tooltip>\n                        <div style={{ position: 'relative' }}>\n                            {renderBubbleLike}\n                        </div>\n                    </>\n                )}\n\n                {renderMedia()}\n            </div>\n\n            <div className='bubble_action'>{renderAction()}</div>\n        </div>\n    );\n};\n\nexport default MessageBubble;\n"]},"metadata":{},"sourceType":"module"}