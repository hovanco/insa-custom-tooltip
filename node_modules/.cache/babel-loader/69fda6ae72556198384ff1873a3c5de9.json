{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/filter-bar.tsx\",\n    _s = $RefreshSig$();\n\nimport { EyeInvisibleOutlined } from '@ant-design/icons';\nimport { push } from 'connected-react-router';\nimport { difference, find, intersection } from 'lodash';\nimport querystring from 'querystring';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { BookmarkIcon, PhoneIcon, ReloadIcon, UnPhoneIcon } from '../../../assets/icon';\nimport { ConversationType } from '../../../collections/facebook-conversation';\nimport { loadConversations, removeConversations, setCurrentPage, setFilterConversation } from '../../../reducers/fanpageState/fanpageAction';\nimport { changePageActive } from '../../../reducers/storeState/storeAction';\nimport menus from '../sidebar/sidebar-menu';\nimport FilterBarItem from './filter-bar-item';\nimport FilterDate from './filter-date';\nimport FilterLabels from './filter-labels';\nimport FilterTabs from './filter-tabs';\nimport FilterIdPost from './filterId-post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FilterBar = ({\n  visible,\n  onChange\n}) => {\n  _s();\n\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.store.store);\n  const pages = useSelector(({\n    fanpage\n  }) => fanpage.pages);\n  const [selected, setSelected] = useState([]);\n  const [postId, setPostId] = useState();\n  const [label, setLabel] = useState();\n  const [date, setDate] = useState();\n  const menuParent = menus.parent.map(item => item.active);\n\n  const handleFilter = (value, action, active) => {\n    active === 'post_id' && setPostId(value);\n    active === 'label' && setLabel(value);\n    active === 'date' && setDate(value);\n    handleFilterConversation(action, active);\n  };\n\n  const handleFilterConversation = (action, active) => {\n    let newSelected;\n    dispatch(push('/customer/conversation'));\n\n    if (action === 'delete') {\n      newSelected = selected.filter(item => item !== active);\n\n      if (newSelected.length === 0) {\n        newSelected.push('remove');\n      }\n\n      setSelected(newSelected);\n    } else {\n      if (menuParent.includes(active)) {\n        newSelected = selected.filter(item => !menuParent.filter(menu => menu !== active).includes(item));\n        setSelected([...newSelected, active]);\n      } else if (active === 'has_phone' || active === 'not_phone') {\n        newSelected = selected.filter(item => !['has_phone', 'not_phone'].includes(item));\n        setSelected([...newSelected, active]);\n      } else {\n        setSelected([...selected, active]);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const query = querystring.parse(location.search.substring(1));\n\n    if (query.pageId) {\n      const dataSelected = [...selected];\n\n      switch (parseInt(query.type)) {\n        case ConversationType.Message:\n          dataSelected.push('message');\n          break;\n\n        case ConversationType.Comment:\n          dataSelected.push('comment');\n          break;\n\n        default:\n          break;\n      }\n\n      if (query.postId) {\n        dataSelected.push('post_id');\n        setPostId(`${query.postId}`);\n      }\n\n      setSelected(dataSelected);\n      const page = find(pages, p => p.fbObjectId === `${query.pageId}`);\n      dispatch(setCurrentPage(page));\n      dispatch(changePageActive(page));\n    }\n  }, [location]);\n  useEffect(() => {\n    onChange && onChange(difference(selected, menuParent));\n\n    if (selected.length > 0) {\n      dispatch(removeConversations());\n      let fbPageId;\n\n      if (store.activePage) {\n        fbPageId = store.activePage.fbObjectId;\n      }\n\n      if (selected.includes('changePage')) {\n        store.queryConversation = undefined;\n        dispatch(loadConversations(store.queryConversation, [fbPageId], store.activePage));\n        setSelected([]);\n        return;\n      }\n\n      if (selected.includes('remove')) {\n        let selectedTabItem = intersection(selected, menuParent);\n\n        if (selectedTabItem.length > 0) {\n          setSelected(selectedTabItem);\n        } else {\n          store.queryConversation = undefined;\n          dispatch(loadConversations(store.queryConversation, [fbPageId]));\n          setSelected([]);\n        }\n      } else {\n        let queryConversation = {};\n        selected.forEach(item => {\n          if (item === 'comment') {\n            queryConversation.type = 2;\n          }\n\n          if (item === 'message') {\n            queryConversation.type = 1;\n          }\n\n          if (item === 'not_read') {\n            queryConversation.unread = true;\n          }\n\n          if (item === 'has_phone') {\n            queryConversation.hasPhoneNo = true;\n          }\n\n          if (item === 'not_phone') {\n            queryConversation.hasPhoneNo = false;\n          }\n\n          if (item === 'not_answer') {\n            queryConversation.replied = false;\n          }\n\n          if (item === 'post_id') {\n            queryConversation.postId = postId;\n          }\n\n          if (item === 'label' && label !== '') {\n            queryConversation.label = label;\n          }\n\n          if (item === 'date') {\n            const arrDate = date ? date.split('-') : [];\n\n            if (arrDate.length === 2) {\n              queryConversation.startDate = arrDate[0];\n              queryConversation.endDate = arrDate[1];\n            }\n          }\n\n          if (item === 'user_id') {\n            queryConversation.fbUserId = store.filterUserId;\n          }\n        });\n        store.queryConversation = querystring.stringify(queryConversation);\n        dispatch(loadConversations(store.queryConversation, [fbPageId]));\n      }\n    }\n\n    dispatch(setFilterConversation(selected));\n  }, [selected]);\n  useEffect(() => {\n    if (store.queryConversation === null) {\n      setSelected(['changePage']);\n    }\n  }, [store.queryConversation]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-bar\",\n      children: [/*#__PURE__*/_jsxDEV(FilterBarItem, {\n        menu: {\n          icon: /*#__PURE__*/_jsxDEV(ReloadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 39\n          }, this),\n          title: 'Bỏ lọc',\n          active: 'remove'\n        },\n        selected: selected,\n        onClick: handleFilterConversation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FilterBarItem, {\n        menu: {\n          icon: /*#__PURE__*/_jsxDEV(EyeInvisibleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 35\n          }, this),\n          title: 'Tin chưa đọc',\n          active: 'not_read'\n        },\n        selected: selected,\n        onClick: handleFilterConversation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FilterBarItem, {\n        menu: {\n          icon: /*#__PURE__*/_jsxDEV(PhoneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 35\n          }, this),\n          title: 'Tìm có số điện thoại',\n          active: 'has_phone'\n        },\n        selected: selected,\n        onClick: handleFilterConversation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FilterBarItem, {\n        menu: {\n          icon: /*#__PURE__*/_jsxDEV(UnPhoneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 35\n          }, this),\n          title: 'Tìm không có số điện thoại',\n          active: 'not_phone'\n        },\n        selected: selected,\n        onClick: handleFilterConversation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FilterBarItem, {\n        menu: {\n          icon: /*#__PURE__*/_jsxDEV(BookmarkIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 35\n          }, this),\n          title: 'Tìm chưa trả lời',\n          active: 'not_answer'\n        },\n        selected: selected,\n        onClick: handleFilterConversation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FilterDate, {\n        selected: selected,\n        onClick: handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FilterLabels, {\n        selected: selected,\n        onClick: handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FilterIdPost, {\n        selected: selected,\n        onClick: handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FilterTabs, {\n      selected: selected,\n      onClick: handleFilterConversation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FilterBar, \"YKRea2dAWpmGg/9W82gyxwYxt90=\", false, function () {\n  return [useLocation, useDispatch, useSelector, useSelector];\n});\n\n_c = FilterBar;\nexport default FilterBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterBar\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/filter-bar.tsx"],"names":["EyeInvisibleOutlined","push","difference","find","intersection","querystring","React","useEffect","useState","useDispatch","useSelector","useLocation","BookmarkIcon","PhoneIcon","ReloadIcon","UnPhoneIcon","ConversationType","loadConversations","removeConversations","setCurrentPage","setFilterConversation","changePageActive","menus","FilterBarItem","FilterDate","FilterLabels","FilterTabs","FilterIdPost","FilterBar","visible","onChange","location","dispatch","store","state","pages","fanpage","selected","setSelected","postId","setPostId","label","setLabel","date","setDate","menuParent","parent","map","item","active","handleFilter","value","action","handleFilterConversation","newSelected","filter","length","includes","menu","query","parse","search","substring","pageId","dataSelected","parseInt","type","Message","Comment","page","p","fbObjectId","fbPageId","activePage","queryConversation","undefined","selectedTabItem","forEach","unread","hasPhoneNo","replied","arrDate","split","startDate","endDate","fbUserId","filterUserId","stringify","icon","title"],"mappings":"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","sourcesContent":["import { EyeInvisibleOutlined } from '@ant-design/icons';\nimport { push } from 'connected-react-router';\nimport { difference, find, intersection } from 'lodash';\nimport querystring from 'querystring';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { BookmarkIcon, PhoneIcon, ReloadIcon, UnPhoneIcon } from '../../../assets/icon';\nimport { ConversationType } from '../../../collections/facebook-conversation';\nimport {\n    loadConversations,\n    removeConversations,\n    setCurrentPage,\n    setFilterConversation,\n} from '../../../reducers/fanpageState/fanpageAction';\nimport { IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { changePageActive } from '../../../reducers/storeState/storeAction';\nimport menus from '../sidebar/sidebar-menu';\nimport FilterBarItem from './filter-bar-item';\nimport FilterDate from './filter-date';\nimport FilterLabels from './filter-labels';\nimport FilterTabs from './filter-tabs';\nimport FilterIdPost from './filterId-post';\n\ninterface Props {\n    visible: boolean;\n    onChange?: Function;\n}\n\ntype QueryConversation = {\n    type?: number;\n    unread?: boolean;\n    hasPhoneNo?: boolean;\n    label?: string;\n    postId?: string;\n    startDate?: string;\n    endDate?: string;\n    fbUserId?: string;\n    replied?: boolean;\n};\n\nconst FilterBar: FC<Props> = ({ visible, onChange }): JSX.Element => {\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const store = useSelector((state: any) => state.store.store);\n    const pages = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.pages);\n\n    const [selected, setSelected] = useState<string[]>([]);\n    const [postId, setPostId] = useState<string>();\n    const [label, setLabel] = useState<string>();\n    const [date, setDate] = useState<string>();\n\n    const menuParent: string[] = menus.parent.map((item) => item.active);\n\n    const handleFilter = (value: string | number, action: string, active: string) => {\n        active === 'post_id' && setPostId(value as string);\n        active === 'label' && setLabel(value as string);\n        active === 'date' && setDate(value as string);\n        handleFilterConversation(action, active);\n    };\n\n    const handleFilterConversation = (action: string, active: string) => {\n        let newSelected: string[];\n\n        dispatch(push('/customer/conversation'));\n\n        if (action === 'delete') {\n            newSelected = selected.filter((item) => item !== active);\n            if (newSelected.length === 0) {\n                newSelected.push('remove');\n            }\n            setSelected(newSelected);\n        } else {\n            if (menuParent.includes(active)) {\n                newSelected = selected.filter(\n                    (item) => !menuParent.filter((menu) => menu !== active).includes(item)\n                );\n                setSelected([...newSelected, active]);\n            } else if (active === 'has_phone' || active === 'not_phone') {\n                newSelected = selected.filter((item) => !['has_phone', 'not_phone'].includes(item));\n                setSelected([...newSelected, active]);\n            } else {\n                setSelected([...selected, active]);\n            }\n        }\n    };\n\n    useEffect(() => {\n        const query = querystring.parse(location.search.substring(1));\n\n        if (query.pageId) {\n            const dataSelected = [...selected];\n            switch (parseInt(query.type as string)) {\n                case ConversationType.Message:\n                    dataSelected.push('message');\n                    break;\n                case ConversationType.Comment:\n                    dataSelected.push('comment');\n                    break;\n                default:\n                    break;\n            }\n\n            if (query.postId) {\n                dataSelected.push('post_id');\n                setPostId(`${query.postId}`);\n            }\n\n            setSelected(dataSelected);\n\n            const page = find(pages, (p: any) => p.fbObjectId === `${query.pageId}`);\n            dispatch(setCurrentPage(page));\n            dispatch(changePageActive(page));\n        }\n    }, [location]);\n\n    useEffect(() => {\n        onChange && onChange(difference(selected, menuParent));\n\n        if (selected.length > 0) {\n            dispatch(removeConversations());\n            let fbPageId;\n            if (store.activePage) {\n                fbPageId = store.activePage.fbObjectId;\n            }\n            if (selected.includes('changePage')) {\n                store.queryConversation = undefined;\n                dispatch(loadConversations(store.queryConversation, [fbPageId], store.activePage));\n                setSelected([]);\n                return;\n            }\n            if (selected.includes('remove')) {\n                let selectedTabItem = intersection(selected, menuParent);\n\n                if (selectedTabItem.length > 0) {\n                    setSelected(selectedTabItem);\n                } else {\n                    store.queryConversation = undefined;\n                    dispatch(loadConversations(store.queryConversation, [fbPageId]));\n                    setSelected([]);\n                }\n            } else {\n                let queryConversation: QueryConversation = {};\n                selected.forEach((item) => {\n                    if (item === 'comment') {\n                        queryConversation.type = 2;\n                    }\n                    if (item === 'message') {\n                        queryConversation.type = 1;\n                    }\n                    if (item === 'not_read') {\n                        queryConversation.unread = true;\n                    }\n                    if (item === 'has_phone') {\n                        queryConversation.hasPhoneNo = true;\n                    }\n                    if (item === 'not_phone') {\n                        queryConversation.hasPhoneNo = false;\n                    }\n                    if (item === 'not_answer') {\n                        queryConversation.replied = false;\n                    }\n                    if (item === 'post_id') {\n                        queryConversation.postId = postId;\n                    }\n                    if (item === 'label' && label !== '') {\n                        queryConversation.label = label;\n                    }\n                    if (item === 'date') {\n                        const arrDate = date ? date.split('-') : [];\n                        if (arrDate.length === 2) {\n                            queryConversation.startDate = arrDate[0];\n                            queryConversation.endDate = arrDate[1];\n                        }\n                    }\n                    if (item === 'user_id') {\n                        queryConversation.fbUserId = store.filterUserId;\n                    }\n                });\n                store.queryConversation = querystring.stringify(queryConversation);\n                dispatch(loadConversations(store.queryConversation, [fbPageId]));\n            }\n        }\n        dispatch(setFilterConversation(selected));\n    }, [selected]);\n\n    useEffect(() => {\n        if (store.queryConversation === null) {\n            setSelected(['changePage']);\n        }\n    }, [store.queryConversation]);\n\n    return (\n        <>\n            {visible && (\n                <div className='filter-bar'>\n                    <FilterBarItem\n                        menu={{ icon: <ReloadIcon />, title: 'Bỏ lọc', active: 'remove' }}\n                        selected={selected}\n                        onClick={handleFilterConversation}\n                    />\n\n                    <FilterBarItem\n                        menu={{\n                            icon: <EyeInvisibleOutlined />,\n                            title: 'Tin chưa đọc',\n                            active: 'not_read',\n                        }}\n                        selected={selected}\n                        onClick={handleFilterConversation}\n                    />\n\n                    <FilterBarItem\n                        menu={{\n                            icon: <PhoneIcon />,\n                            title: 'Tìm có số điện thoại',\n                            active: 'has_phone',\n                        }}\n                        selected={selected}\n                        onClick={handleFilterConversation}\n                    />\n\n                    <FilterBarItem\n                        menu={{\n                            icon: <UnPhoneIcon />,\n                            title: 'Tìm không có số điện thoại',\n                            active: 'not_phone',\n                        }}\n                        selected={selected}\n                        onClick={handleFilterConversation}\n                    />\n\n                    <FilterBarItem\n                        menu={{\n                            icon: <BookmarkIcon />,\n                            title: 'Tìm chưa trả lời',\n                            active: 'not_answer',\n                        }}\n                        selected={selected}\n                        onClick={handleFilterConversation}\n                    />\n\n                    <FilterDate selected={selected} onClick={handleFilter} />\n                    <FilterLabels selected={selected} onClick={handleFilter} />\n\n                    <FilterIdPost selected={selected} onClick={handleFilter} />\n                </div>\n            )}\n\n            <FilterTabs selected={selected} onClick={handleFilterConversation} />\n        </>\n    );\n};\n\nexport default FilterBar;\n"]},"metadata":{},"sourceType":"module"}