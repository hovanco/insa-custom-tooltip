{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customers-other/context.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport querystring from 'querystring';\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport storeApi from '../../api/store-api';\nimport { getEndTime, getStartTime } from '../report/util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  loading: false,\n  pageId: null,\n  customers: [],\n  total: 0,\n  pageCustomer: 1,\n  type: 'month',\n  date: Date.now()\n};\nconst initialContext = {\n  state: initialState,\n  setState: state => state\n};\nconst Context = /*#__PURE__*/createContext(initialContext);\n\nconst ProviderCustomerContext = ({\n  children\n}) => {\n  _s();\n\n  const page = useSelector(state => state.fanpage.page);\n  const store = useSelector(state => state.store.store);\n  const token = useSelector(state => state.auth.token);\n  const [state, setState] = useState(() => {\n    if (page) {\n      return { ...initialState,\n        pageId: page._id\n      };\n    }\n\n    return initialState;\n  });\n  useEffect(() => {\n    async function handleFilter() {\n      setState({ ...state,\n        loading: true\n      });\n\n      try {\n        const arg = {\n          type: state.type,\n          date: state.date\n        };\n        const fbPageId = state.pageId;\n        const fromAt = getStartTime(arg);\n        const toAt = getEndTime(arg);\n        const query = querystring.stringify({\n          fbPageId,\n          fromAt,\n          toAt\n        });\n        const data = {\n          storeId: store._id,\n          token: token.accessToken,\n          page: initialState.pageCustomer,\n          limit: 10,\n          query\n        };\n        const response = await storeApi.getListCustomers(data);\n        setState({ ...state,\n          loading: false,\n          customers: response.data,\n          total: response.total\n        });\n      } catch (error) {\n        setState({ ...state,\n          loading: false\n        });\n      }\n    }\n\n    if (state.pageId) {\n      handleFilter();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      state,\n      setState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProviderCustomerContext, \"MD8ZFLB6Snw0rDyTEjVwDlo26vE=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = ProviderCustomerContext;\n\nconst useContextCustomer = () => {\n  _s2();\n\n  const {\n    state,\n    setState\n  } = useContext(Context);\n  const store = useSelector(state => state.store.store);\n  const token = useSelector(state => state.auth.token);\n  const pages = useSelector(state => state.fanpage.pages);\n\n  const selectPage = pageId => {\n    setState({ ...state,\n      pageId: pages[pageId]._id\n    });\n  };\n\n  const selectDateType = type => {\n    setState({ ...state,\n      type,\n      date: Date.now()\n    });\n  };\n\n  const selectDate = date => {\n    setState({ ...state,\n      date\n    });\n  };\n\n  const setPageCustomer = pageCustomer => {\n    setState({ ...state,\n      pageCustomer\n    });\n  };\n\n  const handleFilter = async pageNumber => {\n    setState({ ...state,\n      loading: true\n    });\n    const arg = {\n      type: state.type,\n      date: state.date\n    };\n    const fbPageId = state.pageId;\n    const fromAt = getStartTime(arg);\n    const toAt = getEndTime(arg);\n    const query = querystring.stringify({\n      fbPageId,\n      fromAt,\n      toAt\n    });\n    const data = {\n      storeId: store._id,\n      token: token.accessToken,\n      page: pageNumber,\n      limit: 10,\n      query\n    };\n    const response = await storeApi.getListCustomers(data);\n    setState({ ...state,\n      customers: response.data,\n      total: response.total,\n      pageCustomer: pageNumber\n    });\n  };\n\n  return { ...state,\n    selectPage,\n    setPageCustomer,\n    selectDateType,\n    selectDate,\n    handleFilter\n  };\n};\n\n_s2(useContextCustomer, \"Uu19Ha8y3+dhqdPsaLCfbVKxEyQ=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\nexport { ProviderCustomerContext, useContextCustomer };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderCustomerContext\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customers-other/context.tsx"],"names":["querystring","React","createContext","useContext","useEffect","useState","useSelector","storeApi","getEndTime","getStartTime","initialState","loading","pageId","customers","total","pageCustomer","type","date","Date","now","initialContext","state","setState","Context","ProviderCustomerContext","children","page","fanpage","store","token","auth","_id","handleFilter","arg","fbPageId","fromAt","toAt","query","stringify","data","storeId","accessToken","limit","response","getListCustomers","error","useContextCustomer","pages","selectPage","selectDateType","selectDate","setPageCustomer","pageNumber"],"mappings":"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","sourcesContent":["import querystring from 'querystring';\nimport React, { createContext, FC, ReactNode, useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport storeApi from '../../api/store-api';\nimport { Page } from '../../reducers/fanpageState/fanpageReducer';\nimport { getEndTime, getStartTime } from '../report/util';\n\ninterface IState {\n    loading: boolean;\n    pageId: any;\n    customers: any[];\n    total: number;\n    pageCustomer: number;\n    type: string;\n    date: number | any[];\n}\n\nconst initialState: IState = {\n    loading: false,\n    pageId: null,\n    customers: [],\n    total: 0,\n    pageCustomer: 1,\n    type: 'month',\n    date: Date.now(),\n};\n\nconst initialContext = {\n    state: initialState,\n    setState: (state: any): any => state,\n};\n\nconst Context = createContext(initialContext);\n\nconst ProviderCustomerContext: FC<{ children: ReactNode }> = ({ children }) => {\n    const page = useSelector((state: any) => state.fanpage.page);\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n\n    const [state, setState] = useState(() => {\n        if (page) {\n            return {\n                ...initialState,\n                pageId: page._id,\n            };\n        }\n\n        return initialState;\n    });\n\n    useEffect(() => {\n        async function handleFilter() {\n            setState({ ...state, loading: true });\n\n            try {\n                const arg = { type: state.type, date: state.date };\n                const fbPageId = state.pageId;\n                const fromAt = getStartTime(arg);\n                const toAt = getEndTime(arg);\n                const query = querystring.stringify({ fbPageId, fromAt, toAt });\n                const data = {\n                    storeId: store._id,\n                    token: token.accessToken,\n                    page: initialState.pageCustomer,\n                    limit: 10,\n                    query,\n                };\n                const response = await storeApi.getListCustomers(data);\n\n                setState({\n                    ...state,\n                    loading: false,\n                    customers: response.data,\n                    total: response.total,\n                });\n            } catch (error) {\n                setState({\n                    ...state,\n                    loading: false,\n                });\n            }\n        }\n\n        if (state.pageId) {\n            handleFilter();\n        }\n    }, []);\n\n    return <Context.Provider value={{ state, setState }}>{children}</Context.Provider>;\n};\n\nconst useContextCustomer = () => {\n    const { state, setState } = useContext(Context);\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n    const pages = useSelector((state: any) => state.fanpage.pages);\n\n    const selectPage = (pageId: string) => {\n        setState({ ...state, pageId: (pages[pageId] as Page)._id });\n    };\n\n    const selectDateType = (type: string) => {\n        setState({ ...state, type, date: Date.now() });\n    };\n\n    const selectDate = (date: any) => {\n        setState({ ...state, date });\n    };\n\n    const setPageCustomer = (pageCustomer: number) => {\n        setState({ ...state, pageCustomer });\n    };\n\n    const handleFilter = async (pageNumber: number) => {\n        setState({ ...state, loading: true });\n        const arg = { type: state.type, date: state.date };\n        const fbPageId = state.pageId;\n        const fromAt = getStartTime(arg);\n        const toAt = getEndTime(arg);\n        const query = querystring.stringify({ fbPageId, fromAt, toAt });\n        const data = {\n            storeId: store._id,\n            token: token.accessToken,\n            page: pageNumber,\n            limit: 10,\n            query,\n        };\n        const response = await storeApi.getListCustomers(data);\n\n        setState({\n            ...state,\n            customers: response.data,\n            total: response.total,\n            pageCustomer: pageNumber,\n        });\n    };\n\n    return {\n        ...state,\n        selectPage,\n        setPageCustomer,\n        selectDateType,\n        selectDate,\n        handleFilter,\n    };\n};\n\nexport { ProviderCustomerContext, useContextCustomer };\n"]},"metadata":{},"sourceType":"module"}