{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/customer-tab.tsx\",\n    _s = $RefreshSig$();\n\nimport { EnvironmentOutlined } from '@ant-design/icons';\nimport { Avatar, Col, Form, Row } from 'antd';\nimport { isEmpty } from 'lodash';\nimport querystring from 'querystring';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport storeApi from '../../../api/store-api';\nimport { Loading } from '../../../components';\nimport { generateUrlImgFb } from '../../../utils/generate-url-img-fb';\nimport { useOrder } from './context-order';\nimport CustomerNote from './customer-note';\nimport EditAddressCustomer from './edit-address-customer';\nimport EditField from './edit-field';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerTab = () => {\n  _s();\n\n  const conversation = useSelector(({\n    fanpage\n  }) => fanpage.conversation);\n  const token = useSelector(({\n    auth\n  }) => auth.token);\n  const store = useSelector(({\n    store\n  }) => store.store);\n  const page = useSelector(({\n    fanpage\n  }) => fanpage.page);\n  const [form] = Form.useForm();\n  const [loadingForm, setLoadingForm] = useState(true);\n  const [customerId, setCustomerId] = useState('');\n  const [dataCustomer, setDataCustomer] = useState({});\n  const [isEditForm, setIsEditForm] = useState(false);\n\n  const toggleSetIsEditForm = () => setIsEditForm(!isEditForm);\n\n  const {\n    setInfoCustomer,\n    customerObjectId\n  } = useOrder();\n\n  const getCustomers = async () => {\n    setLoadingForm(true);\n    const fbUserId = conversation.fbUserId;\n    const query = querystring.stringify({\n      fbUserId\n    });\n    const response = await storeApi.getListCustomers({\n      storeId: store._id,\n      token: token.accessToken,\n      page: 1,\n      limit: 1,\n      query\n    });\n    let data;\n\n    if (response.data.length > 0) {\n      setCustomerId(response.data[0]._id);\n      data = {\n        _id: response.data[0]._id,\n        fbUserId: response.data[0].fbUserId,\n        name: response.data[0].name,\n        phoneNo: response.data[0].phoneNo,\n        address: response.data[0].address,\n        province: response.data[0].province,\n        district: response.data[0].district,\n        ward: response.data[0].ward,\n        note: response.data[0].note\n      };\n      setInfoCustomer(data);\n    } else {\n      form.resetFields();\n      data = {\n        _id: '',\n        fbUserId: '',\n        name: '',\n        phoneNo: '',\n        address: '',\n        province: undefined,\n        district: undefined,\n        ward: undefined,\n        note: ''\n      };\n      setInfoCustomer(data);\n      setCustomerId('');\n    }\n\n    form.resetFields();\n    setDataCustomer(data);\n    setLoadingForm(false);\n    setIsEditForm(false);\n  };\n\n  useEffect(() => {\n    getCustomers();\n  }, [conversation.fbUserId]);\n  useEffect(() => {\n    if (!isEmpty(customerObjectId) && customerObjectId !== customerId) {\n      getCustomers();\n    }\n  }, [customerObjectId]);\n\n  const onChangeField = (field, value) => {};\n\n  if (loadingForm) return /*#__PURE__*/_jsxDEV(Loading, {\n    full: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customer-tab\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content-inner\",\n      children: [!isEditForm && /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 15,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            size: 42,\n            src: generateUrlImgFb(conversation.fbUserId, page.accessToken)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            flex: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(EditField, {\n              field: \"name\",\n              value: dataCustomer.name,\n              onChange: onChangeField,\n              dataCustomer: dataCustomer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(EditField, {\n              field: \"phoneNo\",\n              value: dataCustomer.phoneNo,\n              onChange: onChangeField,\n              empty: \"Ch\\u01B0a c\\xF3 s\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n              dataCustomer: dataCustomer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-address\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 10,\n          children: [!isEditForm && /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(EnvironmentOutlined, {\n              style: {\n                fontSize: 17\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              flex: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(EditAddressCustomer, {\n              dataCustomer: dataCustomer,\n              isEditForm: isEditForm,\n              toggleSetIsEditForm: toggleSetIsEditForm,\n              changeDataCustomer: value => setDataCustomer(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomerNote, {\n      customer: dataCustomer,\n      onChange: value => setDataCustomer({ ...dataCustomer,\n        note: value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomerTab, \"cPxa8n9F4dzikkfS5L+a2eipMUY=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, Form.useForm, useOrder];\n});\n\n_c = CustomerTab;\nexport default CustomerTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerTab\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/customer-tab.tsx"],"names":["EnvironmentOutlined","Avatar","Col","Form","Row","isEmpty","querystring","React","useEffect","useState","useSelector","storeApi","Loading","generateUrlImgFb","useOrder","CustomerNote","EditAddressCustomer","EditField","CustomerTab","conversation","fanpage","token","auth","store","page","form","useForm","loadingForm","setLoadingForm","customerId","setCustomerId","dataCustomer","setDataCustomer","isEditForm","setIsEditForm","toggleSetIsEditForm","setInfoCustomer","customerObjectId","getCustomers","fbUserId","query","stringify","response","getListCustomers","storeId","_id","accessToken","limit","data","length","name","phoneNo","address","province","district","ward","note","resetFields","undefined","onChangeField","field","value","flex","fontSize"],"mappings":";;;AAAA,SAASA,mBAAT,QAAoC,mBAApC;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4BC,GAA5B,QAAuC,MAAvC;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,SAASC,OAAT,QAAwB,qBAAxB;AAIA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,mBAAP,MAAgC,yBAAhC;AACA,OAAOC,SAAP,MAAsB,cAAtB;;;AAEA,MAAMC,WAAe,GAAG,MAAmB;AAAA;;AACvC,QAAMC,YAAmC,GAAGT,WAAW,CACnD,CAAC;AAAEU,IAAAA;AAAF,GAAD,KAA8CA,OAAO,CAACD,YADH,CAAvD;AAGA,QAAME,KAAU,GAAGX,WAAW,CAAC,CAAC;AAAEY,IAAAA;AAAF,GAAD,KAAoCA,IAAI,CAACD,KAA1C,CAA9B;AACA,QAAME,KAAK,GAAGb,WAAW,CAAC,CAAC;AAAEa,IAAAA;AAAF,GAAD,KAAuCA,KAAK,CAACA,KAA9C,CAAzB;AAEA,QAAMC,IAAI,GAAGd,WAAW,CAAC,CAAC;AAAEU,IAAAA;AAAF,GAAD,KAA8CA,OAAO,CAACI,IAAvD,CAAxB;AAEA,QAAM,CAACC,IAAD,IAAStB,IAAI,CAACuB,OAAL,EAAf;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAU,IAAV,CAA9C;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAS,EAAT,CAA5C;AACA,QAAM,CAACsB,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAM,EAAN,CAAhD;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAU,KAAV,CAA5C;;AAEA,QAAM0B,mBAAmB,GAAG,MAAMD,aAAa,CAAC,CAACD,UAAF,CAA/C;;AAEA,QAAM;AAAEG,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAwCvB,QAAQ,EAAtD;;AAEA,QAAMwB,YAAY,GAAG,YAAY;AAC7BV,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,UAAMW,QAAQ,GAAGpB,YAAY,CAACoB,QAA9B;AACA,UAAMC,KAAK,GAAGlC,WAAW,CAACmC,SAAZ,CAAsB;AAAEF,MAAAA;AAAF,KAAtB,CAAd;AACA,UAAMG,QAAQ,GAAG,MAAM/B,QAAQ,CAACgC,gBAAT,CAA0B;AAC7CC,MAAAA,OAAO,EAAErB,KAAK,CAACsB,GAD8B;AAE7CxB,MAAAA,KAAK,EAAEA,KAAK,CAACyB,WAFgC;AAG7CtB,MAAAA,IAAI,EAAE,CAHuC;AAI7CuB,MAAAA,KAAK,EAAE,CAJsC;AAK7CP,MAAAA;AAL6C,KAA1B,CAAvB;AAOA,QAAIQ,IAAJ;;AACA,QAAIN,QAAQ,CAACM,IAAT,CAAcC,MAAd,GAAuB,CAA3B,EAA8B;AAC1BnB,MAAAA,aAAa,CAACY,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBH,GAAlB,CAAb;AACAG,MAAAA,IAAI,GAAG;AACHH,QAAAA,GAAG,EAAEH,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBH,GADnB;AAEHN,QAAAA,QAAQ,EAAEG,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBT,QAFxB;AAGHW,QAAAA,IAAI,EAAER,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBE,IAHpB;AAIHC,QAAAA,OAAO,EAAET,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBG,OAJvB;AAKHC,QAAAA,OAAO,EAAEV,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBI,OALvB;AAMHC,QAAAA,QAAQ,EAAEX,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBK,QANxB;AAOHC,QAAAA,QAAQ,EAAEZ,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBM,QAPxB;AAQHC,QAAAA,IAAI,EAAEb,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBO,IARpB;AASHC,QAAAA,IAAI,EAAEd,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBQ;AATpB,OAAP;AAWApB,MAAAA,eAAe,CAACY,IAAD,CAAf;AACH,KAdD,MAcO;AACHvB,MAAAA,IAAI,CAACgC,WAAL;AACAT,MAAAA,IAAI,GAAG;AACHH,QAAAA,GAAG,EAAE,EADF;AAEHN,QAAAA,QAAQ,EAAE,EAFP;AAGHW,QAAAA,IAAI,EAAE,EAHH;AAIHC,QAAAA,OAAO,EAAE,EAJN;AAKHC,QAAAA,OAAO,EAAE,EALN;AAMHC,QAAAA,QAAQ,EAAEK,SANP;AAOHJ,QAAAA,QAAQ,EAAEI,SAPP;AAQHH,QAAAA,IAAI,EAAEG,SARH;AASHF,QAAAA,IAAI,EAAE;AATH,OAAP;AAYApB,MAAAA,eAAe,CAACY,IAAD,CAAf;AACAlB,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH;;AACDL,IAAAA,IAAI,CAACgC,WAAL;AACAzB,IAAAA,eAAe,CAACgB,IAAD,CAAf;AACApB,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAM,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GA/CD;;AAiDA1B,EAAAA,SAAS,CAAC,MAAM;AACZ8B,IAAAA,YAAY;AACf,GAFQ,EAEN,CAACnB,YAAY,CAACoB,QAAd,CAFM,CAAT;AAIA/B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACH,OAAO,CAACgC,gBAAD,CAAR,IAA8BA,gBAAgB,KAAKR,UAAvD,EAAmE;AAC/DS,MAAAA,YAAY;AACf;AACJ,GAJQ,EAIN,CAACD,gBAAD,CAJM,CAAT;;AAMA,QAAMsB,aAAa,GAAG,CAACC,KAAD,EAAgBC,KAAhB,KAA+B,CAAE,CAAvD;;AAEA,MAAIlC,WAAJ,EAAiB,oBAAO,QAAC,OAAD;AAAS,IAAA,IAAI;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AAEjB,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,iBACK,CAACM,UAAD,iBACG,QAAC,GAAD;AAAK,QAAA,MAAM,EAAE,EAAb;AAAA,gCACI,QAAC,GAAD;AAAA,iCACI,QAAC,MAAD;AACI,YAAA,IAAI,EAAE,EADV;AAEI,YAAA,GAAG,EAAEpB,gBAAgB,CAACM,YAAY,CAACoB,QAAd,EAAwBf,IAAI,CAACsB,WAA7B;AAFzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,GAAD;AAAK,UAAA,KAAK,EAAE;AAAEgB,YAAAA,IAAI,EAAE;AAAR,WAAZ;AAAA,iCACI;AAAA,oCACI,QAAC,SAAD;AACI,cAAA,KAAK,EAAC,MADV;AAEI,cAAA,KAAK,EAAE/B,YAAY,CAACmB,IAFxB;AAGI,cAAA,QAAQ,EAAES,aAHd;AAII,cAAA,YAAY,EAAE5B;AAJlB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,SAAD;AACI,cAAA,KAAK,EAAC,SADV;AAEI,cAAA,KAAK,EAAEA,YAAY,CAACoB,OAFxB;AAGI,cAAA,QAAQ,EAAEQ,aAHd;AAII,cAAA,KAAK,EAAC,mDAJV;AAKI,cAAA,YAAY,EAAE5B;AALlB;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,eA8BI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,MAAM,EAAE,EAAb;AAAA,qBACK,CAACE,UAAD,iBACG,QAAC,GAAD;AAAA,mCACI,QAAC,mBAAD;AAAqB,cAAA,KAAK,EAAE;AAAE8B,gBAAAA,QAAQ,EAAE;AAAZ;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFR,eAOI,QAAC,GAAD;AAAK,YAAA,KAAK,EAAE;AAAED,cAAAA,IAAI,EAAE;AAAR,aAAZ;AAAA,mCACI,QAAC,mBAAD;AACI,cAAA,YAAY,EAAE/B,YADlB;AAEI,cAAA,UAAU,EAAEE,UAFhB;AAGI,cAAA,mBAAmB,EAAEE,mBAHzB;AAII,cAAA,kBAAkB,EAAG0B,KAAD,IAAgB7B,eAAe,CAAC6B,KAAD;AAJvD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAmDI,QAAC,YAAD;AACI,MAAA,QAAQ,EAAE9B,YADd;AAEI,MAAA,QAAQ,EAAG8B,KAAD,IAAmB7B,eAAe,CAAC,EAAE,GAAGD,YAAL;AAAmByB,QAAAA,IAAI,EAAEK;AAAzB,OAAD;AAFhD;AAAA;AAAA;AAAA;AAAA,YAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0DH,CA5ID;;GAAM3C,W;UAC0CR,W,EAGzBA,W,EACLA,W,EAEDA,W,EAEEP,IAAI,CAACuB,O,EAQ0BZ,Q;;;KAjB5CI,W;AA8IN,eAAeA,WAAf","sourcesContent":["import { EnvironmentOutlined } from '@ant-design/icons';\nimport { Avatar, Col, Form, Row } from 'antd';\nimport { isEmpty } from 'lodash';\nimport querystring from 'querystring';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport storeApi from '../../../api/store-api';\nimport { IFacebookConversation } from '../../../collections/facebook-conversation';\nimport { Loading } from '../../../components';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport { IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { generateUrlImgFb } from '../../../utils/generate-url-img-fb';\nimport { useOrder } from './context-order';\nimport CustomerNote from './customer-note';\nimport EditAddressCustomer from './edit-address-customer';\nimport EditField from './edit-field';\n\nconst CustomerTab: FC = (): JSX.Element => {\n    const conversation: IFacebookConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const page = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.page);\n\n    const [form] = Form.useForm();\n    const [loadingForm, setLoadingForm] = useState<boolean>(true);\n    const [customerId, setCustomerId] = useState<string>('');\n    const [dataCustomer, setDataCustomer] = useState<any>({});\n    const [isEditForm, setIsEditForm] = useState<boolean>(false);\n\n    const toggleSetIsEditForm = () => setIsEditForm(!isEditForm);\n\n    const { setInfoCustomer, customerObjectId } = useOrder();\n\n    const getCustomers = async () => {\n        setLoadingForm(true);\n        const fbUserId = conversation.fbUserId;\n        const query = querystring.stringify({ fbUserId });\n        const response = await storeApi.getListCustomers({\n            storeId: store._id,\n            token: token.accessToken,\n            page: 1,\n            limit: 1,\n            query,\n        });\n        let data;\n        if (response.data.length > 0) {\n            setCustomerId(response.data[0]._id);\n            data = {\n                _id: response.data[0]._id,\n                fbUserId: response.data[0].fbUserId,\n                name: response.data[0].name,\n                phoneNo: response.data[0].phoneNo,\n                address: response.data[0].address,\n                province: response.data[0].province,\n                district: response.data[0].district,\n                ward: response.data[0].ward,\n                note: response.data[0].note,\n            };\n            setInfoCustomer(data);\n        } else {\n            form.resetFields();\n            data = {\n                _id: '',\n                fbUserId: '',\n                name: '',\n                phoneNo: '',\n                address: '',\n                province: undefined,\n                district: undefined,\n                ward: undefined,\n                note: '',\n            };\n\n            setInfoCustomer(data);\n            setCustomerId('');\n        }\n        form.resetFields();\n        setDataCustomer(data);\n        setLoadingForm(false);\n        setIsEditForm(false);\n    };\n\n    useEffect(() => {\n        getCustomers();\n    }, [conversation.fbUserId]);\n\n    useEffect(() => {\n        if (!isEmpty(customerObjectId) && customerObjectId !== customerId) {\n            getCustomers();\n        }\n    }, [customerObjectId]);\n\n    const onChangeField = (field: string, value: any) => {};\n\n    if (loadingForm) return <Loading full />;\n\n    return (\n        <div className='customer-tab'>\n            <div className='tab-content-inner'>\n                {!isEditForm && (\n                    <Row gutter={15}>\n                        <Col>\n                            <Avatar\n                                size={42}\n                                src={generateUrlImgFb(conversation.fbUserId, page.accessToken)}\n                            />\n                        </Col>\n                        <Col style={{ flex: 1 }}>\n                            <div>\n                                <EditField\n                                    field='name'\n                                    value={dataCustomer.name}\n                                    onChange={onChangeField}\n                                    dataCustomer={dataCustomer}\n                                />\n\n                                <EditField\n                                    field='phoneNo'\n                                    value={dataCustomer.phoneNo}\n                                    onChange={onChangeField}\n                                    empty='Chưa có số điện thoại'\n                                    dataCustomer={dataCustomer}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                )}\n\n                <div className='customer-address'>\n                    <Row gutter={10}>\n                        {!isEditForm && (\n                            <Col>\n                                <EnvironmentOutlined style={{ fontSize: 17 }} />\n                            </Col>\n                        )}\n\n                        <Col style={{ flex: 1 }}>\n                            <EditAddressCustomer\n                                dataCustomer={dataCustomer}\n                                isEditForm={isEditForm}\n                                toggleSetIsEditForm={toggleSetIsEditForm}\n                                changeDataCustomer={(value: any) => setDataCustomer(value)}\n                            />\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n\n            <CustomerNote\n                customer={dataCustomer}\n                onChange={(value: string) => setDataCustomer({ ...dataCustomer, note: value })}\n            />\n        </div>\n    );\n};\n\nexport default CustomerTab;\n"]},"metadata":{},"sourceType":"module"}