{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/context.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getOrderDetail } from '../../api/order-api';\nimport { Loading } from '../../components';\nimport OrderNotFound from './order-not-found';\nimport './style.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  loading: false,\n  order: null\n};\nconst initialContext = {\n  state: initialState,\n  setState: state => state\n};\nconst Context = /*#__PURE__*/createContext(initialContext);\n\nconst ProviderContextOrder = ({\n  children\n}) => {\n  _s();\n\n  const params = useParams();\n  const store = useSelector(state => state.store.store);\n  const token = useSelector(state => state.auth.token);\n  const [state, setState] = useState(initialState);\n  const value = {\n    state,\n    setState\n  };\n  useEffect(() => {\n    async function loadOrder() {\n      setState({ ...state,\n        loading: true\n      });\n\n      try {\n        const response = await getOrderDetail({\n          orderId: params.id,\n          storeId: store._id,\n          token: token.accessToken\n        });\n        setState({ ...state,\n          order: { ...response,\n            products: response.products.filter(p => p.productId)\n          },\n          loading: false\n        });\n      } catch (error) {\n        setState({ ...state,\n          loading: false\n        });\n      }\n    }\n\n    if (params.id) {\n      loadOrder();\n    }\n  }, []);\n\n  const renderContent = () => {\n    if (state.loading) return /*#__PURE__*/_jsxDEV(Loading, {\n      full: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 35\n    }, this);\n    if (!state.order) return /*#__PURE__*/_jsxDEV(OrderNotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 34\n    }, this);\n    return children;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: value,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-detail\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProviderContextOrder, \"2yixqOQGsFIqQwX95S9A63TKY+U=\", false, function () {\n  return [useParams, useSelector, useSelector];\n});\n\n_c = ProviderContextOrder;\n\nconst useOrderDetail = () => {\n  _s2();\n\n  const {\n    state,\n    setState\n  } = useContext(Context);\n\n  const changeOrder = order => {\n    return setState({ ...state,\n      order\n    });\n  };\n\n  return { ...state,\n    setState,\n    changeOrder\n  };\n};\n\n_s2(useOrderDetail, \"HQOEX8LuP3Imca7Htmd/Ve9zFgo=\");\n\nexport { ProviderContextOrder, useOrderDetail };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderContextOrder\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/context.tsx"],"names":["React","createContext","useContext","useEffect","useState","useSelector","useParams","getOrderDetail","Loading","OrderNotFound","initialState","loading","order","initialContext","state","setState","Context","ProviderContextOrder","children","params","store","token","auth","value","loadOrder","response","orderId","id","storeId","_id","accessToken","products","filter","p","productId","error","renderContent","useOrderDetail","changeOrder"],"mappings":"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","sourcesContent":["import React, { createContext, FC, ReactNode, useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { getOrderDetail } from '../../api/order-api';\nimport { Loading } from '../../components';\nimport OrderNotFound from './order-not-found';\nimport './style.less';\n\ninterface State {\n    loading: boolean;\n    order: any;\n}\n\nconst initialState = {\n    loading: false,\n    order: null,\n};\n\nconst initialContext = {\n    state: initialState,\n    setState: (state: State): any => state,\n};\n\nconst Context = createContext(initialContext);\n\ninterface Props {\n    children: ReactNode;\n}\n\ninterface Params {\n    id: string;\n}\n\nconst ProviderContextOrder: FC<Props> = ({ children }) => {\n    const params = useParams<Params>();\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n    const [state, setState] = useState<State>(initialState);\n\n    const value = { state, setState };\n\n    useEffect(() => {\n        async function loadOrder() {\n            setState({ ...state, loading: true });\n            try {\n                const response = await getOrderDetail({\n                    orderId: params.id,\n                    storeId: store._id,\n                    token: token.accessToken,\n                });\n\n                setState({\n                    ...state,\n                    order: {\n                        ...response,\n                        products: response.products.filter((p: any) => p.productId),\n                    },\n                    loading: false,\n                });\n            } catch (error) {\n                setState({ ...state, loading: false });\n            }\n        }\n\n        if (params.id) {\n            loadOrder();\n        }\n    }, []);\n\n    const renderContent = () => {\n        if (state.loading) return <Loading full />;\n        if (!state.order) return <OrderNotFound />;\n\n        return children;\n    };\n\n    return (\n        <Context.Provider value={value}>\n            <div className='order-detail'>{renderContent()}</div>\n        </Context.Provider>\n    );\n};\n\nconst useOrderDetail = () => {\n    const { state, setState } = useContext(Context);\n\n    const changeOrder = (order: any) => {\n        return setState({\n            ...state,\n            order,\n        });\n    };\n\n    return {\n        ...state,\n        setState,\n        changeOrder,\n    };\n};\n\nexport { ProviderContextOrder, useOrderDetail };\n"]},"metadata":{},"sourceType":"module"}