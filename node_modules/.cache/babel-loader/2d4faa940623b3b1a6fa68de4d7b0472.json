{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/quick-message/modal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SketchPicker } from 'react-color';\nimport { Modal, Form, Input, Tag, Button, Space } from 'antd';\nimport { BgColorsOutlined, HighlightOutlined, SaveOutlined, CloseOutlined } from '@ant-design/icons';\nimport { createQuickMessageAction, updateQuickMessageAction } from '../../../actions/setting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tags = [{\n  id: 1,\n  key: '{FULL_NAME}',\n  description: 'Chèn tên khách hàng dưới dạng \"mentions\"(Nhắc tới..)'\n}];\n\nfunction QuickMessageModal({\n  visible,\n  toggle,\n  data = {},\n  setCurrentItem\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState({\n    title: '',\n    backgroundColor: '#87d068',\n    color: '#000'\n  });\n  const [isShow, setIsShow] = useState({\n    backgroundColor: false,\n    color: false\n  });\n  const modalTitle = data.mode === 'update' ? 'Sửa phím tắt' : 'Thêm phím tắt';\n  useEffect(() => {\n    if (data.title) {\n      const {\n        title,\n        backgroundColor,\n        color\n      } = data;\n      setTitle({\n        title: title,\n        backgroundColor,\n        color\n      });\n    }\n  }, [data.title]);\n\n  const resetForm = () => {\n    setCurrentItem();\n    setTitle({\n      title: '',\n      backgroundColor: '#87d068',\n      color: '#000'\n    });\n  };\n\n  const handleSubmit = async val => {\n    try {\n      const fromData = {\n        pageId: data.pageId,\n        storeId: data.storeId,\n        data: { ...val,\n          order: 1,\n          ...title\n        },\n        toggle\n      };\n\n      if (data.mode === 'create') {\n        await dispatch(createQuickMessageAction(fromData));\n      } else if (data.mode === 'update') {\n        await dispatch(updateQuickMessageAction({ ...fromData,\n          quickId: data._id\n        }));\n      }\n\n      resetForm();\n    } catch (e) {}\n  };\n\n  const renderTags = (getFieldValue, setFieldsValue) => {\n    const oldMessage = getFieldValue('message');\n    return tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tag, {\n        color: \"processing\",\n        onClick: () => {\n          setFieldsValue({\n            message: oldMessage ? `${oldMessage} ${tag.key}` : tag.key\n          });\n        },\n        className: \"quick-message-form-tag\",\n        children: tag.key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: tag.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, tag.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this));\n  };\n\n  const closeSketchColor = () => {\n    setIsShow({\n      backgroundColor: false,\n      color: false\n    });\n  };\n\n  const handleChangeBackground = color => {\n    setTitle({ ...title,\n      backgroundColor: color.hex\n    });\n    closeSketchColor();\n  };\n\n  const handleChangeColor = color => {\n    setTitle({ ...title,\n      color: color.hex\n    });\n    closeSketchColor();\n  };\n\n  const onCancel = () => {\n    resetForm();\n    toggle();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    visible: visible,\n    onCancel: onCancel,\n    title: modalTitle,\n    width: 640,\n    destroyOnClose: true,\n    footer: null,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"quick-message-form\",\n      initialValues: data,\n      onFinish: handleSubmit,\n      children: [title.title && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-message-form-titletag\",\n        children: /*#__PURE__*/_jsxDEV(Tag, {\n          style: {\n            color: title.color\n          },\n          color: title.backgroundColor,\n          children: title.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          marginBottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"title\",\n          rules: [{\n            required: true,\n            message: 'Điền tiêu đề tin nhắn.'\n          }],\n          style: {\n            display: 'inline-block',\n            width: '50%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              marginRight: 10\n            },\n            placeholder: \"Ti\\xEAu \\u0111\\u1EC1\",\n            onChange: e => setTitle({ ...title,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          style: {\n            display: 'inline-block',\n            width: '25%'\n          },\n          name: \"backgroundColor\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(BgColorsOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 35\n            }, this),\n            style: {\n              marginRight: 10\n            },\n            onClick: () => setIsShow({ ...isShow,\n              backgroundColor: true\n            }),\n            children: \"Ch\\u1ECDn m\\xE0u n\\u1EC1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), isShow.backgroundColor && /*#__PURE__*/_jsxDEV(SketchPicker, {\n            color: title.backgroundColor,\n            onChangeComplete: handleChangeBackground\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          style: {\n            display: 'inline-block',\n            width: '25%'\n          },\n          name: \"color\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(HighlightOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 35\n            }, this),\n            style: {\n              marginRight: 10\n            },\n            onClick: () => setIsShow({ ...isShow,\n              color: true\n            }),\n            children: \"Ch\\u1ECDn m\\xE0u ch\\u1EEF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), isShow.color && /*#__PURE__*/_jsxDEV(SketchPicker, {\n            color: title.color,\n            onChangeComplete: handleChangeColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"shortcut\",\n        rules: [{\n          required: true,\n          message: 'Điền phím tắt.'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          addonBefore: \"Ph\\xEDm t\\u1EAFt /\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"message\",\n        rules: [{\n          required: true,\n          message: 'Nhập nội dung tin nhắn.'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          placeholder: \"Nh\\u1EADp tin nh\\u1EAFn.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        shouldUpdate: true,\n        children: ({\n          getFieldValue,\n          setFieldsValue\n        }) => {\n          return renderTags(getFieldValue, setFieldsValue);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        noStyle: true,\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 39\n            }, this),\n            onClick: onCancel,\n            children: \"Hu\\u1EF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            htmlType: \"submit\",\n            type: \"primary\",\n            icon: /*#__PURE__*/_jsxDEV(SaveOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 72\n            }, this),\n            children: \"L\\u01B0u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuickMessageModal, \"8trSkJiCDc+CJ59oOQTPpHFL8bA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = QuickMessageModal;\nexport default QuickMessageModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuickMessageModal\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/quick-message/modal.tsx"],"names":["React","useState","useEffect","useDispatch","SketchPicker","Modal","Form","Input","Tag","Button","Space","BgColorsOutlined","HighlightOutlined","SaveOutlined","CloseOutlined","createQuickMessageAction","updateQuickMessageAction","tags","id","key","description","QuickMessageModal","visible","toggle","data","setCurrentItem","dispatch","title","setTitle","backgroundColor","color","isShow","setIsShow","modalTitle","mode","resetForm","handleSubmit","val","fromData","pageId","storeId","order","quickId","_id","e","renderTags","getFieldValue","setFieldsValue","oldMessage","map","tag","marginBottom","message","closeSketchColor","handleChangeBackground","hex","handleChangeColor","onCancel","required","display","width","marginRight","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SketchPicker } from 'react-color';\nimport { Modal, Form, Input, Tag, Button, Space } from 'antd';\nimport {\n    BgColorsOutlined,\n    HighlightOutlined,\n    SaveOutlined,\n    CloseOutlined,\n} from '@ant-design/icons';\nimport { Store } from 'antd/lib/form/interface';\n\nimport { createQuickMessageAction, updateQuickMessageAction } from '../../../actions/setting';\n\ninterface IProps {\n    visible: boolean;\n    toggle: () => void;\n    data: any;\n    setCurrentItem: any;\n}\n\nconst tags = [\n    {\n        id: 1,\n        key: '{FULL_NAME}',\n        description: 'Chèn tên khách hàng dưới dạng \"mentions\"(Nhắc tới..)',\n    },\n];\n\nfunction QuickMessageModal({ visible, toggle, data = {}, setCurrentItem }: IProps): JSX.Element {\n    const dispatch = useDispatch();\n    const [title, setTitle] = useState({\n        title: '',\n        backgroundColor: '#87d068',\n        color: '#000',\n    });\n    const [isShow, setIsShow] = useState({\n        backgroundColor: false,\n        color: false,\n    });\n    const modalTitle = data.mode === 'update' ? 'Sửa phím tắt' : 'Thêm phím tắt';\n\n    useEffect(() => {\n        if (data.title) {\n            const { title, backgroundColor, color } = data;\n            setTitle({\n                title: title,\n                backgroundColor,\n                color,\n            });\n        }\n    }, [data.title]);\n\n    const resetForm = () => {\n        setCurrentItem();\n        setTitle({\n            title: '',\n            backgroundColor: '#87d068',\n            color: '#000',\n        });\n    };\n\n    const handleSubmit = async (val: Store) => {\n        try {\n            const fromData = {\n                pageId: data.pageId,\n                storeId: data.storeId,\n                data: {\n                    ...val,\n                    order: 1,\n                    ...title,\n                },\n                toggle,\n            };\n\n            if (data.mode === 'create') {\n                await dispatch(createQuickMessageAction(fromData));\n            } else if (data.mode === 'update') {\n                await dispatch(updateQuickMessageAction({ ...fromData, quickId: data._id }));\n            }\n\n            resetForm();\n        } catch (e) {}\n    };\n\n    const renderTags = (getFieldValue: any, setFieldsValue: any) => {\n        const oldMessage = getFieldValue('message');\n\n        return tags.map((tag) => (\n            <div key={tag.id} style={{ marginBottom: 10 }}>\n                <Tag\n                    color='processing'\n                    onClick={() => {\n                        setFieldsValue({\n                            message: oldMessage ? `${oldMessage} ${tag.key}` : tag.key,\n                        });\n                    }}\n                    className='quick-message-form-tag'\n                >\n                    {tag.key}\n                </Tag>\n                <span>{tag.description}</span>\n            </div>\n        ));\n    };\n\n    const closeSketchColor = () => {\n        setIsShow({\n            backgroundColor: false,\n            color: false,\n        });\n    };\n\n    const handleChangeBackground = (color: { hex: string }) => {\n        setTitle({ ...title, backgroundColor: color.hex });\n        closeSketchColor();\n    };\n\n    const handleChangeColor = (color: { hex: string }) => {\n        setTitle({ ...title, color: color.hex });\n        closeSketchColor();\n    };\n\n    const onCancel = () => {\n        resetForm();\n        toggle();\n    };\n\n    return (\n        <Modal\n            visible={visible}\n            onCancel={onCancel}\n            title={modalTitle}\n            width={640}\n            destroyOnClose\n            footer={null}\n        >\n            <Form className='quick-message-form' initialValues={data} onFinish={handleSubmit}>\n                {title.title && (\n                    <div className='quick-message-form-titletag'>\n                        <Tag style={{ color: title.color }} color={title.backgroundColor}>\n                            {title.title}\n                        </Tag>\n                    </div>\n                )}\n                <Form.Item style={{ marginBottom: 0 }}>\n                    <Form.Item\n                        name='title'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Điền tiêu đề tin nhắn.',\n                            },\n                        ]}\n                        style={{ display: 'inline-block', width: '50%' }}\n                    >\n                        <Input\n                            style={{ marginRight: 10 }}\n                            placeholder='Tiêu đề'\n                            onChange={(e: any) => setTitle({ ...title, title: e.target.value })}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        style={{ display: 'inline-block', width: '25%' }}\n                        name='backgroundColor'\n                    >\n                        <Button\n                            icon={<BgColorsOutlined />}\n                            style={{\n                                marginRight: 10,\n                            }}\n                            onClick={() => setIsShow({ ...isShow, backgroundColor: true })}\n                        >\n                            Chọn màu nền\n                        </Button>\n\n                        {isShow.backgroundColor && (\n                            <SketchPicker\n                                color={title.backgroundColor}\n                                onChangeComplete={handleChangeBackground}\n                            />\n                        )}\n                    </Form.Item>\n                    <Form.Item style={{ display: 'inline-block', width: '25%' }} name='color'>\n                        <Button\n                            icon={<HighlightOutlined />}\n                            style={{\n                                marginRight: 10,\n                            }}\n                            onClick={() => setIsShow({ ...isShow, color: true })}\n                        >\n                            Chọn màu chữ\n                        </Button>\n\n                        {isShow.color && (\n                            <SketchPicker\n                                color={title.color}\n                                onChangeComplete={handleChangeColor}\n                            />\n                        )}\n                    </Form.Item>\n                </Form.Item>\n                <Form.Item name='shortcut' rules={[{ required: true, message: 'Điền phím tắt.' }]}>\n                    <Input addonBefore='Phím tắt /' />\n                </Form.Item>\n                <Form.Item\n                    name='message'\n                    rules={[{ required: true, message: 'Nhập nội dung tin nhắn.' }]}\n                >\n                    <Input.TextArea placeholder='Nhập tin nhắn.'></Input.TextArea>\n                </Form.Item>\n                <Form.Item shouldUpdate>\n                    {({ getFieldValue, setFieldsValue }) => {\n                        return renderTags(getFieldValue, setFieldsValue);\n                    }}\n                </Form.Item>\n                <Form.Item noStyle>\n                    <Space>\n                        <Button icon={<CloseOutlined />} onClick={onCancel}>\n                            Huỷ\n                        </Button>\n                        <Button htmlType='submit' type='primary' icon={<SaveOutlined />}>\n                            Lưu\n                        </Button>\n                    </Space>\n                </Form.Item>\n            </Form>\n        </Modal>\n    );\n}\n\nexport default QuickMessageModal;\n"]},"metadata":{},"sourceType":"module"}