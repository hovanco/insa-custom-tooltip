{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/quick-message/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { InputNumber, Table, Tag } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteQuickMessageAction, loadQuickMessageAction } from '../../../actions/setting';\nimport useModal from '../../../hooks/use-modal';\nimport Action from './actions';\nimport QuickMessageHeader from './header';\nimport QuickMessageModal from './modal';\nimport ModalCopyMessage from './modal-copy-message';\nimport './style.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction QuickMessage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    pages,\n    page\n  } = useSelector(state => state.fanpage);\n  const loading = useSelector(state => state.setting.loading);\n  const quickMessage = useSelector(state => state.setting.quickMessage);\n  const {\n    visible,\n    toggle\n  } = useModal();\n  const [isShowModalCopy, setShowModalCopy] = useState(false);\n  const [dataSource, setDataSource] = useState([]);\n  const [currentPage, setCurrentPage] = useState(() => {\n    if (Object.keys(pages).length === 0) return undefined;\n    if (page) return page;\n    const firstPage = Object.keys(pages)[0];\n    return pages[firstPage];\n  });\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [currentItem, setCurrentItem] = useState();\n  const quickMessages = Object.values(quickMessage);\n  useEffect(() => {\n    if (currentPage) {\n      dispatch(loadQuickMessageAction({\n        pageId: currentPage.fbObjectId,\n        storeId: currentPage.storeId\n      }));\n    }\n  }, [loadQuickMessageAction, currentPage]);\n  useEffect(() => {\n    setDataSource(quickMessages);\n  }, [quickMessage]);\n\n  const handleChangePage = pageId => {\n    setCurrentPage(pages[pageId]);\n  };\n\n  const handleDelete = quickId => {\n    dispatch(deleteQuickMessageAction({\n      quickId,\n      pageId: currentPage._id,\n      storeId: currentPage.storeId\n    }));\n  };\n\n  const handleShowModal = val => {\n    setCurrentItem(prevState => ({ ...prevState,\n      ...val\n    }));\n    toggle();\n  };\n\n  const handleSearch = val => {\n    const filterTable = quickMessages.filter(o => Object.keys(o).some(k => String(o[k]).toLowerCase().includes(val.toLowerCase())));\n    setDataSource(filterTable);\n  };\n\n  const columns = [{\n    title: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"th\",\n      children: \"Ph\\xEDm t\\u1EAFt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 20\n    }, this),\n    dataIndex: 'shortcut',\n    key: 'shortcut'\n  }, {\n    title: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"th\",\n      children: \"Ti\\xEAu \\u0111\\u1EC1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 20\n    }, this),\n    dataIndex: 'title',\n    key: 'title',\n    render: (title, record) => /*#__PURE__*/_jsxDEV(Tag, {\n      style: {\n        color: record.color\n      },\n      color: record.backgroundColor,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"th\",\n      children: \"S\\u1EAFp x\\u1EBFp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 20\n    }, this),\n    dataIndex: 'order',\n    key: 'order',\n    render: order => {\n      return /*#__PURE__*/_jsxDEV(InputNumber, {\n        defaultValue: order,\n        min: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    title: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"th\",\n      children: \"Tin nh\\u1EAFn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 20\n    }, this),\n    dataIndex: 'message',\n    key: 'message'\n  }, {\n    title: '',\n    align: 'right',\n    key: 'message',\n    render: row => /*#__PURE__*/_jsxDEV(Action, {\n      onEdit: () => handleShowModal({ ...row,\n        mode: 'update'\n      }),\n      onDelete: () => handleDelete(row._id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this)\n  }];\n\n  const onSelectChange = ids => {\n    setSelectedRowKeys(ids);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(QuickMessageHeader, {\n      defaultPage: currentPage && currentPage._id,\n      toggle: () => handleShowModal({\n        mode: 'create'\n      }),\n      toggleModalCopy: () => setShowModalCopy(!isShowModalCopy),\n      onSearch: handleSearch,\n      onChangePage: handleChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: dataSource,\n        columns: columns,\n        rowSelection: rowSelection,\n        rowKey: \"_id\",\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), currentPage && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(QuickMessageModal, {\n        visible: visible,\n        toggle: toggle,\n        data: { ...currentItem,\n          pageId: currentPage.fbObjectId,\n          storeId: currentPage.storeId\n        },\n        setCurrentItem: setCurrentItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ModalCopyMessage, {\n        quickAnswerIds: selectedRowKeys,\n        pageId: currentPage._id,\n        storeId: currentPage.storeId,\n        visible: isShowModalCopy,\n        toggle: () => setShowModalCopy(!isShowModalCopy)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuickMessage, \"o6sdE70sF77IZlNAnfA8Ok9/q5k=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useModal];\n});\n\n_c = QuickMessage;\nexport default QuickMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuickMessage\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/quick-message/index.tsx"],"names":["InputNumber","Table","Tag","React","useEffect","useState","useDispatch","useSelector","deleteQuickMessageAction","loadQuickMessageAction","useModal","Action","QuickMessageHeader","QuickMessageModal","ModalCopyMessage","QuickMessage","dispatch","pages","page","state","fanpage","loading","setting","quickMessage","visible","toggle","isShowModalCopy","setShowModalCopy","dataSource","setDataSource","currentPage","setCurrentPage","Object","keys","length","undefined","firstPage","selectedRowKeys","setSelectedRowKeys","currentItem","setCurrentItem","quickMessages","values","pageId","fbObjectId","storeId","handleChangePage","handleDelete","quickId","_id","handleShowModal","val","prevState","handleSearch","filterTable","filter","o","some","k","String","toLowerCase","includes","columns","title","dataIndex","key","render","record","color","backgroundColor","order","align","row","mode","onSelectChange","ids","rowSelection","onChange","marginTop"],"mappings":"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","sourcesContent":["import { InputNumber, Table, Tag } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport React, { ReactNode, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { deleteQuickMessageAction, loadQuickMessageAction } from '../../../actions/setting';\nimport useModal from '../../../hooks/use-modal';\nimport { FanpageStateInterface, QuickMessageInterface } from '../../../reducers/setting/interfaces';\nimport Action from './actions';\nimport QuickMessageHeader from './header';\nimport QuickMessageModal from './modal';\nimport ModalCopyMessage from './modal-copy-message';\nimport './style.less';\n\nfunction QuickMessage(): JSX.Element {\n    const dispatch = useDispatch();\n    const { pages, page } = useSelector((state: any) => state.fanpage);\n    const loading = useSelector((state: any) => state.setting.loading);\n    const quickMessage = useSelector((state: any) => state.setting.quickMessage);\n    const { visible, toggle } = useModal();\n    const [isShowModalCopy, setShowModalCopy] = useState(false);\n    const [dataSource, setDataSource] = useState<QuickMessageInterface[]>([]);\n    const [currentPage, setCurrentPage] = useState<FanpageStateInterface>(() => {\n        if (Object.keys(pages).length === 0) return undefined;\n\n        if (page) return page;\n\n        const firstPage = Object.keys(pages)[0];\n\n        return pages[firstPage];\n    });\n\n    const [selectedRowKeys, setSelectedRowKeys] = useState<string[]>([]);\n\n    const [currentItem, setCurrentItem] = useState<QuickMessageInterface>();\n    const quickMessages: QuickMessageInterface[] = Object.values(quickMessage);\n\n    useEffect(() => {\n        if (currentPage) {\n            dispatch(\n                loadQuickMessageAction({\n                    pageId: currentPage.fbObjectId,\n                    storeId: currentPage.storeId,\n                })\n            );\n        }\n    }, [loadQuickMessageAction, currentPage]);\n\n    useEffect(() => {\n        setDataSource(quickMessages);\n    }, [quickMessage]);\n\n    const handleChangePage = (pageId: string) => {\n        setCurrentPage(pages[pageId]);\n    };\n\n    const handleDelete = (quickId: string) => {\n        dispatch(\n            deleteQuickMessageAction({\n                quickId,\n                pageId: currentPage._id,\n                storeId: currentPage.storeId,\n            })\n        );\n    };\n\n    const handleShowModal = (val: any) => {\n        setCurrentItem((prevState) => ({ ...prevState, ...val }));\n        toggle();\n    };\n\n    const handleSearch = (val: string) => {\n        const filterTable = quickMessages.filter((o: any) =>\n            Object.keys(o).some((k) => String(o[k]).toLowerCase().includes(val.toLowerCase()))\n        );\n\n        setDataSource(filterTable);\n    };\n\n    const columns: ColumnsType<any> | undefined = [\n        {\n            title: <span className='th'>Phím tắt</span>,\n            dataIndex: 'shortcut',\n            key: 'shortcut',\n        },\n        {\n            title: <span className='th'>Tiêu đề</span>,\n            dataIndex: 'title',\n            key: 'title',\n            render: (title: string, record: any) => (\n                <Tag style={{ color: record.color }} color={record.backgroundColor}>\n                    {title}\n                </Tag>\n            ),\n        },\n        {\n            title: <span className='th'>Sắp xếp</span>,\n            dataIndex: 'order',\n            key: 'order',\n            render: (order: number) => {\n                return <InputNumber defaultValue={order} min={0} />;\n            },\n        },\n        {\n            title: <span className='th'>Tin nhắn</span>,\n            dataIndex: 'message',\n            key: 'message',\n        },\n        {\n            title: '',\n            align: 'right',\n            key: 'message',\n            render: (row: any): ReactNode => (\n                <Action\n                    onEdit={() => handleShowModal({ ...row, mode: 'update' })}\n                    onDelete={() => handleDelete(row._id)}\n                />\n            ),\n        },\n    ];\n\n    const onSelectChange = (ids: any) => {\n        setSelectedRowKeys(ids);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    return (\n        <div>\n            <QuickMessageHeader\n                defaultPage={currentPage && currentPage._id}\n                toggle={() => handleShowModal({ mode: 'create' })}\n                toggleModalCopy={() => setShowModalCopy(!isShowModalCopy)}\n                onSearch={handleSearch}\n                onChangePage={handleChangePage}\n            />\n            <div style={{ marginTop: 20 }}>\n                <Table\n                    dataSource={dataSource}\n                    columns={columns}\n                    rowSelection={rowSelection}\n                    rowKey='_id'\n                    loading={loading}\n                />\n            </div>\n\n            {currentPage && (\n                <>\n                    <QuickMessageModal\n                        visible={visible}\n                        toggle={toggle}\n                        data={{\n                            ...currentItem,\n                            pageId: currentPage.fbObjectId,\n                            storeId: currentPage.storeId,\n                        }}\n                        setCurrentItem={setCurrentItem}\n                    />\n                    <ModalCopyMessage\n                        quickAnswerIds={selectedRowKeys}\n                        pageId={currentPage._id}\n                        storeId={currentPage.storeId}\n                        visible={isShowModalCopy}\n                        toggle={() => setShowModalCopy(!isShowModalCopy)}\n                    />\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default QuickMessage;\n"]},"metadata":{},"sourceType":"module"}