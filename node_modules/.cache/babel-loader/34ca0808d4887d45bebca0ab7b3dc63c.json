{"ast":null,"code":"import axios from './axios-client';\nimport { omit } from 'lodash';\n\nasync function fetchOrdersRequest({\n  token,\n  storeId,\n  query\n}) {\n  let url = `/store/v1/stores/${storeId}/orders`;\n  const res = await axios({\n    method: 'GET',\n    url: url,\n    params: query\n  });\n  return res.data;\n}\n\nasync function updateStatusOrdersRequest({\n  token,\n  storeId,\n  orderId,\n  data\n}) {\n  let url = `/store/v1/stores/${storeId}/orders/${orderId}`;\n  const res = await axios({\n    method: 'PUT',\n    url: url,\n    data\n  });\n  return res.data;\n}\n\nasync function removeOrdersRequest({\n  token,\n  storeId,\n  orderId\n}) {\n  let url = `/store/v1/stores/${storeId}/orders/${orderId}`;\n  await axios({\n    method: 'DELETE',\n    url: url\n  });\n}\n\nasync function getOrderDetail({\n  token,\n  storeId,\n  orderId\n}) {\n  const url = `/store/v1/stores/${storeId}/orders/${orderId}`;\n  const response = await axios({\n    method: 'GET',\n    url\n  });\n  return response.data;\n}\n\nasync function updateOrder({\n  token,\n  storeId,\n  orderId,\n  data\n}) {\n  let url = `/store/v1/stores/${storeId}/orders/${orderId}`;\n  const res = await axios({\n    method: 'PUT',\n    url: url,\n    data: omit(data, ['source'])\n  });\n  return res.data;\n}\n\nexport { fetchOrdersRequest, updateStatusOrdersRequest, removeOrdersRequest, getOrderDetail, updateOrder };","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/api/order-api.ts"],"names":["axios","omit","fetchOrdersRequest","token","storeId","query","url","res","method","params","data","updateStatusOrdersRequest","orderId","removeOrdersRequest","getOrderDetail","response","updateOrder"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;;AAEA,eAAeC,kBAAf,CAAkC;AAC9BC,EAAAA,KAD8B;AAE9BC,EAAAA,OAF8B;AAG9BC,EAAAA;AAH8B,CAAlC,EAQiB;AACb,MAAIC,GAAG,GAAI,oBAAmBF,OAAQ,SAAtC;AAEA,QAAMG,GAAG,GAAG,MAAMP,KAAK,CAAC;AACpBQ,IAAAA,MAAM,EAAE,KADY;AAEpBF,IAAAA,GAAG,EAAEA,GAFe;AAIpBG,IAAAA,MAAM,EAAEJ;AAJY,GAAD,CAAvB;AAOA,SAAOE,GAAG,CAACG,IAAX;AACH;;AAED,eAAeC,yBAAf,CAAyC;AACrCR,EAAAA,KADqC;AAErCC,EAAAA,OAFqC;AAGrCQ,EAAAA,OAHqC;AAIrCF,EAAAA;AAJqC,CAAzC,EAUiB;AACb,MAAIJ,GAAG,GAAI,oBAAmBF,OAAQ,WAAUQ,OAAQ,EAAxD;AAEA,QAAML,GAAG,GAAG,MAAMP,KAAK,CAAC;AACpBQ,IAAAA,MAAM,EAAE,KADY;AAEpBF,IAAAA,GAAG,EAAEA,GAFe;AAIpBI,IAAAA;AAJoB,GAAD,CAAvB;AAOA,SAAOH,GAAG,CAACG,IAAX;AACH;;AAED,eAAeG,mBAAf,CAAmC;AAC/BV,EAAAA,KAD+B;AAE/BC,EAAAA,OAF+B;AAG/BQ,EAAAA;AAH+B,CAAnC,EAQiB;AACb,MAAIN,GAAG,GAAI,oBAAmBF,OAAQ,WAAUQ,OAAQ,EAAxD;AAEA,QAAMZ,KAAK,CAAC;AACRQ,IAAAA,MAAM,EAAE,QADA;AAERF,IAAAA,GAAG,EAAEA;AAFG,GAAD,CAAX;AAIH;;AAED,eAAeQ,cAAf,CAA8B;AAC1BX,EAAAA,KAD0B;AAE1BC,EAAAA,OAF0B;AAG1BQ,EAAAA;AAH0B,CAA9B,EAQiB;AACb,QAAMN,GAAG,GAAI,oBAAmBF,OAAQ,WAAUQ,OAAQ,EAA1D;AACA,QAAMG,QAAQ,GAAG,MAAMf,KAAK,CAAC;AACzBQ,IAAAA,MAAM,EAAE,KADiB;AAEzBF,IAAAA;AAFyB,GAAD,CAA5B;AAKA,SAAOS,QAAQ,CAACL,IAAhB;AACH;;AAED,eAAeM,WAAf,CAA2B;AACvBb,EAAAA,KADuB;AAEvBC,EAAAA,OAFuB;AAGvBQ,EAAAA,OAHuB;AAIvBF,EAAAA;AAJuB,CAA3B,EAUiB;AACb,MAAIJ,GAAG,GAAI,oBAAmBF,OAAQ,WAAUQ,OAAQ,EAAxD;AAEA,QAAML,GAAG,GAAG,MAAMP,KAAK,CAAC;AACpBQ,IAAAA,MAAM,EAAE,KADY;AAEpBF,IAAAA,GAAG,EAAEA,GAFe;AAIpBI,IAAAA,IAAI,EAAET,IAAI,CAACS,IAAD,EAAO,CAAC,QAAD,CAAP;AAJU,GAAD,CAAvB;AAOA,SAAOH,GAAG,CAACG,IAAX;AACH;;AAED,SACIR,kBADJ,EAEIS,yBAFJ,EAGIE,mBAHJ,EAIIC,cAJJ,EAKIE,WALJ","sourcesContent":["import axios from './axios-client';\nimport { omit } from 'lodash';\n\nasync function fetchOrdersRequest({\n    token,\n    storeId,\n    query,\n}: {\n    token: string;\n    storeId: string;\n    query: { status?: string; page: number; limit: number; draft?: boolean };\n}): Promise<any> {\n    let url = `/store/v1/stores/${storeId}/orders`;\n\n    const res = await axios({\n        method: 'GET',\n        url: url,\n\n        params: query,\n    });\n\n    return res.data;\n}\n\nasync function updateStatusOrdersRequest({\n    token,\n    storeId,\n    orderId,\n    data,\n}: {\n    token: string;\n    storeId: string;\n    orderId: string;\n    data: { status: string };\n}): Promise<any> {\n    let url = `/store/v1/stores/${storeId}/orders/${orderId}`;\n\n    const res = await axios({\n        method: 'PUT',\n        url: url,\n\n        data,\n    });\n\n    return res.data;\n}\n\nasync function removeOrdersRequest({\n    token,\n    storeId,\n    orderId,\n}: {\n    token: string;\n    storeId: string;\n    orderId: string;\n}): Promise<any> {\n    let url = `/store/v1/stores/${storeId}/orders/${orderId}`;\n\n    await axios({\n        method: 'DELETE',\n        url: url,\n    });\n}\n\nasync function getOrderDetail({\n    token,\n    storeId,\n    orderId,\n}: {\n    token: string;\n    storeId: string;\n    orderId: string;\n}): Promise<any> {\n    const url = `/store/v1/stores/${storeId}/orders/${orderId}`;\n    const response = await axios({\n        method: 'GET',\n        url,\n    });\n\n    return response.data;\n}\n\nasync function updateOrder({\n    token,\n    storeId,\n    orderId,\n    data,\n}: {\n    token: string;\n    storeId: string;\n    orderId: string;\n    data: any;\n}): Promise<any> {\n    let url = `/store/v1/stores/${storeId}/orders/${orderId}`;\n\n    const res = await axios({\n        method: 'PUT',\n        url: url,\n\n        data: omit(data, ['source']),\n    });\n\n    return res.data;\n}\n\nexport {\n    fetchOrdersRequest,\n    updateStatusOrdersRequest,\n    removeOrdersRequest,\n    getOrderDetail,\n    updateOrder,\n};\n"]},"metadata":{},"sourceType":"module"}