{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/edit-label-order.tsx\",\n    _s = $RefreshSig$();\n\nimport { CloseOutlined, SaveFilled } from '@ant-design/icons';\nimport { Button, Input, InputNumber, message } from 'antd';\nimport { pick } from 'lodash';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as settingApi from '../../../api/setting';\nimport { updateOrderLabel } from '../../../reducers/labelState/labelAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditOrderLabel = ({\n  label,\n  storeId,\n  pageId\n}) => {\n  _s();\n\n  const [order, setOrder] = useState(label.order);\n  const [loading, setLoading] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    if (!isEdit) {\n      setIsEdit(true);\n    }\n\n    setOrder(e);\n  };\n\n  const onCancel = () => {\n    setIsEdit(false);\n    setOrder(label.order);\n  };\n\n  const onSave = () => {\n    setLoading(true);\n    const data = { ...pick(label, ['name', 'color', 'backgroundColor', 'status']),\n      order\n    };\n    settingApi.updateLabel({\n      storeId,\n      pageId,\n      data,\n      labelId: label._id\n    }).then(() => {\n      message.success('Đã chỉnh sửa sắp xếp');\n      setIsEdit(false);\n      dispatch(updateOrderLabel(label._id, order));\n    }).catch(() => {\n      message.error('Lỗi chỉnh sửa sắp xếp');\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Input.Group, {\n    compact: true,\n    children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n      onChange: onChange,\n      value: order,\n      min: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), isEdit && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(SaveFilled, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 35\n        }, this),\n        type: \"primary\",\n        onClick: onSave,\n        loading: loading,\n        children: \"L\\u01B0u\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 35\n        }, this),\n        onClick: onCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditOrderLabel, \"JKDTcuLHo8EoQ6RjRGTt0e63mtU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditOrderLabel;\nexport default EditOrderLabel;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditOrderLabel\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/edit-label-order.tsx"],"names":["CloseOutlined","SaveFilled","Button","Input","InputNumber","message","pick","React","useState","useDispatch","settingApi","updateOrderLabel","EditOrderLabel","label","storeId","pageId","order","setOrder","loading","setLoading","isEdit","setIsEdit","dispatch","onChange","e","onCancel","onSave","data","updateLabel","labelId","_id","then","success","catch","error","finally"],"mappings":"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","sourcesContent":["import { CloseOutlined, SaveFilled } from '@ant-design/icons';\nimport { Button, Input, InputNumber, message } from 'antd';\nimport { pick } from 'lodash';\nimport React, { FC, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as settingApi from '../../../api/setting';\nimport { ILabel } from '../../../collections/label';\nimport { updateOrderLabel } from '../../../reducers/labelState/labelAction';\n\ninterface Props {\n    label: ILabel;\n    storeId: string;\n    pageId: string;\n}\n\nconst EditOrderLabel: FC<Props> = ({ label, storeId, pageId }) => {\n    const [order, setOrder] = useState(label.order);\n    const [loading, setLoading] = useState(false);\n    const [isEdit, setIsEdit] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const onChange = (e: any) => {\n        if (!isEdit) {\n            setIsEdit(true);\n        }\n\n        setOrder(e);\n    };\n\n    const onCancel = () => {\n        setIsEdit(false);\n        setOrder(label.order);\n    };\n\n    const onSave = () => {\n        setLoading(true);\n\n        const data = {\n            ...pick(label, ['name', 'color', 'backgroundColor', 'status']),\n            order,\n        };\n\n        settingApi\n            .updateLabel({\n                storeId,\n                pageId,\n                data,\n                labelId: label._id,\n            })\n            .then(() => {\n                message.success('Đã chỉnh sửa sắp xếp');\n                setIsEdit(false);\n                dispatch(updateOrderLabel(label._id, order));\n            })\n            .catch(() => {\n                message.error('Lỗi chỉnh sửa sắp xếp');\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Input.Group compact>\n            <InputNumber onChange={onChange} value={order} min={0} />\n            {isEdit && (\n                <>\n                    <Button icon={<SaveFilled />} type='primary' onClick={onSave} loading={loading}>\n                        Lưu\n                    </Button>\n                    <Button icon={<CloseOutlined />} onClick={onCancel}></Button>\n                </>\n            )}\n        </Input.Group>\n    );\n};\n\nexport default EditOrderLabel;\n"]},"metadata":{},"sourceType":"module"}