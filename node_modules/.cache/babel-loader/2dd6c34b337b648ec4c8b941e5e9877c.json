{"ast":null,"code":"import { push } from 'connected-react-router';\nimport axios from 'axios';\nimport authTypes from '../reducers/authState/authTypes';\nexport const onApiUnauthenticated = () => next => action => {\n  if (action.type === 'API_UNAUTHENTICATED') {\n    return next(push('/login'));\n  }\n\n  return next(action);\n};\nexport const onAuthSuccess = () => next => action => {\n  if (action.type === authTypes.LOGIN_SUCCESSS) {\n    const {\n      accessToken,\n      type\n    } = action.payload;\n    axios.defaults.headers.common.Authorization = `${type} ${accessToken}`;\n  } else if (action.type === authTypes.LOGIN_FAILED) {\n    delete axios.defaults.headers.Authorization;\n  }\n\n  return next(action);\n};\nexport const checkAuthOnRehydrate = () => next => action => {\n  if (action.type === 'persist/REHYDRATE') {\n    if (action.payload && action.payload.auth && action.payload.auth.token) {\n      const {\n        token\n      } = action.payload.auth;\n      axios.defaults.headers.common.Authorization = `${token.type} ${token.accessToken}`;\n    } else {\n      delete axios.defaults.headers.Authorization;\n    }\n  }\n\n  return next(action);\n};","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/middleware/auth.ts"],"names":["push","axios","authTypes","onApiUnauthenticated","next","action","type","onAuthSuccess","LOGIN_SUCCESSS","accessToken","payload","defaults","headers","common","Authorization","LOGIN_FAILED","checkAuthOnRehydrate","auth","token"],"mappings":"AAAA,SAASA,IAAT,QAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,iCAAtB;AAGA,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,IAAD,IAAgBC,MAAD,IAAyB;AAC9E,MAAIA,MAAM,CAACC,IAAP,KAAgB,qBAApB,EAA2C;AACvC,WAAOF,IAAI,CAACJ,IAAI,CAAC,QAAD,CAAL,CAAX;AACH;;AAED,SAAOI,IAAI,CAACC,MAAD,CAAX;AACH,CANM;AAQP,OAAO,MAAME,aAAa,GAAG,MAAOH,IAAD,IAAgBC,MAAD,IAAyB;AACvE,MAAIA,MAAM,CAACC,IAAP,KAAgBJ,SAAS,CAACM,cAA9B,EAA8C;AAC1C,UAAM;AAAEC,MAAAA,WAAF;AAAeH,MAAAA;AAAf,QAAwBD,MAAM,CAACK,OAArC;AAEAT,IAAAA,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA+C,GAAER,IAAK,IAAGG,WAAY,EAArE;AACH,GAJD,MAIO,IAAIJ,MAAM,CAACC,IAAP,KAAgBJ,SAAS,CAACa,YAA9B,EAA4C;AAC/C,WAAOd,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBE,aAA9B;AACH;;AAED,SAAOV,IAAI,CAACC,MAAD,CAAX;AACH,CAVM;AAYP,OAAO,MAAMW,oBAAoB,GAAG,MAAOZ,IAAD,IAAgBC,MAAD,IAAyB;AAC9E,MAAIA,MAAM,CAACC,IAAP,KAAgB,mBAApB,EAAyC;AACrC,QAAID,MAAM,CAACK,OAAP,IAAkBL,MAAM,CAACK,OAAP,CAAeO,IAAjC,IAAyCZ,MAAM,CAACK,OAAP,CAAeO,IAAf,CAAoBC,KAAjE,EAAwE;AACpE,YAAM;AAAEA,QAAAA;AAAF,UAAYb,MAAM,CAACK,OAAP,CAAeO,IAAjC;AACAhB,MAAAA,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA+C,GAAEI,KAAK,CAACZ,IAAK,IAAGY,KAAK,CAACT,WAAY,EAAjF;AACH,KAHD,MAGO;AACH,aAAOR,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBE,aAA9B;AACH;AACJ;;AACD,SAAOV,IAAI,CAACC,MAAD,CAAX;AACH,CAVM","sourcesContent":["import { push } from 'connected-react-router';\nimport axios from 'axios';\n\nimport authTypes from '../reducers/authState/authTypes';\nimport { ReduxAction } from '../types';\n\nexport const onApiUnauthenticated = () => (next: any) => (action: ReduxAction) => {\n    if (action.type === 'API_UNAUTHENTICATED') {\n        return next(push('/login'));\n    }\n\n    return next(action);\n};\n\nexport const onAuthSuccess = () => (next: any) => (action: ReduxAction) => {\n    if (action.type === authTypes.LOGIN_SUCCESSS) {\n        const { accessToken, type } = action.payload;\n\n        axios.defaults.headers.common.Authorization = `${type} ${accessToken}`;\n    } else if (action.type === authTypes.LOGIN_FAILED) {\n        delete axios.defaults.headers.Authorization;\n    }\n\n    return next(action);\n};\n\nexport const checkAuthOnRehydrate = () => (next: any) => (action: ReduxAction) => {\n    if (action.type === 'persist/REHYDRATE') {\n        if (action.payload && action.payload.auth && action.payload.auth.token) {\n            const { token } = action.payload.auth;\n            axios.defaults.headers.common.Authorization = `${token.type} ${token.accessToken}`;\n        } else {\n            delete axios.defaults.headers.Authorization;\n        }\n    }\n    return next(action);\n};\n"]},"metadata":{},"sourceType":"module"}