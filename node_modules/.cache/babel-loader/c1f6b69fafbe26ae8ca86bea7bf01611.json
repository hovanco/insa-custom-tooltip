{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/add-product.tsx\",\n    _s = $RefreshSig$();\n\nimport { FileImageOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Avatar, Button, Checkbox, Modal, Table } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { fetchProductsRequest } from '../../api/product-api';\nimport useModal from '../../hooks/use-modal';\nimport { IMG_URL } from '../../configs/vars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LIMIT = 5;\n\nconst AddProuct = ({\n  order,\n  changeProduct\n}) => {\n  _s();\n\n  const token = useSelector(state => state.auth.token);\n  const store = useSelector(state => state.store.store);\n  const {\n    toggle,\n    visible\n  } = useModal();\n  const [dataSource, setDataSource] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [pageProduct, setPageProduct] = useState(1);\n  const [total, setTotal] = useState(0);\n\n  const handleFilter = async page => {\n    setLoading(true);\n    const response = await fetchProductsRequest({\n      token: token.accessToken,\n      storeId: store._id,\n      query: {\n        page,\n        limit: LIMIT\n      }\n    });\n    const dataSource = response.data.map(d => ({ ...d,\n      key: d._id\n    }));\n    setDataSource(dataSource);\n    setTotal(response.total);\n    setLoading(false);\n  };\n\n  const handleSelectProduct = product => {\n    const exist = order.products.find(p => p.productId._id === product._id);\n\n    if (exist) {\n      const products = order.products.filter(p => p.productId._id !== product._id);\n      const newOrder = { ...order,\n        products\n      };\n      changeProduct(newOrder);\n    } else {\n      const newProduct = {\n        count: 1,\n        productId: { ...product\n        },\n        price: product.price\n      };\n      const products = [...order.products, newProduct];\n      const newOrder = { ...order,\n        products\n      };\n      changeProduct(newOrder);\n    }\n  };\n\n  const onChangePage = (page, pageSize) => {\n    setPageProduct(page);\n    handleFilter(page);\n  };\n\n  useEffect(() => {\n    if (visible) {\n      handleFilter(pageProduct);\n    }\n  }, [visible]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 27\n      }, this),\n      onClick: toggle,\n      children: \"S\\u1EA3n ph\\u1EA9m\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visible,\n      footer: null,\n      title: \"Th\\xEAm s\\u1EA3n ph\\u1EA9m\",\n      onOk: toggle,\n      onCancel: toggle,\n      bodyStyle: {\n        width: '700px'\n      },\n      width: \"700\",\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        loading: loading,\n        dataSource: dataSource,\n        rowKey: \"_id\",\n        columns: [{\n          title: '',\n          dataIndex: '',\n          key: 'check',\n          render: ({\n            _id\n          }) => {\n            const product = order.products.find(p => p.productId._id === _id);\n            const checked = !!product;\n            return /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 40\n            }, this);\n          }\n        }, {\n          title: 'Hình ảnh',\n          dataIndex: 'images',\n          key: 'image',\n          render: images => {\n            if (images.length === 0) return /*#__PURE__*/_jsxDEV(Avatar, {\n              icon: /*#__PURE__*/_jsxDEV(FileImageOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 51\n              }, this),\n              size: \"large\",\n              shape: \"square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 41\n            }, this);\n            return /*#__PURE__*/_jsxDEV(Avatar, {\n              src: `${IMG_URL}${images[0]}`,\n              size: \"large\",\n              shape: \"square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this);\n          }\n        }, {\n          title: 'Tên',\n          dataIndex: 'name',\n          key: 'name'\n        }, {\n          title: 'Giá bán',\n          dataIndex: 'price',\n          key: 'price',\n          render: price => {\n            return `${price}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n          }\n        }, {\n          title: 'Khối lượng',\n          dataIndex: 'weight',\n          key: 'weight'\n        }],\n        onRow: product => {\n          return {\n            onClick: () => {\n              handleSelectProduct(product);\n            }\n          };\n        },\n        pagination: {\n          onChange: onChangePage,\n          current: pageProduct,\n          total,\n          pageSize: LIMIT\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddProuct, \"VcXfbQ0XciRM0ZudgRsi9OSCEZg=\", false, function () {\n  return [useSelector, useSelector, useModal];\n});\n\n_c = AddProuct;\nexport default AddProuct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProuct\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/add-product.tsx"],"names":["FileImageOutlined","PlusOutlined","Avatar","Button","Checkbox","Modal","Table","React","useEffect","useState","useSelector","fetchProductsRequest","useModal","IMG_URL","LIMIT","AddProuct","order","changeProduct","token","state","auth","store","toggle","visible","dataSource","setDataSource","loading","setLoading","pageProduct","setPageProduct","total","setTotal","handleFilter","page","response","accessToken","storeId","_id","query","limit","data","map","d","key","handleSelectProduct","product","exist","products","find","p","productId","filter","newOrder","newProduct","count","price","onChangePage","pageSize","width","title","dataIndex","render","checked","images","length","replace","onClick","onChange","current"],"mappings":"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","sourcesContent":["import { FileImageOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Avatar, Button, Checkbox, Modal, Table } from 'antd';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { fetchProductsRequest } from '../../api/product-api';\nimport useModal from '../../hooks/use-modal';\nimport { IMG_URL } from '../../configs/vars';\n\ninterface Props {\n    order: any;\n    changeProduct: (order: any) => void;\n}\n\nconst LIMIT = 5;\n\nconst AddProuct: FC<Props> = ({ order, changeProduct }): JSX.Element => {\n    const token: any = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n\n    const { toggle, visible } = useModal();\n\n    const [dataSource, setDataSource] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [pageProduct, setPageProduct] = useState<number>(1);\n    const [total, setTotal] = useState<number>(0);\n\n    const handleFilter = async (page: number) => {\n        setLoading(true);\n        const response = await fetchProductsRequest({\n            token: token.accessToken,\n            storeId: store._id,\n            query: {\n                page,\n                limit: LIMIT,\n            },\n        });\n\n        const dataSource = response.data.map((d: any) => ({\n            ...d,\n            key: d._id,\n        }));\n\n        setDataSource(dataSource);\n        setTotal(response.total);\n        setLoading(false);\n    };\n\n    const handleSelectProduct = (product: any) => {\n        const exist = order.products.find((p: any) => p.productId._id === product._id);\n\n        if (exist) {\n            const products = order.products.filter((p: any) => p.productId._id !== product._id);\n            const newOrder = { ...order, products };\n\n            changeProduct(newOrder);\n        } else {\n            const newProduct = {\n                count: 1,\n                productId: {\n                    ...product,\n                },\n                price: product.price,\n            };\n\n            const products = [...order.products, newProduct];\n            const newOrder = { ...order, products };\n\n            changeProduct(newOrder);\n        }\n    };\n\n    const onChangePage = (page: number, pageSize?: number | undefined) => {\n        setPageProduct(page);\n        handleFilter(page);\n    };\n\n    useEffect(() => {\n        if (visible) {\n            handleFilter(pageProduct);\n        }\n    }, [visible]);\n\n    return (\n        <>\n            <Button icon={<PlusOutlined />} onClick={toggle}>\n                Sản phẩm\n            </Button>\n\n            <Modal\n                visible={visible}\n                footer={null}\n                title='Thêm sản phẩm'\n                onOk={toggle}\n                onCancel={toggle}\n                bodyStyle={{ width: '700px' }}\n                width='700'\n                centered={true}\n            >\n                <Table\n                    loading={loading}\n                    dataSource={dataSource}\n                    rowKey='_id'\n                    columns={[\n                        {\n                            title: '',\n                            dataIndex: '',\n                            key: 'check',\n                            render: ({ _id }: { _id: string }) => {\n                                const product = order.products.find(\n                                    (p: any) => p.productId._id === _id\n                                );\n                                const checked = !!product;\n                                return <Checkbox checked={checked} />;\n                            },\n                        },\n                        {\n                            title: 'Hình ảnh',\n                            dataIndex: 'images',\n                            key: 'image',\n                            render: (images) => {\n                                if (images.length === 0)\n                                    return (\n                                        <Avatar\n                                            icon={<FileImageOutlined />}\n                                            size='large'\n                                            shape='square'\n                                        />\n                                    );\n                                return (\n                                    <Avatar\n                                        src={`${IMG_URL}${images[0]}`}\n                                        size='large'\n                                        shape='square'\n                                    />\n                                );\n                            },\n                        },\n                        {\n                            title: 'Tên',\n                            dataIndex: 'name',\n                            key: 'name',\n                        },\n                        {\n                            title: 'Giá bán',\n                            dataIndex: 'price',\n                            key: 'price',\n                            render: (price) => {\n                                return `${price}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n                            },\n                        },\n\n                        {\n                            title: 'Khối lượng',\n                            dataIndex: 'weight',\n                            key: 'weight',\n                        },\n                    ]}\n                    onRow={(product) => {\n                        return {\n                            onClick: () => {\n                                handleSelectProduct(product);\n                            },\n                        };\n                    }}\n                    pagination={{\n                        onChange: onChangePage,\n                        current: pageProduct,\n                        total,\n                        pageSize: LIMIT,\n                    }}\n                />\n            </Modal>\n        </>\n    );\n};\n\nexport default AddProuct;\n"]},"metadata":{},"sourceType":"module"}