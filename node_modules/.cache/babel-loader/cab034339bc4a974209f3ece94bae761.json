{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/search-image.tsx\",\n    _s = $RefreshSig$();\n\nimport { Input } from 'antd';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchImage, changTextSearch } from '../../../reducers/imagesState/imagesAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchImage = ({\n  gallery\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false); // const [text, setText] = useState();\n\n  const dispatch = useDispatch();\n  const text_search = useSelector(state => state.images.text_search);\n\n  const onChangeSearchText = e => {\n    dispatch(changTextSearch(e.target.value)); // setText(e.target.value);\n  };\n\n  const onSearch = () => {\n    const star = gallery === 'bookmark';\n    const galleryId = gallery && gallery !== 'bookmark' ? gallery._id : undefined;\n    dispatch(searchImage({\n      text: text_search,\n      galleryId,\n      star\n    }));\n    setLoading(false);\n  }; // const changeTextSearch = debounce(async (text: string) => {\n  //     const star = gallery === 'bookmark';\n  //     const galleryId =\n  //         gallery && gallery !== 'bookmark' ? gallery._id : undefined;\n  //     dispatch(searchImage({ text, galleryId, star }));\n  //     setLoading(false);\n  // }, 1000);\n\n\n  return /*#__PURE__*/_jsxDEV(Input.Search, {\n    value: text_search,\n    placeholder: \"T\\xECm ki\\u1EBFm\",\n    onChange: onChangeSearchText,\n    loading: loading,\n    onSearch: onSearch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchImage, \"3La7cDphTjWku8YkZJpMhsRrZrg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SearchImage;\nexport default SearchImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchImage\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/search-image.tsx"],"names":["Input","React","useState","useDispatch","useSelector","searchImage","changTextSearch","SearchImage","gallery","loading","setLoading","dispatch","text_search","state","images","onChangeSearchText","e","target","value","onSearch","star","galleryId","_id","undefined","text"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,MAAtB;AAEA,OAAOC,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,4CAA7C;;;AAMA,MAAMC,WAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA8B;AAAA;;AACzD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC,CADyD,CAEzD;;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,WAAW,GAAGR,WAAW,CAAES,KAAD,IAAgBA,KAAK,CAACC,MAAN,CAAaF,WAA9B,CAA/B;;AAEA,QAAMG,kBAAkB,GAAIC,CAAD,IAAY;AACnCL,IAAAA,QAAQ,CAACL,eAAe,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB,CAAR,CADmC,CAGnC;AACH,GAJD;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACnB,UAAMC,IAAI,GAAGZ,OAAO,KAAK,UAAzB;AACA,UAAMa,SAAS,GAAGb,OAAO,IAAIA,OAAO,KAAK,UAAvB,GAAoCA,OAAO,CAACc,GAA5C,GAAkDC,SAApE;AACAZ,IAAAA,QAAQ,CAACN,WAAW,CAAC;AAAEmB,MAAAA,IAAI,EAAEZ,WAAR;AAAqBS,MAAAA,SAArB;AAAgCD,MAAAA;AAAhC,KAAD,CAAZ,CAAR;AACAV,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GALD,CAZyD,CAmBzD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI,QAAC,KAAD,CAAO,MAAP;AACI,IAAA,KAAK,EAAEE,WADX;AAEI,IAAA,WAAW,EAAC,kBAFhB;AAGI,IAAA,QAAQ,EAAEG,kBAHd;AAII,IAAA,OAAO,EAAEN,OAJb;AAKI,IAAA,QAAQ,EAAEU;AALd;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CApCD;;GAAMZ,W;UAGeJ,W,EACGC,W;;;KAJlBG,W;AAsCN,eAAeA,WAAf","sourcesContent":["import { Input } from 'antd';\nimport { debounce } from 'lodash';\nimport React, { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { searchImage, changTextSearch } from '../../../reducers/imagesState/imagesAction';\n\ninterface Props {\n    gallery?: any;\n}\n\nconst SearchImage: FC<Props> = ({ gallery }): JSX.Element => {\n    const [loading, setLoading] = useState(false);\n    // const [text, setText] = useState();\n    const dispatch = useDispatch();\n    const text_search = useSelector((state: any) => state.images.text_search);\n\n    const onChangeSearchText = (e: any) => {\n        dispatch(changTextSearch(e.target.value));\n\n        // setText(e.target.value);\n    };\n\n    const onSearch = () => {\n        const star = gallery === 'bookmark';\n        const galleryId = gallery && gallery !== 'bookmark' ? gallery._id : undefined;\n        dispatch(searchImage({ text: text_search, galleryId, star }));\n        setLoading(false);\n    };\n\n    // const changeTextSearch = debounce(async (text: string) => {\n    //     const star = gallery === 'bookmark';\n    //     const galleryId =\n    //         gallery && gallery !== 'bookmark' ? gallery._id : undefined;\n    //     dispatch(searchImage({ text, galleryId, star }));\n    //     setLoading(false);\n    // }, 1000);\n\n    return (\n        <Input.Search\n            value={text_search}\n            placeholder='Tìm kiếm'\n            onChange={onChangeSearchText}\n            loading={loading}\n            onSearch={onSearch}\n        />\n    );\n};\n\nexport default SearchImage;\n"]},"metadata":{},"sourceType":"module"}