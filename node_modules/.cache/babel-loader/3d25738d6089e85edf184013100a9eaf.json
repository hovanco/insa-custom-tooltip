{"ast":null,"code":"import types from './orderDraftType';\nimport { fetchOrdersRequest, removeOrdersRequest } from '../../api/order-api';\nimport { message } from 'antd';\nexport function loadOrdersDraftSuccess(data) {\n  return {\n    type: types.LOAD_ORDER_DRAFT_SUCCESS,\n    payload: data\n  };\n}\nexport function loadOrdersDraftFailed() {\n  return {\n    type: types.LOAD_ORDER_DRAFT_FAILED\n  };\n}\nexport const loadOrdersDraft = query => async (dispatch, getState) => {\n  dispatch({\n    type: types.LOADING_ORDER_DRAFT\n  });\n\n  try {\n    const {\n      auth,\n      store\n    } = getState();\n    const {\n      token\n    } = auth;\n    const storeId = store.store._id;\n    const res = await fetchOrdersRequest({\n      token: token.accessToken,\n      storeId,\n      query: { ...query,\n        draft: true\n      }\n    });\n    dispatch(loadOrdersDraftSuccess(res));\n  } catch (error) {\n    dispatch(loadOrdersDraftFailed());\n  }\n};\nexport const removeOrdersDraft = orderId => async (dispatch, getState) => {\n  try {\n    const {\n      auth,\n      store\n    } = getState();\n    const {\n      token\n    } = auth;\n    const storeId = store.store._id;\n    const res = await removeOrdersRequest({\n      token: token.accessToken,\n      storeId,\n      orderId\n    });\n    dispatch({\n      type: types.DELETE_ORDER_DRAFT_SUCCESS,\n      payload: orderId\n    });\n    message.success('Xoá đơn hàng thành công');\n  } catch (error) {\n    message.error('Lỗi xoá đơn hàng');\n  }\n};","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/orderDraftState/orderDraftAction.ts"],"names":["types","fetchOrdersRequest","removeOrdersRequest","message","loadOrdersDraftSuccess","data","type","LOAD_ORDER_DRAFT_SUCCESS","payload","loadOrdersDraftFailed","LOAD_ORDER_DRAFT_FAILED","loadOrdersDraft","query","dispatch","getState","LOADING_ORDER_DRAFT","auth","store","token","storeId","_id","res","accessToken","draft","error","removeOrdersDraft","orderId","DELETE_ORDER_DRAFT_SUCCESS","success"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAEA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,qBAAxD;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,OAAO,SAASC,sBAAT,CAAgCC,IAAhC,EAA2C;AAC9C,SAAO;AACHC,IAAAA,IAAI,EAAEN,KAAK,CAACO,wBADT;AAEHC,IAAAA,OAAO,EAAEH;AAFN,GAAP;AAIH;AAED,OAAO,SAASI,qBAAT,GAAiC;AACpC,SAAO;AACHH,IAAAA,IAAI,EAAEN,KAAK,CAACU;AADT,GAAP;AAGH;AAED,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAA4C,OACvEC,QADuE,EAEvEC,QAFuE,KAGtE;AACDD,EAAAA,QAAQ,CAAC;AACLP,IAAAA,IAAI,EAAEN,KAAK,CAACe;AADP,GAAD,CAAR;;AAIA,MAAI;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBH,QAAQ,EAAhC;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYF,IAAlB;AACA,UAAMG,OAAO,GAAGF,KAAK,CAACA,KAAN,CAAYG,GAA5B;AAEA,UAAMC,GAAG,GAAG,MAAMpB,kBAAkB,CAAC;AACjCiB,MAAAA,KAAK,EAAEA,KAAK,CAACI,WADoB;AAEjCH,MAAAA,OAFiC;AAGjCP,MAAAA,KAAK,EAAE,EACH,GAAGA,KADA;AAEHW,QAAAA,KAAK,EAAE;AAFJ;AAH0B,KAAD,CAApC;AASAV,IAAAA,QAAQ,CAACT,sBAAsB,CAACiB,GAAD,CAAvB,CAAR;AACH,GAfD,CAeE,OAAOG,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAACJ,qBAAqB,EAAtB,CAAR;AACH;AACJ,CA1BM;AA4BP,OAAO,MAAMgB,iBAAiB,GAAIC,OAAD,IAAqB,OAClDb,QADkD,EAElDC,QAFkD,KAGjD;AACD,MAAI;AACA,UAAM;AAAEE,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBH,QAAQ,EAAhC;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYF,IAAlB;AACA,UAAMG,OAAO,GAAGF,KAAK,CAACA,KAAN,CAAYG,GAA5B;AAEA,UAAMC,GAAG,GAAG,MAAMnB,mBAAmB,CAAC;AAClCgB,MAAAA,KAAK,EAAEA,KAAK,CAACI,WADqB;AAElCH,MAAAA,OAFkC;AAGlCO,MAAAA;AAHkC,KAAD,CAArC;AAMAb,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAEN,KAAK,CAAC2B,0BADP;AAELnB,MAAAA,OAAO,EAAEkB;AAFJ,KAAD,CAAR;AAKAvB,IAAAA,OAAO,CAACyB,OAAR,CAAgB,yBAAhB;AACH,GAjBD,CAiBE,OAAOJ,KAAP,EAAc;AACZrB,IAAAA,OAAO,CAACqB,KAAR,CAAc,kBAAd;AACH;AACJ,CAxBM","sourcesContent":["import types from './orderDraftType';\nimport { Dispatch } from 'redux';\nimport { fetchOrdersRequest, removeOrdersRequest } from '../../api/order-api';\nimport { message } from 'antd';\n\nexport function loadOrdersDraftSuccess(data: any) {\n    return {\n        type: types.LOAD_ORDER_DRAFT_SUCCESS,\n        payload: data,\n    };\n}\n\nexport function loadOrdersDraftFailed() {\n    return {\n        type: types.LOAD_ORDER_DRAFT_FAILED,\n    };\n}\n\nexport const loadOrdersDraft = (query: { limit: number; page: number }) => async (\n    dispatch: Dispatch,\n    getState: () => any\n) => {\n    dispatch({\n        type: types.LOADING_ORDER_DRAFT,\n    });\n\n    try {\n        const { auth, store } = getState();\n        const { token } = auth;\n        const storeId = store.store._id;\n\n        const res = await fetchOrdersRequest({\n            token: token.accessToken,\n            storeId,\n            query: {\n                ...query,\n                draft: true,\n            },\n        });\n\n        dispatch(loadOrdersDraftSuccess(res));\n    } catch (error) {\n        dispatch(loadOrdersDraftFailed());\n    }\n};\n\nexport const removeOrdersDraft = (orderId: string) => async (\n    dispatch: Dispatch,\n    getState: () => any\n) => {\n    try {\n        const { auth, store } = getState();\n        const { token } = auth;\n        const storeId = store.store._id;\n\n        const res = await removeOrdersRequest({\n            token: token.accessToken,\n            storeId,\n            orderId,\n        });\n\n        dispatch({\n            type: types.DELETE_ORDER_DRAFT_SUCCESS,\n            payload: orderId,\n        });\n\n        message.success('Xoá đơn hàng thành công');\n    } catch (error) {\n        message.error('Lỗi xoá đơn hàng');\n    }\n};\n"]},"metadata":{},"sourceType":"module"}