{"ast":null,"code":"import { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage';\nimport { createWhitelistFilter } from 'redux-persist-transform-filter';\nimport thunk from 'redux-thunk';\nimport { checkAuthOnRehydrate, onApiUnauthenticated, onAuthSuccess } from '../middleware/auth';\nimport rootReducer from './rootReducer';\nexport const history = createBrowserHistory();\nconst enhancers = [];\nconst middleware = [routerMiddleware(history), thunk, onApiUnauthenticated, onAuthSuccess, checkAuthOnRehydrate];\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['auth'],\n  stateReconciler: autoMergeLevel2,\n  transforms: [createWhitelistFilter('auth', ['isAuth', 'token', 'user'])]\n};\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\nconst store = createStore(persistedReducer, composedEnhancers);\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/store/index.ts"],"names":["routerMiddleware","createBrowserHistory","applyMiddleware","compose","createStore","persistReducer","persistStore","autoMergeLevel2","storage","createWhitelistFilter","thunk","checkAuthOnRehydrate","onApiUnauthenticated","onAuthSuccess","rootReducer","history","enhancers","middleware","persistConfig","key","whitelist","stateReconciler","transforms","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","push","composedEnhancers","persistedReducer","store","persistor"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,wBAAjC;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,eAA7C;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,EAAqDC,aAArD,QAA0E,oBAA1E;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,OAAO,GAAGd,oBAAoB,EAApC;AAEP,MAAMe,SAAS,GAAG,EAAlB;AACA,MAAMC,UAAU,GAAG,CACfjB,gBAAgB,CAACe,OAAD,CADD,EAEfL,KAFe,EAGfE,oBAHe,EAIfC,aAJe,EAKfF,oBALe,CAAnB;AAQA,MAAMO,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBX,EAAAA,OAFkB;AAGlBY,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHO;AAIlBC,EAAAA,eAAe,EAAEd,eAJC;AAKlBe,EAAAA,UAAU,EAAE,CACRb,qBAAqB,CAAC,MAAD,EAAS,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,CAAT,CADb;AALM,CAAtB;;AAUA,IAAIc,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,QAAMC,iBAAiB,GAClBC,MAAM,IAAKA,MAAD,CAAgBC,oCAA3B,IAAoEzB,OADxE;;AAGA,MAAI,OAAOuB,iBAAP,KAA6B,UAAjC,EAA6C;AACzCV,IAAAA,SAAS,CAACa,IAAV,CAAeH,iBAAiB,EAAhC;AACH;AACJ;;AAED,MAAMI,iBAAiB,GAAG3B,OAAO,CAACD,eAAe,CAAC,GAAGe,UAAJ,CAAhB,EAAiC,GAAGD,SAApC,CAAjC;AAEA,MAAMe,gBAAgB,GAAG1B,cAAc,CAACa,aAAD,EAAgBJ,WAAW,CAACC,OAAD,CAA3B,CAAvC;AAEA,MAAMiB,KAAK,GAAG5B,WAAW,CAAC2B,gBAAD,EAAmBD,iBAAnB,CAAzB;AAEA,OAAO,MAAMG,SAAS,GAAG3B,YAAY,CAAC0B,KAAD,CAA9B;AAEP,eAAeA,KAAf","sourcesContent":["import { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage';\nimport { createWhitelistFilter } from 'redux-persist-transform-filter';\nimport thunk from 'redux-thunk';\nimport { checkAuthOnRehydrate, onApiUnauthenticated, onAuthSuccess } from '../middleware/auth';\nimport rootReducer from './rootReducer';\n\nexport const history = createBrowserHistory();\n\nconst enhancers = [];\nconst middleware = [\n    routerMiddleware(history),\n    thunk,\n    onApiUnauthenticated,\n    onAuthSuccess,\n    checkAuthOnRehydrate,\n];\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['auth'],\n    stateReconciler: autoMergeLevel2,\n    transforms: [\n        createWhitelistFilter('auth', ['isAuth', 'token', 'user']),\n    ]\n};\n\nif (process.env.NODE_ENV === 'development') {\n    const devToolsExtension =\n        (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n    if (typeof devToolsExtension === 'function') {\n        enhancers.push(devToolsExtension());\n    }\n}\n\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\n\nconst store = createStore(persistedReducer, composedEnhancers);\n\nexport const persistor = persistStore(store);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}