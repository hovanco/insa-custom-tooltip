{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-label/chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { Card, Empty } from 'antd';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport moment from 'moment';\nimport React, { memo } from 'react';\nimport { useReportLabelContext } from './context';\nimport TableChart from './table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const {\n    date,\n    data,\n    loading,\n    type\n  } = useReportLabelContext();\n\n  const renderContent = () => {\n    if (!data) return /*#__PURE__*/_jsxDEV(Empty, {\n      image: Empty.PRESENTED_IMAGE_SIMPLE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 27\n    }, this);\n\n    const year = () => {\n      if (type === 'custom') {\n        return moment(date[0]).format('YYYY');\n      }\n\n      return moment(date).format('YYYY');\n    };\n\n    const getDate = () => {\n      return data.table.header.map(o => {\n        return `${o}/${year()}`;\n      });\n    };\n\n    const series = data.table.items.map(o => {\n      return {\n        name: o.label.name,\n        color: o.label.backgroundColor,\n        data: o.days\n      };\n    });\n    const options = {\n      title: {\n        text: 'Biểu đồ'\n      },\n      subtitle: {\n        text: 'Báo cáo từng ngày'\n      },\n      xAxis: {\n        categories: getDate()\n      },\n      yAxis: {\n        title: {\n          text: 'Số lượng'\n        }\n      },\n      series\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HighchartsReact, {\n        highcharts: Highcharts,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableChart, {\n        data: data.table\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bodyStyle: {\n      padding: 0\n    },\n    loading: loading,\n    children: renderContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chart, \"RxZkyXRjzpw7xu+KFH7ChS/6Pms=\", false, function () {\n  return [useReportLabelContext];\n});\n\n_c = Chart;\nexport default _c2 = /*#__PURE__*/memo(Chart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-label/chart.tsx"],"names":["Card","Empty","Highcharts","HighchartsReact","moment","React","memo","useReportLabelContext","TableChart","Chart","date","data","loading","type","renderContent","PRESENTED_IMAGE_SIMPLE","year","format","getDate","table","header","map","o","series","items","name","label","color","backgroundColor","days","options","title","text","subtitle","xAxis","categories","yAxis","padding"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,MAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAoBC,IAApB,QAAgC,OAAhC;AAEA,SAASC,qBAAT,QAAsC,WAAtC;AACA,OAAOC,UAAP,MAAuB,SAAvB;;;;AAEA,MAAMC,KAAS,GAAG,MAAmB;AAAA;;AACjC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA;AAAvB,MAAgCN,qBAAqB,EAA3D;;AAEA,QAAMO,aAAa,GAAG,MAAM;AACxB,QAAI,CAACH,IAAL,EAAW,oBAAO,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEV,KAAK,CAACc;AAApB;AAAA;AAAA;AAAA;AAAA,YAAP;;AAEX,UAAMC,IAAI,GAAG,MAAc;AACvB,UAAIH,IAAI,KAAK,QAAb,EAAuB;AACnB,eAAOT,MAAM,CAAEM,IAAD,CAAgB,CAAhB,CAAD,CAAN,CAA2BO,MAA3B,CAAkC,MAAlC,CAAP;AACH;;AACD,aAAOb,MAAM,CAACM,IAAD,CAAN,CAAaO,MAAb,CAAoB,MAApB,CAAP;AACH,KALD;;AAOA,UAAMC,OAAO,GAAG,MAAgB;AAC5B,aAAOP,IAAI,CAACQ,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,CAAD,IAAe;AACxC,eAAQ,GAAEA,CAAE,IAAGN,IAAI,EAAG,EAAtB;AACH,OAFM,CAAP;AAGH,KAJD;;AAMA,UAAMO,MAAM,GAAGZ,IAAI,CAACQ,KAAL,CAAWK,KAAX,CAAiBH,GAAjB,CAAsBC,CAAD,IAAY;AAC5C,aAAO;AACHG,QAAAA,IAAI,EAAEH,CAAC,CAACI,KAAF,CAAQD,IADX;AAEHE,QAAAA,KAAK,EAAEL,CAAC,CAACI,KAAF,CAAQE,eAFZ;AAGHjB,QAAAA,IAAI,EAAEW,CAAC,CAACO;AAHL,OAAP;AAKH,KANc,CAAf;AAQA,UAAMC,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADK;AAEZC,MAAAA,QAAQ,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR,OAFE;AAGZE,MAAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAEjB,OAAO;AAArB,OAHK;AAIZkB,MAAAA,KAAK,EAAE;AAAEL,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AAAT,OAJK;AAKZT,MAAAA;AALY,KAAhB;AAQA,wBACI;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,UAAU,EAAErB,UAA7B;AAAyC,QAAA,OAAO,EAAE4B;AAAlD;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEnB,IAAI,CAACQ;AAAvB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBADJ;AAOH,GAvCD;;AAyCA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAE;AAAEkB,MAAAA,OAAO,EAAE;AAAX,KAAjB;AAAiC,IAAA,OAAO,EAAEzB,OAA1C;AAAA,cACKE,aAAa;AADlB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjDD;;GAAML,K;UACoCF,qB;;;KADpCE,K;AAmDN,kCAAeH,IAAI,CAACG,KAAD,CAAnB","sourcesContent":["import { Card, Empty } from 'antd';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport moment from 'moment';\nimport React, { FC, memo } from 'react';\n\nimport { useReportLabelContext } from './context';\nimport TableChart from './table';\n\nconst Chart: FC = (): JSX.Element => {\n    const { date, data, loading, type } = useReportLabelContext();\n\n    const renderContent = () => {\n        if (!data) return <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />;\n\n        const year = (): string => {\n            if (type === 'custom') {\n                return moment((date as any[])[0]).format('YYYY');\n            }\n            return moment(date).format('YYYY');\n        };\n\n        const getDate = (): string[] => {\n            return data.table.header.map((o: string) => {\n                return `${o}/${year()}`;\n            });\n        };\n\n        const series = data.table.items.map((o: any) => {\n            return {\n                name: o.label.name,\n                color: o.label.backgroundColor,\n                data: o.days,\n            };\n        });\n\n        const options = {\n            title: { text: 'Biểu đồ' },\n            subtitle: { text: 'Báo cáo từng ngày' },\n            xAxis: { categories: getDate() },\n            yAxis: { title: { text: 'Số lượng' } },\n            series,\n        };\n\n        return (\n            <>\n                <HighchartsReact highcharts={Highcharts} options={options} />\n\n                <TableChart data={data.table} />\n            </>\n        );\n    };\n\n    return (\n        <Card bodyStyle={{ padding: 0 }} loading={loading}>\n            {renderContent()}\n        </Card>\n    );\n};\n\nexport default memo(Chart);\n"]},"metadata":{},"sourceType":"module"}