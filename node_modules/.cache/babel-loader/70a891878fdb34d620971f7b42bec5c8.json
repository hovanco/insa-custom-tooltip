{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Empty } from 'antd';\nimport querystring from 'querystring';\nimport React, { useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Loading } from '../../../components';\nimport { loadConversations, removeConversations } from '../../../reducers/fanpageState/fanpageAction';\nimport ConversationFilter from './conversation-filter';\nimport ConversationItem from './conversation-item';\nimport './style.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoversationList = () => {\n  _s();\n\n  let location = useLocation();\n  const loading = useSelector(({\n    fanpage\n  }) => fanpage.loading_conversation);\n  const conversations = useSelector(({\n    fanpage\n  }) => fanpage.conversations);\n  const next = useSelector(({\n    fanpage\n  }) => fanpage.next);\n  const store = useSelector(({\n    store\n  }) => store.store);\n  const pages = useSelector(({\n    fanpage\n  }) => fanpage.pages);\n  const arrPage = Object.keys(pages).map(key => pages[key]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(removeConversations());\n    const query = querystring.parse(location.search.substring(1));\n\n    if ((!query.pageId || !query.postId) && !query.type) {\n      if (store.activePage) {\n        dispatch(loadConversations(undefined, [store.activePage.fbObjectId]));\n      } else {\n        dispatch(loadConversations(undefined, [arrPage[0].fbObjectId]));\n      }\n    }\n  }, []);\n\n  const loadMore = () => {\n    if (!loading && next) {\n      dispatch(loadConversations(undefined, [store.activePage.fbObjectId], undefined, next));\n    }\n  };\n\n  const renderConversation = () => {\n    if (conversations.length === 0 && !loading) {\n      return /*#__PURE__*/_jsxDEV(Empty, {\n        imageStyle: {\n          marginTop: '10px'\n        },\n        description: \"Kh\\xF4ng c\\xF3 h\\u1ED9i tho\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      loadMore: loadMore,\n      hasMore: !!next,\n      initialLoad: false,\n      useWindow: false,\n      threshold: 20,\n      isReverse: false,\n      children: [conversations.map(conversation => {\n        return /*#__PURE__*/_jsxDEV(ConversationItem, {\n          conversation: conversation\n        }, conversation._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 28\n        }, this);\n      }), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-list-top\",\n      children: /*#__PURE__*/_jsxDEV(ConversationFilter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-items\",\n      children: renderConversation()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CoversationList, \"1i8gjIYhiQzhcng+V11LIe4IMYY=\", false, function () {\n  return [useLocation, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = CoversationList;\nexport default CoversationList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoversationList\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/index.tsx"],"names":["Empty","querystring","React","useEffect","InfiniteScroll","useDispatch","useSelector","useLocation","Loading","loadConversations","removeConversations","ConversationFilter","ConversationItem","CoversationList","location","loading","fanpage","loading_conversation","conversations","next","store","pages","arrPage","Object","keys","map","key","dispatch","query","parse","search","substring","pageId","postId","type","activePage","undefined","fbObjectId","loadMore","renderConversation","length","marginTop","conversation","_id"],"mappings":"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","sourcesContent":["import { Empty } from 'antd';\nimport querystring from 'querystring';\nimport React, { FC, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Loading } from '../../../components';\nimport {\n    loadConversations,\n    removeConversations,\n} from '../../../reducers/fanpageState/fanpageAction';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport ConversationFilter from './conversation-filter';\nimport ConversationItem from './conversation-item';\n\nimport './style.less';\n\nconst CoversationList: FC = (): JSX.Element => {\n    let location = useLocation();\n    const loading = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.loading_conversation\n    );\n\n    const conversations = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversations\n    );\n\n    const next = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.next);\n\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const pages = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.pages);\n    const arrPage = Object.keys(pages).map((key: string) => pages[key]);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(removeConversations());\n\n        const query = querystring.parse(location.search.substring(1));\n\n        if ((!query.pageId || !query.postId) && !query.type) {\n            if (store.activePage) {\n                dispatch(loadConversations(undefined, [store.activePage.fbObjectId]));\n            } else {\n                dispatch(loadConversations(undefined, [arrPage[0].fbObjectId]));\n            }\n        }\n    }, []);\n\n    const loadMore = () => {\n        if (!loading && next) {\n            dispatch(loadConversations(undefined, [store.activePage.fbObjectId], undefined, next));\n        }\n    };\n\n    const renderConversation = () => {\n        if (conversations.length === 0 && !loading) {\n            return <Empty imageStyle={{ marginTop: '10px' }} description='Không có hội thoại' />;\n        }\n\n        return (\n            <InfiniteScroll\n                loadMore={loadMore}\n                hasMore={!!next}\n                initialLoad={false}\n                useWindow={false}\n                threshold={20}\n                isReverse={false}\n            >\n                {conversations.map((conversation: IConversation) => {\n                    return <ConversationItem conversation={conversation} key={conversation._id} />;\n                })}\n                {loading && <Loading />}\n            </InfiniteScroll>\n        );\n    };\n\n    return (\n        <div className='conversation-list'>\n            <div className='conversation-list-top'>\n                <ConversationFilter />\n            </div>\n\n            <div className='conversation-items'>{renderConversation()}</div>\n        </div>\n    );\n};\n\nexport default CoversationList;\n"]},"metadata":{},"sourceType":"module"}