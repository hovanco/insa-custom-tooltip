{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/order-detail.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { Button, Col, Divider, Row } from 'antd';\nimport { get } from 'lodash';\nimport querystring from 'querystring';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getOrderDetail } from '../../../api/order-api';\nimport storeApi from '../../../api/store-api';\nimport { Loading } from '../../../components';\nimport AddProduct from '../../conversation/conversation-customer/add-product';\nimport { initialOrder, ProviderOrderContext } from '../../conversation/conversation-customer/context-order';\nimport OrderCustomerInfo from '../../conversation/conversation-customer/order-customer-info';\nimport OrderProductList from '../../conversation/conversation-customer/order-product-list';\nimport OrderStore from '../../conversation/conversation-customer/order-store';\nimport OrderTransport from '../../conversation/conversation-customer/order-transport';\nimport SearchProduct from '../../conversation/conversation-customer/search-product';\nimport BtnSave from './btn-save';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initOrder = {\n  use_transformer: true,\n  customer: {\n    _id: '',\n    fbUserId: '',\n    name: '',\n    phoneNo: '',\n    address: '',\n    province: undefined,\n    district: undefined,\n    ward: undefined,\n    note: ''\n  },\n  products: [],\n  deliveryOptions: {\n    serviceId: undefined,\n    transportType: undefined,\n    shipmentFeeForCustomer: 0,\n    shipmentFee: 0,\n    customerNote: '',\n    noteForCustomerCare: '',\n    discount: 0,\n    noteForDelivery: undefined,\n    discountBy: 0\n  },\n  warehouseId: undefined\n};\n\nconst useFetchCustomer = fbUserId => {\n  _s();\n\n  const store = useSelector(state => state.store.store);\n  const token = useSelector(state => state.auth.token);\n  const [customer, setCustomer] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function getCustomer(id) {\n      setLoading(true);\n      const query = querystring.stringify({\n        fbUserId: id\n      });\n      const response = await storeApi.getListCustomers({\n        storeId: store._id,\n        token: token.accessToken,\n        page: 1,\n        limit: 1,\n        query\n      });\n      let data;\n\n      if (response.data.length > 0) {\n        data = {\n          _id: response.data[0]._id,\n          fbUserId: response.data[0].fbUserId,\n          name: response.data[0].name,\n          phoneNo: response.data[0].phoneNo,\n          address: response.data[0].address,\n          province: response.data[0].province,\n          district: response.data[0].district,\n          ward: response.data[0].ward,\n          note: response.data[0].note\n        };\n      } else {\n        data = {\n          _id: '',\n          fbUserId: fbUserId,\n          name: '',\n          phoneNo: '',\n          address: '',\n          province: undefined,\n          district: undefined,\n          ward: undefined,\n          note: undefined\n        };\n      }\n\n      setCustomer(data);\n      setLoading(false);\n    }\n\n    if (fbUserId) {\n      getCustomer(fbUserId);\n    } else {\n      setLoading(false);\n    }\n  }, [fbUserId, store._id, token.accessToken]);\n  return {\n    customer,\n    loading\n  };\n};\n\n_s(useFetchCustomer, \"jArw2MzF8Vb1/w/ramig1UKq5K0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\nconst useFetchOrder = orderId => {\n  _s2();\n\n  const token = useSelector(state => state.auth.token);\n  const store = useSelector(state => state.store.store);\n  const [loading, setLoading] = useState(true);\n  const [order, setOrder] = useState(null);\n  useEffect(() => {\n    async function loadOrder(id) {\n      try {\n        setLoading(true);\n        const response = await getOrderDetail({\n          token: token.accessToken,\n          storeId: store._id,\n          orderId: id\n        });\n        const order = { ...response,\n          deliveryOptions: !get(response, 'deliveryOptions.transportType') ? {\n            serviceId: undefined,\n            transportType: undefined,\n            shipmentFeeForCustomer: 0,\n            shipmentFee: 0,\n            customerNote: '',\n            noteForCustomerCare: '',\n            discount: 0,\n            noteForDelivery: undefined,\n            discountBy: 0\n          } : response.deliveryOptions,\n          products: response.products.map(product => {\n            return { ...product,\n              ...product.productId,\n              productId: product.productId._id\n            };\n          }),\n          warehouseId: get(response, 'warehouseId._id')\n        };\n        setOrder(order);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n      }\n    }\n\n    if (orderId) {\n      loadOrder(orderId);\n    } else {\n      setLoading(false);\n    }\n  }, [orderId, store._id, token.accessToken]);\n  return {\n    loading,\n    order,\n    setOrder\n  };\n};\n\n_s2(useFetchOrder, \"65yniiZQsAxpD7YaJ+OBL6vKVmg=\", false, function () {\n  return [useSelector, useSelector];\n});\n\nconst OrderDetail = ({\n  orderId,\n  customer,\n  fbPageId,\n  scriptId,\n  toggle,\n  setOrderCode,\n  reloadCustomer\n}) => {\n  _s3();\n\n  const {\n    loading,\n    order\n  } = useFetchOrder(orderId);\n  const {\n    customer: customer_detail,\n    loading: loadingCustomer\n  } = useFetchCustomer(customer.fbUserId);\n  useEffect(() => {\n    if (order) {\n      setOrderCode(order.code);\n    }\n  }, [order]);\n  if (loading || loadingCustomer) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 44\n  }, this);\n  const order_local = order ? { ...order,\n    customer: { ...customer_detail,\n      name: customer.fbUserName,\n      phoneNo: customer.phoneNo,\n      province: customer.province,\n      district: customer.district,\n      ward: customer.ward,\n      address: customer.address\n    }\n  } : { ...initialOrder,\n    customer: { ...customer_detail,\n      name: customer.fbUserName,\n      fbUserId: customer.fbUserId,\n      phoneNo: customer.phoneNo,\n      province: customer.province,\n      district: customer.district,\n      ward: customer.ward,\n      address: customer.address\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ProviderOrderContext, {\n    order: order_local,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: 20,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(OrderCustomerInfo, {\n          defaultActiveKey: ['customer'],\n          dataCustomer: order_local.customer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            marginTop: 0,\n            marginBottom: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(OrderStore, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SearchProduct, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(OrderProductList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(AddProduct, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(OrderTransport, {\n          hasOrder: !!get(order, 'warehouseId')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 15,\n      justify: \"end\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggle,\n          children: \"\\u0110\\xF3ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), (!order || order.isDraft) && /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(BtnSave, {\n          isNew: !order,\n          fbPageId: fbPageId,\n          scriptId: scriptId,\n          customerId: customer_detail && customer_detail._id,\n          toggle: toggle,\n          reloadCustomer: reloadCustomer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(OrderDetail, \"PE3tA6TmRXTUWS8f7ZGFLq7Mgm4=\", false, function () {\n  return [useFetchOrder, useFetchCustomer];\n});\n\n_c = OrderDetail;\nexport default OrderDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderDetail\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/order-detail.tsx"],"names":["Button","Col","Divider","Row","get","querystring","React","useEffect","useState","useSelector","getOrderDetail","storeApi","Loading","AddProduct","initialOrder","ProviderOrderContext","OrderCustomerInfo","OrderProductList","OrderStore","OrderTransport","SearchProduct","BtnSave","initOrder","use_transformer","customer","_id","fbUserId","name","phoneNo","address","province","undefined","district","ward","note","products","deliveryOptions","serviceId","transportType","shipmentFeeForCustomer","shipmentFee","customerNote","noteForCustomerCare","discount","noteForDelivery","discountBy","warehouseId","useFetchCustomer","store","state","token","auth","setCustomer","loading","setLoading","getCustomer","id","query","stringify","response","getListCustomers","storeId","accessToken","page","limit","data","length","useFetchOrder","orderId","order","setOrder","loadOrder","map","product","productId","error","OrderDetail","fbPageId","scriptId","toggle","setOrderCode","reloadCustomer","customer_detail","loadingCustomer","code","order_local","fbUserName","marginTop","marginBottom","isDraft"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,GAAjB,EAAsBC,OAAtB,EAA+BC,GAA/B,QAAiD,MAAjD;AACA,SAASC,GAAT,QAA0B,QAA1B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,UAAP,MAAuB,sDAAvB;AACA,SACIC,YADJ,EAEIC,oBAFJ,QAGO,wDAHP;AAIA,OAAOC,iBAAP,MAA8B,8DAA9B;AACA,OAAOC,gBAAP,MAA6B,6DAA7B;AACA,OAAOC,UAAP,MAAuB,sDAAvB;AACA,OAAOC,cAAP,MAA2B,0DAA3B;AACA,OAAOC,aAAP,MAA0B,yDAA1B;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAYA,MAAMC,SAAS,GAAG;AACdC,EAAAA,eAAe,EAAE,IADH;AAEdC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,GAAG,EAAE,EADC;AAENC,IAAAA,QAAQ,EAAE,EAFJ;AAGNC,IAAAA,IAAI,EAAE,EAHA;AAINC,IAAAA,OAAO,EAAE,EAJH;AAKNC,IAAAA,OAAO,EAAE,EALH;AAMNC,IAAAA,QAAQ,EAAEC,SANJ;AAONC,IAAAA,QAAQ,EAAED,SAPJ;AAQNE,IAAAA,IAAI,EAAEF,SARA;AASNG,IAAAA,IAAI,EAAE;AATA,GAFI;AAadC,EAAAA,QAAQ,EAAE,EAbI;AAcdC,EAAAA,eAAe,EAAE;AACbC,IAAAA,SAAS,EAAEN,SADE;AAEbO,IAAAA,aAAa,EAAEP,SAFF;AAGbQ,IAAAA,sBAAsB,EAAE,CAHX;AAIbC,IAAAA,WAAW,EAAE,CAJA;AAKbC,IAAAA,YAAY,EAAE,EALD;AAMbC,IAAAA,mBAAmB,EAAE,EANR;AAObC,IAAAA,QAAQ,EAAE,CAPG;AAQbC,IAAAA,eAAe,EAAEb,SARJ;AASbc,IAAAA,UAAU,EAAE;AATC,GAdH;AAyBdC,EAAAA,WAAW,EAAEf;AAzBC,CAAlB;;AA4BA,MAAMgB,gBAAgB,GAAIrB,QAAD,IAAsB;AAAA;;AAC3C,QAAMsB,KAAK,GAAGvC,WAAW,CAAEwC,KAAD,IAAgBA,KAAK,CAACD,KAAN,CAAYA,KAA7B,CAAzB;AACA,QAAME,KAAK,GAAGzC,WAAW,CAAEwC,KAAD,IAAgBA,KAAK,CAACE,IAAN,CAAWD,KAA5B,CAAzB;AACA,QAAM,CAAC1B,QAAD,EAAW4B,WAAX,IAA0B5C,QAAQ,CAAM,IAAN,CAAxC;AACA,QAAM,CAAC6C,OAAD,EAAUC,UAAV,IAAwB9C,QAAQ,CAAC,IAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAegD,WAAf,CAA2BC,EAA3B,EAAuC;AACnCF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMG,KAAK,GAAGpD,WAAW,CAACqD,SAAZ,CAAsB;AAAEhC,QAAAA,QAAQ,EAAE8B;AAAZ,OAAtB,CAAd;AAEA,YAAMG,QAAQ,GAAG,MAAMhD,QAAQ,CAACiD,gBAAT,CAA0B;AAC7CC,QAAAA,OAAO,EAAEb,KAAK,CAACvB,GAD8B;AAE7CyB,QAAAA,KAAK,EAAEA,KAAK,CAACY,WAFgC;AAG7CC,QAAAA,IAAI,EAAE,CAHuC;AAI7CC,QAAAA,KAAK,EAAE,CAJsC;AAK7CP,QAAAA;AAL6C,OAA1B,CAAvB;AAQA,UAAIQ,IAAJ;;AACA,UAAIN,QAAQ,CAACM,IAAT,CAAcC,MAAd,GAAuB,CAA3B,EAA8B;AAC1BD,QAAAA,IAAI,GAAG;AACHxC,UAAAA,GAAG,EAAEkC,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBxC,GADnB;AAEHC,UAAAA,QAAQ,EAAEiC,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBvC,QAFxB;AAGHC,UAAAA,IAAI,EAAEgC,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBtC,IAHpB;AAIHC,UAAAA,OAAO,EAAE+B,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBrC,OAJvB;AAKHC,UAAAA,OAAO,EAAE8B,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBpC,OALvB;AAMHC,UAAAA,QAAQ,EAAE6B,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBnC,QANxB;AAOHE,UAAAA,QAAQ,EAAE2B,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBjC,QAPxB;AAQHC,UAAAA,IAAI,EAAE0B,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBhC,IARpB;AASHC,UAAAA,IAAI,EAAEyB,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiB/B;AATpB,SAAP;AAWH,OAZD,MAYO;AACH+B,QAAAA,IAAI,GAAG;AACHxC,UAAAA,GAAG,EAAE,EADF;AAEHC,UAAAA,QAAQ,EAAEA,QAFP;AAGHC,UAAAA,IAAI,EAAE,EAHH;AAIHC,UAAAA,OAAO,EAAE,EAJN;AAKHC,UAAAA,OAAO,EAAE,EALN;AAMHC,UAAAA,QAAQ,EAAEC,SANP;AAOHC,UAAAA,QAAQ,EAAED,SAPP;AAQHE,UAAAA,IAAI,EAAEF,SARH;AASHG,UAAAA,IAAI,EAAEH;AATH,SAAP;AAWH;;AAEDqB,MAAAA,WAAW,CAACa,IAAD,CAAX;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAED,QAAI5B,QAAJ,EAAc;AACV6B,MAAAA,WAAW,CAAC7B,QAAD,CAAX;AACH,KAFD,MAEO;AACH4B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAjDQ,EAiDN,CAAC5B,QAAD,EAAWsB,KAAK,CAACvB,GAAjB,EAAsByB,KAAK,CAACY,WAA5B,CAjDM,CAAT;AAmDA,SAAO;AAAEtC,IAAAA,QAAF;AAAY6B,IAAAA;AAAZ,GAAP;AACH,CAzDD;;GAAMN,gB;UACYtC,W,EACAA,W;;;AAyDlB,MAAM0D,aAAa,GAAIC,OAAD,IAAqB;AAAA;;AACvC,QAAMlB,KAAK,GAAGzC,WAAW,CAAEwC,KAAD,IAAgBA,KAAK,CAACE,IAAN,CAAWD,KAA5B,CAAzB;AACA,QAAMF,KAAK,GAAGvC,WAAW,CAAEwC,KAAD,IAAgBA,KAAK,CAACD,KAAN,CAAYA,KAA7B,CAAzB;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwB9C,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC6D,KAAD,EAAQC,QAAR,IAAoB9D,QAAQ,CAAM,IAAN,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAegE,SAAf,CAAyBf,EAAzB,EAAqC;AACjC,UAAI;AACAF,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAMK,QAAQ,GAAG,MAAMjD,cAAc,CAAC;AAClCwC,UAAAA,KAAK,EAAEA,KAAK,CAACY,WADqB;AAElCD,UAAAA,OAAO,EAAEb,KAAK,CAACvB,GAFmB;AAGlC2C,UAAAA,OAAO,EAAEZ;AAHyB,SAAD,CAArC;AAMA,cAAMa,KAAK,GAAG,EACV,GAAGV,QADO;AAEVvB,UAAAA,eAAe,EAAE,CAAChC,GAAG,CAACuD,QAAD,EAAW,+BAAX,CAAJ,GACX;AACItB,YAAAA,SAAS,EAAEN,SADf;AAEIO,YAAAA,aAAa,EAAEP,SAFnB;AAGIQ,YAAAA,sBAAsB,EAAE,CAH5B;AAIIC,YAAAA,WAAW,EAAE,CAJjB;AAKIC,YAAAA,YAAY,EAAE,EALlB;AAMIC,YAAAA,mBAAmB,EAAE,EANzB;AAOIC,YAAAA,QAAQ,EAAE,CAPd;AAQIC,YAAAA,eAAe,EAAEb,SARrB;AASIc,YAAAA,UAAU,EAAE;AAThB,WADW,GAYXc,QAAQ,CAACvB,eAdL;AAeVD,UAAAA,QAAQ,EAAEwB,QAAQ,CAACxB,QAAT,CAAkBqC,GAAlB,CAAuBC,OAAD,IAAkB;AAC9C,mBAAO,EACH,GAAGA,OADA;AAEH,iBAAGA,OAAO,CAACC,SAFR;AAGHA,cAAAA,SAAS,EAAED,OAAO,CAACC,SAAR,CAAkBjD;AAH1B,aAAP;AAKH,WANS,CAfA;AAsBVqB,UAAAA,WAAW,EAAE1C,GAAG,CAACuD,QAAD,EAAW,iBAAX;AAtBN,SAAd;AAyBAW,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAf,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAnCD,CAmCE,OAAOqB,KAAP,EAAc;AACZrB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ;;AAED,QAAIc,OAAJ,EAAa;AACTG,MAAAA,SAAS,CAACH,OAAD,CAAT;AACH,KAFD,MAEO;AACHd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GA/CQ,EA+CN,CAACc,OAAD,EAAUpB,KAAK,CAACvB,GAAhB,EAAqByB,KAAK,CAACY,WAA3B,CA/CM,CAAT;AAiDA,SAAO;AAAET,IAAAA,OAAF;AAAWgB,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAP;AACH,CAzDD;;IAAMH,a;UACY1D,W,EACAA,W;;;AAyDlB,MAAMmE,WAAsB,GAAG,CAAC;AAC5BR,EAAAA,OAD4B;AAE5B5C,EAAAA,QAF4B;AAG5BqD,EAAAA,QAH4B;AAI5BC,EAAAA,QAJ4B;AAK5BC,EAAAA,MAL4B;AAM5BC,EAAAA,YAN4B;AAO5BC,EAAAA;AAP4B,CAAD,KAQzB;AAAA;;AACF,QAAM;AAAE5B,IAAAA,OAAF;AAAWgB,IAAAA;AAAX,MAAqBF,aAAa,CAACC,OAAD,CAAxC;AACA,QAAM;AAAE5C,IAAAA,QAAQ,EAAE0D,eAAZ;AAA6B7B,IAAAA,OAAO,EAAE8B;AAAtC,MAA0DpC,gBAAgB,CAC5EvB,QAAQ,CAACE,QADmE,CAAhF;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI8D,KAAJ,EAAW;AACPW,MAAAA,YAAY,CAACX,KAAK,CAACe,IAAP,CAAZ;AACH;AACJ,GAJQ,EAIN,CAACf,KAAD,CAJM,CAAT;AAMA,MAAIhB,OAAO,IAAI8B,eAAf,EAAgC,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEhC,QAAME,WAAW,GAAGhB,KAAK,GACnB,EACI,GAAGA,KADP;AAEI7C,IAAAA,QAAQ,EAAE,EACN,GAAG0D,eADG;AAENvD,MAAAA,IAAI,EAAEH,QAAQ,CAAC8D,UAFT;AAGN1D,MAAAA,OAAO,EAAEJ,QAAQ,CAACI,OAHZ;AAINE,MAAAA,QAAQ,EAAEN,QAAQ,CAACM,QAJb;AAKNE,MAAAA,QAAQ,EAAER,QAAQ,CAACQ,QALb;AAMNC,MAAAA,IAAI,EAAET,QAAQ,CAACS,IANT;AAONJ,MAAAA,OAAO,EAAEL,QAAQ,CAACK;AAPZ;AAFd,GADmB,GAanB,EACI,GAAGf,YADP;AAEIU,IAAAA,QAAQ,EAAE,EACN,GAAG0D,eADG;AAENvD,MAAAA,IAAI,EAAEH,QAAQ,CAAC8D,UAFT;AAGN5D,MAAAA,QAAQ,EAAEF,QAAQ,CAACE,QAHb;AAINE,MAAAA,OAAO,EAAEJ,QAAQ,CAACI,OAJZ;AAKNE,MAAAA,QAAQ,EAAEN,QAAQ,CAACM,QALb;AAMNE,MAAAA,QAAQ,EAAER,QAAQ,CAACQ,QANb;AAONC,MAAAA,IAAI,EAAET,QAAQ,CAACS,IAPT;AAQNJ,MAAAA,OAAO,EAAEL,QAAQ,CAACK;AARZ;AAFd,GAbN;AA2BA,sBACI,QAAC,oBAAD;AAAsB,IAAA,KAAK,EAAEwD,WAA7B;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,gCACQ,QAAC,iBAAD;AACI,UAAA,gBAAgB,EAAE,CAAC,UAAD,CADtB;AAEI,UAAA,YAAY,EAAEA,WAAW,CAAC7D;AAF9B;AAAA;AAAA;AAAA;AAAA,gBADR,eAKQ,QAAC,OAAD;AAAS,UAAA,KAAK,EAAE;AAAE+D,YAAAA,SAAS,EAAE,CAAb;AAAgBC,YAAAA,YAAY,EAAE;AAA9B;AAAhB;AAAA;AAAA;AAAA;AAAA,gBALR,eAMQ,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBANR,eAOQ,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAPR,eAQQ,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBARR,eASQ,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBATR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACQ,QAAC,cAAD;AAAgB,UAAA,QAAQ,EAAE,CAAC,CAACpF,GAAG,CAACiE,KAAD,EAAQ,aAAR;AAA/B;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAiBI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAkBI,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAiB,MAAA,OAAO,EAAC,KAAzB;AAAA,8BACI,QAAC,GAAD;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEU,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIK,CAAC,CAACV,KAAD,IAAUA,KAAK,CAACoB,OAAjB,kBACG,QAAC,GAAD;AAAA,+BACI,QAAC,OAAD;AACI,UAAA,KAAK,EAAE,CAACpB,KADZ;AAEI,UAAA,QAAQ,EAAEQ,QAFd;AAGI,UAAA,QAAQ,EAAEC,QAHd;AAII,UAAA,UAAU,EAAEI,eAAe,IAAIA,eAAe,CAACzD,GAJnD;AAKI,UAAA,MAAM,EAAEsD,MALZ;AAMI,UAAA,cAAc,EAAEE;AANpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALR;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CAvFD;;IAAML,W;UASyBT,a,EACqCpB,gB;;;KAV9D6B,W;AAyFN,eAAeA,WAAf","sourcesContent":["import { Button, Col, Divider, Row, Space } from 'antd';\nimport { get, pick } from 'lodash';\nimport querystring from 'querystring';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getOrderDetail } from '../../../api/order-api';\nimport storeApi from '../../../api/store-api';\nimport { Loading } from '../../../components';\nimport AddProduct from '../../conversation/conversation-customer/add-product';\nimport {\n    initialOrder,\n    ProviderOrderContext,\n} from '../../conversation/conversation-customer/context-order';\nimport OrderCustomerInfo from '../../conversation/conversation-customer/order-customer-info';\nimport OrderProductList from '../../conversation/conversation-customer/order-product-list';\nimport OrderStore from '../../conversation/conversation-customer/order-store';\nimport OrderTransport from '../../conversation/conversation-customer/order-transport';\nimport SearchProduct from '../../conversation/conversation-customer/search-product';\nimport BtnSave from './btn-save';\n\ninterface Props {\n    orderId: string;\n    customer: any;\n    fbPageId: string;\n    scriptId: string;\n    toggle: () => void;\n    setOrderCode: (code: string) => void;\n    reloadCustomer: () => void;\n}\n\nconst initOrder = {\n    use_transformer: true,\n    customer: {\n        _id: '',\n        fbUserId: '',\n        name: '',\n        phoneNo: '',\n        address: '',\n        province: undefined,\n        district: undefined,\n        ward: undefined,\n        note: '',\n    },\n    products: [],\n    deliveryOptions: {\n        serviceId: undefined,\n        transportType: undefined,\n        shipmentFeeForCustomer: 0,\n        shipmentFee: 0,\n        customerNote: '',\n        noteForCustomerCare: '',\n        discount: 0,\n        noteForDelivery: undefined,\n        discountBy: 0,\n    },\n    warehouseId: undefined,\n};\n\nconst useFetchCustomer = (fbUserId: string) => {\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n    const [customer, setCustomer] = useState<any>(null);\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n        async function getCustomer(id: string) {\n            setLoading(true);\n            const query = querystring.stringify({ fbUserId: id });\n\n            const response = await storeApi.getListCustomers({\n                storeId: store._id,\n                token: token.accessToken,\n                page: 1,\n                limit: 1,\n                query,\n            });\n\n            let data;\n            if (response.data.length > 0) {\n                data = {\n                    _id: response.data[0]._id,\n                    fbUserId: response.data[0].fbUserId,\n                    name: response.data[0].name,\n                    phoneNo: response.data[0].phoneNo,\n                    address: response.data[0].address,\n                    province: response.data[0].province,\n                    district: response.data[0].district,\n                    ward: response.data[0].ward,\n                    note: response.data[0].note,\n                };\n            } else {\n                data = {\n                    _id: '',\n                    fbUserId: fbUserId,\n                    name: '',\n                    phoneNo: '',\n                    address: '',\n                    province: undefined,\n                    district: undefined,\n                    ward: undefined,\n                    note: undefined,\n                };\n            }\n\n            setCustomer(data);\n            setLoading(false);\n        }\n\n        if (fbUserId) {\n            getCustomer(fbUserId);\n        } else {\n            setLoading(false);\n        }\n    }, [fbUserId, store._id, token.accessToken]);\n\n    return { customer, loading };\n};\n\nconst useFetchOrder = (orderId: string) => {\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n\n    const [loading, setLoading] = useState(true);\n    const [order, setOrder] = useState<any>(null);\n\n    useEffect(() => {\n        async function loadOrder(id: string) {\n            try {\n                setLoading(true);\n                const response = await getOrderDetail({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    orderId: id,\n                });\n\n                const order = {\n                    ...response,\n                    deliveryOptions: !get(response, 'deliveryOptions.transportType')\n                        ? {\n                              serviceId: undefined,\n                              transportType: undefined,\n                              shipmentFeeForCustomer: 0,\n                              shipmentFee: 0,\n                              customerNote: '',\n                              noteForCustomerCare: '',\n                              discount: 0,\n                              noteForDelivery: undefined,\n                              discountBy: 0,\n                          }\n                        : response.deliveryOptions,\n                    products: response.products.map((product: any) => {\n                        return {\n                            ...product,\n                            ...product.productId,\n                            productId: product.productId._id,\n                        };\n                    }),\n                    warehouseId: get(response, 'warehouseId._id'),\n                };\n\n                setOrder(order);\n                setLoading(false);\n            } catch (error) {\n                setLoading(false);\n            }\n        }\n\n        if (orderId) {\n            loadOrder(orderId);\n        } else {\n            setLoading(false);\n        }\n    }, [orderId, store._id, token.accessToken]);\n\n    return { loading, order, setOrder };\n};\n\nconst OrderDetail: FC<Props> = ({\n    orderId,\n    customer,\n    fbPageId,\n    scriptId,\n    toggle,\n    setOrderCode,\n    reloadCustomer,\n}) => {\n    const { loading, order } = useFetchOrder(orderId);\n    const { customer: customer_detail, loading: loadingCustomer } = useFetchCustomer(\n        customer.fbUserId\n    );\n\n    useEffect(() => {\n        if (order) {\n            setOrderCode(order.code);\n        }\n    }, [order]);\n\n    if (loading || loadingCustomer) return <Loading />;\n\n    const order_local = order\n        ? {\n              ...order,\n              customer: {\n                  ...customer_detail,\n                  name: customer.fbUserName,\n                  phoneNo: customer.phoneNo,\n                  province: customer.province,\n                  district: customer.district,\n                  ward: customer.ward,\n                  address: customer.address,\n              },\n          }\n        : {\n              ...initialOrder,\n              customer: {\n                  ...customer_detail,\n                  name: customer.fbUserName,\n                  fbUserId: customer.fbUserId,\n                  phoneNo: customer.phoneNo,\n                  province: customer.province,\n                  district: customer.district,\n                  ward: customer.ward,\n                  address: customer.address,\n              },\n          };\n\n    return (\n        <ProviderOrderContext order={order_local}>\n            <Row gutter={20}>\n                <Col span={12}>\n                        <OrderCustomerInfo\n                            defaultActiveKey={['customer']}\n                            dataCustomer={order_local.customer}\n                        />\n                        <Divider style={{ marginTop: 0, marginBottom: 10 }} />\n                        <OrderStore />\n                        <SearchProduct />\n                        <OrderProductList />\n                        <AddProduct />\n                </Col>\n                <Col span={12}>\n                        <OrderTransport hasOrder={!!get(order, 'warehouseId')} />\n                </Col>\n            </Row>\n            <Divider />\n            <Row gutter={15} justify='end'>\n                <Col>\n                    <Button onClick={toggle}>Đóng</Button>\n                </Col>\n                {(!order || order.isDraft) && (\n                    <Col>\n                        <BtnSave\n                            isNew={!order}\n                            fbPageId={fbPageId}\n                            scriptId={scriptId}\n                            customerId={customer_detail && customer_detail._id}\n                            toggle={toggle}\n                            reloadCustomer={reloadCustomer}\n                        />\n                    </Col>\n                )}\n            </Row>\n        </ProviderOrderContext>\n    );\n};\n\nexport default OrderDetail;\n"]},"metadata":{},"sourceType":"module"}