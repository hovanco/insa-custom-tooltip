[{"/Users/mac3/Desktop/workspace/FacebookClient/src/index.tsx":"1","/Users/mac3/Desktop/workspace/FacebookClient/src/serviceWorker.ts":"2","/Users/mac3/Desktop/workspace/FacebookClient/src/App.tsx":"3","/Users/mac3/Desktop/workspace/FacebookClient/src/store/index.ts":"4","/Users/mac3/Desktop/workspace/FacebookClient/src/components/index.ts":"5","/Users/mac3/Desktop/workspace/FacebookClient/src/app-router/index.tsx":"6","/Users/mac3/Desktop/workspace/FacebookClient/src/store/rootReducer.ts":"7","/Users/mac3/Desktop/workspace/FacebookClient/src/middleware/auth.ts":"8","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/authState/authTypes.ts":"9","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/livestreamState/livestreamReducer.ts":"10","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/warehouseState/warehouseReducer.ts":"11","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/imagesState/imagesReducer.ts":"12","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/orderDraftState/orderDraftReducer.ts":"13","/Users/mac3/Desktop/workspace/FacebookClient/src/components/bottom-text/index.tsx":"14","/Users/mac3/Desktop/workspace/FacebookClient/src/components/btn-upload/index.tsx":"15","/Users/mac3/Desktop/workspace/FacebookClient/src/components/error-axios/index.tsx":"16","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/orderState/orderReducer.ts":"17","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/no-channel/index.tsx":"18","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/staffState/staffReducer.ts":"19","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/productState/productReducer.ts":"20","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/labelState/labelReducer.ts":"21","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/setting/settingReducer.ts":"22","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/save-token/index.tsx":"23","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/livestreamState/types.ts":"24","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/warehouseState/warehouseTypes.ts":"25","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/imagesState/imagesTypes.ts":"26","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/orderDraftState/orderDraftType.ts":"27","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/orderState/orderTypes.ts":"28","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/staffState/staffType.ts":"29","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/productState/productTypes.ts":"30","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/setting/actionTypes.ts":"31","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/labelState/types.ts":"32","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/storeState/index.ts":"33","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/authState/authAction.ts":"34","/Users/mac3/Desktop/workspace/FacebookClient/src/api/token.ts":"35","/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/header-right-action.tsx":"36","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/maintained/index.tsx":"37","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/storeState/storeAction.ts":"38","/Users/mac3/Desktop/workspace/FacebookClient/src/api/user.ts":"39","/Users/mac3/Desktop/workspace/FacebookClient/src/api/store-api.ts":"40","/Users/mac3/Desktop/workspace/FacebookClient/src/api/fanpage.ts":"41","/Users/mac3/Desktop/workspace/FacebookClient/src/api/auth-api.ts":"42","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/storeState/storeReducer.ts":"43","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/fanpageState/fanpageAction.ts":"44","/Users/mac3/Desktop/workspace/FacebookClient/src/layout/index.ts":"45","/Users/mac3/Desktop/workspace/FacebookClient/src/constants/index.ts":"46","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/storeState/storeTypes.ts":"47","/Users/mac3/Desktop/workspace/FacebookClient/src/api/axios-client.ts":"48","/Users/mac3/Desktop/workspace/FacebookClient/src/api/index.ts":"49","/Users/mac3/Desktop/workspace/FacebookClient/src/collections/sale-channel.ts":"50","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/fanpageState/fanpageTypes.ts":"51","/Users/mac3/Desktop/workspace/FacebookClient/src/api/conversation-api.ts":"52","/Users/mac3/Desktop/workspace/FacebookClient/src/layout/auth-layout.tsx":"53","/Users/mac3/Desktop/workspace/FacebookClient/src/layout/sidebar-layout.tsx":"54","/Users/mac3/Desktop/workspace/FacebookClient/src/layout/default-layout.tsx":"55","/Users/mac3/Desktop/workspace/FacebookClient/src/layout/customer-layout.tsx":"56","/Users/mac3/Desktop/workspace/FacebookClient/src/layout/base-layout.tsx":"57","/Users/mac3/Desktop/workspace/FacebookClient/src/configs/vars.ts":"58","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/fanpageState/fanpageReducer.ts":"59","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/authState/authReducer.ts":"60","/Users/mac3/Desktop/workspace/FacebookClient/src/app-router/auth-router.tsx":"61","/Users/mac3/Desktop/workspace/FacebookClient/src/components/th.tsx":"62","/Users/mac3/Desktop/workspace/FacebookClient/src/collections/facebook-conversation.ts":"63","/Users/mac3/Desktop/workspace/FacebookClient/src/components/container/index.ts":"64","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/connect-facebook/index.tsx":"65","/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/index.tsx":"66","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/not-found/index.tsx":"67","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/create-store/index.tsx":"68","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/login/index.tsx":"69","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customer/index.tsx":"70","/Users/mac3/Desktop/workspace/FacebookClient/src/components/tag-filter/index.tsx":"71","/Users/mac3/Desktop/workspace/FacebookClient/src/components/text-ellipsis/index.tsx":"72","/Users/mac3/Desktop/workspace/FacebookClient/src/components/input-number/index.tsx":"73","/Users/mac3/Desktop/workspace/FacebookClient/src/components/login-facebook-btn/index.tsx":"74","/Users/mac3/Desktop/workspace/FacebookClient/src/components/login-google-btn/index.tsx":"75","/Users/mac3/Desktop/workspace/FacebookClient/src/components/image/index.tsx":"76","/Users/mac3/Desktop/workspace/FacebookClient/src/components/upload-image/index.tsx":"77","/Users/mac3/Desktop/workspace/FacebookClient/src/components/scrollbars/index.tsx":"78","/Users/mac3/Desktop/workspace/FacebookClient/src/components/logo/index.tsx":"79","/Users/mac3/Desktop/workspace/FacebookClient/src/components/loading/index.tsx":"80","/Users/mac3/Desktop/workspace/FacebookClient/src/components/header-customer/index.tsx":"81","/Users/mac3/Desktop/workspace/FacebookClient/src/components/error-boundary/index.tsx":"82","/Users/mac3/Desktop/workspace/FacebookClient/src/components/footer/index.tsx":"83","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/imagesState/imagesAction.ts":"84","/Users/mac3/Desktop/workspace/FacebookClient/src/api/images-api.ts":"85","/Users/mac3/Desktop/workspace/FacebookClient/src/api/slack-api.ts":"86","/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/header-large.tsx":"87","/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/header-mobile.tsx":"88","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/connect-facebook/connect-facebook-card.tsx":"89","/Users/mac3/Desktop/workspace/FacebookClient/src/components/header-customer/header-right.tsx":"90","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/create-store/create-store-form.tsx":"91","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customer/notfication-context.tsx":"92","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customer/expried-package-context.tsx":"93","/Users/mac3/Desktop/workspace/FacebookClient/src/hooks/use-modal.tsx":"94","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/imgs-library.tsx":"95","/Users/mac3/Desktop/workspace/FacebookClient/src/api/gallery-api.ts":"96","/Users/mac3/Desktop/workspace/FacebookClient/src/theme/index.ts":"97","/Users/mac3/Desktop/workspace/FacebookClient/src/assets/icon/index.tsx":"98","/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/header-left.tsx":"99","/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/icon-menu.tsx":"100","/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/header-right.tsx":"101","/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/menu.tsx":"102","/Users/mac3/Desktop/workspace/FacebookClient/src/api/location-api.ts":"103","/Users/mac3/Desktop/workspace/FacebookClient/src/api/billing-api.ts":"104","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/index.tsx":"105","/Users/mac3/Desktop/workspace/FacebookClient/src/api/upload-api.ts":"106","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders-draft/index.tsx":"107","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/products/index.tsx":"108","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/socket-handle/index.tsx":"109","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/index.tsx":"110","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/index.tsx":"111","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/index.tsx":"112","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/other/index.tsx":"113","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/select-pages/index.tsx":"114","/Users/mac3/Desktop/workspace/FacebookClient/src/utils/disabled-autosuggestion.ts":"115","/Users/mac3/Desktop/workspace/FacebookClient/src/utils/get-time.ts":"116","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/add-category-img.tsx":"117","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/btn-action-images.tsx":"118","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/add-image-gallery.tsx":"119","/Users/mac3/Desktop/workspace/FacebookClient/src/components/banner-notify-package/banner-package.tsx":"120","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/context.tsx":"121","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/gallery-item.tsx":"122","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/search-image.tsx":"123","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/orderDraftState/orderDraftAction.ts":"124","/Users/mac3/Desktop/workspace/FacebookClient/src/hooks/usePageVisibility.ts":"125","/Users/mac3/Desktop/workspace/FacebookClient/src/assets/icon/svg.tsx":"126","/Users/mac3/Desktop/workspace/FacebookClient/src/components/banner-notify-package/index.tsx":"127","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders-draft/order-draft-home.tsx":"128","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/products/products-table.tsx":"129","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/order-home.tsx":"130","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/select-pages/list-pages.tsx":"131","/Users/mac3/Desktop/workspace/FacebookClient/src/api/order-api.ts":"132","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/index.tsx":"133","/Users/mac3/Desktop/workspace/FacebookClient/src/utils/format-money.ts":"134","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/productState/productAction.ts":"135","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/index.tsx":"136","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/index.tsx":"137","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/tab-pages/index.tsx":"138","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/orderState/orderAction.ts":"139","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/index.tsx":"140","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-new/index.tsx":"141","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-label/index.tsx":"142","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-revenue/index.tsx":"143","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-conversation/index.tsx":"144","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/index.tsx":"145","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-edit/index.tsx":"146","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/index.tsx":"147","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customers-other/index.tsx":"148","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/warehouses/index.tsx":"149","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/index.tsx":"150","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/index.tsx":"151","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders-draft/table-order-draft.tsx":"152","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/products/action.tsx":"153","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/products/input-size.tsx":"154","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/products/btn-remove-product.tsx":"155","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/products/add-product.tsx":"156","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/tabs.tsx":"157","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/order-table.tsx":"158","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/select-pages/table-list-page.tsx":"159","/Users/mac3/Desktop/workspace/FacebookClient/src/api/product-api.ts":"160","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/labelState/labelAction.ts":"161","/Users/mac3/Desktop/workspace/FacebookClient/src/utils/generate-url-img-fb.ts":"162","/Users/mac3/Desktop/workspace/FacebookClient/src/api/livestream-api.ts":"163","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/livestreamState/livestreamAction.ts":"164","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/conversation-detail-list.tsx":"165","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/conversation-detail-action.tsx":"166","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/labels.tsx":"167","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/setting/settingAction.ts":"168","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/conversation-detail-top.tsx":"169","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/staffState/staffAction.ts":"170","/Users/mac3/Desktop/workspace/FacebookClient/src/collections/livestream-script.ts":"171","/Users/mac3/Desktop/workspace/FacebookClient/src/actions/setting.ts":"172","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/customer-tab.tsx":"173","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/conversation-item.tsx":"174","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/conversation-filter.tsx":"175","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/context-order.tsx":"176","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/tab.tsx":"177","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-tab.tsx":"178","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/tab-pages/pages.tsx":"179","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-label/context.tsx":"180","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/context.tsx":"181","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-label/filter.tsx":"182","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/form-update-order.tsx":"183","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/empty-livestream.tsx":"184","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/livestream-list.tsx":"185","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-conversation/filter.tsx":"186","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-conversation/chart.tsx":"187","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-conversation/context.tsx":"188","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/warehouses/warehouses-table.tsx":"189","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/tabs.tsx":"190","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customers-other/context.tsx":"191","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customers-other/customers-table.tsx":"192","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/script-detail.tsx":"193","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/members-table.tsx":"194","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/script-report.tsx":"195","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-revenue/group-chart.tsx":"196","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-label/chart.tsx":"197","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-revenue/filter.tsx":"198","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-revenue/context.tsx":"199","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/products/form-add-product.tsx":"200","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/action.tsx":"201","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/expaned-order-table.tsx":"202","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/change-status.tsx":"203","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/ship-status.tsx":"204","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/select-pages/modal-load-data.tsx":"205","/Users/mac3/Desktop/workspace/FacebookClient/src/api/setting.ts":"206","/Users/mac3/Desktop/workspace/FacebookClient/src/api/staff-api.ts":"207","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/util.ts":"208","/Users/mac3/Desktop/workspace/FacebookClient/src/api/report-api.ts":"209","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/var.ts":"210","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/util.ts":"211","/Users/mac3/Desktop/workspace/FacebookClient/src/utils/validate-phone.ts":"212","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/warehouseState/warehouseAction.ts":"213","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/message-bubble.tsx":"214","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/box-reply.tsx":"215","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/model-shortcut.tsx":"216","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/modal-answers.tsx":"217","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/modal-imgs.tsx":"218","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/label-more.tsx":"219","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/label.tsx":"220","/Users/mac3/Desktop/workspace/FacebookClient/src/components/expired-store/index.tsx":"221","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/toggle-block-btn.tsx":"222","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/index.tsx":"223","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/customer-note.tsx":"224","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/edit-field.tsx":"225","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/edit-address-customer.tsx":"226","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/filter-bar.tsx":"227","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/converstion-search.tsx":"228","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/add-product.tsx":"229","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-done.tsx":"230","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-product-list.tsx":"231","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-transport.tsx":"232","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/search-product.tsx":"233","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-store.tsx":"234","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-customer-info.tsx":"235","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/tab-pages/btn-page.tsx":"236","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/data.ts":"237","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/order-not-found.tsx":"238","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/total-order.tsx":"239","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/table-order-list.tsx":"240","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/select-page.tsx":"241","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-conversation/table.tsx":"242","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/warehouses/form-add-warehouse.tsx":"243","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customers-other/columns.tsx":"244","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/table-keywords.tsx":"245","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/page-apply.tsx":"246","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/remove-staff-btn.tsx":"247","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-revenue/chart.tsx":"248","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-label/table.tsx":"249","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/form-filter/select-date.tsx":"250","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/form-filter/button-filter.tsx":"251","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/form-filter/select-date-type.tsx":"252","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/form-filter/select-page.tsx":"253","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/livestream-customer.tsx":"254","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/video-thumnail.tsx":"255","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/edit-member-form.tsx":"256","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/member-add-btn.tsx":"257","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/change-role.tsx":"258","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/script-action.tsx":"259","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/warehouses/btn-remove-warehouse.tsx":"260","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/warehouses/action.tsx":"261","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/search-script.tsx":"262","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/script-table-pagination.tsx":"263","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/script-table.tsx":"264","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/select-option-delivery.tsx":"265","/Users/mac3/Desktop/workspace/FacebookClient/src/api/constant_url.ts":"266","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/shipping-list.tsx":"267","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/order-address.tsx":"268","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/discount.tsx":"269","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/filter-detail.tsx":"270","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/add-product.tsx":"271","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/note-for-delivery.tsx":"272","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/create-ship-order.tsx":"273","/Users/mac3/Desktop/workspace/FacebookClient/src/api/warehouse-api.ts":"274","/Users/mac3/Desktop/workspace/FacebookClient/src/api/shipping-api.tsx":"275","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/filter-script/index.tsx":"276","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/modal-chat.tsx":"277","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/delete-comment.tsx":"278","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/like-comment.tsx":"279","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/hide-comment.tsx":"280","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/quick-message-list.tsx":"281","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/quick-message-item.tsx":"282","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/modal-emoji.tsx":"283","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/setup-reply.tsx":"284","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/step-nav.tsx":"285","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/quick-message/index.tsx":"286","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/setup-keyword.tsx":"287","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/setup-livestream.tsx":"288","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/setup-create-order.tsx":"289","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/filter-tabs.tsx":"290","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/note-create-order.tsx":"291","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/context.tsx":"292","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/card-title.tsx":"293","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/add-product-form.tsx":"294","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/filterId-post.tsx":"295","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/shipping.tsx":"296","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-product-row.tsx":"297","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/use-carrier.tsx":"298","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/filter-labels.tsx":"299","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/roles.ts":"300","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/filter-date.tsx":"301","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/filter-bar-item.tsx":"302","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/btn-save.tsx":"303","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/btn-demo.tsx":"304","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customers-other/page.tsx":"305","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/add-keyword-extra.tsx":"306","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/sidebar/sidebar-menu.tsx":"307","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/filter-customer.tsx":"308","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/livestream-customer-table.tsx":"309","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/member-add-form.tsx":"310","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/general/index.tsx":"311","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/script-copy.tsx":"312","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/index.tsx":"313","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/comment/index.tsx":"314","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/post.tsx":"315","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/script-table-action.tsx":"316","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/switch-active-script.tsx":"317","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/data.ts":"318","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/filter-script/component/filter-item.tsx":"319","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/shared.ts":"320","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/comment-template.tsx":"321","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/message-template-wrong-keyword.tsx":"322","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/message-template.tsx":"323","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/message-template-wrong-phone.tsx":"324","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/table-chart/index.tsx":"325","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/quick-message/actions.tsx":"326","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/quick-message/header.tsx":"327","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/quick-message/modal.tsx":"328","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/quick-message/modal-copy-message.tsx":"329","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/list-keyword.tsx":"330","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/select-video.tsx":"331","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/empty-keyword.tsx":"332","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/demo.tsx":"333","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/add-keyword.tsx":"334","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/view-order-detail.tsx":"335","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/context.tsx":"336","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/header.tsx":"337","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/label-table.tsx":"338","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/select-reply.tsx":"339","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/util.ts":"340","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/filter-script/component/right-side-commponents/status.tsx":"341","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/filter-script/component/right-side-commponents/active.tsx":"342","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/filter-script/component/right-side-commponents/date-created.tsx":"343","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/product-item.tsx":"344","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/videos.tsx":"345","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/edit-keyword.tsx":"346","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/get-video-form.tsx":"347","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/search-products.tsx":"348","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/add-product.tsx":"349","/Users/mac3/Desktop/workspace/FacebookClient/src/api/label-api.ts":"350","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/order-detail.tsx":"351","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/modal-add-label.tsx":"352","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/modal-copy-label.tsx":"353","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/actions.tsx":"354","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/edit-label-status.tsx":"355","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/edit-label-order.tsx":"356","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/edit-label.tsx":"357","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/form-add-label.tsx":"358","/Users/mac3/Desktop/workspace/FacebookClient/src/utils/string.ts":"359","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/video.tsx":"360","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/btn-save.tsx":"361","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/color-picker.tsx":"362","/Users/mac3/Desktop/workspace/FacebookClient/src/collections/order.ts":"363","/Users/mac3/Desktop/workspace/FacebookClient/src/app-router/use-progress-auth.ts":"364","/Users/mac3/Desktop/workspace/FacebookClient/src/hooks/use-hidden-modal-expired.tsx":"365"},{"size":514,"mtime":1623898717430,"results":"366","hashOfConfig":"367"},{"size":6096,"mtime":1623898717490,"results":"368","hashOfConfig":"367"},{"size":1156,"mtime":1623898717394,"results":"369","hashOfConfig":"367"},{"size":1588,"mtime":1623898717490,"results":"370","hashOfConfig":"367"},{"size":1037,"mtime":1623898717411,"results":"371","hashOfConfig":"367"},{"size":2459,"mtime":1624418686724,"results":"372","hashOfConfig":"367"},{"size":1896,"mtime":1623898717490,"results":"373","hashOfConfig":"367"},{"size":1267,"mtime":1623898717432,"results":"374","hashOfConfig":"367"},{"size":314,"mtime":1623898717483,"results":"375","hashOfConfig":"367"},{"size":2452,"mtime":1623898717485,"results":"376","hashOfConfig":"367"},{"size":1689,"mtime":1623898717489,"results":"377","hashOfConfig":"367"},{"size":2243,"mtime":1623898717483,"results":"378","hashOfConfig":"367"},{"size":1042,"mtime":1623898717485,"results":"379","hashOfConfig":"367"},{"size":297,"mtime":1624270733741,"results":"380","hashOfConfig":"367"},{"size":758,"mtime":1623898717406,"results":"381","hashOfConfig":"367"},{"size":1116,"mtime":1623898717406,"results":"382","hashOfConfig":"367"},{"size":1829,"mtime":1623898717486,"results":"383","hashOfConfig":"367"},{"size":3132,"mtime":1623898717466,"results":"384","hashOfConfig":"367"},{"size":1385,"mtime":1623898717488,"results":"385","hashOfConfig":"367"},{"size":2078,"mtime":1623898717487,"results":"386","hashOfConfig":"367"},{"size":1465,"mtime":1623898717484,"results":"387","hashOfConfig":"367"},{"size":2977,"mtime":1623898717488,"results":"388","hashOfConfig":"367"},{"size":1935,"mtime":1624418686731,"results":"389","hashOfConfig":"367"},{"size":408,"mtime":1623898717485,"results":"390","hashOfConfig":"367"},{"size":615,"mtime":1623898717490,"results":"391","hashOfConfig":"367"},{"size":550,"mtime":1623898717484,"results":"392","hashOfConfig":"367"},{"size":292,"mtime":1623898717485,"results":"393","hashOfConfig":"367"},{"size":382,"mtime":1623898717486,"results":"394","hashOfConfig":"367"},{"size":198,"mtime":1623898717489,"results":"395","hashOfConfig":"367"},{"size":756,"mtime":1623898717488,"results":"396","hashOfConfig":"367"},{"size":990,"mtime":1623898717488,"results":"397","hashOfConfig":"367"},{"size":228,"mtime":1623898717484,"results":"398","hashOfConfig":"367"},{"size":69,"mtime":1623898717489,"results":"399","hashOfConfig":"367"},{"size":3040,"mtime":1624418686732,"results":"400","hashOfConfig":"367"},{"size":1733,"mtime":1623898717397,"results":"401","hashOfConfig":"367"},{"size":2789,"mtime":1623898717409,"results":"402","hashOfConfig":"367"},{"size":1386,"mtime":1623898717464,"results":"403","hashOfConfig":"367"},{"size":1984,"mtime":1623898717489,"results":"404","hashOfConfig":"367"},{"size":239,"mtime":1623898717397,"results":"405","hashOfConfig":"367"},{"size":3096,"mtime":1623898717397,"results":"406","hashOfConfig":"367"},{"size":1779,"mtime":1623898717395,"results":"407","hashOfConfig":"367"},{"size":2281,"mtime":1625799691748,"results":"408","hashOfConfig":"367"},{"size":1300,"mtime":1623898717489,"results":"409","hashOfConfig":"367"},{"size":8836,"mtime":1623898717483,"results":"410","hashOfConfig":"367"},{"size":302,"mtime":1623898717432,"results":"411","hashOfConfig":"367"},{"size":677,"mtime":1623898717414,"results":"412","hashOfConfig":"367"},{"size":270,"mtime":1623898717489,"results":"413","hashOfConfig":"367"},{"size":2567,"mtime":1624418686723,"results":"414","hashOfConfig":"367"},{"size":441,"mtime":1623898717395,"results":"415","hashOfConfig":"367"},{"size":137,"mtime":1623898717405,"results":"416","hashOfConfig":"367"},{"size":1609,"mtime":1623898717483,"results":"417","hashOfConfig":"367"},{"size":10368,"mtime":1623898717395,"results":"418","hashOfConfig":"367"},{"size":467,"mtime":1623898717431,"results":"419","hashOfConfig":"367"},{"size":541,"mtime":1623898717432,"results":"420","hashOfConfig":"367"},{"size":663,"mtime":1623898717431,"results":"421","hashOfConfig":"367"},{"size":560,"mtime":1623898717431,"results":"422","hashOfConfig":"367"},{"size":560,"mtime":1623898717431,"results":"423","hashOfConfig":"367"},{"size":765,"mtime":1624586674096,"results":"424","hashOfConfig":"367"},{"size":13008,"mtime":1623898717483,"results":"425","hashOfConfig":"367"},{"size":1449,"mtime":1624418686732,"results":"426","hashOfConfig":"367"},{"size":4082,"mtime":1623898717397,"results":"427","hashOfConfig":"367"},{"size":236,"mtime":1623898717414,"results":"428","hashOfConfig":"367"},{"size":536,"mtime":1623898717404,"results":"429","hashOfConfig":"367"},{"size":314,"mtime":1623898717406,"results":"430","hashOfConfig":"367"},{"size":656,"mtime":1623898717432,"results":"431","hashOfConfig":"367"},{"size":533,"mtime":1623898717410,"results":"432","hashOfConfig":"367"},{"size":1433,"mtime":1623898717466,"results":"433","hashOfConfig":"367"},{"size":1506,"mtime":1623898717445,"results":"434","hashOfConfig":"367"},{"size":1193,"mtime":1623898717464,"results":"435","hashOfConfig":"367"},{"size":3911,"mtime":1623919992879,"results":"436","hashOfConfig":"367"},{"size":212,"mtime":1623898717413,"results":"437","hashOfConfig":"367"},{"size":352,"mtime":1623898717413,"results":"438","hashOfConfig":"367"},{"size":525,"mtime":1623898717411,"results":"439","hashOfConfig":"367"},{"size":940,"mtime":1623898717411,"results":"440","hashOfConfig":"367"},{"size":958,"mtime":1623898717412,"results":"441","hashOfConfig":"367"},{"size":3135,"mtime":1623898717410,"results":"442","hashOfConfig":"367"},{"size":1760,"mtime":1623898717414,"results":"443","hashOfConfig":"367"},{"size":376,"mtime":1623898717413,"results":"444","hashOfConfig":"367"},{"size":613,"mtime":1623898717412,"results":"445","hashOfConfig":"367"},{"size":372,"mtime":1623898717411,"results":"446","hashOfConfig":"367"},{"size":7095,"mtime":1623898717409,"results":"447","hashOfConfig":"367"},{"size":1952,"mtime":1623898717407,"results":"448","hashOfConfig":"367"},{"size":7394,"mtime":1623898717407,"results":"449","hashOfConfig":"367"},{"size":3923,"mtime":1623898717483,"results":"450","hashOfConfig":"367"},{"size":2297,"mtime":1623898717395,"results":"451","hashOfConfig":"367"},{"size":326,"mtime":1624270731866,"results":"452","hashOfConfig":"367"},{"size":328,"mtime":1623898717409,"results":"453","hashOfConfig":"367"},{"size":2508,"mtime":1623898717409,"results":"454","hashOfConfig":"367"},{"size":2914,"mtime":1623898717432,"results":"455","hashOfConfig":"367"},{"size":4577,"mtime":1624847544195,"results":"456","hashOfConfig":"367"},{"size":15275,"mtime":1624586674097,"results":"457","hashOfConfig":"367"},{"size":1587,"mtime":1625799691750,"results":"458","hashOfConfig":"367"},{"size":4766,"mtime":1623898717445,"results":"459","hashOfConfig":"367"},{"size":242,"mtime":1623898717429,"results":"460","hashOfConfig":"367"},{"size":11735,"mtime":1623898717438,"results":"461","hashOfConfig":"367"},{"size":1094,"mtime":1623898717395,"results":"462","hashOfConfig":"367"},{"size":519,"mtime":1623898717490,"results":"463","hashOfConfig":"367"},{"size":3870,"mtime":1623898717401,"results":"464","hashOfConfig":"367"},{"size":362,"mtime":1623898717409,"results":"465","hashOfConfig":"367"},{"size":648,"mtime":1623898717410,"results":"466","hashOfConfig":"367"},{"size":1014,"mtime":1623898717410,"results":"467","hashOfConfig":"367"},{"size":805,"mtime":1623898717410,"results":"468","hashOfConfig":"367"},{"size":991,"mtime":1623898717396,"results":"469","hashOfConfig":"367"},{"size":738,"mtime":1623898717395,"results":"470","hashOfConfig":"367"},{"size":6703,"mtime":1624418686729,"results":"471","hashOfConfig":"367"},{"size":3226,"mtime":1623898717397,"results":"472","hashOfConfig":"367"},{"size":1124,"mtime":1623898717469,"results":"473","hashOfConfig":"367"},{"size":759,"mtime":1623898717472,"results":"474","hashOfConfig":"367"},{"size":9679,"mtime":1625799691750,"results":"475","hashOfConfig":"367"},{"size":1202,"mtime":1623898717473,"results":"476","hashOfConfig":"367"},{"size":1713,"mtime":1624418686729,"results":"477","hashOfConfig":"367"},{"size":794,"mtime":1623898717470,"results":"478","hashOfConfig":"367"},{"size":1440,"mtime":1623898717471,"results":"479","hashOfConfig":"367"},{"size":712,"mtime":1623898717477,"results":"480","hashOfConfig":"367"},{"size":147,"mtime":1623898717491,"results":"481","hashOfConfig":"367"},{"size":1071,"mtime":1623898717491,"results":"482","hashOfConfig":"367"},{"size":1712,"mtime":1623898717436,"results":"483","hashOfConfig":"367"},{"size":4245,"mtime":1623898717437,"results":"484","hashOfConfig":"367"},{"size":3949,"mtime":1623898717436,"results":"485","hashOfConfig":"367"},{"size":1802,"mtime":1624586691823,"results":"486","hashOfConfig":"367"},{"size":8913,"mtime":1623898717437,"results":"487","hashOfConfig":"367"},{"size":1636,"mtime":1623898717437,"results":"488","hashOfConfig":"367"},{"size":1568,"mtime":1623898717441,"results":"489","hashOfConfig":"367"},{"size":1739,"mtime":1623898717485,"results":"490","hashOfConfig":"367"},{"size":1301,"mtime":1623898717430,"results":"491","hashOfConfig":"367"},{"size":57477,"mtime":1625799691749,"results":"492","hashOfConfig":"367"},{"size":2364,"mtime":1624586691824,"results":"493","hashOfConfig":"367"},{"size":756,"mtime":1623898717469,"results":"494","hashOfConfig":"367"},{"size":20885,"mtime":1623898717472,"results":"495","hashOfConfig":"367"},{"size":1706,"mtime":1623898717470,"results":"496","hashOfConfig":"367"},{"size":317,"mtime":1623898717477,"results":"497","hashOfConfig":"367"},{"size":1986,"mtime":1623898717396,"results":"498","hashOfConfig":"367"},{"size":3356,"mtime":1623898717438,"results":"499","hashOfConfig":"367"},{"size":406,"mtime":1623898717491,"results":"500","hashOfConfig":"367"},{"size":5321,"mtime":1623898717487,"results":"501","hashOfConfig":"367"},{"size":3134,"mtime":1623898717442,"results":"502","hashOfConfig":"367"},{"size":2146,"mtime":1623898717434,"results":"503","hashOfConfig":"367"},{"size":6102,"mtime":1624595370672,"results":"504","hashOfConfig":"367"},{"size":2671,"mtime":1623898717485,"results":"505","hashOfConfig":"367"},{"size":1558,"mtime":1623898717467,"results":"506","hashOfConfig":"367"},{"size":1519,"mtime":1624418686730,"results":"507","hashOfConfig":"367"},{"size":1466,"mtime":1623898717475,"results":"508","hashOfConfig":"367"},{"size":1312,"mtime":1623898717475,"results":"509","hashOfConfig":"367"},{"size":1970,"mtime":1623898717474,"results":"510","hashOfConfig":"367"},{"size":3426,"mtime":1624418686731,"results":"511","hashOfConfig":"367"},{"size":1509,"mtime":1623898717448,"results":"512","hashOfConfig":"367"},{"size":4529,"mtime":1623898717455,"results":"513","hashOfConfig":"367"},{"size":926,"mtime":1623898717446,"results":"514","hashOfConfig":"367"},{"size":743,"mtime":1623898717482,"results":"515","hashOfConfig":"367"},{"size":1940,"mtime":1623898717480,"results":"516","hashOfConfig":"367"},{"size":991,"mtime":1623898717465,"results":"517","hashOfConfig":"367"},{"size":3494,"mtime":1623898717469,"results":"518","hashOfConfig":"367"},{"size":1276,"mtime":1623898717471,"results":"519","hashOfConfig":"367"},{"size":409,"mtime":1623898717472,"results":"520","hashOfConfig":"367"},{"size":2742,"mtime":1623898717471,"results":"521","hashOfConfig":"367"},{"size":865,"mtime":1623898717471,"results":"522","hashOfConfig":"367"},{"size":1078,"mtime":1623898717470,"results":"523","hashOfConfig":"367"},{"size":6692,"mtime":1623898717470,"results":"524","hashOfConfig":"367"},{"size":10081,"mtime":1624586691827,"results":"525","hashOfConfig":"367"},{"size":2877,"mtime":1623898717396,"results":"526","hashOfConfig":"367"},{"size":864,"mtime":1623898717484,"results":"527","hashOfConfig":"367"},{"size":188,"mtime":1623898717491,"results":"528","hashOfConfig":"367"},{"size":7132,"mtime":1623898717396,"results":"529","hashOfConfig":"367"},{"size":2360,"mtime":1623898717485,"results":"530","hashOfConfig":"367"},{"size":7473,"mtime":1623898717437,"results":"531","hashOfConfig":"367"},{"size":2215,"mtime":1623898717437,"results":"532","hashOfConfig":"367"},{"size":646,"mtime":1623898717439,"results":"533","hashOfConfig":"367"},{"size":206,"mtime":1623898717488,"results":"534","hashOfConfig":"367"},{"size":5791,"mtime":1623898717437,"results":"535","hashOfConfig":"367"},{"size":1151,"mtime":1623898717488,"results":"536","hashOfConfig":"367"},{"size":1451,"mtime":1623898717404,"results":"537","hashOfConfig":"367"},{"size":3042,"mtime":1623898717394,"results":"538","hashOfConfig":"367"},{"size":6116,"mtime":1623898717433,"results":"539","hashOfConfig":"367"},{"size":4307,"mtime":1623898717441,"results":"540","hashOfConfig":"367"},{"size":1311,"mtime":1623898717441,"results":"541","hashOfConfig":"367"},{"size":3438,"mtime":1623898717433,"results":"542","hashOfConfig":"367"},{"size":897,"mtime":1623898717435,"results":"543","hashOfConfig":"367"},{"size":8501,"mtime":1624418686728,"results":"544","hashOfConfig":"367"},{"size":3994,"mtime":1623898717445,"results":"545","hashOfConfig":"367"},{"size":2586,"mtime":1623898717474,"results":"546","hashOfConfig":"367"},{"size":2516,"mtime":1623898717467,"results":"547","hashOfConfig":"367"},{"size":1392,"mtime":1623898717475,"results":"548","hashOfConfig":"367"},{"size":33443,"mtime":1623898717467,"results":"549","hashOfConfig":"367"},{"size":2982,"mtime":1624418686730,"results":"550","hashOfConfig":"367"},{"size":1301,"mtime":1623898717459,"results":"551","hashOfConfig":"367"},{"size":1406,"mtime":1623898717474,"results":"552","hashOfConfig":"367"},{"size":1704,"mtime":1623898717474,"results":"553","hashOfConfig":"367"},{"size":2627,"mtime":1623898717474,"results":"554","hashOfConfig":"367"},{"size":8479,"mtime":1623898717482,"results":"555","hashOfConfig":"367"},{"size":1323,"mtime":1623898717481,"results":"556","hashOfConfig":"367"},{"size":4310,"mtime":1623898717446,"results":"557","hashOfConfig":"367"},{"size":2076,"mtime":1623898717446,"results":"558","hashOfConfig":"367"},{"size":8606,"mtime":1623898717456,"results":"559","hashOfConfig":"367"},{"size":2465,"mtime":1623898717465,"results":"560","hashOfConfig":"367"},{"size":4953,"mtime":1623898717456,"results":"561","hashOfConfig":"367"},{"size":2519,"mtime":1623898717475,"results":"562","hashOfConfig":"367"},{"size":1724,"mtime":1623898717474,"results":"563","hashOfConfig":"367"},{"size":1373,"mtime":1623898717475,"results":"564","hashOfConfig":"367"},{"size":2721,"mtime":1623898717475,"results":"565","hashOfConfig":"367"},{"size":8880,"mtime":1623898717472,"results":"566","hashOfConfig":"367"},{"size":1675,"mtime":1623898717469,"results":"567","hashOfConfig":"367"},{"size":1731,"mtime":1623898717470,"results":"568","hashOfConfig":"367"},{"size":1102,"mtime":1623898717469,"results":"569","hashOfConfig":"367"},{"size":777,"mtime":1623898717470,"results":"570","hashOfConfig":"367"},{"size":772,"mtime":1623898717477,"results":"571","hashOfConfig":"367"},{"size":4967,"mtime":1623898717396,"results":"572","hashOfConfig":"367"},{"size":1760,"mtime":1623898717397,"results":"573","hashOfConfig":"367"},{"size":1704,"mtime":1623898717436,"results":"574","hashOfConfig":"367"},{"size":1998,"mtime":1623898717396,"results":"575","hashOfConfig":"367"},{"size":275,"mtime":1623898717469,"results":"576","hashOfConfig":"367"},{"size":1542,"mtime":1623898717476,"results":"577","hashOfConfig":"367"},{"size":366,"mtime":1623898717491,"results":"578","hashOfConfig":"367"},{"size":4260,"mtime":1623898717489,"results":"579","hashOfConfig":"367"},{"size":12461,"mtime":1624418686728,"results":"580","hashOfConfig":"367"},{"size":8516,"mtime":1623898717436,"results":"581","hashOfConfig":"367"},{"size":1894,"mtime":1623898717440,"results":"582","hashOfConfig":"367"},{"size":3963,"mtime":1623898717439,"results":"583","hashOfConfig":"367"},{"size":3315,"mtime":1623898717440,"results":"584","hashOfConfig":"367"},{"size":1708,"mtime":1623898717438,"results":"585","hashOfConfig":"367"},{"size":2996,"mtime":1623898717438,"results":"586","hashOfConfig":"367"},{"size":1333,"mtime":1624418686726,"results":"587","hashOfConfig":"367"},{"size":2613,"mtime":1623898717441,"results":"588","hashOfConfig":"367"},{"size":13936,"mtime":1623898717453,"results":"589","hashOfConfig":"367"},{"size":4061,"mtime":1623898717433,"results":"590","hashOfConfig":"367"},{"size":4307,"mtime":1623898717433,"results":"591","hashOfConfig":"367"},{"size":13724,"mtime":1624418686728,"results":"592","hashOfConfig":"367"},{"size":9669,"mtime":1623898717442,"results":"593","hashOfConfig":"367"},{"size":2210,"mtime":1623898717441,"results":"594","hashOfConfig":"367"},{"size":1047,"mtime":1623898717433,"results":"595","hashOfConfig":"367"},{"size":805,"mtime":1623898717434,"results":"596","hashOfConfig":"367"},{"size":2617,"mtime":1623898717434,"results":"597","hashOfConfig":"367"},{"size":2456,"mtime":1623898717435,"results":"598","hashOfConfig":"367"},{"size":6105,"mtime":1623905913095,"results":"599","hashOfConfig":"367"},{"size":2816,"mtime":1623983114673,"results":"600","hashOfConfig":"367"},{"size":12048,"mtime":1625814707821,"results":"601","hashOfConfig":"367"},{"size":1669,"mtime":1623898717444,"results":"602","hashOfConfig":"367"},{"size":3263,"mtime":1623898717470,"results":"603","hashOfConfig":"367"},{"size":711,"mtime":1623898717468,"results":"604","hashOfConfig":"367"},{"size":1902,"mtime":1623898717468,"results":"605","hashOfConfig":"367"},{"size":2999,"mtime":1623898717468,"results":"606","hashOfConfig":"367"},{"size":1967,"mtime":1623898717460,"results":"607","hashOfConfig":"367"},{"size":1516,"mtime":1623898717474,"results":"608","hashOfConfig":"367"},{"size":11638,"mtime":1623898717481,"results":"609","hashOfConfig":"367"},{"size":997,"mtime":1623898717446,"results":"610","hashOfConfig":"367"},{"size":3750,"mtime":1623898717456,"results":"611","hashOfConfig":"367"},{"size":871,"mtime":1623898717456,"results":"612","hashOfConfig":"367"},{"size":1679,"mtime":1623898717465,"results":"613","hashOfConfig":"367"},{"size":1458,"mtime":1623898717475,"results":"614","hashOfConfig":"367"},{"size":1527,"mtime":1623898717475,"results":"615","hashOfConfig":"367"},{"size":1534,"mtime":1623898717473,"results":"616","hashOfConfig":"367"},{"size":731,"mtime":1623898717472,"results":"617","hashOfConfig":"367"},{"size":731,"mtime":1623898717473,"results":"618","hashOfConfig":"367"},{"size":1322,"mtime":1623898717473,"results":"619","hashOfConfig":"367"},{"size":11059,"mtime":1623898717455,"results":"620","hashOfConfig":"367"},{"size":884,"mtime":1623898717463,"results":"621","hashOfConfig":"367"},{"size":3927,"mtime":1623898717465,"results":"622","hashOfConfig":"367"},{"size":812,"mtime":1623898717465,"results":"623","hashOfConfig":"367"},{"size":1691,"mtime":1623898717464,"results":"624","hashOfConfig":"367"},{"size":3028,"mtime":1623898717456,"results":"625","hashOfConfig":"367"},{"size":2726,"mtime":1623898717481,"results":"626","hashOfConfig":"367"},{"size":1759,"mtime":1623898717481,"results":"627","hashOfConfig":"367"},{"size":904,"mtime":1623898717460,"results":"628","hashOfConfig":"367"},{"size":1108,"mtime":1623898717459,"results":"629","hashOfConfig":"367"},{"size":11360,"mtime":1625800018421,"results":"630","hashOfConfig":"367"},{"size":1572,"mtime":1623898717468,"results":"631","hashOfConfig":"367"},{"size":203,"mtime":1623898717395,"results":"632","hashOfConfig":"367"},{"size":7562,"mtime":1623898717468,"results":"633","hashOfConfig":"367"},{"size":7089,"mtime":1623898717468,"results":"634","hashOfConfig":"367"},{"size":1453,"mtime":1623898717467,"results":"635","hashOfConfig":"367"},{"size":2768,"mtime":1623898717457,"results":"636","hashOfConfig":"367"},{"size":6044,"mtime":1623898717467,"results":"637","hashOfConfig":"367"},{"size":1186,"mtime":1623898717467,"results":"638","hashOfConfig":"367"},{"size":744,"mtime":1623898717467,"results":"639","hashOfConfig":"367"},{"size":1637,"mtime":1623898717397,"results":"640","hashOfConfig":"367"},{"size":1826,"mtime":1623898717396,"results":"641","hashOfConfig":"367"},{"size":7481,"mtime":1623898717458,"results":"642","hashOfConfig":"367"},{"size":12022,"mtime":1623898717440,"results":"643","hashOfConfig":"367"},{"size":3740,"mtime":1623898717437,"results":"644","hashOfConfig":"367"},{"size":2391,"mtime":1624418686728,"results":"645","hashOfConfig":"367"},{"size":2945,"mtime":1623898717438,"results":"646","hashOfConfig":"367"},{"size":4673,"mtime":1623898717441,"results":"647","hashOfConfig":"367"},{"size":1814,"mtime":1623898717440,"results":"648","hashOfConfig":"367"},{"size":1248,"mtime":1623898717440,"results":"649","hashOfConfig":"367"},{"size":3552,"mtime":1623898717454,"results":"650","hashOfConfig":"367"},{"size":2962,"mtime":1623898717454,"results":"651","hashOfConfig":"367"},{"size":5827,"mtime":1624525269794,"results":"652","hashOfConfig":"367"},{"size":647,"mtime":1623898717454,"results":"653","hashOfConfig":"367"},{"size":3323,"mtime":1623898717454,"results":"654","hashOfConfig":"367"},{"size":3301,"mtime":1623898717454,"results":"655","hashOfConfig":"367"},{"size":2281,"mtime":1623898717442,"results":"656","hashOfConfig":"367"},{"size":1955,"mtime":1623898717453,"results":"657","hashOfConfig":"367"},{"size":9286,"mtime":1623898717452,"results":"658","hashOfConfig":"367"},{"size":307,"mtime":1623898717451,"results":"659","hashOfConfig":"367"},{"size":4397,"mtime":1623898717433,"results":"660","hashOfConfig":"367"},{"size":3089,"mtime":1624586674096,"results":"661","hashOfConfig":"367"},{"size":6125,"mtime":1623898717435,"results":"662","hashOfConfig":"367"},{"size":2794,"mtime":1623898717434,"results":"663","hashOfConfig":"367"},{"size":5184,"mtime":1623898717436,"results":"664","hashOfConfig":"367"},{"size":2934,"mtime":1623898717442,"results":"665","hashOfConfig":"367"},{"size":204,"mtime":1623898717465,"results":"666","hashOfConfig":"367"},{"size":3349,"mtime":1623898717442,"results":"667","hashOfConfig":"367"},{"size":1040,"mtime":1624586691866,"results":"668","hashOfConfig":"367"},{"size":5685,"mtime":1623898717451,"results":"669","hashOfConfig":"367"},{"size":1553,"mtime":1623898717451,"results":"670","hashOfConfig":"367"},{"size":447,"mtime":1623898717446,"results":"671","hashOfConfig":"367"},{"size":509,"mtime":1623898717449,"results":"672","hashOfConfig":"367"},{"size":1629,"mtime":1623898717443,"results":"673","hashOfConfig":"367"},{"size":6288,"mtime":1623898717455,"results":"674","hashOfConfig":"367"},{"size":6814,"mtime":1625799691751,"results":"675","hashOfConfig":"367"},{"size":4188,"mtime":1623898717465,"results":"676","hashOfConfig":"367"},{"size":736,"mtime":1623898717479,"results":"677","hashOfConfig":"367"},{"size":3808,"mtime":1623898717459,"results":"678","hashOfConfig":"367"},{"size":457,"mtime":1623898717479,"results":"679","hashOfConfig":"367"},{"size":5099,"mtime":1624418686731,"results":"680","hashOfConfig":"367"},{"size":2407,"mtime":1623898717459,"results":"681","hashOfConfig":"367"},{"size":4220,"mtime":1624437337360,"results":"682","hashOfConfig":"367"},{"size":3410,"mtime":1625800018421,"results":"683","hashOfConfig":"367"},{"size":447,"mtime":1623898717457,"results":"684","hashOfConfig":"367"},{"size":2782,"mtime":1623898717457,"results":"685","hashOfConfig":"367"},{"size":924,"mtime":1623898717463,"results":"686","hashOfConfig":"367"},{"size":1451,"mtime":1623898717451,"results":"687","hashOfConfig":"367"},{"size":1851,"mtime":1623898717453,"results":"688","hashOfConfig":"367"},{"size":2293,"mtime":1623898717453,"results":"689","hashOfConfig":"367"},{"size":2499,"mtime":1623898717453,"results":"690","hashOfConfig":"367"},{"size":273,"mtime":1623898717476,"results":"691","hashOfConfig":"367"},{"size":1202,"mtime":1623898717480,"results":"692","hashOfConfig":"367"},{"size":2016,"mtime":1624586998267,"results":"693","hashOfConfig":"367"},{"size":7850,"mtime":1623898717481,"results":"694","hashOfConfig":"367"},{"size":4000,"mtime":1623898717480,"results":"695","hashOfConfig":"367"},{"size":11167,"mtime":1623898717453,"results":"696","hashOfConfig":"367"},{"size":2671,"mtime":1623898717454,"results":"697","hashOfConfig":"367"},{"size":1522,"mtime":1623898717452,"results":"698","hashOfConfig":"367"},{"size":11880,"mtime":1625799691751,"results":"699","hashOfConfig":"367"},{"size":7419,"mtime":1623898717451,"results":"700","hashOfConfig":"367"},{"size":1939,"mtime":1624586691827,"results":"701","hashOfConfig":"367"},{"size":2622,"mtime":1623898717478,"results":"702","hashOfConfig":"367"},{"size":908,"mtime":1623898717479,"results":"703","hashOfConfig":"367"},{"size":4956,"mtime":1623898717479,"results":"704","hashOfConfig":"367"},{"size":2363,"mtime":1623898717454,"results":"705","hashOfConfig":"367"},{"size":1363,"mtime":1625799691751,"results":"706","hashOfConfig":"367"},{"size":1069,"mtime":1623898717458,"results":"707","hashOfConfig":"367"},{"size":825,"mtime":1623898717458,"results":"708","hashOfConfig":"367"},{"size":763,"mtime":1623898717458,"results":"709","hashOfConfig":"367"},{"size":1113,"mtime":1623898717453,"results":"710","hashOfConfig":"367"},{"size":1770,"mtime":1623898717455,"results":"711","hashOfConfig":"367"},{"size":7124,"mtime":1623898717452,"results":"712","hashOfConfig":"367"},{"size":3648,"mtime":1623898717452,"results":"713","hashOfConfig":"367"},{"size":6340,"mtime":1623905892983,"results":"714","hashOfConfig":"367"},{"size":4284,"mtime":1623898717451,"results":"715","hashOfConfig":"367"},{"size":604,"mtime":1623898717396,"results":"716","hashOfConfig":"367"},{"size":8772,"mtime":1623911829312,"results":"717","hashOfConfig":"367"},{"size":888,"mtime":1623898717479,"results":"718","hashOfConfig":"367"},{"size":4541,"mtime":1623898717479,"results":"719","hashOfConfig":"367"},{"size":1218,"mtime":1623898717478,"results":"720","hashOfConfig":"367"},{"size":1605,"mtime":1623898717478,"results":"721","hashOfConfig":"367"},{"size":2238,"mtime":1623898717478,"results":"722","hashOfConfig":"367"},{"size":661,"mtime":1623898717478,"results":"723","hashOfConfig":"367"},{"size":5499,"mtime":1623898717478,"results":"724","hashOfConfig":"367"},{"size":589,"mtime":1625799691751,"results":"725","hashOfConfig":"367"},{"size":1000,"mtime":1623898717454,"results":"726","hashOfConfig":"367"},{"size":11994,"mtime":1624586691825,"results":"727","hashOfConfig":"367"},{"size":1383,"mtime":1623898717478,"results":"728","hashOfConfig":"367"},{"size":3153,"mtime":1623898717405,"results":"729","hashOfConfig":"367"},{"size":1679,"mtime":1624418686724,"results":"730","hashOfConfig":"367"},{"size":448,"mtime":1624418686727,"results":"731","hashOfConfig":"367"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},"1asrll7",{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"734"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"734"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"734"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"734"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"734"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"788","usedDeprecatedRules":"734"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791","usedDeprecatedRules":"734"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"794","usedDeprecatedRules":"734"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797","usedDeprecatedRules":"734"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"734"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803","usedDeprecatedRules":"734"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"808","usedDeprecatedRules":"734"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"734"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"834","usedDeprecatedRules":"734"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"841","usedDeprecatedRules":"734"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"850","usedDeprecatedRules":"734"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"863","messages":"864","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"865","usedDeprecatedRules":"734"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"888","usedDeprecatedRules":"734"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891","usedDeprecatedRules":"734"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"902","messages":"903","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"904","usedDeprecatedRules":"734"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"734"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"916","usedDeprecatedRules":"734"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"734"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"934","usedDeprecatedRules":"734"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"937","usedDeprecatedRules":"734"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"940","usedDeprecatedRules":"734"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945","usedDeprecatedRules":"734"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"950","usedDeprecatedRules":"734"},{"filePath":"951","messages":"952","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"734"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"966","usedDeprecatedRules":"734"},{"filePath":"967","messages":"968","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"971","messages":"972","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"973","usedDeprecatedRules":"734"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978","usedDeprecatedRules":"734"},{"filePath":"979","messages":"980","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"983","usedDeprecatedRules":"734"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1002","usedDeprecatedRules":"734"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1005","usedDeprecatedRules":"734"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1010","usedDeprecatedRules":"734"},{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1013","usedDeprecatedRules":"734"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1016","usedDeprecatedRules":"734"},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1019","usedDeprecatedRules":"734"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1024","usedDeprecatedRules":"734"},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1031","usedDeprecatedRules":"734"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1040","usedDeprecatedRules":"734"},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1047","usedDeprecatedRules":"734"},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1050","usedDeprecatedRules":"734"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1055","usedDeprecatedRules":"734"},{"filePath":"1056","messages":"1057","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1058","messages":"1059","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1060","usedDeprecatedRules":"1061"},{"filePath":"1062","messages":"1063","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1064","messages":"1065","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1066","messages":"1067","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1068","messages":"1069","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1070","usedDeprecatedRules":"734"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1073","usedDeprecatedRules":"734"},{"filePath":"1074","messages":"1075","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1076","usedDeprecatedRules":"734"},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1085","usedDeprecatedRules":"734"},{"filePath":"1086","messages":"1087","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1088","messages":"1089","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1090","messages":"1091","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1092","messages":"1093","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1094","usedDeprecatedRules":"734"},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1101","usedDeprecatedRules":"734"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1104","usedDeprecatedRules":"734"},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1107","messages":"1108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1117","usedDeprecatedRules":"734"},{"filePath":"1118","messages":"1119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1120","usedDeprecatedRules":"734"},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1123","usedDeprecatedRules":"734"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1128","usedDeprecatedRules":"734"},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1133","messages":"1134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1137","usedDeprecatedRules":"734"},{"filePath":"1138","messages":"1139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1140","usedDeprecatedRules":"734"},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1145","usedDeprecatedRules":"734"},{"filePath":"1146","messages":"1147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1148","messages":"1149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1150","usedDeprecatedRules":"734"},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1153","usedDeprecatedRules":"734"},{"filePath":"1154","messages":"1155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1158","usedDeprecatedRules":"734"},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1163","usedDeprecatedRules":"734"},{"filePath":"1164","messages":"1165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1166","usedDeprecatedRules":"734"},{"filePath":"1167","messages":"1168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1173","messages":"1174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1177","usedDeprecatedRules":"734"},{"filePath":"1178","messages":"1179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1182","usedDeprecatedRules":"734"},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1191","messages":"1192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1195","messages":"1196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1197","usedDeprecatedRules":"734"},{"filePath":"1198","messages":"1199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1200","messages":"1201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1202","messages":"1203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1204","messages":"1205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1206","messages":"1207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1208","messages":"1209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1210","messages":"1211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1212","messages":"1213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1214","messages":"1215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1216","messages":"1217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1218","messages":"1219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1220","messages":"1221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1222","messages":"1223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1224","usedDeprecatedRules":"734"},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1227","messages":"1228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1229","messages":"1230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1231","messages":"1232","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1233","usedDeprecatedRules":"734"},{"filePath":"1234","messages":"1235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1236","messages":"1237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1238","messages":"1239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1240","messages":"1241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1242","messages":"1243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1244","usedDeprecatedRules":"734"},{"filePath":"1245","messages":"1246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1247","messages":"1248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1249","usedDeprecatedRules":"734"},{"filePath":"1250","messages":"1251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1252","messages":"1253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1254","usedDeprecatedRules":"734"},{"filePath":"1255","messages":"1256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1257","usedDeprecatedRules":"734"},{"filePath":"1258","messages":"1259","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1260","usedDeprecatedRules":"734"},{"filePath":"1261","messages":"1262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1263","usedDeprecatedRules":"734"},{"filePath":"1264","messages":"1265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1266","messages":"1267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1268","usedDeprecatedRules":"734"},{"filePath":"1269","messages":"1270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1271","messages":"1272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1273","messages":"1274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1275","usedDeprecatedRules":"734"},{"filePath":"1276","messages":"1277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1278","messages":"1279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1280","usedDeprecatedRules":"734"},{"filePath":"1281","messages":"1282","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1283","messages":"1284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1285","messages":"1286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1287","messages":"1288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1289","messages":"1290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1293","messages":"1294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1295","messages":"1296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1297","messages":"1298","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1299","usedDeprecatedRules":"734"},{"filePath":"1300","messages":"1301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1302","usedDeprecatedRules":"734"},{"filePath":"1303","messages":"1304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1305","messages":"1306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1307","usedDeprecatedRules":"734"},{"filePath":"1308","messages":"1309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1310","usedDeprecatedRules":"734"},{"filePath":"1311","messages":"1312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1315","messages":"1316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1317","messages":"1318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1319","usedDeprecatedRules":"734"},{"filePath":"1320","messages":"1321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1322","messages":"1323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1324","messages":"1325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1326","usedDeprecatedRules":"734"},{"filePath":"1327","messages":"1328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1329","usedDeprecatedRules":"734"},{"filePath":"1330","messages":"1331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1332","usedDeprecatedRules":"734"},{"filePath":"1333","messages":"1334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1335","messages":"1336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1337","usedDeprecatedRules":"734"},{"filePath":"1338","messages":"1339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1340","messages":"1341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342","usedDeprecatedRules":"734"},{"filePath":"1343","messages":"1344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1345","messages":"1346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1347","messages":"1348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1349","messages":"1350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1351","usedDeprecatedRules":"734"},{"filePath":"1352","messages":"1353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1354","messages":"1355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1356","messages":"1357","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1358","usedDeprecatedRules":"734"},{"filePath":"1359","messages":"1360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1361","usedDeprecatedRules":"734"},{"filePath":"1362","messages":"1363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1364","messages":"1365","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1366","usedDeprecatedRules":"734"},{"filePath":"1367","messages":"1368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1369","usedDeprecatedRules":"734"},{"filePath":"1370","messages":"1371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1372","messages":"1373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1374","messages":"1375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1376","messages":"1377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1378","messages":"1379","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1380","usedDeprecatedRules":"734"},{"filePath":"1381","messages":"1382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1383","usedDeprecatedRules":"734"},{"filePath":"1384","messages":"1385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1386","usedDeprecatedRules":"734"},{"filePath":"1387","messages":"1388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1389","messages":"1390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1391","messages":"1392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1393","usedDeprecatedRules":"734"},{"filePath":"1394","messages":"1395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1396","messages":"1397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1398","messages":"1399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1400","messages":"1401","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1402","usedDeprecatedRules":"734"},{"filePath":"1403","messages":"1404","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1405","usedDeprecatedRules":"734"},{"filePath":"1406","messages":"1407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1408","messages":"1409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1410","usedDeprecatedRules":"734"},{"filePath":"1411","messages":"1412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1413","messages":"1414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1415","messages":"1416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1417","messages":"1418","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1419","usedDeprecatedRules":"734"},{"filePath":"1420","messages":"1421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1422","messages":"1423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1424","messages":"1425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1426","usedDeprecatedRules":"734"},{"filePath":"1427","messages":"1428","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1429","usedDeprecatedRules":"734"},{"filePath":"1430","messages":"1431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1432","messages":"1433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1434","messages":"1435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1436","messages":"1437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1438","usedDeprecatedRules":"734"},{"filePath":"1439","messages":"1440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1441","usedDeprecatedRules":"734"},{"filePath":"1442","messages":"1443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1444","messages":"1445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1446","messages":"1447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1448","messages":"1449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1450","messages":"1451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1452","usedDeprecatedRules":"734"},{"filePath":"1453","messages":"1454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1455","usedDeprecatedRules":"734"},{"filePath":"1456","messages":"1457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1458","usedDeprecatedRules":"734"},{"filePath":"1459","messages":"1460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1461","messages":"1462","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1463","usedDeprecatedRules":"734"},{"filePath":"1464","messages":"1465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1466","messages":"1467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1468","messages":"1469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1470","messages":"1471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1472","usedDeprecatedRules":"734"},{"filePath":"1473","messages":"1474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1475","usedDeprecatedRules":"734"},{"filePath":"1476","messages":"1477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1478","messages":"1479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1480","messages":"1481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1482","messages":"1483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1484","messages":"1485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1486","messages":"1487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1488","messages":"1489","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1490","usedDeprecatedRules":"734"},{"filePath":"1491","messages":"1492","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1493","usedDeprecatedRules":"734"},{"filePath":"1494","messages":"1495","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1496","usedDeprecatedRules":"734"},{"filePath":"1497","messages":"1498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1499","messages":"1500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1501","messages":"1502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1503","messages":"1504","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1505","usedDeprecatedRules":"734"},{"filePath":"1506","messages":"1507","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1508","usedDeprecatedRules":"734"},{"filePath":"1509","messages":"1510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1511","messages":"1512","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1513","usedDeprecatedRules":"734"},{"filePath":"1514","messages":"1515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1516","messages":"1517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1518","messages":"1519","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1520","usedDeprecatedRules":"734"},{"filePath":"1521","messages":"1522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1523","messages":"1524","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1525","usedDeprecatedRules":"734"},{"filePath":"1526","messages":"1527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1528","messages":"1529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1530","messages":"1531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1532","messages":"1533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1534","messages":"1535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1536","messages":"1537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1538","messages":"1539","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1540","usedDeprecatedRules":"734"},{"filePath":"1541","messages":"1542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1543","messages":"1544","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1545","usedDeprecatedRules":"734"},{"filePath":"1546","messages":"1547","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1548","usedDeprecatedRules":"734"},{"filePath":"1549","messages":"1550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1551","messages":"1552","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1553","usedDeprecatedRules":"734"},{"filePath":"1554","messages":"1555","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1556","usedDeprecatedRules":"734"},{"filePath":"1557","messages":"1558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1559","messages":"1560","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1561","usedDeprecatedRules":"734"},{"filePath":"1562","messages":"1563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1564","messages":"1565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1566","messages":"1567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1568","messages":"1569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1570","messages":"1571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1572","messages":"1573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1574","messages":"1575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1576","messages":"1577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1578","messages":"1579","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1580","usedDeprecatedRules":"734"},{"filePath":"1581","messages":"1582","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1583","usedDeprecatedRules":"734"},{"filePath":"1584","messages":"1585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1586","messages":"1587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},{"filePath":"1588","messages":"1589","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1590","usedDeprecatedRules":"734"},{"filePath":"1591","messages":"1592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"734"},"/Users/mac3/Desktop/workspace/FacebookClient/src/index.tsx",[],["1593","1594"],"/Users/mac3/Desktop/workspace/FacebookClient/src/serviceWorker.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/App.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/store/index.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/index.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/app-router/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/store/rootReducer.ts",["1595"],"import { combineReducers, Reducer } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport authReducer from '../reducers/authState/authReducer';\nimport fanpageReducer from '../reducers/fanpageState/fanpageReducer';\nimport { storeReducer } from '../reducers/storeState';\nimport settingReducer from '../reducers/setting/settingReducer';\nimport labelReducer from '../reducers/labelState/labelReducer';\nimport productReducer from '../reducers/productState/productReducer';\nimport staffReducer from '../reducers/staffState/staffReducer';\nimport orderReducer from '../reducers/orderState/orderReducer';\nimport orderDraftReducer from '../reducers/orderDraftState/orderDraftReducer';\nimport imagesReducer from '../reducers/imagesState/imagesReducer';\nimport warehouseReducer from '../reducers/warehouseState/warehouseReducer';\nimport livestreamReducer from '../reducers/livestreamState/livestreamReducer';\n\nimport Types from '../reducers/authState/authTypes';\n\nexport default (history: any): Reducer => {\n    const appReducer = combineReducers({\n        router: connectRouter(history),\n        auth: authReducer,\n        fanpage: fanpageReducer,\n        store: storeReducer,\n        setting: settingReducer,\n        label: labelReducer,\n        product: productReducer,\n        staff: staffReducer,\n        order: orderReducer,\n        orderDraft: orderDraftReducer,\n        images: imagesReducer,\n        warehouse: warehouseReducer,\n        livestream: livestreamReducer,\n    });\n\n    const rootReducer = (state: any, action: any) => {\n        if (action.type === Types.LOGOUT) {\n            state.store.store = null;\n            state.fanpage.conversation = null;\n            state.fanpage.conversations = [];\n            state.fanpage.allPages = [];\n            state.fanpage.page = null;\n        }\n\n        return appReducer(state, action);\n    };\n\n    return rootReducer;\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/middleware/auth.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/authState/authTypes.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/livestreamState/livestreamReducer.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/warehouseState/warehouseReducer.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/imagesState/imagesReducer.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/orderDraftState/orderDraftReducer.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/bottom-text/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/btn-upload/index.tsx",["1596","1597"],"import React, { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button } from 'antd';\nimport { uploadImagesRequest } from '../../api/upload-api';\nimport './style.less';\n\ninterface Props {\n    loading?: boolean;\n    title?: string;\n    multiple?: boolean;\n    handleUpload?: (arg: any) => void;\n}\n\nconst BtnUpload: FC<Props> = ({\n    title = 'Upload ảnh',\n    multiple = false,\n    handleUpload,\n    loading,\n}): JSX.Element => {\n    return (\n        <div className='btn-upload'>\n            <Button type='primary' danger loading={loading}>\n                {title}\n            </Button>\n            <input type='file' accept='image/*' onChange={handleUpload} multiple={multiple} />\n        </div>\n    );\n};\n\nexport default BtnUpload;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/components/error-axios/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/orderState/orderReducer.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/no-channel/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/staffState/staffReducer.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/productState/productReducer.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/labelState/labelReducer.ts",["1598"],"import { keyBy, filter, find } from 'lodash';\nimport { ILabel } from '../../collections/label';\nimport types from './types';\n\nexport interface ILabelState {\n    loading: boolean;\n    labels: any;\n}\n\nexport interface IActionLabel {\n    type: string;\n    payload: any;\n}\n\nconst initialState = {\n    loading: true,\n    labels: {},\n};\n\nconst labelReducer = (state: ILabelState = initialState, action: IActionLabel): ILabelState => {\n    switch (action.type) {\n        case types.LOADING:\n            return { ...state, loading: true };\n\n        case types.LOAD_LABEL_SUCCESS: {\n            const labels = keyBy(action.payload, '_id');\n            return { ...state, labels, loading: false };\n        }\n\n        case types.REMOVE_LABEL: {\n            const labels = filter(state.labels, (label: ILabel) => label._id !== action.payload);\n            return { ...state, labels };\n        }\n\n        case types.UPDATE_ORDER_LABEL: {\n            const newLabels = Object.keys(state.labels).map((key: string) => {\n                const label = JSON.parse(JSON.stringify(state.labels))[key];\n                if (label._id === action.payload.labelId) {\n                    label.order = action.payload.order;\n                }\n                return label;\n            });\n            return {\n                ...state,\n                labels: keyBy(newLabels, '_id'),\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport default labelReducer;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/setting/settingReducer.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/save-token/index.tsx",["1599"],"import { message } from 'antd';\nimport * as queryString from 'query-string';\nimport React, { FC, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setToken } from '../../api/token';\nimport { Loading } from '../../components';\nimport useHiddenModalExpired from '../../hooks/use-hidden-modal-expired';\nimport { BaseLayout } from '../../layout';\nimport { getUserAction } from '../../reducers/authState/authAction';\nimport types from '../../reducers/authState/authTypes';\n\ninterface Props {}\n\nconst SaveToken: FC<Props> = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const { removeValueHidden } = useHiddenModalExpired();\n\n    const searchState: {\n        token?: string;\n        remember?: string;\n        location?: string;\n        guest?: string;\n    } = queryString.parse(history.location.search);\n\n    const saveAndLoadUser = async (): Promise<void> => {\n        const { token, location, guest } = searchState;\n\n        if (!location) {\n            return;\n        }\n        const locationValue: Location = JSON.parse(location);\n        if (guest === 'true') {\n            history.replace(locationValue);\n            return;\n        }\n        if (!token) {\n            return;\n        }\n        const tokenValue = JSON.parse(token);\n\n        await localStorage.removeItem('shortLiveToken');\n        await setToken({ token: tokenValue });\n        await dispatch({\n            type: types.LOGIN_SUCCESSS,\n            payload: tokenValue,\n        });\n        await dispatch(getUserAction());\n        message.success('Đăng nhập thành công');\n        removeValueHidden();\n\n        //  history.replace(`/customer`);\n    };\n\n    useEffect(() => {\n        saveAndLoadUser();\n    }, []);\n\n    return (\n        <BaseLayout title='Login'>\n            <Loading full />\n        </BaseLayout>\n    );\n};\n\nexport default SaveToken;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/livestreamState/types.ts",["1600"],"export default {\n    LOADING: 'livestream/loading',\n    SELECT_PAGE: 'livestream/select_page',\n    LOAD_SUCCESS: 'livestream/load_success',\n    LOAD_FAILED: 'livestream/load_failed',\n    CHANGE_PAGE: 'livestream/change_page',\n    CHANGE_NAME: 'livestream/change_name',\n    CHANGE_DATE: 'livestream/change_date',\n    CHANGE_FILTER: 'livestream/change_filter',\n    UPDATE_SCRIPT: 'livestream/update_video',\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/warehouseState/warehouseTypes.ts",["1601"],"export default {\n    FETCH_WAREHOUSES_LOADING: '@warehouse/fetch_data_loading',\n    FETCH_WAREHOUSES_SUCCESS: '@warehouse/fetch_data_success',\n    FETCH_WAREHOUSES_FAILED: '@warehouse/fetch_data_failed',\n\n    CREATE_WAREHOUSE_LOADING: '@warehouse/creat_warehouse_loading',\n    CREATE_WAREHOUSE_SUCCESS: '@warehouse/creat_warehouse_success',\n    CREATE_WAREHOUSE_FAILED: '@warehouse/creat_warehouse_failed',\n\n    UPDATE_WAREHOUSE_FAILED: '@warehouse/update_warehouse_failed',\n\n    DELETE_WAREHOUSE_SUCCESS: '@warehouse/delete_warehouse_success',\n    DELETE_WAREHOUSE_FAILED: '@warehouse/delete_warehouse_failed',\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/imagesState/imagesTypes.ts",["1602"],"export default {\n    FETCH_IMAGES_LOADING: '@product/fetch_images_loading',\n    FETCH_IMAGES_SUCCESS: '@product/fetch_images_success',\n    FETCH_IMAGES_FAILED: '@product/fetch_images_failed',\n\n    ADD_IMAGES_SUCCESS: '@product/add_images_success',\n    TOOGLE_LIKE_IMAGE: '@product/toggle_like_image',\n    DELETE_IMAGE: '@product/remove_image',\n    SEARCH: '@product/search',\n\n    CREATE_GALLERY_SUCCESS: '@product/create_gallery_success',\n    FETCH_GALLERY_SUCCESS: '@product/fetch_gallery_success',\n    DELETE_GALLERY: '@product/delete_gallery',\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/orderDraftState/orderDraftType.ts",["1603"],"export default {\n    LOADING_ORDER_DRAFT: 'ORDER_DRAFT/LOADING_ORDER_DRAFT',\n    LOAD_ORDER_DRAFT_SUCCESS: 'ORDER_DRAFT/LOAD_ORDER_DRAFT_SUCCESS',\n    LOAD_ORDER_DRAFT_FAILED: 'ORDER_DRAFT/LOAD_ORDER_DRAFT_FAILED',\n    DELETE_ORDER_DRAFT_SUCCESS: 'ORDER_DRAFT/DELETE_ORDER_DRAFT_SUCCESS',\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/orderState/orderTypes.ts",["1604"],"export default {\n    FETCH_ORDERS_LOADING: '@product/fetch_orders_loading',\n    FETCH_ORDERS_SUCCESS: '@product/fetch_orders_success',\n    FETCH_ORDERS_FAILED: '@product/fetch_orders_failed',\n\n    UPDATE_STATUS_ORDER_SUCCESS: '@product/update_status_order_success',\n\n    DELETE_ORDER_SUCCESS: '@product/delete_order_success',\n    CHANGE_ORDER_TYPE: '@product/change_order_type',\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/staffState/staffType.ts",["1605"],"export default {\n    LOADING: 'staff/loading',\n    LOAD_STAFF_SUCCESS: 'staff/load_staff_success',\n    ADD_STAFF: 'staff/add',\n    UPDATE_STAFF: 'staff/update',\n    DELETE_STAFF: 'staff/delete',\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/productState/productTypes.ts",["1606"],"export default {\n    FETCH_PRODUCTS_LOADING: '@product/fetch_data_loading',\n    FETCH_PRODUCTS_SUCCESS: '@product/fetch_data_success',\n    FETCH_PRODUCTS_FAILED: '@product/fetch_data_failed',\n\n    CREATE_PRODUCT_LOADING: '@product/creat_product_loading',\n    CREATE_PRODUCT_SUCCESS: '@product/creat_product_success',\n    CREATE_PRODUCT_FAILED: '@product/creat_product_failed',\n\n    UPDATE_PRODUCT_FAILED: '@product/update_product_failed',\n\n    DELETE_PRODUCT_SUCCESS: '@product/delete_product_success',\n    DELETE_PRODUCT_FAILED: '@product/delete_product_failed',\n\n    FETCH_CATEGORY_SUCCESS: '@product/fetch_category_success',\n    FETCH_CATEGORY_FAILED: '@product/fetch_category_failed',\n\n    SET_NEW_CATEGORY_SUCCESS: '@product/new_category_success',\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/setting/actionTypes.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/labelState/types.ts",["1607"],"export default {\n    LOADING: 'label/loading',\n    LOAD_LABEL_SUCCESS: 'label/load_label_success',\n    ADD_LABEL: 'label/add_label',\n    REMOVE_LABEL: 'label/remove_label',\n    UPDATE_ORDER_LABEL: 'label/update_order_label',\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/storeState/index.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/authState/authAction.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/token.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/header-right-action.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/maintained/index.tsx",["1608"],"import React, { FC } from 'react';\nimport { Button } from 'antd';\nimport { RightCircleFilled } from '@ant-design/icons';\n\nimport i_trouble from '../../assets/i_trouble.svg';\nimport './style.less';\nimport { Helmet } from 'react-helmet';\n\ninterface Props {}\n\nconst ErrorPage: FC<Props> = ({}): JSX.Element => {\n    const goHomepage = () => {\n        window.location.href = window.location.origin;\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>Đã có lỗi khi tải trang</title>\n            </Helmet>\n            <div className='error-page'>\n                <div className='content'>\n                    <div>\n                        <h1>Đã có lỗi khi tải trang</h1>\n                        <p className='description'>\n                            Vui lòng tải lại trang hoặc liên hệ với chúng tôi để được hỗ trợ sớm\n                            nhất\n                        </p>\n\n                        <Button size='large' className='btn-home' onClick={goHomepage}>\n                            Trở về trang chủ{' '}\n                            <RightCircleFilled style={{ fontSize: 24, color: '#0972d7' }} />\n                        </Button>\n                    </div>\n                    <img src={i_trouble} alt='' />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ErrorPage;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/storeState/storeAction.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/user.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/store-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/fanpage.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/auth-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/storeState/storeReducer.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/fanpageState/fanpageAction.ts",["1609","1610","1611"],"import { debounce, get } from 'lodash';\nimport moment from 'moment';\nimport { Dispatch } from 'redux';\n\nimport {\n    getUnreadConversationsCount,\n    loadConversation,\n    markAsUnreadApi,\n} from '../../api/conversation-api';\nimport { connectFanpageApi, loadFanpages, Payload } from '../../api/fanpage';\nimport { loadStore } from '../storeState/storeAction';\nimport { IAction, IConversation, Page } from './fanpageReducer';\nimport types from './fanpageTypes';\n\ninterface IDataSocket {\n    conversation: IConversation;\n}\n\nexport function removeError() {\n    return {\n        type: types.REMOVE_ERROR_LOAD_FANPAGES,\n    };\n}\nexport function setNewMessage(payload: any) {\n    return {\n        type: types.SET_NEW_MESSAGE,\n        payload,\n    };\n}\n\nexport function removeConversations() {\n    return {\n        type: types.REMOVE_CONVERSATIONS,\n    };\n}\n\nexport function connectFanpageSuccess(payload: any) {\n    return {\n        type: types.CONNECT_FANPAGE_SUCCESSS,\n        payload,\n    };\n}\n\nexport function connectFanpageFailed() {\n    return {\n        type: types.CONNECT_FANPAGE_FAILED,\n    };\n}\n\nexport const connectFanpageAction = (data: Payload) => async (\n    dispatch: Dispatch<any>,\n    getState: () => any\n) => {\n    const { auth, store } = getState();\n    const { token } = auth;\n\n    if (store.store) {\n        const storeId = store.store._id;\n\n        try {\n            const res = await connectFanpageApi({\n                payload: data,\n                storeId,\n                token: token.accessToken,\n            });\n            dispatch(connectFanpageSuccess(res.data));\n\n            dispatch(loadFanpageAction());\n            localStorage.removeItem('shortLiveToken');\n        } catch (e) {\n            dispatch(connectFanpageFailed());\n        }\n    } else {\n        dispatch(connectFanpageFailed());\n    }\n};\n\nexport const isActivePage = (page: any) => {\n    return page.active;\n};\n\nexport const loadFanpageAction = () => async (dispatch: any, getState: any) => {\n    const { auth, store } = getState();\n    const { token } = auth;\n\n    if (get(store, 'store._id')) {\n        const storeId = store.store._id;\n        try {\n            dispatch({\n                type: types.LOAD_FANPAGES,\n            });\n\n            let res = await loadFanpages(store.store._id);\n\n            const getCountPages: Promise<any>[] = [];\n            let activePages: any[] = [];\n            let inactivePages: any[] = [];\n            if (res.data && res.data.length > 0) {\n                res.data.forEach((item: any) => {\n                    if (isActivePage(item)) {\n                        activePages.push(item);\n                    } else {\n                        inactivePages.push(item);\n                    }\n                });\n\n                activePages.map((item: any) => {\n                    getCountPages.push(\n                        getUnreadConversationsCount({\n                            token: token.accessToken,\n                            storeId,\n                            fbPageId: item.fbObjectId,\n                        })\n                    );\n                });\n\n                const response = await Promise.all(getCountPages);\n                if (response) {\n                    activePages = activePages.map((item: any, index: number) => {\n                        item.countUnread = response[index];\n                        return item;\n                    });\n                }\n            }\n\n            dispatch({\n                type: types.LOAD_FANPAGES_SUCCESS,\n                payload: {\n                    data: activePages.concat(inactivePages),\n                    activePage: store.store.activePage,\n                },\n            });\n        } catch (error) {\n            dispatch({ type: types.LOAD_FANPAGES_FAILED });\n        }\n    } else {\n        dispatch(loadStore());\n    }\n};\n\nexport const updateUnreadForConversation = (data: any) => async (dispatch: any, getState: any) => {\n    const { auth, store, fanpage } = getState();\n    const { token } = auth;\n    const storeId = store.store._id;\n    const { conversation } = fanpage;\n\n    if (conversation && data.fbObjectId === conversation.fbObjectId) {\n        await markAsUnreadApi({\n            storeId,\n            fbPageId: conversation.fbPageId,\n            token: token.accessToken,\n            conversationId: conversation.fbObjectId,\n            read: true,\n        });\n        dispatch({\n            type: types.MARK_AS_UNREAD,\n            payload: { conversation: data, unread: false },\n        });\n    }\n    dispatch(updateCountUnreadPage({ fbObjectId: data.fbPageId }));\n};\n\nexport const updateCountUnreadPage = (data: { fbObjectId: string }) => async (\n    dispatch: Dispatch,\n    getState: any\n) => {\n    const { auth, store } = getState();\n    const { token } = auth;\n    const storeId = store.store._id;\n\n    debounced(data, token.accessToken, storeId, dispatch);\n};\n\nexport const debounced = debounce(\n    async function (data: any, accessToken: string, storeId: string, dispatch: Dispatch) {\n        const count = await getUnreadConversationsCount({\n            token: accessToken,\n            storeId,\n            fbPageId: data.fbObjectId,\n        });\n        dispatch({\n            type: types.UPDATE_COUNT_UNREAD_PAGE,\n            payload: { ...data, count },\n        });\n    },\n    1000,\n    { leading: false, trailing: true }\n);\n\nexport const loadConversations = (\n    query?: string,\n    paramFbPageIds?: string[],\n    pageSelected?: any,\n    url?: string\n) => async (dispatch: any, getState: any) => {\n    dispatch({\n        type: types.LOADING_CONVERSATIONS,\n    });\n\n    try {\n        const { store, auth, fanpage } = getState();\n        const storeId = store.store._id;\n        const token = auth.token.accessToken;\n        const fbPageIds = !paramFbPageIds\n            ? Object.values(fanpage.pages).map((page: any) => page.fbObjectId)\n            : paramFbPageIds;\n\n        const responses = await loadConversation({\n            fbPageIds,\n            storeId,\n            token,\n            query,\n            url,\n        });\n\n        if (pageSelected) {\n            const countUnread = await getUnreadConversationsCount({\n                token,\n                storeId,\n                fbPageId: fbPageIds[0],\n            });\n            pageSelected.countUnread = countUnread;\n        }\n\n        dispatch({\n            type: types.LOAD_CONVERSATIONS_SUCCESS,\n            payload: pageSelected\n                ? { conversations: responses, pageSelected }\n                : { conversations: responses },\n        });\n    } catch (error) {\n        dispatch({\n            type: types.LOAD_CONVERSATIONS_FAILED,\n        });\n    }\n};\n\nexport function selectConversation(conversation: IConversation): IAction {\n    return {\n        type: types.SELECT_CONVERSATION,\n        payload: conversation,\n    };\n}\n\nexport function markAsUnread(data: { conversation: IConversation; unread: boolean }): IAction {\n    return {\n        type: types.MARK_AS_UNREAD,\n        payload: data,\n    };\n}\n\nexport function newConversation(data: any): IAction {\n    return {\n        type: types.NEW_CONVERSATION,\n        payload: data,\n    };\n}\n\nexport const updateConversation = (data: any) => (dispatch: any, getState: any) => {\n    data.isUpdateMessage = true;\n\n    dispatch({\n        type: types.UPDATE_CONVERSATION,\n        payload: data,\n    });\n};\n\nexport function updateLabelConversations(data: any): IAction {\n    return {\n        type: types.UPDATE_LABEL_CONVERSATION,\n        payload: data,\n    };\n}\n\nexport function updateLikeCommentsConversation(data: any): IAction {\n    return {\n        type: types.UPDATE_LIKED_COMMENTS_CONVERSATION,\n        payload: data,\n    };\n}\n\nexport function updateHiddenCommentsConversation(data: any): IAction {\n    return {\n        type: types.UPDATE_HIDDEN_COMMENTS_CONVERSATION,\n        payload: data,\n    };\n}\n\nexport function toggleBlockUser(data: any) {\n    return {\n        type: types.UPDATE_BLOCK_CONVERSATION,\n        payload: data,\n    };\n}\n\nexport function setNullForConversation() {\n    return {\n        type: types.SET_NULL_FOR_CONVERSATION,\n    };\n}\n\nexport function removeConversation(data: { conversationId: string }): IAction {\n    return {\n        type: types.REMOVE_CONVERSATION,\n        payload: data,\n    };\n}\n\nexport function updateMainCommentConversation(data: {\n    conversationId: string;\n    fbObjectId: string;\n    commentIds: string[];\n}): IAction {\n    return {\n        type: types.UPDATE_MAIN_COMMENT_CONVERSATION,\n        payload: data,\n    };\n}\n\nexport function setCurrentPage(page: Page): IAction {\n    return {\n        type: types.SET_CURRENT_PAGE,\n        payload: page,\n    };\n}\n\nexport function setFilterConversation(selected: string[]): IAction {\n    return {\n        type: types.SET_FILTER_CONVERSATION,\n        payload: selected,\n    };\n}\n","/Users/mac3/Desktop/workspace/FacebookClient/src/layout/index.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/constants/index.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/storeState/storeTypes.ts",["1612"],"export default {\n    LOADING_STORE: 'store/loading',\n    ADD_STORE: 'store/add_store',\n    LOAD_STORE_SUCCESS: 'store/load_store_success',\n    LOAD_STORE_FAILED: 'store/load_store_failed',\n    UPDATE_STORE: 'store/update_store',\n    CHANGE_PAGE: 'store/change_page',\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/api/axios-client.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/index.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/collections/sale-channel.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/fanpageState/fanpageTypes.ts",["1613"],"export default {\n    LOADING: 'auth/loading',\n    CONNECT_FANPAGE_SUCCESSS: 'connect_fanpage/success',\n    CONNECT_FANPAGE_FAILED: 'connect_fanpage/failed',\n    LOAD_FANPAGES: 'load_fanpage',\n    LOAD_FANPAGES_SUCCESS: 'load_fanpage/success',\n    LOAD_FANPAGES_FAILED: 'load_fanpage/failed',\n    LOADING_CONVERSATIONS: 'fanpage/loading_converdation',\n    LOAD_CONVERSATIONS_SUCCESS: 'fanpage/load_converdation_success',\n    LOAD_CONVERSATIONS_FAILED: 'fanpage/load_converdation_failed',\n    SELECT_CONVERSATION: 'fanpage/select_conversation',\n    NEW_CONVERSATION: 'fanpage/new_conversation',\n    REMOVE_CONVERSATIONS: 'fanpage/remove_conversations',\n    UPDATE_CONVERSATION: 'fanpage/update_conversation',\n    MARK_AS_UNREAD: 'fanpage/mark_as_unread',\n    UPDATE_LABEL_CONVERSATION: 'fanpage/update_label_conversation',\n    UPDATE_COUNT_UNREAD_PAGE: 'fanpage/update_count_unread_page',\n    REMOVE_ERROR_LOAD_FANPAGES: 'loading_fanpage/remove_error_load_fanpages',\n    UPDATE_LIKED_COMMENTS_CONVERSATION: 'fanpage/update_like_comments_conversation',\n    UPDATE_HIDDEN_COMMENTS_CONVERSATION: 'fanpage/update_hidden_comments_conversation',\n    UPDATE_BLOCK_CONVERSATION: 'fanpage/update_block_conversation',\n    SET_NULL_FOR_CONVERSATION: 'fanpage/set_null_for_conversation',\n    REMOVE_CONVERSATION: 'fanpage/remove_conversation',\n    UPDATE_MAIN_COMMENT_CONVERSATION: 'fanpage/update_main_comment_conversation',\n    SET_IS_TEMPORARY: 'fanpage/isTemporary',\n    SET_NEW_MESSAGE: 'fanpage/setNewMessage',\n    SET_CURRENT_PAGE: 'fanpage/setPage',\n    SET_FILTER_CONVERSATION: 'fanpage/setFilterConversation',\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/api/conversation-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/layout/auth-layout.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/layout/sidebar-layout.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/layout/default-layout.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/layout/customer-layout.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/layout/base-layout.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/configs/vars.ts",["1614","1615","1616","1617","1618"],"export const API_URI = <string>process.env.REACT_APP_API_URI;\nexport const NOTIFICATION_SERVER_URI = <string>process.env.REACT_APP_NOTIFICATION_SERVER_URI;\nexport const FACEBOOK_APP_ID = <string>process.env.REACT_APP_FACEBOOK_APP_ID;\nexport const FACEBOOK_SCOPE =\n    'pages_manage_metadata,pages_read_engagement,pages_read_user_content,pages_messaging,pages_manage_engagement,pages_manage_posts,pages_show_list';\n\nexport const GOOGLE_APP_ID = <string>process.env.REACT_APP_GOOGLE_APP_ID;\nexport const SOCIAL_NETWORK_PATH = '/social-network';\nexport const SOCIAL_NETWORK_VER = 'v1';\n\nexport const IMG_URL = <string>process.env.REACT_APP_IMG_URL;\n\nif (!API_URI || !NOTIFICATION_SERVER_URI || !FACEBOOK_SCOPE || !IMG_URL)\n    throw new Error('Missing required env');\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/fanpageState/fanpageReducer.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/authState/authReducer.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/app-router/auth-router.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/th.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/collections/facebook-conversation.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/container/index.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/connect-facebook/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/not-found/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/create-store/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/login/index.tsx",["1619"],"import * as queryString from 'query-string';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Loading } from '../../components';\nimport constants from '../../constants';\nimport { AuthLayout } from '../../layout';\n\nconst title = 'Đăng nhập';\n\nfunction Login(): JSX.Element {\n    const location = useLocation();\n    const isLogout = useSelector(({ auth }: any) => auth.isLogout);\n\n    useEffect(() => {\n        const lastState: any = location.state;\n        let lastLocation = lastState?.from;\n        if (!lastLocation?.pathname) {\n            lastLocation = {\n                pathname: '/',\n            };\n        }\n        const search = queryString.stringify({\n            url: `${window.location.origin}/save-token`,\n            location: JSON.stringify(lastLocation),\n            isLogout,\n            guest: lastState?.guest,\n            saleChannel: 'facebook',\n        });\n\n        window.location.href = `${constants.URL_AUTH}login?${search}`;\n    }, []);\n\n    return (\n        <AuthLayout title={title}>\n            <Loading full />\n        </AuthLayout>\n    );\n}\n\nexport default Login;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customer/index.tsx",["1620"],"import { filter } from 'lodash';\nimport React, { FC, lazy, Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { HeaderCustomer, Loading } from '../../components';\nimport { BaseLayout } from '../../layout';\nimport { isActivePage, loadFanpageAction } from '../../reducers/fanpageState/fanpageAction';\nimport { IFacebookState } from '../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../reducers/storeState/storeReducer';\nimport ConnectFacebookCard from '../connect-facebook/connect-facebook-card';\nimport HeaderRight from '../../components/header-customer/header-right';\nimport Socket from '../conversation/socket-handle';\nimport { ProviderNotification } from './notfication-context';\nimport './style.less';\nimport { ExpriedPackageContext } from './expried-package-context';\n\nconst Conversation = lazy(() => import('../conversation'));\nconst LiveStream = lazy(() => import('../live-stream'));\nconst Report = lazy(() => import('../report'));\nconst Products = lazy(() => import('../products'));\nconst Order = lazy(() => import('../orders'));\nconst OrderDraft = lazy(() => import('../orders-draft'));\nconst SelectPages = lazy(() => import('../select-pages'));\nconst Other = lazy(() => import('../other'));\n\nconst Customer: FC = (): JSX.Element => {\n    const dispatch = useDispatch();\n    const { path } = useRouteMatch();\n\n    const pages = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.pages);\n    const allPages = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.allPages);\n    const loading = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.loading);\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    useEffect(() => {\n        dispatch(loadFanpageAction());\n    }, []);\n\n    const renderRouter = () => {\n        if (!store) {\n            return <Redirect to='/create-store' />;\n        }\n\n        if (!loading && !Object.keys(allPages).length) {\n            return (\n                <BaseLayout>\n                    <div className='main'>\n                        <HeaderRight title='' />\n\n                        <div className='card-connect-fb content'>\n                            <ConnectFacebookCard />\n                        </div>\n                    </div>\n                </BaseLayout>\n            );\n        }\n\n        const activePages = filter(pages, (page) => isActivePage(page));\n\n        if (activePages.length === 0) {\n            return <SelectPages />;\n        }\n\n        return (\n            <ProviderNotification>\n                <Switch>\n                    <Redirect path={`${path}`} to={`${path}/conversation`} exact />\n                    <Route path={`${path}/conversation`} component={Conversation} />\n                    <Route path={`${path}/livestream`} component={LiveStream} />\n                    <Route path={`${path}/report`} component={Report} />\n                    <Route path={`${path}/products`} component={Products} />\n                    <Route path={`${path}/select-pages`} component={SelectPages} />\n                    <Route path={`${path}/other`} component={Other} />\n\n                    <Route path={`${path}/order`} component={Order} />\n                    <Route path={`${path}/order-draft`} component={OrderDraft} />\n\n                    <Redirect to='/page-not-found' />\n                </Switch>\n                <Socket />\n            </ProviderNotification>\n        );\n    };\n\n    if (loading) return <Loading full />;\n\n    return (\n        <ExpriedPackageContext>\n            <div className='customer-wrap'>\n                <HeaderCustomer />\n\n                <Suspense fallback={<Loading full />}>{renderRouter()}</Suspense>\n            </div>\n        </ExpriedPackageContext>\n    );\n};\n\nexport default Customer;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/components/tag-filter/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/text-ellipsis/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/input-number/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/login-facebook-btn/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/login-google-btn/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/image/index.tsx",["1621","1622","1623"],"import { CheckOutlined, CloseCircleFilled, StarFilled } from '@ant-design/icons';\nimport { message } from 'antd';\nimport React, { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { removeImageRequest, updateImageRequest } from '../../api/images-api';\nimport { IImage } from '../../collections/image';\nimport { IMG_URL } from '../../configs/vars';\nimport { removeImage, toggleBookmark } from '../../reducers/imagesState/imagesAction';\nimport './style.less';\n\ninterface Props {\n    image: IImage;\n    select?: boolean;\n    handleSelect: (id: string) => void;\n    removeSelect: (id: string) => void;\n}\n\nconst Image: FC<Props> = ({ image, select = false, handleSelect, removeSelect }) => {\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n\n    const onSelect = () => {\n        if (select) {\n            removeSelect(image.key);\n        } else {\n            handleSelect(image.key);\n        }\n    };\n\n    const handleRemoveImage = async () => {\n        setLoading(true);\n\n        try {\n            const response = await removeImageRequest({\n                token: token.accessToken,\n                storeId: store._id,\n                imageId: image._id,\n            });\n\n            dispatch(removeImage(image._id));\n\n            message.success('Đã xóa hình ảnh');\n        } catch (error) {\n            message.error('Lỗi xóa hình ảnh');\n        }\n    };\n\n    const likeImage = async () => {\n        const messageSuccess = image.star ? 'Đã xóa khỏi yêu thích' : 'Đã thêm vào yêu thích';\n        const messageError = image.star ? 'Lỗi xóa khỏi yêu thích' : 'Lỗi thêm vào yêu thích';\n        try {\n            const response = await updateImageRequest({\n                token: token.accessToken,\n                storeId: store._id,\n                imageId: image._id,\n                data: {\n                    star: !image.star,\n                },\n            });\n\n            dispatch(toggleBookmark(image._id));\n\n            message.success(messageSuccess);\n        } catch (error) {\n            message.error(messageError);\n        }\n    };\n\n    const bookmarkClass = image.star ? 'bookmark star' : 'bookmark';\n    const color_star = image.star ? 'yellow' : 'gray';\n\n    return (\n        <div className='image' style={{ backgroundImage: `url(${IMG_URL}${image.key})` }}>\n            <div className='gray' onClick={onSelect} />\n            {select && (\n                <div className='select' onClick={onSelect}>\n                    <CheckOutlined style={{ color: '#fff' }} />\n                </div>\n            )}\n\n            <div className='remove' onClick={handleRemoveImage}>\n                <CloseCircleFilled />\n            </div>\n            <div className={bookmarkClass} onClick={likeImage}>\n                <StarFilled style={{ color: color_star }} />\n            </div>\n\n            <div className='name'>{image.name}</div>\n        </div>\n    );\n};\n\nexport default Image;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/components/upload-image/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/scrollbars/index.tsx",["1624"],"import React from 'react';\nimport Scrollbars from 'react-custom-scrollbars';\n\ninterface IProps {\n    children: JSX.Element;\n    [propsName: string]: any;\n}\n\nexport default ({ children, ...rest }: IProps): JSX.Element => {\n    return (\n        <Scrollbars autoHide autoHideTimeout={1000} autoHideDuration={200} {...rest}>\n            {children}\n        </Scrollbars>\n    );\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/components/logo/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/loading/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/header-customer/index.tsx",["1625","1626"],"import { Layout, Menu } from 'antd';\nimport React, { FC, ReactElement, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n    BoxIcon,\n    CameraIcon,\n    CartIcon,\n    ChartIcon,\n    ChatGroupIcon,\n    DoubleLeftIcon,\n    DoubleRightIcon,\n    OtherIcon,\n    OrderDraftIcon,\n} from '../../assets/icon';\nimport Logo from '../logo';\nimport { Scrollbars } from '../index';\nimport constants from '../../constants';\n\nimport './header.less';\n\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\ninterface MenuItem {\n    path?: string;\n    title: string;\n    icon?: ReactElement;\n    key: string;\n    sub_menu?: boolean;\n    hide?: boolean;\n    parent?: string;\n}\n\nconst initialCollapsed = (): boolean => {\n    const collapsed_local = localStorage.getItem('collapsed_local');\n    if (!collapsed_local) return false;\n\n    return JSON.parse(collapsed_local);\n};\n\nconst CustomerHeader: FC = (): JSX.Element => {\n    const store = useSelector((state: any) => state.store.store);\n    const location = useLocation();\n\n    const [keys, setKeys] = useState<string[]>(['1']);\n    const [collapsed, setCollapsed] = useState<boolean>(initialCollapsed());\n\n    const menuSidebar: MenuItem[] = [\n        {\n            path: '/customer/conversation',\n            title: 'Hội thoại',\n            icon: <ChatGroupIcon className='icon' style={{ fontSize: 22 }} />,\n            key: '1',\n        },\n        {\n            path: '/customer/livestream',\n            title: 'Bán hàng livestream',\n            icon: <CameraIcon className='icon' style={{ fontSize: 15 }} />,\n            key: '2',\n            hide: !process.env.REACT_APP_SHOW_LIVESTREAM,\n        },\n        {\n            title: 'Báo cáo',\n            icon: <ChartIcon className='icon' style={{ fontSize: 22 }} />,\n            key: '4',\n            sub_menu: true,\n            hide: !store || store.role >= 2,\n        },\n        { key: '4.1', parent: '4', title: 'Tương tác', path: '/customer/report/conversation' },\n        { key: '4.2', parent: '4', title: 'Nhãn hội thoại', path: '/customer/report/label' },\n        { key: '4.3', parent: '4', title: 'Doanh thu', path: '/customer/report/revenue' },\n        {\n            title: 'Cài đặt',\n            path: '/customer/other/setting',\n            icon: <OtherIcon className='icon' style={{ fontSize: 18 }} />,\n            key: '5',\n            hide: !store || store.role >= 2,\n        },\n        {\n            title: 'Cửa hàng',\n            icon: <CartIcon className='icon' />,\n            key: 'core',\n        },\n    ];\n\n    const convertUrlToKey = (url: string) => {\n        if (url && url.indexOf('/customer/order/') !== -1) {\n            return ['3'];\n        }\n        if (url && url.indexOf('/customer/livestream') !== -1) {\n            return ['2'];\n        }\n\n        switch (url) {\n            case '/customer/conversation':\n                return ['1'];\n            case '/customer/livestream/scripts':\n                return ['2'];\n            case '/customer/other/warehouse':\n                return ['3'];\n            case '/customer/report/conversation':\n                return ['4', '4.1'];\n            case '/customer/report/label':\n                return ['4', '4.2'];\n            case '/customer/report/revenue':\n                return ['4', '4.3'];\n            case '/customer/other/setting':\n                return ['5'];\n            default:\n                return ['0'];\n        }\n    };\n\n    useEffect(() => {\n        setKeys(convertUrlToKey(location.pathname));\n    }, [location]);\n\n    const onSelect = ({ _, key }: any) => {\n        setKeys(key);\n    };\n\n    const onCollapse = (value: boolean) => {\n        localStorage.setItem('collapsed_local', JSON.stringify(value));\n        setCollapsed(value);\n    };\n\n    return (\n        <Layout className='header-customer'>\n            <Sider\n                trigger={collapsed ? <DoubleRightIcon /> : <DoubleLeftIcon />}\n                className='sidebar'\n                width={250}\n                collapsible\n                collapsed={collapsed}\n                onCollapse={onCollapse}\n                style={{\n                    overflow: 'inherit',\n                }}\n            >\n                <div className={collapsed ? 'logo collapsed' : 'logo'}>\n                    <Logo type='light' short={collapsed} />\n                </div>\n\n                <Scrollbars\n                    style={{ width: 250 }}\n                    renderThumbVertical={(props: any) => (\n                        <div {...props} className='thumb-vertical' />\n                    )}\n                >\n                    <Menu selectedKeys={keys} mode='inline' onSelect={onSelect}>\n                        {menuSidebar.map((menu: MenuItem) => {\n                            if (menu.parent) return null;\n                            if (menu.hide) return null;\n                            if (menu.sub_menu) {\n                                const menu_childs = menuSidebar.filter(\n                                    (item) => item.parent === menu.key\n                                );\n                                return (\n                                    <SubMenu\n                                        key={menu.key}\n                                        icon={menu.icon}\n                                        title={menu.title}\n                                        popupClassName='header-customer-sub'\n                                    >\n                                        {menu_childs.map((item: any) => (\n                                            <Menu.Item key={item.key}>\n                                                <Link to={item.path}>{item.title}</Link>\n                                            </Menu.Item>\n                                        ))}\n                                    </SubMenu>\n                                );\n                            }\n\n                            return (\n                                <Menu.Item key={menu.key}>\n                                    { menu.key !== 'core' ?\n                                        <Link to={menu.path as string}>\n                                            {menu.icon}\n\n                                            <span>{menu.title}</span>\n                                        </Link> :\n                                        <Link\n                                            to={location => location.pathname}\n                                            onClick={() => window.open(constants.URL_STORE, '_blank')}\n                                        >\n                                            {menu.icon}\n\n                                            <span>{menu.title}</span>\n                                        </Link>\n                                    }\n                                </Menu.Item>\n                            );\n                        })}\n                    </Menu>\n                </Scrollbars>\n            </Sider>\n        </Layout>\n    );\n};\n\nexport default CustomerHeader;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/components/error-boundary/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/footer/index.tsx",["1627","1628","1629","1630","1631","1632","1633","1634","1635","1636","1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656"],"import React from 'react';\nimport './style.less';\n\nimport facebook from './facebook.png';\nimport google from './google.png';\nimport twitter from './twitter.png';\nimport zalo from './zalo.png';\n\nfunction Footer(): JSX.Element {\n    return (\n        <footer className='footer'>\n            <div className='container'>\n                <div className='footer-top'>\n                    <div className='row'>\n                        <div className='footer-col'>\n                            <div className='heading'>\n                                <h4>DOANH NGHIỆP</h4>\n                            </div>\n\n                            <ul>\n                                <li>\n                                    <a href=''>Về INSA</a>\n                                </li>\n                                <li>\n                                    <a href=''>Khách hàng</a>\n                                </li>\n                                <li>\n                                    <a href=''>Điều khoảng sử dụng</a>\n                                </li>\n                                <li>\n                                    <a href=''>Chính sách bảo mật</a>\n                                </li>\n                                <li>\n                                    <a href=''>Liên hệ</a>\n                                </li>\n                            </ul>\n                        </div>\n                        <div className='footer-col'>\n                            <div className='heading'>\n                                <h4>NGÀNH HÀNG</h4>\n                            </div>\n\n                            <ul>\n                                <li>\n                                    <a href=''>Cửa hàng thời trang</a>\n                                </li>\n                                <li>\n                                    <a href=''>Cửa hàng thực phẩm</a>\n                                </li>\n                                <li>\n                                    <a href=''>Điện thoại & điện máy</a>\n                                </li>\n                                <li>\n                                    <a href=''>Cửa hàng tạp hóa</a>\n                                </li>\n                                <li>\n                                    <a href=''>Cửa hàng mỹ phẩm</a>\n                                </li>\n                                <li>\n                                    <a href=''>Hoa & quà tặng</a>\n                                </li>\n                                <li>\n                                    <a href=''>Siêu thị mini</a>\n                                </li>\n                                <li>\n                                    <a href=''>Cửa hàng mẹ và bé</a>\n                                </li>\n                                <li>\n                                    <a href=''>Cửa hàng đồ chơi</a>\n                                </li>\n                                <li>\n                                    <a href=''>Bar, Café & Nhà hàng Karaoke</a>\n                                </li>\n                                <li>\n                                    <a href=''>Xe, máy móc & linh kiện sửa chửa</a>\n                                </li>\n                                <li>\n                                    <a href=''>Sách & văn phòng phẩm</a>\n                                </li>\n                                <li>\n                                    <a href=''>Vật liệu xây dựng</a>\n                                </li>\n                                <li>\n                                    <a href=''>Nội thất và gia dụng</a>\n                                </li>\n                                <li>\n                                    <a href=''>Ngành hàng khác</a>\n                                </li>\n                            </ul>\n                        </div>\n\n                        <div className='footer-col'>\n                            <div className='heading'>\n                                <h4>HỖ TRỢ</h4>\n                            </div>\n                            <ul>\n                                <li>\n                                    <a href=''>Video hướng dẫn sử dụng</a>\n                                </li>\n                                <li>\n                                    <a href=''>Câu hỏi thường gặp</a>\n                                </li>\n                                <li>\n                                    <a href=''>Wiki Insa</a>\n                                </li>\n                                <li>\n                                    <a href=''>Blog</a>\n                                </li>\n                                <li>\n                                    <a href=''>Hướng dẫn sử dụng</a>\n                                </li>\n                                <li>\n                                    <a href=''>Thông tin cập nhật Insa</a>\n                                </li>\n                            </ul>\n                        </div>\n                        {/* <div className='footer-col'>\n                            <div className='heading'>\n                                <h4>LIÊN HỆ</h4>\n                            </div>\n                            <ul>\n                                <li>Hotline</li>\n                                <li>Tư vấn bán hàng:</li>\n                                <li className='blue-text'>\n                                    <a className='blue-text'>1900 1020</a>\n                                </li>\n                                <li>Chăm sóc khách hàng:</li>\n                                <li className='blue-text'>\n                                    <a className='blue-text'>1900 2356</a>\n                                </li>\n                                <li>\n                                    Email:\n                                    <a className='blue-text' href='mailto:support@insa.app'>\n                                        support@insa.app\n                                    </a>\n                                </li>\n                                <li>MẠNG XÃ HỘI:</li>\n                                <li>\n                                    <a className='social'>\n                                        <img src={facebook} alt='facebook' />\n                                    </a>\n                                    <a className='social'>\n                                        <img src={twitter} alt='twitter' />\n                                    </a>\n                                    <a className='social'>\n                                        <img src={google} alt='google' />\n                                    </a>\n                                    <a className='social'>\n                                        <img src={zalo} alt='zalo' />\n                                    </a>\n                                </li>\n                            </ul>\n                        </div> */}\n                    </div>\n                </div>\n                <div className='footer-bottom'>\n                    <span>© GCO GROUP 2018. All rights reserved</span>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/imagesState/imagesAction.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/images-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/slack-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/header-large.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/header-mobile.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/connect-facebook/connect-facebook-card.tsx",["1657"],"import { FacebookFilled } from '@ant-design/icons';\nimport { Alert, Button, Card } from 'antd';\nimport React, { FC, useState, useEffect } from 'react';\nimport ReactFacebookLogin from 'react-facebook-login';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { FACEBOOK_APP_ID, FACEBOOK_SCOPE } from '../../configs/vars';\nimport { connectFanpageAction } from '../../reducers/fanpageState/fanpageAction';\nimport fanpageTypes from '../../reducers/fanpageState/fanpageTypes';\nimport { useLocation } from 'react-router-dom';\n\nconst ConnectFacebookCard: FC = (): JSX.Element => {\n    let location = useLocation();\n\n    const [loading, setLoading] = useState<boolean>(false);\n    const dispatch = useDispatch();\n    const error = useSelector((state: any) => state.fanpage.error);\n\n    const handleConnnectFanpage = async (response: any = {}) => {\n        setLoading(true);\n\n        const { accessToken } = response;\n        await dispatch(connectFanpageAction({ shortLiveToken: accessToken }));\n        setLoading(false);\n    };\n\n    const removeError = () => {\n        dispatch({ type: fanpageTypes.REMOVE_ERROR_LOAD_FANPAGES });\n    };\n\n    useEffect(() => {\n        removeError();\n    }, [location]);\n\n    const cssClass = 'ant-btn ant-btn-primary ant-btn-lg ant-btn-block';\n    return (\n        <div style={{ maxWidth: 350, width: '100%' }}>\n            {error && (\n                <Alert\n                    message='Lỗi kết nối'\n                    description='Tài khoản facebook đã được sử dụng, vui lòng chọn tài khoản khác'\n                    type='error'\n                    showIcon\n                    closable\n                    onClose={removeError}\n                />\n            )}\n\n            <Card style={{ width: 350 }}>\n                <div style={{ textAlign: 'center', marginBottom: 30 }}>\n                    <h3 className='title-form'>Kết nối fanpage</h3>\n\n                    <p>Bạn cần kết nối với facebook để sử dụng</p>\n                </div>\n                {loading ? (\n                    <Button type='primary' block size='large' loading>\n                        Đang kết nối với facebook\n                    </Button>\n                ) : (\n                    <ReactFacebookLogin\n                        appId={FACEBOOK_APP_ID}\n                        icon={<FacebookFilled />}\n                        size='small'\n                        textButton=' Kết nối fanpage'\n                        autoLoad={false}\n                        fields='name,email,picture'\n                        scope={FACEBOOK_SCOPE}\n                        callback={handleConnnectFanpage}\n                        cssClass={cssClass}\n                        isMobile\n                        disableMobileRedirect\n                    />\n                )}\n            </Card>\n        </div>\n    );\n};\n\nexport default ConnectFacebookCard;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/components/header-customer/header-right.tsx",["1658"],"import { UserOutlined } from '@ant-design/icons';\nimport { Avatar, Col, Dropdown, Menu } from 'antd';\nimport { isNil } from 'lodash';\nimport React, { FC } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useExpriedPackage } from '../../pages/customer/expried-package-context';\nimport { logout } from '../../reducers/authState/authAction';\nimport { connectFanpageAction } from '../../reducers/fanpageState/fanpageAction';\nimport BannerNotifyPackageTrial from '../banner-notify-package';\nimport BannerNotifyPackage from '../banner-notify-package/banner-package';\nimport './header-right.less';\nimport rectangle from './images/rectangle-4-copy.png';\ninterface Props {\n    isAuth: boolean;\n    user: any;\n    pages: any;\n    loadingPages: any;\n    logout: any;\n    connectFanpageAction: any;\n    title?: string;\n    children?: any | null;\n}\n\nconst HeaderRight: FC<Props> = ({\n    isAuth,\n    user = {},\n    pages = {},\n    loadingPages,\n    logout,\n    connectFanpageAction,\n    title,\n    children,\n}): JSX.Element => {\n    let menu: Array<any> = [];\n    const store = useSelector((state: any) => state.store.store);\n    const userName = useSelector((state: any) => state.auth.user);\n   \n    const {\n        isExpired,\n        isTrial,\n        handleCloseBannerTrial,\n        handleCloseBannerFacebook,\n        expiredPackage,\n        listNamePackage,\n        expiredTrial,\n    } = useExpriedPackage();\n\n    if (isAuth) {\n        menu.push(\n            {\n                name: 'Trang quản lý',\n                link: '/customer/conversation',\n            },\n            {\n                name: 'Chọn lại trang',\n                link: '/customer/select-pages',\n            },\n            {\n                name: 'Đăng xuất',\n                link: '/login',\n                action: () => logout(),\n            },\n        );\n        if (store.role >= 1) {\n            menu = menu.filter((item) => item.link !== '/customer/select-pages');\n        }\n    } else {\n        menu.push({\n            name: 'Đăng nhập',\n            link: '/login',\n        });\n    }\n\n    const menuDropdown = (\n        <Menu>\n            {menu.map((item, key) => (\n                <Menu.Item key={key.toString()} onClick={item.action && item.action}>\n                    <Link to={item.link}>{item.name}</Link>\n                </Menu.Item>\n            ))}\n        </Menu>\n    );\n\n    return (\n        <>\n            <div>\n                <Col>\n                    {isTrial && (\n                        <BannerNotifyPackageTrial\n                            expiredAtPackage={expiredTrial}\n                            isExpired={isTrial}\n                            handleCloseBanner={handleCloseBannerTrial}\n                        />\n                    )}\n                    {isExpired && (\n                        <BannerNotifyPackage\n                            expired={expiredPackage}\n                            isExpired={isExpired}\n                            handleCloseBanner={handleCloseBannerFacebook}\n                            namePackage={\n                                listNamePackage?.length > 0 ? listNamePackage?.join(' ,') : ''\n                            }\n                        />\n                    )}\n                </Col>\n            </div>\n            <div className='header-right'>\n                {!isNil(title) ? <div className='title'>{title}</div> : children}\n                <Dropdown\n                    overlayClassName='dropdown-active'\n                    overlay={menuDropdown}\n                    trigger={['click']}\n                    placement='bottomRight'\n                >\n                    <div className='user-dropdown'>\n                        <div className=\"infor-user \">\n                            <span className='store-user'>{store.name}</span>\n                            <span className='name-user'>{userName.name}</span>\n                        </div>\n                        <Avatar\n                            className='avatar'\n                            icon={<UserOutlined />}\n                            size={43}\n                            src={user.picture}\n                        />\n                    </div>\n                </Dropdown>\n            </div>\n        </>\n    );\n};\n\nconst enhance = connect(\n    ({ auth, fanpage }: any) => ({\n        isAuth: auth.isAuth,\n        user: auth.user,\n        pages: fanpage.pages,\n        loadingPages: fanpage.loading,\n    }),\n    { logout, connectFanpageAction },\n);\n\nexport default enhance(HeaderRight);\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/create-store/create-store-form.tsx",["1659","1660"],"import { Button, Col, Form, Input, message, Row, Select } from 'antd';\nimport { push } from 'connected-react-router';\nimport { map } from 'lodash';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { connectFanpageApi } from '../../api/fanpage';\nimport locationApi from '../../api/location-api';\nimport storeApi from '../../api/store-api';\nimport { Loading } from '../../components';\nimport useHiddenModalExpired from '../../hooks/use-hidden-modal-expired';\nimport { IAuthState } from '../../reducers/authState/authReducer';\nimport { loadFanpageAction } from '../../reducers/fanpageState/fanpageAction';\nimport types from '../../reducers/fanpageState/fanpageTypes';\nimport { addStore, updateStore } from '../../reducers/storeState/storeAction';\nimport { disabledAutosuggestion } from '../../utils/disabled-autosuggestion';\n\nconst size = 'large';\nconst style = { width: '100%' };\n\nexport interface Province {\n    code: string;\n    name: string;\n    name_with_type: string;\n    slug: string;\n    type: string;\n}\n\nexport interface District {\n    code: string;\n    name: string;\n    name_with_type: string;\n    parent_code: string;\n    path: string;\n    path_with_type: string;\n    slug: string;\n    type: string;\n}\nexport interface Ward {\n    code: string;\n    name: string;\n    name_with_type: string;\n    parent_code: string;\n    path: string;\n    path_with_type: string;\n    slug: string;\n    type: string;\n}\n\ninterface Props {\n    toggleLoading?: (boolean: boolean) => void;\n}\n\nconst CreateStoreForm: FC<Props> = ({ toggleLoading = () => {} }): JSX.Element => {\n    const loadingStore = useSelector((state: any) => state.store.loading);\n    const [loadingConnect, setLoadingConnect] = useState(false);\n    const store = useSelector((state: any) => state.store.store);\n\n    const [form] = Form.useForm();\n\n    const [provinceId, setProvinceId] = useState<string | undefined>(\n        store ? `${store.province}` : undefined,\n    );\n    const [provinces, setProvinces] = useState<Province[]>([]);\n\n    const [districtId, setDistrictId] = useState<string | undefined>(\n        store ? `${store.district}` : undefined,\n    );\n    const [districts, setDistricts] = useState<District[]>([]);\n\n    const [wards, setWards] = useState<District[]>([]);\n\n    const [loading, setLoading] = useState<boolean>(false);\n    const [loadingProvince, setLoadingProvince] = useState<boolean>(true);\n    const [loadingDistrict, setLoadingDistrict] = useState<boolean>(false);\n    const [loadingWard, setLoadingWard] = useState<boolean>(false);\n    const dispatch = useDispatch();\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n    const { hiddenModalExpired } = useHiddenModalExpired();\n\n    const addNewStore = async (values: any) => {\n        try {\n            toggleLoading(true);\n            const resCreateStore = await storeApi.createStore({\n                token: token.accessToken,\n                name: values.name,\n                address: values.address,\n                province: values.province,\n                district: values.district,\n                ward: values.ward,\n                phoneNo: values.phoneNo,\n            });\n\n            dispatch(addStore({ ...resCreateStore, role: 0 }));\n\n            const shortLiveToken = localStorage.getItem('shortLiveToken');\n\n            if (shortLiveToken) {\n                try {\n                    const resConnectFanpage = await connectFanpageApi({\n                        payload: { shortLiveToken },\n                        storeId: resCreateStore._id,\n                        token: token.accessToken,\n                    });\n                    dispatch({\n                        type: types.CONNECT_FANPAGE_SUCCESSS,\n                        payload: resConnectFanpage.data,\n                    });\n\n                    dispatch(loadFanpageAction());\n                    localStorage.removeItem('shortLiveToken');\n                    setLoading(false);\n                    dispatch(push('/customer'));\n                    message.success('Đã tạo xong cửa hàng');\n                    setLoadingConnect(false);\n                } catch (e) {\n                    toggleLoading(false);\n                    dispatch({\n                        type: types.CONNECT_FANPAGE_FAILED,\n                    });\n                }\n            } else {\n                dispatch(loadFanpageAction());\n                setLoading(false);\n                dispatch(push('/customer'));\n                message.success('Đã tạo xong cửa hàng');\n                setLoadingConnect(false);\n            }\n            toggleLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n\n    const editStore = async (values: any) => {\n        try {\n            const response = await storeApi.editStore({\n                storeId: store._id,\n                token: token.accessToken,\n                data: values,\n            });\n\n            dispatch(updateStore(response));\n            setLoading(false);\n            message.success('Đã cập nhật cửa hàng');\n        } catch (error) {\n            setLoading(false);\n            message.error('Lỗi cập nhật cửa hàng');\n        }\n    };\n\n    const onFinish = async (values: any) => {\n        setLoading(true);\n\n        if (store && store) {\n            editStore(values);\n        } else {\n            addNewStore(values);\n        }\n    };\n\n    const validatePhone = (_: any, value: any, callback: any) => {\n        if (value) {\n            const vnf_regex = /^(0|\\+84)(9|3|7|8|5){1}([0-9]{8})$/g;\n            if (vnf_regex.test(value) === false) {\n                callback('Vui lòng nhập số điện thoại hợp lệ');\n            } else {\n                callback();\n            }\n        } else {\n            callback();\n        }\n    };\n\n    const selectProvince = (value: any) => {\n        setProvinceId(value);\n        setDistrictId(undefined);\n\n        form.setFieldsValue({\n            district: undefined,\n            ward: undefined,\n        });\n    };\n\n    const selectDistrict = (value: any) => {\n        setDistrictId(value);\n        setWards([]);\n        form.setFieldsValue({\n            ward: undefined,\n        });\n    };\n\n    useEffect(() => {\n        if (store) {\n            setProvinceId(`${store.province}`);\n            setDistrictId(`${store.district}`);\n        }\n    }, [store]);\n\n    useEffect(() => {\n        const fixAutocomplete = () => {\n            document.querySelectorAll('.ant-select-selector input').forEach((e) => {\n                e.setAttribute('autocomplete', 'stopDamnAutocomplete');\n            });\n        };\n\n        fixAutocomplete();\n    }, []);\n\n    useEffect(() => {\n        const initialValues = {\n            province: '-1',\n            district: '-1',\n            ward: '-1',\n        };\n\n        if (store) {\n            form.setFieldsValue(store);\n        } else {\n            form.setFieldsValue(initialValues);\n        }\n    }, []);\n\n    useEffect(() => {\n        async function getListProvinces() {\n            try {\n                const response = await locationApi.getProvinces();\n                setProvinces(response);\n                setLoadingProvince(false);\n            } catch (error) {\n                setProvinces([]);\n                setLoadingProvince(false);\n            }\n        }\n        getListProvinces();\n    }, []);\n\n    useEffect(() => {\n        async function getListDistricts() {\n            if (!provinceId) return null;\n            setLoadingDistrict(true);\n            try {\n                const response = await locationApi.getDistricts(provinceId);\n                setDistricts(response);\n                setLoadingDistrict(false);\n            } catch (error) {\n                setDistricts([]);\n                setLoadingDistrict(false);\n            }\n        }\n        getListDistricts();\n    }, [provinceId]);\n\n    useEffect(() => {\n        async function getListWard() {\n            if (!districtId) return null;\n            setLoadingWard(true);\n            try {\n                const response = await locationApi.getWards({\n                    provinceId,\n                    districtId,\n                });\n                setWards(response);\n                setLoadingWard(false);\n            } catch (error) {\n                setWards([]);\n                setLoadingWard(false);\n            }\n        }\n        getListWard();\n    }, [districtId]);\n\n    if (loadingStore) return <Loading full />;\n\n    const initialValues = {\n        name: store ? store.name : '',\n        phoneNo: store ? store.phoneNo : '',\n        province: store ? `${store.province}` : '',\n        district: store ? `${store.district}` : '',\n        ward: store ? `${store.ward}` : '',\n        address: store ? store.address : '',\n    };\n\n    if (loadingConnect) {\n        return <Loading full />;\n    }\n\n    return (\n        <Form layout='vertical' form={form} onFinish={onFinish} initialValues={initialValues}>\n            <Form.Item\n                name='name'\n                label='Tên cửa hàng'\n                rules={[{ required: true, message: 'Điền tên cửa hàng' }]}\n            >\n                <Input size={size} placeholder='Tên cửa hàng' autoFocus />\n            </Form.Item>\n\n            <Form.Item\n                name='phoneNo'\n                label='Số điện thoại'\n                rules={[\n                    { required: true, message: 'Điền số điện thoại' },\n                    {\n                        validator: validatePhone,\n                    },\n                ]}\n            >\n                <Input style={style} size={size} placeholder='Số điện thoại cửa hàng' />\n            </Form.Item>\n\n            <Row gutter={15}>\n                <Col md={8}>\n                    <Form.Item\n                        name='province'\n                        label='Tỉnh/thành phố'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Chọn tỉnh/thành phố',\n                            },\n                        ]}\n                    >\n                        <Select\n                            size={size}\n                            placeholder='Chọn tỉnh/thành phố'\n                            onChange={selectProvince}\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            loading={loadingProvince}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-1'} key={'-1'} disabled>\n                                Chọn tỉnh/thành phố\n                            </Select.Option>\n                            {map(provinces, (province: Province) => (\n                                <Select.Option value={province.code} key={province.code}>\n                                    {province.name}\n                                </Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                </Col>\n\n                <Col md={8}>\n                    <Form.Item\n                        name='district'\n                        label='Quận/huyện'\n                        rules={[{ required: true, message: 'Chọn quận/huyện' }]}\n                    >\n                        <Select\n                            size={size}\n                            placeholder='Chọn quận/huyện'\n                            onChange={selectDistrict}\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            value={districtId}\n                            disabled={!provinceId}\n                            loading={loadingDistrict}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-1'} key={'-1'} disabled>\n                                Chọn quận/huyện\n                            </Select.Option>\n                            {map(districts, (district: District) => (\n                                <Select.Option value={district.code} key={district.code}>\n                                    {district.name}\n                                </Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                </Col>\n\n                <Col md={8}>\n                    <Form.Item\n                        name='ward'\n                        label='Xã/phường'\n                        rules={[{ required: true, message: 'Chọn xã/phường' }]}\n                    >\n                        <Select\n                            size={size}\n                            placeholder='Chọn xã/phường'\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            disabled={!districtId}\n                            loading={loadingWard}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-1'} key={'-1'} disabled>\n                                Chọn xã/phường\n                            </Select.Option>\n                            {map(wards, (ward: Ward) => {\n                                return (\n                                    <Select.Option value={ward.code} key={ward.code}>\n                                        {ward.name}\n                                    </Select.Option>\n                                );\n                            })}\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n\n            <Form.Item\n                name='address'\n                rules={[{ required: true, message: 'Điền địa chỉ cửa hàng' }]}\n                label='Địa chỉ'\n            >\n                <Input.TextArea\n                    autoComplete='off'\n                    placeholder='Điền địa chỉ cửa hàng'\n                    rows={4}\n                ></Input.TextArea>\n            </Form.Item>\n\n            <Form.Item>\n                <Button\n                    type='primary'\n                    size={size}\n                    htmlType='submit'\n                    block\n                    loading={loading}\n                    disabled={\n                        hiddenModalExpired || (store ? (store.role !== 0 ? true : false) : false)\n                    }\n                >\n                    {store && store ? 'Cập nhật cửa hàng' : 'Tạo cửa hàng'}\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default CreateStoreForm;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customer/notfication-context.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customer/expried-package-context.tsx",["1661","1662"],"import { maxBy } from 'lodash';\nimport moment from 'moment';\nimport React, {\n    createContext,\n    FC,\n    useCallback,\n    useContext,\n    useEffect,\n    useMemo,\n    useState,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { AliasPackage, EBillingPackageType, getPackagesActive } from '../../api/billing-api';\nimport { IPackage } from '../../collections/billing';\nimport { checkWarningExpiration } from '../../utils/get-time';\n\ninterface Props {\n    children?: any | null;\n}\n\ninterface IPackageDetail {\n    active: boolean;\n    bonusPeriod: number;\n    createdAt: string;\n    expiredAt: string;\n    packageType: number;\n    paymentType: number;\n    period: number;\n    storeId: string;\n    total: number;\n    transactionCode: string;\n    updatedAt: string;\n    id: string;\n}\n\ninterface IContext {\n    isExpired: boolean;\n    isTrial: boolean;\n    handleCloseBannerTrial: React.Dispatch<any>;\n    handleCloseBannerFacebook: React.Dispatch<any>;\n    expiredPackage?: number;\n    listNamePackage: string[];\n    expiredTrial?: string;\n}\n\nconst initialContext = {\n    isExpired: false,\n    isTrial: false,\n    handleCloseBannerTrial: () => {},\n    handleCloseBannerFacebook: () => {},\n    expiredPackage: undefined,\n    listNamePackage: [],\n    expiredTrial: undefined,\n};\n\nconst Context = createContext<IContext>(initialContext);\n\nconst ExpriedPackageContext: FC<Props> = ({ children }): JSX.Element => {\n    const store = useSelector((state: any) => state.store.store);\n    const [isExpired, setIsExpired] = useState<boolean>(false);\n    const [expiredPackage, setExpiredPackage] = useState<number>();\n    const [listNamePackage, setListNamePackage] = useState<Array<string>>([]);\n    const [expiredTrial, setExpiredTrial] = useState<string>();\n    const [isTrial, setIsTrial] = useState<boolean>(false);\n\n    const handleCheckPackageType = (packages: IPackage[]) => {\n        packages.forEach((item: IPackageDetail) => {\n            if (item.packageType & EBillingPackageType.Trial) {\n                setIsTrial(checkWarningExpiration(item.expiredAt));\n                setExpiredTrial(item.expiredAt);\n                setIsExpired(false);\n            }\n        });\n    };\n\n    const handelGetMaxExpiredAt = (packages: IPackage[]) => {\n        let selectedRows: IPackage[] = [];\n        packages.filter((element: IPackageDetail) => {\n            if (\n                element.packageType & EBillingPackageType.Omni ||\n                element.packageType & EBillingPackageType.Trial ||\n                element.packageType & EBillingPackageType.Facebook\n            )\n                selectedRows.push(element);\n        });\n        const packageMaxExpired: IPackageDetail = maxBy(selectedRows, function (o) {\n            return Math.round(moment(o.expiredAt).diff(moment(), 'days', true));\n        });\n        setIsExpired(checkWarningExpiration(packageMaxExpired?.expiredAt));\n        setExpiredPackage(\n            Math.round(moment(packageMaxExpired?.expiredAt).diff(moment(), 'days', true)),\n        );\n        if (!checkWarningExpiration(packageMaxExpired?.expiredAt)) {\n            return;\n        }\n        let listName: Array<string> = [];\n        selectedRows.forEach((item: IPackageDetail) => {\n            if (item.packageType & EBillingPackageType.Omni) {\n                listName.push(AliasPackage[EBillingPackageType.Omni]);\n            }\n            if (item.packageType & EBillingPackageType.Facebook) {\n                listName.push(AliasPackage[EBillingPackageType.Facebook]);\n            }\n        });\n        setListNamePackage(listName);\n    };\n\n    const getPackages = async () => {\n        const packages: IPackage[] = await getPackagesActive(store._id);\n        handelGetMaxExpiredAt(packages);\n        handleCheckPackageType(packages);\n    };\n    useEffect(() => {\n        getPackages();\n    }, []);\n\n    const handleCloseBannerTrial = useCallback(() => {\n        setIsTrial(false);\n    }, []);\n\n    const handleCloseBannerFacebook = useCallback(() => {\n        setIsExpired(false);\n    }, []);\n\n    const values = useMemo(\n        () => ({\n            isExpired,\n            isTrial,\n            handleCloseBannerTrial,\n            handleCloseBannerFacebook,\n            expiredPackage,\n            listNamePackage,\n            expiredTrial,\n        }),\n        [\n            isExpired,\n            isTrial,\n            handleCloseBannerTrial,\n            handleCloseBannerFacebook,\n            expiredPackage,\n            listNamePackage,\n            expiredTrial,\n        ],\n    );\n\n    return <Context.Provider value={values}>{children}</Context.Provider>;\n};\n\nconst useExpriedPackage = () => {\n    const context = useContext(Context);\n\n    return { ...context };\n};\n\nexport { ExpriedPackageContext, useExpriedPackage };\n","/Users/mac3/Desktop/workspace/FacebookClient/src/hooks/use-modal.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/imgs-library.tsx",["1663","1664","1665","1666"],"import { CloseOutlined } from '@ant-design/icons';\nimport { Badge, Button, Col, Row } from 'antd';\nimport { get } from 'lodash';\nimport moment from 'moment';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateImageRequest } from '../../../api/images-api';\nimport { uploadImagesRequest } from '../../../api/upload-api';\nimport { IImage } from '../../../collections/image';\nimport { BtnUpload, Image, Loading } from '../../../components';\nimport { IMG_URL } from '../../../configs/vars';\nimport {\n    addImages,\n    fetchGallery,\n    fetchImages,\n    fetchImagesBookmark,\n    toggleBookmark,\n} from '../../../reducers/imagesState/imagesAction';\nimport AddCategoryImg from './add-category-img';\nimport AddImageGallery from './add-image-gallery';\nimport BtnActionImages from './btn-action-images';\nimport { useConversationDetail } from './context';\nimport GalleryItem from './gallery-item';\nimport './imgs-library.less';\nimport SearchImage from './search-image';\n\ninterface Props {\n    toggle: () => void;\n    affterClose?: () => void;\n    handleImageSelect: (images: IImage[], message?: any) => void;\n    type?: number;\n    imagesSeleted?: any[];\n}\n\nexport interface IGallery {\n    _id: string;\n    name: string;\n}\n\nconst ImgsLibrary: FC<Props> = ({\n    toggle,\n    affterClose,\n    handleImageSelect,\n    type,\n    imagesSeleted = [],\n}): JSX.Element => {\n    const dispatch = useDispatch();\n    const { setImageSend, ...state } = useConversationDetail();\n\n    const [loading, setLoading] = useState(false);\n    const [images_select, setImagesSelect] = useState<any[]>(() => {\n        if (imagesSeleted.length > 0) {\n            return imagesSeleted;\n        } else {\n            return state.images.map((image: IImage) => image.key);\n        }\n    });\n    const [todoGallery, setTodoGallery] = useState<IGallery | null | 'bookmark'>(null);\n    const [idImagesSelected, setIdImagesSelected] = useState<string[]>([]);\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n    const gallery = useSelector((state: any) => state.images.gallery);\n    const images = useSelector((state: any) => state.images.images);\n    const page: { fbObjectId: string; name: string } = useSelector(\n        ({ fanpage }: { fanpage: any }) => fanpage.page\n    );\n\n    const text_search = useSelector((state: any) => state.images.text_search);\n    const loadingImages = useSelector((state: any) => state.images.loading);\n\n    const handleUpload = async (e: any) => {\n        setLoading(true);\n        try {\n            const files = Array.from(e.target.files).map((file: any) => {\n                return file;\n            });\n            e.target.value = null;\n\n            const res = await uploadImagesRequest({\n                storeId: store._id,\n                galleryId: get(todoGallery, '_id'),\n                token: token.accessToken,\n                files,\n            });\n\n            if (Array.isArray(res)) {\n                dispatch(addImages(res));\n                if (todoGallery === 'bookmark') {\n                    for (const image of res) {\n                        await updateImageRequest({\n                            token: token.accessToken,\n                            storeId: store._id,\n                            imageId: image._id,\n                            data: {\n                                star: true,\n                            },\n                        });\n                        dispatch(toggleBookmark(image._id));\n                    }\n                }\n                setLoading(false);\n            } else {\n                setLoading(false);\n            }\n        } catch (error) {}\n    };\n\n    const handleSelect = (img: string) => {\n        setImagesSelect([...images_select, img]);\n    };\n\n    const removeSelect = (img: string) => {\n        const filterImgs = images_select.filter((i: string) => i !== img);\n        setImagesSelect(filterImgs);\n    };\n\n    const selectImageSend = () => {\n        const arr_images = filterInfoImages(images_select);\n        if (type === undefined) {\n            handleImageSelect(arr_images);\n        } else {\n            const messages = [];\n\n            for (let i = 0; i < arr_images.length; i++) {\n                let newMessage: any = {\n                    create_time: moment(new Date()).format(),\n                    from: {\n                        name: page.name,\n                        email: '',\n                        id: page.fbObjectId,\n                    },\n                    id: Date.now() + i,\n                    type,\n                };\n\n                if (type === 2) {\n                    newMessage.attachment = {\n                        type: 'photo',\n                        media: {\n                            image: {\n                                src: IMG_URL + arr_images[i].key,\n                            },\n                        },\n                    };\n                } else if (type === 1) {\n                    newMessage.attachments = {\n                        data: [{ image_data: { preview_url: IMG_URL + arr_images[i].key } }],\n                    };\n                }\n\n                messages.push(newMessage);\n            }\n\n            handleImageSelect(arr_images, messages);\n        }\n        toggle();\n    };\n\n    useEffect(() => {\n        dispatch(fetchGallery());\n    }, []);\n\n    useEffect(() => {\n        const arr_images = filterInfoImages(imagesSeleted);\n        setImagesSelect(arr_images.map((item: any) => item.key));\n    }, [images]);\n\n    useEffect(() => {\n        const ids = images\n            .filter((i: IImage) => images_select.includes(i.key))\n            .map((img: IImage) => img._id);\n        setIdImagesSelected(ids);\n    }, [images_select]);\n\n    useEffect(() => {\n        if (todoGallery && todoGallery !== 'bookmark') {\n            dispatch(fetchImages(todoGallery._id));\n        } else if (todoGallery === 'bookmark') {\n            // load message bookmar\n            dispatch(fetchImagesBookmark());\n        } else {\n            dispatch(fetchImages());\n        }\n    }, [todoGallery]);\n\n    const filterInfoImages = (tempData: any[]) => {\n        const arr_images = tempData\n            .map((imageId: string) => {\n                const image = images.find((i: IImage) => i.key === imageId);\n                if (!image) return null;\n                return image;\n            })\n            .filter((item) => !!item);\n        return arr_images;\n    };\n\n    const renderContent = () => {\n        if (loadingImages) {\n            return <Loading />;\n        }\n\n        if (images.length === 0) return <div></div>;\n\n        const filter_images = () => {\n            if (text_search.length === 0) return images;\n\n            return images.filter((image: IImage) => image.name.includes(text_search));\n        };\n\n        return (\n            <Row gutter={15}>\n                {filter_images().map((image: IImage) => {\n                    const select = images_select.includes(image.key);\n\n                    return (\n                        <Col key={image.key} style={{ marginBottom: 15 }}>\n                            <Image\n                                select={select}\n                                image={image}\n                                handleSelect={handleSelect}\n                                removeSelect={removeSelect}\n                            />\n                        </Col>\n                    );\n                })}\n            </Row>\n        );\n    };\n\n    const handelClickGallery = (item: IGallery) => {\n        setTodoGallery(item);\n    };\n\n    const elmGallery = () => {\n        return (gallery || []).map((item: IGallery) => {\n            return (\n                <GalleryItem\n                    key={item._id}\n                    active={\n                        todoGallery && todoGallery !== 'bookmark' && todoGallery._id === item._id\n                    }\n                    gallery={item}\n                    handelClickGallery={handelClickGallery}\n                />\n            );\n        });\n    };\n\n    const renderBadge = images_select.length > 0 && (\n        <Badge style={{ marginRight: 10 }} count={images_select.length} />\n    );\n\n    return (\n        <div className='imgs-library'>\n            <Row>\n                <Col span={6} className='imgs-col'>\n                    <div className='heading'>Danh mục</div>\n\n                    <div className='content'>\n                        <div className='listCate'>\n                            <div\n                                onClick={() => setTodoGallery(null)}\n                                className={`cate ${!todoGallery ? 'active' : ''}`}\n                            >\n                                <div className='inner'>Tất cả</div>\n                            </div>\n\n                            <div\n                                onClick={() => setTodoGallery('bookmark')}\n                                className={`cate ${todoGallery === 'bookmark' ? 'active' : ''}`}\n                            >\n                                <div className='inner'>Yêu thích</div>\n                            </div>\n\n                            {elmGallery()}\n                        </div>\n                    </div>\n                    <div className='footer-img' style={{ textAlign: 'center' }}>\n                        <AddCategoryImg />\n                    </div>\n                </Col>\n                <Col span={18} className='imgs-col'>\n                    <div className='heading'>\n                        <Row align='middle' justify='space-between' gutter={15}>\n                            <Col style={{ flex: 1 }}>\n                                <SearchImage gallery={todoGallery} />\n                            </Col>\n                            <Col>\n                                <CloseOutlined onClick={toggle} />\n                            </Col>\n                        </Row>\n                    </div>\n\n                    <div className='content'>{renderContent()}</div>\n\n                    <div className='footer-img'>\n                        <Row align='middle' gutter={15}>\n                            <Col>\n                                <BtnUpload loading={loading} multiple handleUpload={handleUpload} />\n                            </Col>\n                            {images_select.length > 0 && (\n                                <>\n                                    <Col>\n                                        <BtnActionImages\n                                            images={idImagesSelected}\n                                            action='remove'\n                                            callBack={() => setImagesSelect([])}\n                                        />\n                                    </Col>\n                                    <Col>\n                                        <AddImageGallery\n                                            images={idImagesSelected}\n                                            callBack={() => setImagesSelect([])}\n                                        />\n                                    </Col>\n                                </>\n                            )}\n                            <Col>\n                                <Button type='primary' onClick={selectImageSend}>\n                                    {renderBadge}\n                                    Gửi ảnh đã chọn\n                                </Button>\n                            </Col>\n                        </Row>\n                    </div>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default ImgsLibrary;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/api/gallery-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/theme/index.ts",["1667"],"export default {\n    color: {\n        primary: '#0199fc',\n        secondary: '#4267b2',\n        border: '#e9ebee',\n        light: '#f5f6f7',\n        sidebar: {\n            bg: '#5f6e86',\n            bg_hover: '#3d485a',\n            color: '#a3abbb',\n            color_hover: '#dcddec',\n        },\n        customer: {\n            trial: '#f50',\n            premium: '#87d068',\n        },\n    },\n    size: {\n        container: 1200,\n        space: 15,\n        borderRadius: 5,\n        header: 50,\n    },\n    font: {},\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/assets/icon/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/header-left.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/icon-menu.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/header-right.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/components/header/menu.tsx",["1668"],"import React from 'react';\nimport { Link } from 'react-scroll';\n\nimport { MenuLeftStyle } from './style';\n\nexport const menus = [\n    {\n        title: 'Tính năng',\n        href: 'tinh_nang',\n    },\n    {\n        title: 'Bảng giá',\n        href: 'bang_gia',\n    },\n    {\n        title: 'Quản lý bán hàng',\n        href: 'quan_ly_ban_hang',\n    },\n];\n\nexport interface MenuChildType {\n    href: string;\n    title: string;\n}\n\nconst Menu = () => {\n    return (\n        <ul className='main-menu'>\n            {menus.map((c: MenuChildType) => (\n                <li key={c.href}>\n                    <Link to={c.href} spy smooth duration={500} offset={0}>\n                        {c.title}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default Menu;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/api/location-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/billing-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/index.tsx",["1669"],"import { HomeOutlined } from '@ant-design/icons';\nimport { Button, Col, message, Modal, Row, Tooltip } from 'antd';\nimport { push } from 'connected-react-router';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPackagesActive } from '../../api/billing-api';\nimport { validateToken } from '../../api/fanpage';\nimport { IPackage } from '../../collections/billing';\nimport { LoginFacebookBtn } from '../../components';\nimport ExpiredStore from '../../components/expired-store';\nimport constants from '../../constants';\nimport { CustomerLayout } from '../../layout';\nimport { loginActionWithService } from '../../reducers/authState/authAction';\nimport { IAuthState } from '../../reducers/authState/authReducer';\nimport { IFacebookState } from '../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../reducers/storeState/storeReducer';\nimport { checkRestrictAction } from '../../utils/get-time';\nimport { useNotification } from '../customer/notfication-context';\nimport ConversationCustomer from './conversation-customer';\nimport ConversationDetail from './conversation-detail';\nimport CoversationList from './conversation-list';\nimport './style.less';\nimport TabPages from './tab-pages';\nimport useHiddenModalExpired from '../../hooks/use-hidden-modal-expired';\n\nconst Conversation: FC = (): JSX.Element => {\n    const { title } = useNotification();\n    const dispatch = useDispatch();\n\n    const page = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.page);\n    const loading = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.loading);\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n    const loadingStore = useSelector(({ store }: { store: IStoreState }) => store.loading);\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n    const loadingAuth: boolean = useSelector(({ auth }: { auth: IAuthState }) => auth.loading);\n\n    const [isValidToken, setIsValidToken] = useState(true);\n    const [visible, setVisible] = useState(false);\n    const { hiddenModalExpired, setValueHidden } = useHiddenModalExpired();\n\n    const handleCancelPopup = () => {\n        setVisible(false);\n        dispatch(push('/customer/conversation'));\n        setValueHidden('true');\n    };\n\n    const handleBuyPackage = () => {\n        window.open(`${constants.URL_STORE}setting/billings/list`, '_blank');\n    };\n\n    const getPackages = async () => {\n        const packages: IPackage[] = await getPackagesActive(store._id);\n        const pkgsActive = packages.filter((item: any) => item.active);\n        setVisible(checkRestrictAction(pkgsActive));\n    };\n\n    const handleSocialLogin = (response: any, service?: string): void => {\n        const { accessToken } = response;\n        if (accessToken) {\n            dispatch(loginActionWithService({ accessToken }, service));\n        } else {\n            message.error('Đăng nhập không thành công.');\n        }\n    };\n\n    const loginFacebook = (data: any) => {\n        handleSocialLogin(data, 'facebook');\n    };\n\n    const title_page = `${title} Conversation`;\n\n    useEffect(() => {\n        if (!loading && !loadingAuth && !loadingStore && page) {\n            const callApiCheckToken = async () => {\n                try {\n                    await validateToken({\n                        storeId: store._id,\n                        fbPageId: page.fbObjectId,\n                        token: token.accessToken,\n                    });\n                    setIsValidToken(true);\n                } catch (error) {\n                    setIsValidToken(false);\n                }\n            };\n            callApiCheckToken();\n        }\n        getPackages();\n    }, []);\n    return (\n        <>\n            {!hiddenModalExpired && (\n                <ExpiredStore\n                    visible={visible}\n                    onCancel={handleCancelPopup}\n                    onBuyPackage={handleBuyPackage}\n                />\n            )}\n            <CustomerLayout title={title_page}>\n                <div className='conversation'>\n                    <TabPages />\n                    <div className='conversation-main'>\n                        <Row className='content'>\n                            <Col style={{ width: 350 }} className='column conversation-wrap'>\n                                <CoversationList />\n                            </Col>\n                            <Col className='column' style={{ flex: 1, overflow: 'hidden' }}>\n                                <ConversationDetail />\n                            </Col>\n                            <Col style={{ maxWidth: 400, width: '33.33%' }} className='column'>\n                                <ConversationCustomer />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n                {!loading && !isValidToken ? (\n                    <Modal\n                        visible={true}\n                        footer={null}\n                        closeIcon={null}\n                        closable={false}\n                        bodyStyle={{ padding: 10, textAlign: 'center' }}\n                        width={400}\n                        title={\n                            <Row align='middle' justify='space-between'>\n                                <Col>Thông báo</Col>\n                                <Col>\n                                    <Tooltip placement='left' title='Trang chủ' color='blue'>\n                                        <Button\n                                            icon={<HomeOutlined />}\n                                            onClick={() => dispatch(push('/'))}\n                                        ></Button>\n                                    </Tooltip>\n                                </Col>\n                            </Row>\n                        }\n                    >\n                        <div style={{ marginBottom: 10 }}>\n                            <span>Facebook token của bạn đã hết hạn hoặc đã bị thay đổi.</span>\n                            <br />\n                            <span>Vui lòng kết nối lại tài khoản facebook của bạn.</span>\n                        </div>\n                        <LoginFacebookBtn\n                            loginFacebook={loginFacebook}\n                            title=' Kết nối lại với facebook'\n                        />\n                    </Modal>\n                ) : (\n                    <></>\n                )}\n            </CustomerLayout>\n        </>\n    );\n};\n\nexport default Conversation;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/api/upload-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders-draft/index.tsx",["1670"],"import React, { lazy, Suspense, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { Loading } from '../../components';\nimport { loadOrdersDraft } from '../../reducers/orderDraftState/orderDraftAction';\nimport './style.less';\n\nconst OrderDetail = lazy(() => import('../order-detail'));\nconst OederDraftHome = lazy(() => import('./order-draft-home'));\n\nexport const LIMIT = 20;\n\nconst OrderDraft = (): JSX.Element => {\n    const dispatch = useDispatch();\n    const { path } = useRouteMatch();\n\n    useEffect(() => {\n        dispatch(loadOrdersDraft({ page: 1, limit: LIMIT }));\n    }, []);\n\n    return (\n        <div className='order-draft main'>\n            <Suspense fallback={<Loading />}>\n                <Switch>\n                    <Route component={OederDraftHome} path={path} exact />\n                    <Route component={OrderDetail} path={`${path}/:id`} />\n                    <Redirect to='/page-not-found' />\n                </Switch>\n            </Suspense>\n        </div>\n    );\n};\n\nexport default OrderDraft;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/products/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/socket-handle/index.tsx",["1671","1672","1673","1674"],"import get from 'lodash/get';\nimport moment from 'moment';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\n\nimport { NOTIFICATION_SERVER_URI } from '../../../configs/vars';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport {\n    updateConversation,\n    updateCountUnreadPage,\n    updateUnreadForConversation,\n} from '../../../reducers/fanpageState/fanpageAction';\nimport { IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { useNotification } from '../../customer/notfication-context';\nimport { checkToken } from '../../../api/token';\nimport authApi from '../../../api/auth-api';\nimport store from '../../../store';\nimport authTypes from '../../../reducers/authState/authTypes';\nimport { usePageVisibility } from '../../../hooks/usePageVisibility';\nimport { ConversationType } from '../../../collections/facebook-conversation';\nimport logo from '../../../assets/logo-fb.png';\n\ninterface State {\n    auth: IAuthState;\n    fanpage: IFacebookState;\n}\n\ninterface IMessage {\n    mid: string;\n    text: string;\n}\n\nconst SocketHandle: FC = (): JSX.Element => {\n    const isActiveTabPage = usePageVisibility();\n    const { play } = useNotification();\n    const dispatch = useDispatch();\n    const selectAuth = (state: State) => state.auth;\n    const auth = useSelector(selectAuth);\n    const accessToken: string = get(auth, 'token.accessToken');\n\n    let [socket, setSocket] = useState<any>(null);\n\n    const handelSetAccessToken = (token: string) => {\n        socket = io(`${NOTIFICATION_SERVER_URI}/?token=${token}`, {\n            path: '/socket',\n            transports: ['websocket', 'polling'],\n        });\n        setSocket(socket);\n    };\n\n    const getAccessToken = async () => {\n        try {\n            const isValidAccessToken = checkToken(accessToken);\n            if (!isValidAccessToken) {\n                const refreshToken = get(auth, 'token.refreshToken');\n                const isValidRefreshToken = checkToken(refreshToken);\n\n                if (!isValidRefreshToken) {\n                    return new Error('Refresh token expired');\n                }\n\n                const accessTokenNew = await authApi.refreshAccessToken(refreshToken);\n\n                store.dispatch({\n                    type: authTypes.UPDATE_TOKEN,\n                    payload: accessToken,\n                });\n\n                return accessTokenNew;\n            }\n            return accessToken;\n        } catch (error) {\n            return error;\n        }\n    };\n\n    const pushNotification = (\n        type: ConversationType,\n        value: { name: string; text: string },\n        conversation: any,\n    ) => {\n        if (!isActiveTabPage && localStorage.getItem('isAllowPushNotify') === 'true') {\n            if (Notification.permission === 'granted') {\n                let notification;\n\n                const data = {\n                    icon: logo,\n                    body: `${value.name}: ${value.text}`,\n                };\n\n                switch (type) {\n                    case ConversationType.Comment:\n                        notification = new Notification('Bình luận mới', data);\n                        notification.onclick = function () {\n                            window.open(\n                                `${window.location.origin}/customer/conversation?pageId=${conversation.fbPageId}&postId=${conversation.postId}&type=${ConversationType.Comment}`,\n                            );\n                        };\n                        break;\n\n                    case ConversationType.Message:\n                        notification = new Notification('Tin nhắn mới', data);\n                        notification.onclick = function () {\n                            window.open(\n                                `${window.location.origin}/customer/conversation?pageId=${conversation.fbPageId}&type=${ConversationType.Message}`,\n                            );\n                        };\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (accessToken) {\n            if (socket) {\n                socket.close();\n            }\n            getAccessToken().then(async (token) => {\n                await handelSetAccessToken(token);\n            });\n        }\n\n        return () => socket && socket.close();\n    }, [accessToken]);\n\n    useEffect(() => {\n        if (socket) {\n            socket.on('comment', (res: any) => {\n                const { changes, conversation } = res.entry[0];\n                if (conversation && changes) {\n                    const { value } = changes[0];\n\n                    const newCommentPush = {\n                        name: get(value, 'from.name'),\n                        text: value.message,\n                    };\n\n                    const newMessage: any = {\n                        type: 2,\n                        id: value.comment_id,\n                        message: value.message,\n                        from: value.from,\n                    };\n\n                    if (value.item === 'comment' && value.photo) {\n                        newMessage.attachment = {\n                            type: 'photo',\n                            media: {\n                                image: {\n                                    src: value.photo,\n                                },\n                            },\n                        };\n\n                        if (!newCommentPush.text) {\n                            newCommentPush.text = 'đã gửi một ảnh';\n                        }\n                    }\n\n                    pushNotification(ConversationType.Comment, newCommentPush, conversation);\n\n                    dispatch(\n                        updateConversation({\n                            conversation: {\n                                ...conversation,\n                                message: value.message,\n                            },\n                            newMessage,\n                        }),\n                    );\n\n                    dispatch(updateUnreadForConversation(conversation));\n\n                    // play sound\n                    if (conversation.unread) {\n                        play();\n                    }\n                }\n            });\n\n            socket.on('message', (res: any) => {\n                const { conversation, messaging } = res.entry[0];\n                const message: any = messaging[0].message;\n\n                const newMessagePush = {\n                    name: conversation.fbUsername,\n                    text: message.text,\n                };\n                let countVideo = 0;\n                let countImage = 0;\n\n                const data =\n                    message.attachments &&\n                    message.attachments.map((a: any) => {\n                        if (a.type === 'video') {\n                            countVideo++;\n                            return {\n                                id: Date.now(),\n                                video_data: {\n                                    url: a.payload.url,\n                                },\n                                mime_type: 'video/mp4',\n                            };\n                        }\n\n                        countImage++;\n                        return {\n                            id: Date.now(),\n                            image_data: {\n                                preview_url: a.payload.url,\n                                url: a.payload.url,\n                            },\n                            mime_type: 'image/jpeg',\n                        };\n                    });\n\n                if (!newMessagePush.text) {\n                    if (countVideo > 0 && countImage > 0) {\n                        newMessagePush.text = `đã gửi ${countVideo} file âm thanh và ${countImage} ảnh`;\n                    } else if (countImage > 0) {\n                        newMessagePush.text = `đã gửi ${countImage} ảnh`;\n                    } else if (countVideo > 0) {\n                        newMessagePush.text = `đã gửi ${countVideo} file âm thanh`;\n                    }\n                }\n\n                const newMessage = {\n                    type: 1,\n                    create_time: moment(new Date()).format(),\n                    id: message.mid,\n                    message: message.text || '',\n                    attachments: { data },\n                    from: { id: messaging[0].sender.id },\n                };\n\n                pushNotification(ConversationType.Message, newMessagePush, conversation);\n\n                dispatch(\n                    updateConversation({\n                        conversation: {\n                            ...conversation,\n                            message: message.text,\n                        },\n                        newMessage,\n                    }),\n                );\n\n                dispatch(updateUnreadForConversation(conversation));\n\n                // play sound\n                if (conversation.unread) {\n                    play();\n                }\n            });\n\n            socket.on('error', (res: any) => {\n                // action error\n            });\n        }\n\n        localStorage.setItem('isAllowPushNotify', isActiveTabPage ? 'false' : 'true');\n        if (isActiveTabPage) {\n            window.localStorage.setItem('isOneActiveTab', 'true');\n        }\n    }, [socket, isActiveTabPage]);\n\n    return <></>;\n};\n\nSocketHandle.propTypes = {};\n\nexport default SocketHandle;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/other/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/select-pages/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/utils/disabled-autosuggestion.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/utils/get-time.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/add-category-img.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/btn-action-images.tsx",["1675","1676"],"import _ from 'lodash';\nimport { Badge, Button, message, Modal } from 'antd';\nimport React, { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { likeImageRequest, removeImageRequest } from '../../../api/images-api';\nimport { removeImage, toggleBookmark } from '../../../reducers/imagesState/imagesAction';\nimport { IImage } from '../../../collections/image';\n\ninterface Props {\n    images: string[];\n    action: 'remove' | 'bookmark';\n    callBack?: () => void;\n}\n\nconst BtnActionImages: FC<Props> = ({ images, action, callBack }) => {\n    const [loading, setLoading] = useState(false);\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n    const dataImages = useSelector((state: any) => state.images.images);\n    const dispatch = useDispatch();\n\n    const renderBadge = images.length > 0 && (\n        <Badge style={{ marginRight: 10 }} count={images.length} />\n    );\n\n    const showConfirm = () => {\n        const imagesExistInProduct = dataImages.filter(\n            (img: IImage) => images.includes(img._id) && !_.isEmpty(img.productIds)\n        );\n        const count = imagesExistInProduct.length;\n        return Modal.confirm({\n            title: count > 0 ? 'Cảnh báo' : 'Xác nhận',\n            content:\n                count > 0 ? (\n                    <div>\n                        <span>\n                            Ảnh: {imagesExistInProduct.map((img: IImage) => img.name).join(', ')} đã\n                            tồn tại trong ảnh của sản phẩm.\n                        </span>\n                        <br />\n                        Nếu bạn đồng ý xóa, đồng nghĩa với việc xóa ảnh này trong sản phẩm của bạn!\n                    </div>\n                ) : (\n                    'Bạn chắc chắn muốn xóa ảnh đã chọn?'\n                ),\n            okText: 'Xóa ảnh',\n            okType: 'danger',\n            cancelText: 'Hủy',\n            width: 450,\n            centered: true,\n            onOk() {\n                removeImages();\n            },\n            onCancel() {},\n        });\n    };\n\n    const removeImages = async () => {\n        setLoading(true);\n        try {\n            const response = await Promise.all(\n                images.map(async (imageId) => {\n                    const response = await removeImageRequest({\n                        token: token.accessToken,\n                        storeId: store._id,\n                        imageId,\n                    });\n\n                    dispatch(removeImage(imageId));\n\n                    return response;\n                })\n            );\n            setLoading(false);\n            message.success(`Đã xóa ${images.length} hình ảnh`);\n            if (callBack) {\n                callBack();\n            }\n        } catch (error) {\n            message.error(`Lỗi xóa hình ảnh`);\n        }\n    };\n\n    const bookMarkImages = () => {\n        setLoading(true);\n        Promise.all(\n            images.map(async (imageId) => {\n                const response = await likeImageRequest({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    imageId,\n                    star: true,\n                });\n\n                dispatch(toggleBookmark(imageId));\n            })\n        )\n            .then(() => {\n                message.success(`Đã ${images.length} thêm vào yêu thích`);\n                setLoading(false);\n                if (callBack) {\n                    callBack();\n                }\n            })\n            .catch(() => {\n                message.error('Lỗi thêm vào yêu thích');\n                setLoading(false);\n            });\n    };\n\n    const onClick = () => {\n        if (action === 'remove') {\n            showConfirm();\n        }\n        if (action === 'bookmark') {\n            bookMarkImages();\n        }\n    };\n\n    const title = action === 'remove' ? 'Xóa ảnh' : 'Yêu thích';\n\n    return (\n        <Button onClick={onClick} loading={loading}>\n            {!loading && renderBadge}\n            {title}\n        </Button>\n    );\n};\n\nexport default BtnActionImages;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/add-image-gallery.tsx",["1677"],"import { Badge, Button, Form, Modal, Select } from 'antd';\nimport { Store } from 'antd/lib/form/interface';\nimport React, { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { updateImageRequest } from '../../../api/images-api';\nimport useModal from '../../../hooks/use-modal';\nimport { fetchImages } from '../../../reducers/imagesState/imagesAction';\nimport { IGallery } from './imgs-library';\n\ninterface Props {\n    images: string[];\n    callBack?: () => void;\n}\n\nconst AddImageGallery: FC<Props> = ({ images, callBack }): JSX.Element => {\n    const [loading, setLoading] = useState(false);\n    const { toggle, visible } = useModal();\n    const gallery = useSelector((state: any) => state.images.gallery);\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n\n    const dispatch = useDispatch();\n\n    const onFinish = async (values: Store) => {\n        setLoading(true);\n\n        try {\n            const data =\n                values.gallery === 'star'\n                    ? { star: true }\n                    : {\n                          galleryId: values.gallery,\n                      };\n\n            const reponse = await Promise.all(\n                images.map(\n                    async (imageId: string): Promise<any> => {\n                        const res = await updateImageRequest({\n                            token: token.accessToken,\n                            storeId: store._id,\n                            imageId,\n                            data: {\n                                ...data,\n                            },\n                        });\n\n                        return res;\n                    }\n                )\n            );\n\n            setLoading(false);\n            toggle();\n\n            dispatch(fetchImages());\n            if (callBack) {\n                callBack();\n            }\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n\n    const renderNumber =\n        images.length > 0 ? (\n            <Badge style={{ marginRight: 10 }} count={images.length}></Badge>\n        ) : null;\n\n    return (\n        <>\n            <Button onClick={toggle}>{renderNumber} Thêm vào danh mục</Button>\n\n            <Modal visible={visible} onCancel={toggle} title='Thêm vào danh mục' footer={null}>\n                <Form onFinish={onFinish} layout='vertical'>\n                    <Form.Item\n                        label='Chọn danh mục'\n                        name='gallery'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Chọn danh mục',\n                            },\n                        ]}\n                    >\n                        <Select placeholder='Chọn thư mục'>\n                            <Select.Option value='star'>Yêu thích</Select.Option>\n                            {(gallery || []).map((item: IGallery) => {\n                                return (\n                                    <Select.Option key={item._id} value={item._id}>\n                                        {item.name}\n                                    </Select.Option>\n                                );\n                            })}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button onClick={toggle}>Hủy</Button>\n                        <Button\n                            type='primary'\n                            htmlType='submit'\n                            style={{ marginLeft: 15 }}\n                            loading={loading}\n                        >\n                            Đồng ý\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    );\n};\n\nexport default AddImageGallery;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/components/banner-notify-package/banner-package.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/context.tsx",["1678","1679","1680","1681"],"import { pick } from 'lodash';\nimport React, { createContext, FC, ReactNode, useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { loadComments, loadMessages } from '../../../api/conversation-api';\nimport { ILabel } from '../../../collections/label';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\n\nexport interface Message {\n    from: { name: string; email: string; id: string };\n    created_time: string;\n    id: string;\n    message: string;\n    attachments?: {\n        data: any[];\n    };\n    type?: number;\n    parent?: any;\n}\n\nexport interface Comment {\n    created_time: string;\n    from: {\n        id: string;\n        name?: string;\n    };\n    id: string;\n    message: string;\n    type?: number;\n    text: string;\n    parent?: any;\n}\n\ninterface IState {\n    loading: boolean;\n    messages: any | never[];\n}\n\nconst initialState = {\n    loading: false,\n    messages: [] as Message[],\n    postContent: '',\n    text: '',\n    textChat: '',\n    labels: [] as ILabel[],\n    labelIds: [] as any[],\n    images: [],\n    message_sending: [],\n    images_sending: [],\n    isFocus: false,\n    next: '',\n    isNewMessage: false,\n};\n\nconst initialContext = {\n    state: initialState,\n    setState: (state: any): any => state,\n};\n\nconst Context = createContext(initialContext);\n\ninterface Props {\n    children: ReactNode;\n}\ntype Item = Comment | Message;\n\nconst formatMessages = ({ arr, type }: { arr: any[]; type: number }): any =>\n    arr.map((item: any) => ({ ...item, type }));\n\nconst ProviderContext: FC<Props> = ({ children }) => {\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n\n    const originSocketMessage: any = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.originSocketMessage\n    );\n\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n\n    const labelsSetting = useSelector((state: any) => state.label.labels);\n\n    const [state, setState] = useState(initialState);\n\n    const toggleLoading = (value: boolean) => setState({ ...state, loading: value, messages: [] });\n\n    useEffect(() => {\n        toggleLoading(true);\n        async function loadCoversationList() {\n            toggleLoading(true);\n            try {\n                const labels = Object.keys(labelsSetting).map((key: string) => ({\n                    ...labelsSetting[key],\n                }));\n                if (conversation.type === 1) {\n                    const messagesResponse = await loadMessages({\n                        ...pick(conversation, ['fbObjectId', 'fbPageId']),\n                        storeId: store._id,\n                        token: token.accessToken,\n                    });\n\n                    const messages = formatMessages({\n                        arr: messagesResponse.data,\n                        type: 1,\n                    }).reverse();\n\n                    return setState({\n                        ...state,\n                        next: messagesResponse.next,\n                        messages,\n                        loading: false,\n                        postContent: '',\n                        labels,\n                        labelIds: conversation.labelIds || [],\n                    });\n                }\n\n                let conversationId = conversation.fbObjectId;\n                const commentsResponse = await loadComments({\n                    conversationId,\n                    ...pick(conversation, ['fbPageId']),\n                    storeId: store._id,\n                    token: token.accessToken,\n                });\n\n                const messages = formatMessages({\n                    arr: (commentsResponse.data || []).reverse(),\n                    type: 2,\n                });\n                return setState({\n                    ...state,\n                    messages,\n                    loading: false,\n                    postContent: '',\n                    labels,\n                    labelIds: conversation.labelIds || [],\n                    next: commentsResponse.next,\n                });\n            } catch (error) {\n                toggleLoading(false);\n            }\n        }\n\n        if (conversation) {\n            loadCoversationList();\n        }\n    }, [conversation]);\n\n    const value = { state, setState };\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n};\n\nconst useConversationDetail = () => {\n    const value = useContext(Context);\n\n    const { state, setState } = value;\n\n    const setMessages = (messages: Message | Comment) => {\n        setState({ ...state, messages });\n    };\n\n    const loadMoreMessages = (dataMessages: Message[] | Comment[], next: string) => {\n        const messages = [...dataMessages, ...state.messages];\n        setState({ ...state, messages, next });\n    };\n\n    const updateMessage = (message: any) => {\n        const index = (state.messages || []).findIndex((o) => o.id === message.id);\n        let messages = [...state.messages];\n        if (index === -1) {\n            messages = [...state.messages, message];\n        }\n        setState({ ...state, messages });\n    };\n\n    const deleteMessage = (message: { id: string }) => {\n        let messages = state.messages.filter((o) => o.id !== message.id);\n        messages = messages.filter((o) => !o.parent || (o.parent && o.parent.id !== message.id));\n        setState({ ...state, messages });\n    };\n\n    const getComments = async (\n        conversationId: string,\n        fbPageId: string,\n        storeId: string,\n        token: string\n    ) => {\n        setState({ ...state, loading: true });\n        const commentsResponse = await loadComments({\n            conversationId,\n            fbPageId,\n            storeId,\n            token,\n        });\n\n        const messages = formatMessages({\n            arr: commentsResponse.data,\n            type: 2,\n        });\n\n        setState({ ...state, messages, next: commentsResponse.next, loading: false });\n    };\n\n    const changeText = (text: string) => {\n        setState({ ...state, text });\n    };\n\n    const changeTextChat = (textChat: string) => {\n        setState({ ...state, textChat });\n    };\n\n    const updateLabels = (label: ILabel) => {\n        const data = state.labelIds.filter((item) => item._id === label._id);\n        if (data.length > 0) {\n            const labelIds = state.labelIds.filter((item) => item._id !== label._id);\n            setState({ ...state, labelIds });\n        } else {\n            const labelIds = [...state.labelIds, label];\n            setState({ ...state, labelIds });\n        }\n    };\n\n    const setImageSend = (images: any[]) => {\n        setState({ ...state, images, isFocus: true });\n    };\n\n    const setImageSending = (images: any[]) => {\n        setState({ ...state, images_sending: images });\n    };\n\n    const changeIsFocus = (value: boolean) => {\n        setState({ ...state, isFocus: value });\n    };\n\n    const setIsNewMessage = (value: boolean) => {\n        setState({ ...state, isNewMessage: value });\n    };\n\n    const setIdMessage = (data: any) => {\n        const index = (state.messages || []).findIndex((o) => o.id === data.fakeId);\n        if (index !== -1) {\n            state.messages[index].id = data.realId;\n        }\n        setState({\n            ...state,\n            messages: [...state.messages],\n        });\n    };\n\n    const setMessageSending = (message: any) => {\n        setState({\n            ...state,\n            messages: [...state.messages, message],\n            text: '',\n            isNewMessage: true,\n        });\n    };\n\n    const setMessagesSending = (messages: any) => {\n        setState({\n            ...state,\n            messages: [...state.messages, ...messages],\n            text: '',\n            isNewMessage: true,\n        });\n    };\n\n    const removeMessageError = (message: any) => {\n        const messages = state.messages.filter((m: any) => m.id !== message.id);\n        setState({ ...state, messages, text: '' });\n    };\n\n    const resetMessageSending = () => {\n        setState({ ...state, message_sending: [] });\n    };\n\n    return {\n        ...state,\n        setMessages,\n        loadMoreMessages,\n        setIsNewMessage,\n        updateMessage,\n        deleteMessage,\n        changeText,\n        changeTextChat,\n        updateLabels,\n        setImageSend,\n        changeIsFocus,\n        setImageSending,\n        setMessageSending,\n        resetMessageSending,\n        removeMessageError,\n        setMessagesSending,\n        getComments,\n        setIdMessage,\n    };\n};\n\nexport { ProviderContext, useConversationDetail };\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/gallery-item.tsx",["1682"],"import { DeleteFilled } from '@ant-design/icons';\nimport { message } from 'antd';\nimport React, { FC } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteGallery } from '../../../api/gallery-api';\nimport * as actions from '../../../reducers/imagesState/imagesAction';\n\ninterface Props {\n    gallery: any;\n    active: any;\n    handelClickGallery: (category: any) => void;\n}\n\nconst GalleryItem: FC<Props> = ({ gallery, active, handelClickGallery }): JSX.Element => {\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n    const dispatch = useDispatch();\n    const className = active ? 'cate active' : 'cate';\n\n    const onClick = () => {\n        handelClickGallery(gallery);\n    };\n\n    const handleDeleteGallery = async () => {\n        try {\n            const response = await deleteGallery({\n                token: token.accessToken,\n                storeId: store._id,\n                galleryId: gallery._id,\n            });\n            handelClickGallery(null);\n            dispatch(actions.deleteGallery(gallery._id));\n            message.success('Đã xóa danh mục hình ảnh');\n        } catch (error) {\n            message.error('Lỗi xóa danh mục hình ảnh');\n        }\n    };\n\n    return (\n        <div className={className}>\n            <div onClick={onClick} className='inner'>\n                {gallery.name}\n            </div>\n            <div className='delete' onClick={handleDeleteGallery}>\n                <DeleteFilled />\n            </div>\n        </div>\n    );\n};\n\nexport default GalleryItem;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/search-image.tsx",["1683"],"import { Input } from 'antd';\nimport { debounce } from 'lodash';\nimport React, { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { searchImage, changTextSearch } from '../../../reducers/imagesState/imagesAction';\n\ninterface Props {\n    gallery?: any;\n}\n\nconst SearchImage: FC<Props> = ({ gallery }): JSX.Element => {\n    const [loading, setLoading] = useState(false);\n    // const [text, setText] = useState();\n    const dispatch = useDispatch();\n    const text_search = useSelector((state: any) => state.images.text_search);\n\n    const onChangeSearchText = (e: any) => {\n        dispatch(changTextSearch(e.target.value));\n\n        // setText(e.target.value);\n    };\n\n    const onSearch = () => {\n        const star = gallery === 'bookmark';\n        const galleryId = gallery && gallery !== 'bookmark' ? gallery._id : undefined;\n        dispatch(searchImage({ text: text_search, galleryId, star }));\n        setLoading(false);\n    };\n\n    // const changeTextSearch = debounce(async (text: string) => {\n    //     const star = gallery === 'bookmark';\n    //     const galleryId =\n    //         gallery && gallery !== 'bookmark' ? gallery._id : undefined;\n    //     dispatch(searchImage({ text, galleryId, star }));\n    //     setLoading(false);\n    // }, 1000);\n\n    return (\n        <Input.Search\n            value={text_search}\n            placeholder='Tìm kiếm'\n            onChange={onChangeSearchText}\n            loading={loading}\n            onSearch={onSearch}\n        />\n    );\n};\n\nexport default SearchImage;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/orderDraftState/orderDraftAction.ts",["1684"],"import types from './orderDraftType';\nimport { Dispatch } from 'redux';\nimport { fetchOrdersRequest, removeOrdersRequest } from '../../api/order-api';\nimport { message } from 'antd';\n\nexport function loadOrdersDraftSuccess(data: any) {\n    return {\n        type: types.LOAD_ORDER_DRAFT_SUCCESS,\n        payload: data,\n    };\n}\n\nexport function loadOrdersDraftFailed() {\n    return {\n        type: types.LOAD_ORDER_DRAFT_FAILED,\n    };\n}\n\nexport const loadOrdersDraft = (query: { limit: number; page: number }) => async (\n    dispatch: Dispatch,\n    getState: () => any\n) => {\n    dispatch({\n        type: types.LOADING_ORDER_DRAFT,\n    });\n\n    try {\n        const { auth, store } = getState();\n        const { token } = auth;\n        const storeId = store.store._id;\n\n        const res = await fetchOrdersRequest({\n            token: token.accessToken,\n            storeId,\n            query: {\n                ...query,\n                draft: true,\n            },\n        });\n\n        dispatch(loadOrdersDraftSuccess(res));\n    } catch (error) {\n        dispatch(loadOrdersDraftFailed());\n    }\n};\n\nexport const removeOrdersDraft = (orderId: string) => async (\n    dispatch: Dispatch,\n    getState: () => any\n) => {\n    try {\n        const { auth, store } = getState();\n        const { token } = auth;\n        const storeId = store.store._id;\n\n        const res = await removeOrdersRequest({\n            token: token.accessToken,\n            storeId,\n            orderId,\n        });\n\n        dispatch({\n            type: types.DELETE_ORDER_DRAFT_SUCCESS,\n            payload: orderId,\n        });\n\n        message.success('Xoá đơn hàng thành công');\n    } catch (error) {\n        message.error('Lỗi xoá đơn hàng');\n    }\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/hooks/usePageVisibility.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/assets/icon/svg.tsx",["1685"],"import React from 'react';\n\nconst size = '1em';\n\nconst defaultSetting = {\n    viewBox: '0 0 1024 1024',\n    width: size,\n    height: size,\n    fill: 'currentColor',\n};\n\nexport default {\n    SearchSvg: () => (\n        <svg {...defaultSetting}>\n            <path\n                d='M684.416 676.523c-1.451 1.109-2.859 2.347-4.224 3.712s-2.56 2.731-3.712 4.224c-53.675 51.755-126.677 83.541-207.147 83.541-82.475 0-157.099-33.365-211.2-87.467s-87.467-128.725-87.467-211.2 33.365-157.099 87.467-211.2 128.725-87.467 211.2-87.467 157.099 33.365 211.2 87.467 87.467 128.725 87.467 211.2c0 80.469-31.787 153.472-83.584 207.189zM926.165 865.835l-156.8-156.8c52.523-65.707 83.968-149.035 83.968-239.701 0-106.027-43.008-202.069-112.469-271.531s-165.504-112.469-271.531-112.469-202.069 43.008-271.531 112.469-112.469 165.504-112.469 271.531 43.008 202.069 112.469 271.531 165.504 112.469 271.531 112.469c90.667 0 173.995-31.445 239.701-83.968l156.8 156.8c16.683 16.683 43.691 16.683 60.331 0s16.683-43.691 0-60.331z'\n                stroke='inherit'\n            ></path>\n        </svg>\n    ),\n\n    MediaMixerSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M128 245.82h345.148c14.384 56.123 64.512 96.943 124.175 96.943s109.792-40.82 123.982-96.055l0.193-0.887h174.682c23.57 0 42.677-19.107 42.677-42.677s-19.107-42.677-42.677-42.677h-170.827c-1.726-0.193-3.726-0.304-5.752-0.304s-4.027 0.11-5.996 0.325l0.243-0.022c-20.672-44.554-65.025-74.897-116.465-74.897s-95.793 30.343-116.136 74.108l-0.329 0.789c-1.726-0.193-3.726-0.304-5.752-0.304s-4.027 0.11-5.996 0.325l0.243-0.022h-341.414c-23.57 0-42.677 19.107-42.677 42.677s19.107 42.677 42.677 42.677h0zM597.353 172.454c23.553-0 42.647 19.094 42.647 42.647s-19.094 42.647-42.647 42.647c-23.553 0-42.647-19.094-42.647-42.647v0c0-23.553 19.094-42.647 42.647-42.647v0z'></path>\n                <path d='M128 544.527h89.148c14.721 55.644 64.615 95.995 123.934 95.995s109.213-40.351 123.733-95.101l0.201-0.893h430.923c23.57 0 42.677-19.107 42.677-42.677s-19.107-42.677-42.677-42.677l-439.718 0c-20.953-43.809-64.922-73.531-115.832-73.531s-94.879 29.722-115.5 72.761l-0.332 0.77c-1.726-0.193-3.726-0.304-5.752-0.304s-4.027 0.11-5.996 0.325l0.243-0.022h-85.052c-23.57-0-42.677 19.107-42.677 42.677s19.107 42.677 42.677 42.677h-0zM341.353 471.16c23.553-0 42.647 19.094 42.647 42.647s-19.094 42.647-42.647 42.647c-23.553 0-42.647-19.094-42.647-42.647v0c0-23.553 19.094-42.647 42.647-42.647v0z'></path>\n                <path d='M128 843.174h388.277c15.003 55.236 64.697 95.189 123.723 95.189s108.721-39.953 123.515-94.292l0.208-0.897h132.518c23.57 0 42.677-19.107 42.677-42.677s-19.107-42.677-42.677-42.677v0h-141.011c-21.213-43.084-64.806-72.206-115.2-72.206s-93.987 29.122-114.866 71.456l-0.334 0.75h-396.83c-23.57 0-42.677 19.107-42.677 42.677s19.107 42.677 42.677 42.677v0zM640 769.807c23.553 0 42.647 19.094 42.647 42.647s-19.094 42.647-42.647 42.647c-23.553 0-42.647-19.094-42.647-42.647v0c0-23.553 19.094-42.647 42.647-42.647h0z'></path>\n            </g>\n        </svg>\n    ),\n\n    CloseSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M209.088 813.696c-7.663-7.714-12.398-18.344-12.398-30.080s4.736-22.366 12.401-30.082l-0.002 0.002 543.168-543.168c7.881-9.276 19.555-15.123 32.595-15.123 23.576 0 42.688 19.112 42.688 42.688 0 13.040-5.847 24.714-15.062 32.545l-0.061 0.051-543.168 543.168c-7.714 7.663-18.344 12.398-30.080 12.398s-22.366-4.736-30.082-12.401l0.002 0.002z'></path>\n                <path d='M209.088 210.368c7.714-7.663 18.344-12.398 30.080-12.398s22.366 4.736 30.082 12.401l-0.002-0.002 543.168 543.168c9.276 7.881 15.123 19.555 15.123 32.595 0 23.576-19.112 42.688-42.688 42.688-13.040 0-24.714-5.847-32.545-15.062l-0.051-0.061-543.168-543.168c-7.663-7.714-12.398-18.344-12.398-30.080s4.736-22.366 12.401-30.082l-0.002 0.002z'></path>\n            </g>\n        </svg>\n    ),\n\n    PhoneSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M981.333 721.92c0.683-30.464-10.069-59.904-28.715-82.901-19.627-24.149-48.171-41.259-82.133-46.080-34.133-4.181-72.32-13.397-110.336-27.563-18.475-6.784-38.101-9.301-57.344-7.424-28.288 2.731-55.765 14.891-77.611 36.48l-30.72 30.72c-75.52-47.659-143.36-113.792-195.541-195.797l30.976-30.976c13.739-14.080 24.021-30.976 30.165-49.323 9.045-26.965 9.131-57.003-1.664-85.803-12.331-32.128-22.101-70.144-27.477-110.72-4.437-30.464-19.456-57.387-41.088-76.971-22.997-20.736-53.589-33.237-86.485-32.896h-127.829c-3.755 0-7.765 0.171-11.648 0.512-35.157 3.2-65.792 20.395-86.741 45.483s-32.341 58.325-29.141 93.824c12.8 131.243 58.24 266.368 137.216 388.352 64.085 102.955 155.648 197.248 268.715 269.056 109.568 72.405 242.517 122.112 387.669 137.856 3.925 0.384 8.149 0.555 12.288 0.555 35.328-0.128 67.328-14.635 90.368-37.845s37.248-55.339 37.12-90.496zM896 721.92v128c0.043 11.947-4.651 22.613-12.373 30.379s-18.304 12.587-30.123 12.629c-134.357-14.336-254.336-59.349-352.555-124.245-103.595-65.835-185.984-150.912-243.285-242.944-72.405-111.787-113.28-233.856-124.757-351.488-1.024-11.435 2.731-22.443 9.771-30.891s17.195-14.080 28.928-15.147l131.755-0.213c11.563-0.128 21.632 4.011 29.312 10.923 7.253 6.571 12.288 15.616 13.781 25.941 6.059 45.739 17.408 90.325 32.299 129.067 3.456 9.216 3.413 19.072 0.427 28.075-2.091 6.187-5.589 11.989-10.325 16.853l-53.845 53.803c-13.824 13.824-16.171 34.731-6.912 51.243 67.584 118.827 163.797 211.499 272.256 272.128 16.939 9.472 37.632 6.144 50.987-7.083l54.187-54.187c7.083-6.997 16.085-10.965 25.515-11.904 6.485-0.64 13.227 0.213 19.584 2.56 43.605 16.256 88.32 27.136 129.451 32.171 10.283 1.451 19.712 7.083 26.24 15.147 6.272 7.723 9.856 17.579 9.643 29.099z'></path>\n            </g>\n        </svg>\n    ),\n    UnPhoneSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M695.168 72.832l97.835 97.835-97.835 97.835c-16.683 16.683-16.683 43.691 0 60.331s43.691 16.683 60.331 0l97.835-97.835 97.835 97.835c16.683 16.683 43.691 16.683 60.331 0s16.683-43.691 0-60.331l-97.835-97.835 97.835-97.835c16.683-16.683 16.683-43.691 0-60.331s-43.691-16.683-60.331 0l-97.835 97.835-97.835-97.835c-16.683-16.683-43.691-16.683-60.331 0s-16.683 43.691 0 60.331zM981.333 721.92c0.683-30.464-10.069-59.904-28.715-82.901-19.627-24.149-48.171-41.259-82.133-46.080-34.133-4.181-72.32-13.397-110.336-27.563-18.475-6.784-38.101-9.301-57.344-7.424-28.288 2.731-55.765 14.891-77.611 36.48l-30.72 30.72c-75.52-47.659-143.36-113.792-195.541-195.797l30.976-30.976c13.739-14.080 24.021-30.976 30.165-49.323 9.045-26.965 9.131-57.003-1.664-85.803-12.331-32.128-22.101-70.144-27.477-110.72-4.437-30.464-19.456-57.387-41.088-76.971-22.997-20.736-53.589-33.237-86.485-32.896h-127.829c-3.755 0-7.765 0.171-11.648 0.512-35.157 3.2-65.792 20.395-86.741 45.483s-32.341 58.325-29.141 93.824c12.8 131.243 58.24 266.368 137.216 388.352 64.085 102.955 155.648 197.248 268.715 269.056 109.568 72.405 242.517 122.112 387.669 137.856 3.925 0.384 8.149 0.555 12.288 0.555 35.328-0.128 67.328-14.635 90.368-37.845s37.248-55.339 37.12-90.496zM896 721.92v128c0.043 11.947-4.651 22.613-12.373 30.379s-18.304 12.587-30.123 12.629c-134.357-14.336-254.336-59.349-352.555-124.245-103.595-65.835-185.984-150.912-243.285-242.944-72.405-111.787-113.28-233.856-124.757-351.488-1.024-11.435 2.731-22.443 9.771-30.891s17.195-14.080 28.928-15.147l131.755-0.213c11.563-0.128 21.632 4.011 29.312 10.923 7.253 6.571 12.288 15.616 13.781 25.941 6.059 45.739 17.408 90.325 32.299 129.067 3.456 9.216 3.413 19.072 0.427 28.075-2.091 6.187-5.589 11.989-10.325 16.853l-53.845 53.803c-13.824 13.824-16.171 34.731-6.912 51.243 67.584 118.827 163.797 211.499 272.256 272.128 16.939 9.472 37.632 6.144 50.987-7.083l54.187-54.187c7.083-6.997 16.085-10.965 25.515-11.904 6.485-0.64 13.227 0.213 19.584 2.56 43.605 16.256 88.32 27.136 129.451 32.171 10.283 1.451 19.712 7.083 26.24 15.147 6.272 7.723 9.856 17.579 9.643 29.099z'></path>\n            </g>\n        </svg>\n    ),\n\n    BookmarkSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M785.877 930.731c6.869 4.949 15.488 7.936 24.789 7.936 23.552 0 42.667-19.115 42.667-42.667v-682.667c0-35.328-14.379-67.413-37.504-90.496s-55.168-37.504-90.496-37.504h-426.667c-35.328 0-67.413 14.379-90.496 37.504s-37.504 55.168-37.504 90.496v682.667c-0.043 8.491 2.56 17.237 7.936 24.789 13.696 19.157 40.363 23.637 59.52 9.899l273.877-195.584zM768 813.099l-231.211-165.163c-15.147-10.837-34.944-10.325-49.579 0l-231.211 165.163v-599.765c0-11.776 4.736-22.4 12.501-30.165s18.389-12.501 30.165-12.501h426.667c11.776 0 22.4 4.736 30.165 12.501s12.501 18.389 12.501 30.165z'></path>\n            </g>\n        </svg>\n    ),\n\n    ClockSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M981.333 512c0-129.579-52.565-246.997-137.472-331.861s-202.283-137.472-331.861-137.472-246.997 52.565-331.861 137.472-137.472 202.283-137.472 331.861 52.565 246.997 137.472 331.861 202.283 137.472 331.861 137.472 246.997-52.565 331.861-137.472 137.472-202.283 137.472-331.861zM896 512c0 106.069-42.923 201.984-112.469 271.531s-165.461 112.469-271.531 112.469-201.984-42.923-271.531-112.469-112.469-165.461-112.469-271.531 42.923-201.984 112.469-271.531 165.461-112.469 271.531-112.469 201.984 42.923 271.531 112.469 112.469 165.461 112.469 271.531zM469.333 256v256c0 16.597 9.472 31.019 23.595 38.144l170.667 85.333c21.077 10.539 46.72 2.005 57.259-19.072s2.005-46.72-19.072-57.259l-147.115-73.515v-229.632c0-23.552-19.115-42.667-42.667-42.667s-42.667 19.115-42.667 42.667z'></path>\n            </g>\n        </svg>\n    ),\n\n    TagSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M908.672 602.325c24.875-25.003 37.291-57.685 37.291-90.24 0.043-32.597-12.373-65.365-37.291-90.453l-366.507-366.507c-7.723-7.68-18.389-12.459-30.165-12.459h-426.667c-23.552 0-42.667 19.115-42.667 42.667v426.667c0 10.923 4.181 21.845 12.501 30.208l366.592 366.165c25.003 24.96 57.856 37.461 90.539 37.419s65.536-12.544 90.453-37.504zM848.341 541.995l-305.92 305.92c-8.363 8.363-19.2 12.544-30.165 12.544s-21.845-4.139-30.165-12.459l-354.091-353.707v-366.293h366.336l354.005 354.005c8.192 8.235 12.331 19.072 12.331 30.037 0 10.923-4.139 21.717-12.331 29.952zM298.667 341.333c23.552 0 42.667-19.115 42.667-42.667s-19.115-42.667-42.667-42.667-42.667 19.115-42.667 42.667 19.115 42.667 42.667 42.667z'></path>\n            </g>\n        </svg>\n    ),\n\n    EmultipleSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M860.956 479.972c-0.034-0-0.074-0-0.114-0-23.89 0-43.26 19.35-43.292 43.233l-0 0.003v211.911c-0.032 23.885-19.403 43.236-43.292 43.236-0.040 0-0.080-0-0.12-0l0.006 0h-433.892c-0.034 0-0.074 0-0.114 0-23.89 0-43.26-19.35-43.292-43.233l-0-0.003v-562.176c0.032-23.885 19.403-43.236 43.292-43.236 0.040 0 0.080 0 0.12 0l-0.006-0h216.974c23.878 0 43.236-19.357 43.236-43.236s-19.357-43.236-43.236-43.236v0h-216.974c-0.181-0.001-0.396-0.001-0.611-0.001-56.221 0-104.117 35.645-122.322 85.568l-0.288 0.905h-6.94c-0.068-0-0.148-0-0.228-0-71.681 0-129.805 58.044-129.934 129.695l-0 0.012v605.412c0.129 71.663 58.253 129.707 129.934 129.707 0.080 0 0.16-0 0.24-0l-0.013 0h433.892c0.068 0 0.148 0 0.228 0 71.681 0 129.805-58.044 129.934-129.695l0-0.012c0.068 0 0.148 0 0.228 0 71.681 0 129.805-58.044 129.934-129.695l0-0.012v-211.911c-0.032-23.885-19.403-43.236-43.292-43.236-0.020 0-0.040 0-0.060 0l0.003-0zM644.039 907.947h-433.948c-0.034 0-0.074 0-0.114 0-23.89 0-43.26-19.35-43.292-43.233l-0-0.003v-605.298c0.032-23.885 19.403-43.236 43.292-43.236 0.040 0 0.080 0 0.12 0l-0.006-0v518.884c0.129 71.663 58.253 129.707 129.934 129.707 0.080 0 0.16-0 0.24-0l-0.013 0h347.022c-0.065 23.841-19.39 43.146-43.232 43.179l-0.003 0z'></path>\n                <path d='M936.050 129.707l-61.212-60.985c-15.731-15.684-37.439-25.382-61.412-25.382s-45.68 9.698-61.414 25.384l0.002-0.002-282.453 281.088 6.087 177.266 178.347 6.030 282.055-281.031c15.727-15.627 25.461-37.269 25.461-61.184s-9.734-45.557-25.457-61.18l-0.005-0.004zM859.25 206.222l-240.014 239.559-59.449-2.162-2.162-59.108 240.412-239.559c1.968-1.925 4.262-3.527 6.789-4.715l0.151-0.064h19.115c1.649 0.771 3.069 1.644 4.376 2.656l-0.052-0.039 30.379 30.72c4.805 3.984 7.843 9.954 7.843 16.634 0 6.47-2.85 12.275-7.363 16.227l-0.025 0.021z'></path>\n            </g>\n        </svg>\n    ),\n\n    ReloadSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M525.905 172.248c-130.482 0.030-243.947 72.859-301.99 180.080l-0.898 1.815c-7.637 13.387-21.82 22.266-38.077 22.266-24.129 0-43.69-19.561-43.69-43.69 0-7.872 2.082-15.258 5.726-21.638l-0.113 0.214c39.225-70.517 95.070-127.553 162.428-167.088l2.059-1.117c61.45-36.005 135.319-57.268 214.155-57.268 236.961 0 429.056 192.095 429.056 429.056s-192.095 429.056-429.056 429.056c-194.219 0-358.297-129.046-411.17-306.072l-0.779-3.037c-0.485-2.428-0.763-5.219-0.763-8.075 0-23.812 19.304-43.116 43.116-43.116 18.063 0 33.532 11.108 39.948 26.865l0.104 0.288c42.683 144.429 174.134 248.024 329.781 248.024 189.575 0 343.256-153.681 343.256-343.256 0-189.518-153.588-343.163-343.084-343.256l-0.009-0z'></path>\n                <path d='M382.599 332.746c-4.712-19.089-21.688-33.021-41.917-33.021-3.698 0-7.288 0.466-10.713 1.341l0.299-0.065-134.36 36.002-36.056-133.012c-3.371-20.74-21.152-36.381-42.587-36.381-23.812 0-43.116 19.304-43.116 43.116 0 5.119 0.892 10.030 2.529 14.585l-0.094-0.301 43.116 154.893c7.274 28.155 32.446 48.617 62.397 48.617 5.419 0 10.681-0.67 15.709-1.931l-0.444 0.094 157.049-39.882c17.662-5.659 30.224-21.934 30.224-41.143 0-4.551-0.705-8.938-2.012-13.057l0.084 0.305z'></path>\n            </g>\n        </svg>\n    ),\n\n    UnEyeSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M432.128 222.464c27.776-6.485 55.296-9.429 79.36-9.131 75.008 0 141.184 23.851 198.741 59.435 47.744 29.525 89.131 66.859 123.477 104.448 27.477 30.080 50.133 59.947 67.627 85.376 13.952 20.267 24.32 37.291 31.275 49.28-23.296 40.661-49.493 77.696-75.861 108.459-15.317 17.877-13.269 44.843 4.608 60.16s44.843 13.269 60.16-4.608c34.901-40.704 68.736-90.112 97.408-143.787 6.315-11.904 6.955-26.368 0.555-39.211 0 0-16.896-33.664-47.787-78.635-19.243-27.989-44.288-61.099-74.965-94.635-38.144-41.771-85.504-84.779-141.611-119.467-68.053-42.027-149.589-72.149-242.603-72.149-31.317-0.384-65.707 3.371-99.84 11.349-22.955 5.376-37.205 28.331-31.829 51.285s28.331 37.205 51.285 31.829zM427.819 488.192l107.989 107.989c-7.765 2.603-15.872 4.011-24.021 4.309-21.888 0.768-43.947-6.784-61.184-22.869s-26.325-37.547-27.093-59.435c-0.341-10.155 1.067-20.309 4.309-30.037zM255.275 315.605l108.928 108.928c-18.517 29.483-27.136 63.317-25.941 96.683 1.536 43.605 19.755 86.741 54.229 118.827s78.763 47.232 122.368 45.696c29.525-1.024 58.837-9.728 84.651-25.941l99.072 99.072c-58.795 34.091-123.52 51.029-187.051 51.797-73.984 0-140.16-23.851-197.717-59.435-47.744-29.525-89.131-66.859-123.477-104.448-27.477-30.080-50.133-59.947-67.627-85.376-13.909-20.267-24.32-37.248-31.232-49.237 44.8-77.739 101.376-144.171 163.883-196.565zM12.501 72.832l182.229 182.229c-73.856 63.104-139.477 143.275-189.653 236.757-6.315 11.904-6.997 26.411-0.555 39.253 0 0 16.896 33.664 47.787 78.635 19.243 27.989 44.288 61.099 74.965 94.635 38.144 41.771 85.504 84.779 141.611 119.467 68.053 42.069 149.589 72.192 243.627 72.192 85.035-1.024 171.477-25.643 248.107-75.051l190.549 190.549c16.683 16.683 43.691 16.683 60.331 0s16.683-43.691 0-60.331l-378.709-378.709c-0.085-0.085-0.213-0.213-0.299-0.299l-179.584-179.627c-0.341-0.299-0.683-0.683-1.024-1.024l-379.051-379.008c-16.683-16.683-43.691-16.683-60.331 0s-16.683 43.691 0 60.331z'></path>\n            </g>\n        </svg>\n    ),\n\n    CopySvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M810 896v-598h-468v598h468zM810 214q34 0 60 25t26 59v598q0 34-26 60t-60 26h-468q-34 0-60-26t-26-60v-598q0-34 26-59t60-25h468zM682 42v86h-512v598h-84v-598q0-34 25-60t59-26h512z' />\n            </g>\n        </svg>\n    ),\n\n    FacebookSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path\n                    fill='rgb(64, 115, 220)'\n                    d='M512 1024c-282.77 0-512-229.23-512-512v0c0-282.77 229.23-512 512-512v0c282.77 0 512 229.23 512 512v0c0 282.77-229.23 512-512 512v0z'\n                ></path>\n                <path\n                    fill='rgb(255, 255, 255)'\n                    d='M661.824 525.248h-84.416v302.464h-125.952v-302.464h-59.52v-106.56h59.52v-69.056c-0.006-0.507-0.010-1.105-0.010-1.704 0-19.029 3.549-37.229 10.021-53.975l-0.348 1.023c7.579-20.772 20.782-37.979 37.77-50.283l0.31-0.213c20.689-13.939 46.176-22.25 73.603-22.25 1.867 0 3.725 0.039 5.574 0.115l-0.265-0.009 93.44 0.704v103.808h-67.84c-0.269-0.010-0.584-0.015-0.901-0.015-6.195 0-11.899 2.101-16.439 5.628l0.061-0.045c-5.623 5.321-9.122 12.835-9.122 21.167 0 0.839 0.036 1.671 0.105 2.492l-0.007-0.107v62.976h95.488z'\n                ></path>\n            </g>\n        </svg>\n    ),\n\n    MessageSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path\n                    fill='rgb(255, 255, 255)'\n                    stroke='rgb(207, 210, 212)'\n                    strokeLinejoin='miter'\n                    strokeLinecap='butt'\n                    strokeMiterlimit='4'\n                    strokeWidth='26.030809075949787'\n                    d='M947.886 406.185c-10.43-89.79-48.115-169.265-104.443-231.565l0.32 0.359c-89.539-99.576-218.793-161.916-362.607-161.916-80.305 0-156.069 19.438-222.846 53.864l2.728-1.278c-74.527 37.728-135.439 92.849-179.002 160.234l-1.079 1.782c-42.66 64.694-68.054 144.050-68.054 229.336 0 9.065 0.287 18.063 0.852 26.985l-0.062-1.219c2.675 50.326 13.905 97.33 32.262 140.577l-1.025-2.718c25.906 61.166 62.949 113 108.998 155.157l0.331 0.299c4.176 3.61 6.802 8.915 6.802 14.833 0 0.404-0.012 0.806-0.036 1.204l0.003-0.055c-0.26 46.855 0 93.711 0 140.566v69.294c3.696-1.978 6.143-3.176 8.486-4.581q89.182-53.78 178.259-107.715c2.392-1.564 5.32-2.494 8.466-2.494 1.738 0 3.41 0.284 4.971 0.808l-0.11-0.032c36.586 9.926 78.593 15.629 121.932 15.629 30.511 0 60.363-2.827 89.306-8.232l-2.991 0.464c114.363-19.677 212.306-78.841 281.382-162.678l0.636-0.795c62.218-72.608 100.089-167.677 100.089-271.59 0-19.225-1.296-38.147-3.806-56.684l0.239 2.161z'\n                ></path>\n                <path\n                    fill='rgb(0, 128, 255)'\n                    d='M148.74 620.575l272.074-271.449 132.028 128.332 243.596-128.332-273.219 276.76-127.499-129.373z'\n                ></path>\n            </g>\n        </svg>\n    ),\n\n    PasteSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M832 363.733h-341.333c-70.692 0-128 57.308-128 128v0 341.333c0 70.692 57.308 128 128 128v0h341.333c70.692 0 128-57.308 128-128v0-341.333c0-70.692-57.308-128-128-128v0zM874.667 833.067c0 23.564-19.103 42.667-42.667 42.667v0h-341.333c-23.564 0-42.667-19.103-42.667-42.667v0-341.333c0-23.564 19.103-42.667 42.667-42.667v0h341.333c23.564 0 42.667 19.103 42.667 42.667v0z'></path>\n                <path d='M426.667 150.4h42.667c23.564 0 42.667-19.103 42.667-42.667s-19.103-42.667-42.667-42.667v0h-42.667c-23.564 0-42.667 19.103-42.667 42.667s19.103 42.667 42.667 42.667v0z'></path>\n                <path d='M640 150.4h34.56c1.849 0.281 3.982 0.441 6.153 0.441 23.847 0 43.179-19.332 43.179-43.179 0-21.349-15.494-39.079-35.85-42.559l-0.256-0.036c-7.909-1.297-17.065-2.070-26.39-2.133l-0.063-0h-21.333c-23.564 0-42.667 19.103-42.667 42.667s19.103 42.667 42.667 42.667v0z'></path>\n                <path d='M746.667 252.8c0 23.564 19.103 42.667 42.667 42.667s42.667-19.103 42.667-42.667v0-17.067c-0.063-9.388-0.837-18.544-2.269-27.48l0.136 1.027c-3.116-21.053-21.062-37.025-42.738-37.025-23.847 0-43.179 19.332-43.179 43.179 0 2.498 0.212 4.947 0.619 7.329l-0.036-0.256c0.109 1.975 0.171 4.287 0.171 6.613s-0.062 4.638-0.185 6.934l0.014-0.32z'></path>\n                <path d='M106.667 513.067c23.564 0 42.667-19.103 42.667-42.667v0-42.667c0-23.564-19.103-42.667-42.667-42.667s-42.667 19.103-42.667 42.667v0 42.667c0 23.564 19.103 42.667 42.667 42.667v0z'></path>\n                <path d='M251.733 747.733h-30.293c-1.849-0.281-3.982-0.441-6.153-0.441-23.847 0-43.179 19.332-43.179 43.179 0 21.349 15.494 39.079 35.85 42.559l0.256 0.036c7.909 1.297 17.065 2.070 26.39 2.133l0.063 0h17.067c23.564 0 42.667-19.103 42.667-42.667s-19.103-42.667-42.667-42.667v0z'></path>\n                <path d='M149.333 641.067c0-23.564-19.103-42.667-42.667-42.667s-42.667 19.103-42.667 42.667v0 21.333c0.063 9.388 0.837 18.544 2.269 27.48l-0.136-1.027c3.517 20.612 21.247 36.105 42.595 36.105 23.847 0 43.179-19.332 43.179-43.179 0-2.171-0.16-4.304-0.469-6.389l0.029 0.236c-0.109-1.975-0.171-4.287-0.171-6.613s0.062-4.638 0.185-6.934l-0.014 0.32z'></path>\n                <path d='M256 65.067h-21.333c-9.388 0.063-18.544 0.837-27.48 2.269l1.027-0.136c-21.053 3.116-37.025 21.062-37.025 42.738 0 23.847 19.332 43.179 43.179 43.179 2.498 0 4.947-0.212 7.329-0.619l-0.256 0.036h34.56c23.564 0 42.667-19.103 42.667-42.667s-19.103-42.667-42.667-42.667v0z'></path>\n                <path d='M114.773 171.733c-1.938-0.312-4.171-0.49-6.447-0.49-21.328 0-39.001 15.649-42.163 36.091l-0.030 0.239c-1.297 7.909-2.070 17.065-2.133 26.39l-0 0.063v23.040c0 23.564 19.103 42.667 42.667 42.667s42.667-19.103 42.667-42.667v0-21.333c-0.109-1.975-0.171-4.287-0.171-6.613s0.062-4.638 0.185-6.934l-0.014 0.32c0.573-2.621 0.9-5.632 0.9-8.72 0-21.018-15.198-38.487-35.204-42.016l-0.257-0.038z'></path>\n            </g>\n        </svg>\n    ),\n\n    PhotoSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M863.987 0h-703.973c-88.336 0.092-159.921 71.677-160.013 160.005l-0 0.009v706.452c0.092 86.967 70.568 157.442 157.526 157.534l708.94 0c86.967-0.092 157.442-70.568 157.534-157.526l0-0.009v-706.452c-0.092-88.336-71.677-159.921-160.005-160.013l-0.009-0zM943.966 863.987c-0.061 44.147-35.833 79.919-79.974 79.98l-0.006 0h-703.973c-44.147-0.061-79.919-35.833-79.98-79.974l-0-0.006v-3.18l258.156-383.138 212.022 314.584c7.285 10.712 19.418 17.656 33.172 17.656s25.887-6.944 33.083-17.517l0.089-0.139 140.611-208.68 186.853 277.235zM943.966 717.662l-153.654-228.029c-7.285-10.712-19.418-17.656-33.172-17.656s-25.887 6.944-33.083 17.517l-0.089 0.139-140.611 208.68-211.968-314.584c-7.285-10.712-19.418-17.656-33.172-17.656s-25.887 6.944-33.083 17.517l-0.089 0.139-225.011 334.147v-557.864c0.031-44.17 35.814-79.972 79.974-80.034l0.006-0h703.973c44.147 0.061 79.919 35.833 79.98 79.974l0 0.006z'></path>\n            </g>\n        </svg>\n    ),\n\n    ChatSvg: () => (\n        <svg {...defaultSetting} width='1.3em'>\n            <g>\n                <path d='M1159.659 400.885c0 76.533-2.437 153.182 0.696 229.541-3.434 91.614-76.699 165.040-167.926 168.722l-0.342 0.011c-144.363 0-288.725 0.58-433.088 0.754-42.067 0-41.487 0-56.573 37.657-21.005 52.221-42.763 104.442-64.58 156.664-6.963 16.653-16.479 30.346-38.063 29.824-19.18-0.322-35.219-13.396-40.026-31.095l-0.068-0.296c-22.165-54.774-45.549-109.026-66.089-164.381-3.724-16.952-18.615-29.45-36.425-29.45-2.012 0-3.987 0.16-5.912 0.467l0.212-0.028c-27.735 1.451-55.645 0.406-83.496 0-92.997-2.012-167.648-77.741-167.92-170.969l-0-0.026v-456.587c0.23-94.777 77.114-171.52 171.923-171.52 0.327 0 0.653 0.001 0.979 0.003l-0.050-0h821.846c88.852 4.042 159.954 74.721 164.653 163.022l0.018 0.431c0.348 39.978 0 80.015 0 119.993q0.29 58.546 0.232 117.266zM394.792 861.882l9.69-0.348c13.868-33.422 27.677-66.901 41.719-100.323 14.738-34.814 23.209-40.616 60.693-40.616l461.984-0.348c4.461 0.728 9.602 1.145 14.84 1.145 53.452 0 96.783-43.331 96.783-96.783 0-4.043-0.248-8.029-0.729-11.942l0.047 0.469c1.567-145.059 1.335-290.582 0-435.873 0.015-0.64 0.024-1.394 0.024-2.151 0-52.715-42.734-95.449-95.449-95.449-1.682 0-3.354 0.044-5.015 0.129l0.233-0.010q-392.82 0-785.639 0.348c-4.837-0.828-10.407-1.301-16.089-1.301-55.311 0-100.149 44.838-100.149 100.149 0 5.663 0.47 11.217 1.373 16.624l-0.081-0.585c0 104.442-0.406 208.885 0 313.327 0 42.531 0.522 85.237 4.468 127.652 1.866 47.042 40.454 84.47 87.783 84.47 2.187 0 4.356-0.080 6.503-0.237l-0.287 0.017c36.555 0.696 73.052 0.348 109.607 0.58 43.228 0.29 50.248 5.048 66.611 44.272q20.598 48.218 41.081 96.783z'></path>\n            </g>\n        </svg>\n    ),\n\n    SendSvg: () => (\n        <svg {...defaultSetting} viewBox='0 0 1021 1024'>\n            <g>\n                <path d='M74.086 0c12.828 3.050 23.81 6.668 34.375 11.086l-1.453-0.539q436.429 217.702 872.602 435.968c24.703 10.983 41.617 35.306 41.617 63.58 0 0.85-0.015 1.696-0.046 2.539l0.003-0.122c0.019 0.603 0.030 1.312 0.030 2.023 0 27.979-16.636 52.072-40.556 62.927l-0.434 0.176q-437.709 218.931-875.52 437.658c-9.522 5.531-20.954 8.795-33.149 8.795-17.323 0-33.108-6.587-44.985-17.394l0.054 0.049c-16.281-12.679-26.653-32.283-26.653-54.31 0-7.923 1.342-15.532 3.811-22.613l-0.146 0.482 116.941-406.118c1.005-3.57 1.582-7.669 1.582-11.904s-0.578-8.334-1.658-12.224l0.076 0.32c-38.605-135.066-77.824-269.978-116.582-405.043-1.954-6.332-3.079-13.611-3.079-21.153 0-40.616 32.638-73.609 73.118-74.181l0.054-0.001zM71.936 73.728c1.28 5.53 1.946 9.114 2.918 12.595q57.805 199.68 115.763 399.36c2.51 7.94 3.957 17.071 3.957 26.539 0 9.155-1.352 17.994-3.868 26.329l0.167-0.644q-57.293 199.27-114.074 398.694c-1.075 3.789-1.741 7.731-2.918 13.158l876.595-437.606z'></path>\n            </g>\n        </svg>\n    ),\n\n    TrashSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M352.402 739.767c7.086 9.248 18.135 15.151 30.562 15.151 8.030 0 15.484-2.465 21.647-6.679l-0.132 0.085 98.962-99.401 98.962 99.401c5.847 2.958 12.746 4.69 20.050 4.69 24.965 0 45.202-20.238 45.202-45.202 0-7.304-1.732-14.203-4.808-20.309l0.118 0.259-99.328-99.035 99.401-98.962c2.84-5.747 4.502-12.512 4.502-19.665 0-24.965-20.238-45.202-45.202-45.202-7.23 0-14.064 1.697-20.124 4.716l0.262-0.118-98.962 99.401-99.035-99.401c-6.031-4.129-13.486-6.594-21.515-6.594-12.428 0-23.476 5.904-30.495 15.060l-0.067 0.092c-9.013 7.094-14.748 18.003-14.748 30.252 0 8.006 2.45 15.441 6.642 21.593l-0.086-0.133 99.401 98.962-99.401 99.035c-4.129 6.031-6.594 13.486-6.594 21.515 0 12.428 5.904 23.476 15.060 30.495l0.092 0.067z'></path>\n                <path d='M887.515 42.642h-750.958c-28.277 0-51.2 22.923-51.2 51.2h0v153.6c0 28.277 22.923 51.2 51.2 51.2v-0h34.158v554.642c-0 70.692 57.308 128 128 128v0h426.642c70.692 0 128-57.308 128-128v0-554.642h34.158c28.277 0 51.2-22.923 51.2-51.2v-153.6c0-28.277-22.923-51.2-51.2-51.2v-0zM768 853.285c0 23.551-19.092 42.642-42.642 42.642v-0h-426.642c-23.551 0-42.642-19.092-42.642-42.642v-554.642h512zM853.358 213.285h-682.642v-85.285h682.642z'></path>\n            </g>\n        </svg>\n    ),\n\n    BoxSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M809.003 291.328l-297.003 171.819-297.003-171.819 275.456-157.397c4.779-2.731 9.899-4.48 15.147-5.291 9.301-1.451 18.987 0.128 27.904 5.291zM491.776 979.669c6.016 3.243 12.928 5.077 20.224 5.077 7.381 0 14.336-1.877 20.395-5.163 15.189-2.475 29.909-7.68 43.392-15.36l298.709-170.709c26.368-15.232 45.227-38.272 55.424-64.597 5.675-14.592 8.619-30.165 8.747-46.251v-341.333c0-20.395-4.821-39.723-13.397-56.917-0.939-3.029-2.219-5.973-3.883-8.832-1.963-3.371-4.267-6.357-6.912-8.96-1.323-1.835-2.731-3.669-4.139-5.419-9.813-12.203-21.845-22.528-35.456-30.507l-299.051-170.88c-26.027-15.019-55.467-19.84-83.371-15.531-15.488 2.432-30.507 7.637-44.245 15.488l-298.709 170.709c-16.341 9.429-29.824 21.888-40.149 36.267-2.56 2.56-4.864 5.547-6.784 8.832-1.664 2.901-2.987 5.888-3.925 8.96-1.707 3.413-3.243 6.955-4.608 10.496-5.632 14.635-8.576 30.208-8.704 45.995v341.632c0.043 30.293 10.581 58.155 28.331 80.128 9.813 12.203 21.845 22.528 35.456 30.507l299.051 170.88c13.824 7.979 28.587 13.099 43.605 15.445zM469.333 537.045v340.949l-277.12-158.336c-4.736-2.773-8.832-6.315-12.16-10.453-5.931-7.339-9.387-16.469-9.387-26.539v-318.379zM554.667 877.995v-340.949l298.667-172.757v318.379c-0.043 5.163-1.067 10.496-2.987 15.445-3.413 8.789-9.6 16.384-18.176 21.333z'></path>\n            </g>\n        </svg>\n    ),\n\n    ChatGroupSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M853.333 315.989h-128v-85.333c0-70.692-57.308-128-128-128v0h-426.667c-70.692 0-128 57.308-128 128v0 256c0 70.692 57.308 128 128 128v0h66.133l61.867 68.693v15.36c0 70.692 57.308 128 128 128v0h151.467l64.427 72.96c11.784 13.316 28.917 21.668 48 21.668s36.216-8.352 47.941-21.6l0.059-0.068 64.427-72.96h50.347c70.692 0 128-57.308 128-128v0-256c-0.724-70.14-57.751-126.72-127.994-126.72-0.002 0-0.005 0-0.007 0l0-0zM170.667 529.323c-23.564 0-42.667-19.103-42.667-42.667v0-256c0-23.564 19.103-42.667 42.667-42.667v0h426.667c23.564 0 42.667 19.103 42.667 42.667v0 256c0 23.564-19.103 42.667-42.667 42.667v0h-173.653l-74.24 85.333-74.24-85.333zM896 699.989c0 23.564-19.103 42.667-42.667 42.667v0h-88.32l-74.24 88.747-74.24-88.747h-189.867c-23.564 0-42.667-19.103-42.667-42.667v0c5.018-3.359 9.361-7.16 13.166-11.45l0.061-0.070 64.427-72.96h135.68c70.692 0 128-57.308 128-128v0-85.333h128c23.564 0 42.667 19.103 42.667 42.667v0z'></path>\n            </g>\n        </svg>\n    ),\n\n    CameraSvg: () => (\n        <svg {...defaultSetting} height='1em' width='1.26em' viewBox='0 0 1292 1024'>\n            <g>\n                <path d='M1291.922 847.872v-508.006c-0.833-26.464-22.486-47.599-49.075-47.599-10.77 0-20.73 3.468-28.824 9.347l0.142-0.098c-2.995 2.114-5.873 4.287-8.222 6.284l-177.362 145.354v-77.346c0.008-0.545 0.013-1.187 0.013-1.831 0-39.161-17.478-74.24-45.060-97.862l-0.175-0.146c-23.541-20.16-54.359-32.43-88.042-32.43-2.084 0-4.157 0.047-6.218 0.14l0.293-0.011h-572.315v-36.471c36.432-17.754 61.091-54.509 61.091-97.024 0-8.516-0.989-16.801-2.859-24.746l0.145 0.729c-11.177-49.791-55.008-86.437-107.399-86.437-49.984 0-92.177 33.356-105.534 79.024l-0.195 0.777c-2.864 9.182-4.514 19.739-4.514 30.682 0 40.309 22.387 75.39 55.406 93.487l0.554 0.278c2.070 0.978 3.85 2.176 5.422 3.599l-0.019-0.017c0.102 0.583 0.161 1.254 0.161 1.938s-0.059 1.355-0.171 2.008l0.010-0.070c-0.277 1.793-0.435 3.861-0.435 5.966 0 0.918 0.030 1.828 0.089 2.731l-0.006-0.123v23.785h-87.565c-0.043-0-0.094-0-0.145-0-66.893 0-122.009 50.422-129.415 115.332l-0.056 0.599c-0.711 7.244-1.117 15.658-1.117 24.167 0 4.369 0.107 8.713 0.318 13.029l-0.024-0.608v494.675c-0.027 0.987-0.042 2.148-0.042 3.313 0 71.357 57.847 129.204 129.204 129.204 0.882 0 1.762-0.009 2.64-0.026l-0.131 0.002h766.179c0.177 0.001 0.387 0.001 0.596 0.001 71.747 0 129.909-58.162 129.909-129.909 0-0.537-0.003-1.074-0.010-1.61l0.001 0.082v-77.17l14.271 11.746 164.441 134.607c9.082 8.955 21.56 14.484 35.33 14.484 7.978 0 15.523-1.856 22.226-5.161l-0.295 0.131c16.72-8.252 28.019-25.181 28.019-44.749 0-1.718-0.087-3.415-0.257-5.088l0.017 0.21c-1.116-24.138-1.057-49.097-0.998-73.176zM1028.405 580.713c46.983-38.115 94.26-76.994 140.186-114.58l24.666-20.203v377.276l-1.644-1.351-61.078-50.272q-50.683-41.698-101.425-83.278l-0.763-0.646v-0.998c0.352-32.83 0.352-67.48 0-105.947zM98.724 413.276c-0.078-2.93-0.122-6.38-0.122-9.841 0-12.726 0.599-25.311 1.77-37.73l-0.121 1.586c1.973-13.025 12.72-23.007 25.941-23.782l0.076-0.004c20.144-0.763 41.11-0.705 60.961-0.705h556.928q78.11 0 156.161-0.352c16.482 2.306 29.071 16.171 29.364 33.034l0 0.030c0.294 10.689 0 21.73 0 32.418v479.464c0.277 1.607 0.436 3.457 0.436 5.344 0 18.229-14.777 33.006-33.006 33.006-1.833 0-3.632-0.149-5.384-0.437l0.191 0.026h-753.553c-28.131 0-39.583-11.393-39.642-39.29v-462.902l-0.059-9.866zM275.733 117.634c-1.979 1.995-4.721 3.229-7.752 3.23l-0 0c-0.123 0.005-0.267 0.008-0.411 0.008-5.968 0-10.806-4.838-10.806-10.806 0-0.003 0-0.005 0-0.008l-0 0c-0.001-0.047-0.001-0.103-0.001-0.159 0-3.026 1.211-5.769 3.174-7.771l-0.002 0.002c1.959-1.992 4.682-3.227 7.693-3.23l0.001-0c0.056-0.001 0.121-0.002 0.187-0.002 6.098 0 11.041 4.943 11.041 11.041 0 2.994-1.191 5.709-3.126 7.698l0.002-0.003z'></path>\n            </g>\n        </svg>\n    ),\n    CartSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M500.634 975.36h-357.069c-0.523 0.007-1.141 0.011-1.76 0.011-70.704 0-129.363-51.571-140.413-119.15l-0.111-0.822c-0.805-6.379-1.264-13.76-1.264-21.248 0-16.385 2.199-32.257 6.318-47.336l-0.293 1.257c16.589-80.64 32.717-161.69 47.411-242.33 15.36-73.011 29.389-146.074 44.595-218.624 13.679-59.809 63.671-104.738 125.067-110.649l0.578-0.045h53.094c0.205 0.019 0.444 0.029 0.685 0.029 3.264 0 6.074-1.945 7.333-4.74l0.020-0.051c16.589-31.283 31.795-63.078 50.278-94.822 30.122-49.716 81.681-83.843 141.531-89.593l0.754-0.059c7.752-1.098 16.707-1.725 25.807-1.725 75.411 0 140.769 43.039 172.852 105.894l0.509 1.098 41.267 78.234c1.114 2.564 3.625 4.325 6.546 4.325 0.364 0 0.721-0.027 1.071-0.080l-0.039 0.005h53.094c61.134 6.722 110.209 51.313 123.566 109.533l0.185 0.957c16.128 77.312 31.795 155.085 47.411 232.858s32.256 158.72 47.411 237.107c2.679 10.314 4.216 22.155 4.216 34.356 0 78.469-63.611 142.080-142.080 142.080-0.132 0-0.264-0-0.397-0.001l0.020 0zM500.634 880.538h354.765c0.528 0.021 1.147 0.033 1.77 0.033 26.184 0 47.411-21.227 47.411-47.411 0-4.569-0.646-8.987-1.853-13.168l0.083 0.335c-8.55-40.294-16.589-80.64-24.678-121.395l-71.373-349.082c-4.374-22.031-23.549-38.408-46.548-38.408-0.303 0-0.606 0.003-0.908 0.009l0.045-0.001h-521.421c-0.257-0.005-0.559-0.008-0.863-0.008-23 0-42.174 16.377-46.498 38.106l-0.050 0.302c-4.762 24.166-9.984 47.411-14.694 72.55q-39.782 196.813-80.742 394.086c-1.239 4.609-1.951 9.902-1.951 15.36s0.712 10.751 2.048 15.789l-0.097-0.429c6.225 19.418 24.12 33.227 45.24 33.227 0.764 0 1.523-0.018 2.278-0.054l-0.107 0.004zM610.202 216.422c0.066-0.637 0.104-1.377 0.104-2.125s-0.038-1.488-0.111-2.217l0.007 0.092-21.35-39.373c-17.593-30.75-50.203-51.137-87.575-51.137-17.615 0-34.173 4.529-48.571 12.487l0.517-0.262c-17.432 10.256-31.378 24.761-40.679 42.127l-0.281 0.574c-6.656 13.261-13.773 26.061-20.89 39.834z'></path>\n            </g>\n        </svg>\n    ),\n\n    ChartSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M543.744 905.301h-316.245c-59.146 0-107.093-47.947-107.093-107.093v0c-1.749-214.187-1.749-428.373-1.749-640.725-0.072-0.85-0.113-1.838-0.113-2.837 0-19.747 16.008-35.755 35.755-35.755s35.755 16.008 35.755 35.755c0 0.367-0.006 0.734-0.017 1.098l0.001-0.053v642.475c-0.002 0.143-0.003 0.312-0.003 0.481 0 17.66 12.818 32.326 29.659 35.201l0.211 0.030h648.32c0.478-0.023 1.037-0.036 1.6-0.036 19.731 0 35.727 15.995 35.727 35.727 0 19.168-15.096 34.811-34.048 35.688l-0.079 0.003z'></path>\n                <path d='M251.008 557.952v-164.267c-0.001-0.179-0.001-0.392-0.001-0.604 0-66.967 40.599-124.451 98.527-149.181l1.058-0.402c21.48-11.068 46.876-17.556 73.788-17.556 44.491 0 84.84 17.734 114.364 46.518l-0.034-0.033c34.201 29.883 55.686 73.581 55.686 122.296 0 0.505-0.002 1.010-0.007 1.515l0.001-0.077v95.317c-0.010 0.745-0.016 1.625-0.016 2.507 0 95.286 67.902 174.712 157.958 192.53l1.247 0.206c11.579 1.974 25.132 3.265 38.927 3.578l0.327 0.006h39.253c0.051-0 0.111-0 0.171-0 19.912 0 36.054 16.142 36.054 36.054 0 19.852-16.045 35.956-35.874 36.053l-0.009 0c-6.826 0.308-14.831 0.484-22.876 0.484-18.72 0-37.217-0.951-55.447-2.806l2.291 0.189c-41.025-4.628-78.101-18.315-110.237-39.009l1.010 0.609c-64.179-40.308-109.378-105.796-121.863-182.277l-0.206-1.531c-2.036-12.553-3.2-27.023-3.2-41.764 0-0.003 0-0.005 0-0.008l-0 0.001v-100.651c-1.070-54.573-45.562-98.403-100.291-98.403-51.209 0-93.455 38.373-99.553 87.933l-0.049 0.486c-0.169 2.082-0.266 4.507-0.266 6.955s0.097 4.873 0.286 7.272l-0.020-0.317v325.888c0.014 0.368 0.021 0.8 0.021 1.234 0 19.723-15.989 35.712-35.712 35.712s-35.712-15.989-35.712-35.712c0-0.434 0.008-0.866 0.023-1.297l-0.002 0.062v-167.509z'></path>\n            </g>\n        </svg>\n    ),\n    OtherSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M35.033 1024c-20.761-6.548-35.551-25.63-35.551-48.167 0-2.544 0.188-5.044 0.552-7.487l-0.034 0.276c0.743-121.099 0.343-242.256 0.343-363.355 0-34.861 15.887-50.634 50.977-50.634h367.527c2.186-0.383 4.704-0.602 7.272-0.602 24.429 0 44.234 19.804 44.234 44.234 0 2.534-0.213 5.017-0.622 7.434l0.036-0.26c0 121.099-0.4 242.256 0.286 363.355 0.329 2.158 0.517 4.648 0.517 7.182 0 22.567-14.914 41.65-35.423 47.931l-0.355 0.094zM400.788 955.021v-331.466h-331.466v331.466z'></path>\n                <path d='M588.923 1024c-20.654-6.655-35.335-25.705-35.335-48.184 0-2.578 0.193-5.112 0.566-7.586l-0.034 0.278c0.743-121.785 0.4-243.627 0-365.412-0.089-1.085-0.139-2.35-0.139-3.626 0-12.596 4.928-24.042 12.961-32.514l-0.020 0.021c7.832-7.655 18.559-12.379 30.389-12.379 0.608 0 1.213 0.012 1.815 0.037l-0.086-0.003h378.957c1.016-0.086 2.199-0.136 3.393-0.136 23.451 0 42.462 19.011 42.462 42.462 0 1.194-0.049 2.377-0.146 3.547l0.010-0.153v376.899c0.027 0.588 0.042 1.277 0.042 1.969 0 21.581-14.805 39.705-34.813 44.768l-0.319 0.068zM623.212 623.155v331.466h331.466v-331.466z'></path>\n                <path d='M469.767 234.198v185.278c0.274 1.849 0.431 3.982 0.431 6.153 0 24.398-19.778 44.176-44.176 44.176-2.188 0-4.339-0.159-6.442-0.466l0.239 0.029h-369.584c-1.889 0.287-4.069 0.451-6.287 0.451-24.335 0-44.062-19.727-44.062-44.062 0-2.236 0.167-4.433 0.488-6.579l-0.030 0.242v-369.584c-0.286-1.887-0.45-4.064-0.45-6.279 0-24.335 19.727-44.062 44.062-44.062 2.215 0 4.392 0.163 6.52 0.479l-0.241-0.029h369.584c1.866-0.279 4.020-0.439 6.211-0.439 24.398 0 44.176 19.778 44.176 44.176 0 2.191-0.159 4.345-0.468 6.45l0.029-0.239v184.306zM400.616 400.673v-331.466h-331.466v331.466z'></path>\n                <path d='M789.231 469.367c-0.102 0-0.222 0-0.343 0-129.596 0-234.655-105.059-234.655-234.655s105.059-234.655 234.655-234.655c129.596 0 234.655 105.059 234.655 234.655 0 0.12-0 0.241-0 0.361l0-0.018c-0.26 129.302-105.010 234.052-234.287 234.312l-0.025 0zM955.364 235.055c0.001-0.187 0.001-0.407 0.001-0.628 0-91.879-74.483-166.361-166.361-166.361s-166.361 74.483-166.361 166.361c0 91.798 74.352 166.23 166.119 166.361l0.013 0c91.593-0.127 165.878-74.051 166.59-165.494l0-0.068z'></path>\n            </g>\n        </svg>\n    ),\n    DoubleRightSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M584.832 755.499l213.333-213.333c16.683-16.683 16.683-43.691 0-60.331l-213.333-213.333c-16.683-16.683-43.691-16.683-60.331 0s-16.683 43.691 0 60.331l183.168 183.168-183.168 183.168c-16.683 16.683-16.683 43.691 0 60.331s43.691 16.683 60.331 0zM286.165 755.499l213.333-213.333c16.683-16.683 16.683-43.691 0-60.331l-213.333-213.333c-16.683-16.683-43.691-16.683-60.331 0s-16.683 43.691 0 60.331l183.168 183.168-183.168 183.168c-16.683 16.683-16.683 43.691 0 60.331s43.691 16.683 60.331 0z'></path>\n            </g>\n        </svg>\n    ),\n    DoubleLeftSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M499.499 695.168l-183.168-183.168 183.168-183.168c16.683-16.683 16.683-43.691 0-60.331s-43.691-16.683-60.331 0l-213.333 213.333c-16.683 16.683-16.683 43.691 0 60.331l213.333 213.333c16.683 16.683 43.691 16.683 60.331 0s16.683-43.691 0-60.331zM798.165 695.168l-183.168-183.168 183.168-183.168c16.683-16.683 16.683-43.691 0-60.331s-43.691-16.683-60.331 0l-213.333 213.333c-16.683 16.683-16.683 43.691 0 60.331l213.333 213.333c16.683 16.683 43.691 16.683 60.331 0s16.683-43.691 0-60.331z'></path>\n            </g>\n        </svg>\n    ),\n    DownSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M225.835 414.165l256 256c16.683 16.683 43.691 16.683 60.331 0l256-256c16.683-16.683 16.683-43.691 0-60.331s-43.691-16.683-60.331 0l-225.835 225.835-225.835-225.835c-16.683-16.683-43.691-16.683-60.331 0s-16.683 43.691 0 60.331z'></path>\n            </g>\n        </svg>\n    ),\n    RightSvg: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M414.165 798.165l256-256c16.683-16.683 16.683-43.691 0-60.331l-256-256c-16.683-16.683-43.691-16.683-60.331 0s-16.683 43.691 0 60.331l225.835 225.835-225.835 225.835c-16.683 16.683-16.683 43.691 0 60.331s43.691 16.683 60.331 0z'></path>\n            </g>\n        </svg>\n    ),\n    DetailSvg: () => (\n        <svg {...{ ...defaultSetting, viewBox: '0 0 20.55 23.126' }}>\n            <g>\n                <path\n                    d='M-11110.528 616.78q.029-8.194 0-16.39a2.772 2.772 0 0 1 2.284-2.827c.02 0 .036-.022.053-.033h14.039c.123.033.249.064.371.1a2.7 2.7 0 0 1 1.955 2.5c.02 2.326.008 4.651.008 6.977 0 .025-.008.053-.011.089h-1.988v-6.737c0-.613-.24-.853-.845-.853h-13.044c-.563 0-.817.254-.817.817v16.348a.7.7 0 0 0 .809.8h6.533v2.075h-.268c-2.074 0-4.146-.031-6.221.008h-.062a2.8 2.8 0 0 1-2.796-2.874zm17.8 2.1c-.583-.6-1.16-1.2-1.71-1.768a11.905 11.905 0 0 1-1.391.5 4.37 4.37 0 0 1-5.056-2.847 4.62 4.62 0 0 1 2.571-5.881 4.4 4.4 0 0 1 5.85 3.209 4.655 4.655 0 0 1-.491 3.38l-.05.095a.171.171 0 0 0-.006.045c.566.586 1.13 1.171 1.7 1.754a1.076 1.076 0 0 1 .3 1.051.971.971 0 0 1-.708.747 1.074 1.074 0 0 1-.293.042.979.979 0 0 1-.717-.33zm-4.479-8.8a3.107 3.107 0 0 0-2.439 3.912 3.01 3.01 0 0 0 3.1 2.264 3.1 3.1 0 0 0 2.822-3.1c-.039-.262-.059-.53-.12-.786a3.046 3.046 0 0 0-2.89-2.331 2.675 2.675 0 0 0-.474.038zm-9.282 1.26v-1.366h3.971v1.366zm0-4.144v-1.358h10.657v1.358zm-.006-4.149v-1.357h10.657v1.355z'\n                    transform='translate(-1362.972 -2053.944) translate(12474 1456.915)'\n                />\n            </g>\n        </svg>\n    ),\n    PlusDashedCircle: () => (\n        <svg {...defaultSetting} viewBox='0 0 23 23'>\n            <g id='Group_907' transform='translate(-593 -17.429)'>\n                <g\n                    id='Ellipse_68'\n                    fill='#fff'\n                    stroke='#0872d7'\n                    strokeDasharray='2 2'\n                    transform='translate(593 17.429)'\n                >\n                    <circle cx='11.5' cy='11.5' r='11.5' stroke='none' />\n                    <circle cx='11.5' cy='11.5' r='11' fill='none' />\n                </g>\n                <g id='Group_906' transform='translate(599.942 23.942)'>\n                    <path\n                        id='Line_206'\n                        d='M0 0L10 0'\n                        style={{\n                            stroke: '#0872d7',\n                            fill: 'none',\n                            strokeLinecap: 'round',\n                            strokeWidth: 2,\n                        }}\n                        transform='translate(.058 5.487)'\n                    />\n                    <path\n                        id='Line_207'\n                        d='M0 0L0 10'\n                        style={{\n                            stroke: '#0872d7',\n                            fill: 'none',\n                            strokeLinecap: 'round',\n                            strokeWidth: 2,\n                        }}\n                        transform='translate(5.058 .487)'\n                    />\n                </g>\n            </g>\n        </svg>\n    ),\n    DraftOrder: () => (\n        <svg {...defaultSetting}>\n            <g transform='scale(30)'>\n                <path\n                    d='M10.8,28.8c-1,0-1.9,0-2.9,0H4.4V5.3h23.5v6.5c0,0.2,0,0.4,0,0.6c0,0.8,0.3,1.3,1.1,1.4\n\t\t\t\tc0.7,0.1,1.2-0.5,1.2-1.3c0-2.6,0-5.1,0-7.7c0-1.4-0.3-1.7-1.7-1.7c-8.3,0-16.5,0-24.8,0C2.2,2.9,2,3.2,2,4.6\n\t\t\t\tc0,5.7,0,11.3,0,16.9c0,2.7,0,5.4,0,8.1c0,0.8,0.3,1.4,1.1,1.4c2.6,0,5.2,0,7.8,0c0.6,0,1.1-0.4,1.1-1c0,0,0-0.1,0-0.1\n\t\t\t\tc0-0.6-0.4-1.1-1-1.2C10.9,28.8,10.9,28.8,10.8,28.8z'\n                />\n                <path\n                    d='M32,20.5c-1.5-1.5-3.1-3.1-4.6-4.6c-0.8-0.8-1.3-0.8-2.1,0c-3.5,3.5-6.9,6.9-10.4,10.4\n\t\t\t\tc-0.3,0.3-0.5,0.7-0.5,1.1c-0.1,1.6,0,3.2,0,4.8c-0.1,0.6,0.4,1.2,1,1.3c0.1,0,0.2,0,0.3,0c0.8,0,1.6,0,2.4,0c0.8,0,1.5,0,2.3,0\n\t\t\t\tc0.5,0,0.9-0.2,1.2-0.5c3.5-3.5,7-6.9,10.5-10.4c0.6-0.4,0.7-1.1,0.3-1.7C32.3,20.7,32.2,20.6,32,20.5z M21.6,29.7\n\t\t\t\tc-1.4,1.6-3,1.6-4.9,1.4c0-1,0-2,0-3c0-0.2,0.1-0.4,0.3-0.5c3.1-3.1,6.2-6.2,9.3-9.3l3.3,3.3C27,24.2,24.2,26.8,21.6,29.7\n\t\t\t\tL21.6,29.7z'\n                />\n                <path\n                    d='M15.2,11.1c1.5,0,2.9,0,4.4,0c1.4,0,2.9,0,4.3,0c1,0,1.6-0.4,1.6-1.2c0-0.7-0.5-1.1-1.5-1.1\n\t\t\t\tc-2.9,0-5.8,0-8.7,0c-1,0-1.5,0.4-1.5,1.2S14.3,11.1,15.2,11.1z'\n                />\n                <path\n                    id='Path_4'\n                    d='M9,7.6c-1.3,0-2.3,1-2.4,2.2c0,0,0,0,0,0.1c0,1.3,1,2.4,2.3,2.4c1.3,0,2.4-1,2.4-2.4\n\t\t\t\tC11.4,8.7,10.3,7.6,9,7.6z'\n                />\n                <path\n                    d='M6.7,17c0,1.3,1,2.3,2.3,2.3c0,0,0,0,0.1,0c1.3,0,2.3-1,2.4-2.3c0-1.3-1.1-2.4-2.4-2.4\n\t\t\t\tC7.7,14.7,6.7,15.7,6.7,17z'\n                />\n                <path\n                    d='M16.9,18.2c0.7,0,1.4,0,2.1,0c0.6,0,1.1-0.4,1.2-1c0-0.1,0-0.1,0-0.2c0-0.6-0.4-1.1-1-1.1\n\t\t\t\tc-0.1,0-0.1,0-0.2,0c-1.4,0-2.8,0-4.1,0c-0.6-0.1-1.1,0.4-1.2,1c0,0.1,0,0.1,0,0.2c0,0.6,0.5,1.1,1.1,1.2c0,0,0.1,0,0.1,0\n\t\t\t\tC15.6,18.2,16.3,18.2,16.9,18.2z'\n                />\n            </g>\n        </svg>\n    ),\n    WeatherSunny: () => (\n        <svg {...defaultSetting} viewBox='0 0 24 24'>\n            <path id='Rectangle_257' fill='none' d='M0 0H24V24H0z' data-name='Rectangle 257' />\n            <g id='Layer'>\n                <g id='Vrstva_222' data-name='Vrstva 222'>\n                    <path\n                        id='Path_521'\n                        fill='#0872d7'\n                        fillRule='evenodd'\n                        d='M22 11h-2.07a7.88 7.88 0 0 0-1.62-3.9L20 5.38A1 1 0 0 0 18.62 4L16.9 5.69a8 8 0 0 0-3.43-1.55.7.7 0 0 0 0-.14V2a1 1 0 0 0-2 0v2A7.92 7.92 0 0 0 7.1 5.69L5.38 4A1 1 0 0 0 4 5.38L5.69 7.1A7.88 7.88 0 0 0 4.07 11H2a1 1 0 0 0 0 2h2.07a7.88 7.88 0 0 0 1.62 3.9L4 18.62A1 1 0 0 0 5.38 20l1.72-1.69A7.92 7.92 0 0 0 11.51 20v2a1 1 0 0 0 2 0v-2a.7.7 0 0 0 0-.14 8 8 0 0 0 3.43-1.55L18.62 20A1 1 0 0 0 20 18.62l-1.69-1.72a7.88 7.88 0 0 0 1.62-3.9H22a1 1 0 0 0 0-2zm-10 7a6 6 0 1 1 6-6 6 6 0 0 1-6 6z'\n                        data-name='Path 521'\n                    />\n                </g>\n            </g>\n        </svg>\n    ),\n    EmptyProduct: () => (\n        <svg {...defaultSetting} viewBox='0 0 113.122 134.255'>\n            <g\n                id='Group_1393'\n                data-name='Group 1393'\n                opacity='0.56'\n                transform='translate(4023.078 -1423.824)'\n            >\n                <path\n                    id='Path_256'\n                    d='M-3799.029 1672.055c0-9.087.017-18.175-.026-27.261a1.873 1.873 0 0 1 1.272-1.977q25.5-12.21 50.97-24.484c1.618-.778 1.813-.664 1.813 1.065q.005 27.328.031 54.656a1.887 1.887 0 0 1-1.275 1.98q-25.552 12.256-51.076 24.568c-1.459.7-1.707.53-1.707-1.153q-.003-13.698-.002-27.394zm10.172 15.9c.4-.15.944-.312 1.452-.556q11.318-5.444 22.626-10.908a5.189 5.189 0 0 0 1.026-.58 2.365 2.365 0 0 0 .819-2.713 2.3 2.3 0 0 0-2.242-1.723 4.371 4.371 0 0 0-1.859.541q-11.269 5.395-22.517 10.833a5.007 5.007 0 0 0-1.03.574 2.362 2.362 0 0 0-.863 2.8 2.688 2.688 0 0 0 2.589 1.732zm14.988-20.279c-.04-2.484-1.92-3.578-3.8-2.692q-6.181 2.92-12.323 5.92a2.489 2.489 0 0 0-1.384 3.374 2.5 2.5 0 0 0 3.458 1.171c4.2-1.976 8.406-3.959 12.546-6.062.747-.377 1.191-1.34 1.503-1.711z'\n                    style={{ fill: '#eceff4' }}\n                    data-name='Path 256'\n                    transform='translate(-164.989 -142.912)'\n                />\n                <path\n                    id='Path_257'\n                    d='M-4023.06 1646.692v-27.4c0-1.673.232-1.827 1.716-1.115 2.964 1.423 5.906 2.893 8.9 4.256a1.86 1.86 0 0 1 1.248 2c-.037 9.923.066 19.847-.076 29.768-.038 2.675 2.138 4.076 4.466 2.6s4.814-2.71 7.2-4.1c.819-.479 1.287-.348 1.842.412 3.572 4.891 7.184 9.753 10.792 14.617 1.06 1.428 2.38 1.78 3.626 1.005a2.836 2.836 0 0 0 1.181-2.746q-.023-13.369-.008-26.739c0-.308-.011-.616.006-.922.04-.74.385-1.084 1.115-.734 3.836 1.835 7.678 3.66 11.475 5.573.338.171.523.946.525 1.442q.046 15.543.026 31.086v23.71c0 1.677-.234 1.834-1.716 1.121q-25.6-12.323-51.2-24.634a1.7 1.7 0 0 1-1.127-1.8c.024-9.134.011-18.267.009-27.4z'\n                    style={{ fill: '#eceff4' }}\n                    data-name='Path 257'\n                    transform='translate(0 -142.844)'\n                />\n                <path\n                    id='Path_258'\n                    d='M-3951.357 1482.5c-3.049-.273-6.343-.571-9.639-.857a1.21 1.21 0 0 0-.608.11c-3.419 1.681-6.842 3.357-10.242 5.076a2.222 2.222 0 0 1-2.206.043c-5.078-2.49-10.186-4.919-15.271-7.392a5.846 5.846 0 0 1-1.063-.871 5.678 5.678 0 0 1 1.107-.971c3.574-1.771 7.17-3.5 10.757-5.246.385-.187.764-.39 1.154-.59l-2.867-4.149c-4.221 2.04-8.564 3.861-12.615 6.191-2.944 1.693-5.449 1.928-8.293.015a47.771 47.771 0 0 0-4.938-2.459 6.074 6.074 0 0 1-1.109-.961 6.358 6.358 0 0 1 1.153-.938c7.1-3.438 14.208-6.873 21.345-10.241a1.5 1.5 0 0 0 .995-1.891 29.185 29.185 0 0 1 24.362-33.164c14.988-2.543 29.952 7.732 33.088 22.72a27.976 27.976 0 0 1 .3 10.466 1.5 1.5 0 0 0 1.028 1.894c7.132 3.378 14.234 6.818 21.333 10.263a6.013 6.013 0 0 1 1.135.951 5.606 5.606 0 0 1-1.114.966q-25.061 12.072-50.134 24.121a2.221 2.221 0 0 1-2.2.023c-3.137-1.567-6.32-3.043-9.466-4.592-.38-.186-.641-.613-.958-.928a4.895 4.895 0 0 1 .947-.809c4.768-2.318 9.544-4.616 14.019-6.78zm-26.39-29.425a22.97 22.97 0 0 0 22.672 22.967 23 23 0 0 0 23.214-22.848 23.011 23.011 0 0 0-22.5-23.013 22.9 22.9 0 0 0-23.386 22.899z'\n                    style={{ fill: '#eceff4' }}\n                    data-name='Path 258'\n                    transform='translate(-11.701)'\n                />\n                <path\n                    id='Path_259'\n                    d='M-3940.053 1668.81c0 3.424.016 6.848-.02 10.271a4.075 4.075 0 0 1-.444 1.238 4.464 4.464 0 0 1-1.084-.774c-2.244-2.979-4.449-5.987-6.668-8.984-1.271-1.717-2.309-1.954-4.167-.927-1.726.955-3.436 1.94-5.164 2.892-1.121.617-1.448.453-1.45-.754-.01-7.374 0-14.749-.01-22.123 0-1.175.515-1.241 1.4-.812q8.348 4.028 16.708 8.031a1.444 1.444 0 0 1 .909 1.539c-.029 3.468-.01 6.936-.01 10.403z'\n                    style={{ fill: '#eceff4' }}\n                    data-name='Path 259'\n                    transform='translate(-47.148 -165.54)'\n                />\n                <path\n                    id='Path_260'\n                    d='M-3856.963 1492.668c-3.254 0-6.322.014-9.39-.012a5.4 5.4 0 0 1-1.8-.277 3.091 3.091 0 0 1-1.887-3.407 3.086 3.086 0 0 1 3.044-2.594c2.853-.045 5.707-.017 8.561-.019h1.471v-7.3c0-.878-.022-1.757.013-2.634a3.115 3.115 0 0 1 3.036-3.172 3.093 3.093 0 0 1 3.188 3.152c.068 2.808.027 5.619.031 8.429v1.528c3.389 0 6.628-.029 9.866.01a3.131 3.131 0 0 1 3.144 3.9 3.241 3.241 0 0 1-3.369 2.39c-3.154.017-6.309 0-9.645 0v5.709c0 1.317.023 2.635-.009 3.951-.05 2.079-1.366 3.466-3.2 3.419a3.126 3.126 0 0 1-3.05-3.417c-.024-3.148-.004-6.303-.004-9.656z'\n                    style={{ fill: '#eceff4' }}\n                    data-name='Path 260'\n                    transform='translate(-112.678 -36.403)'\n                />\n            </g>\n        </svg>\n    ),\n\n    SearchDocument: () => (\n        <svg {...defaultSetting}>\n            <g>\n                <path d='M22.14 874.558q1.284-362.823 0-725.736c-0.049-1.294-0.077-2.813-0.077-4.339 0-60.179 43.308-110.242 100.457-120.724l0.753-0.115c0.886 0 1.594-0.974 2.347-1.461h621.635c5.446 1.461 11.026 2.834 16.428 4.428 49.074 14.382 84.644 58.138 86.56 110.484l0.006 0.213c0.886 102.993 0.354 205.942 0.354 308.936 0 1.107-0.354 2.347-0.487 3.941h-88.027v-298.309c0-27.143-10.627-37.77-37.416-37.77h-577.577c-24.929 0-36.176 11.247-36.176 36.176v723.876c-0.245 1.464-0.385 3.15-0.385 4.869 0 17.118 13.877 30.995 30.995 30.995 1.841 0 3.645-0.161 5.397-0.468l-0.186 0.027h289.276v91.879h-11.867c-91.835 0-183.581-1.373-275.461 0.354h-2.745c-68.416-0.076-123.848-55.555-123.848-123.982 0-1.152 0.016-2.301 0.047-3.445l-0.004 0.169zM810.309 967.544c-25.815-26.567-51.364-53.135-75.717-78.286-16.426 7.39-36.87 14.924-57.862 21.184l-3.731 0.955c-12.304 2.785-26.435 4.38-40.938 4.38-84.284 0-155.982-53.887-182.521-129.088l-0.417-1.355c-8.113-21.174-12.811-45.666-12.811-71.256 0-84.876 51.689-157.679 125.307-188.647l1.346-0.503c20.324-7.858 43.842-12.411 68.424-12.411 93.319 0 171.314 65.609 190.375 153.216l0.235 1.286c3.49 14.198 5.493 30.499 5.493 47.267 0 37.677-10.109 72.992-27.762 103.383l0.529-0.986-2.214 4.207c-0.169 0.596-0.266 1.281-0.266 1.988 0 0.002 0 0.003 0 0.005l-0-0c25.062 25.948 50.035 51.851 75.275 77.666 9.138 8.698 14.821 20.952 14.821 34.534 0 4.266-0.561 8.402-1.613 12.337l0.076-0.333c-3.365 16.182-15.468 28.861-31.049 33.009l-0.3 0.068c-3.882 1.162-8.345 1.84-12.963 1.86l-0.011 0c-12.634-0.214-23.923-5.801-31.709-14.568l-0.039-0.044zM611.982 577.887c-64.828 11.939-113.293 68.017-113.293 135.415 0 13.465 1.934 26.478 5.541 38.777l-0.244-0.973c15.137 58.212 67.223 100.493 129.185 100.493 2.843 0 5.665-0.089 8.464-0.264l-0.383 0.019c70.326-6.52 124.957-65.236 124.957-136.712 0-0.194-0-0.389-0.001-0.583l0 0.030c-1.727-11.601-2.612-23.468-5.313-34.803-14.502-58.663-66.003-101.723-127.804-103.212l-0.163-0.003c-0.317-0.003-0.691-0.005-1.066-0.005-7.038 0-13.932 0.614-20.633 1.791l0.711-0.103zM200.983 633.679v-60.485h175.833v60.485zM200.983 450.186v-60.131h471.883v60.131zM200.717 266.472v-60.087h471.883v59.998z'></path>\n            </g>\n        </svg>\n    ),\n\n    PrimaryChevronRightSvg: () => (\n        <svg width='32' height='32' viewBox='0 0 32 32'>\n            <g id='Group_2750' data-name='Group 2750' transform='translate(-876 -875)'>\n                <circle\n                    id='Ellipse_278'\n                    data-name='Ellipse 278'\n                    style={{ fill: '#0872d7' }}\n                    cx='16'\n                    cy='16'\n                    r='16'\n                    transform='translate(876 875)'\n                />\n                <g id='ic-chevron-down' transform='translate(879 905) rotate(-90)'>\n                    <rect\n                        id='Rectangle_65'\n                        data-name='Rectangle 65'\n                        style={{ fill: 'none' }}\n                        width='28'\n                        height='28'\n                    />\n                    <g id='Layer' transform='translate(7.29 10.275)'>\n                        <g id='Vrstva_127' data-name='Vrstva 127'>\n                            <path\n                                id='Path_125'\n                                data-name='Path 125'\n                                style={{ fill: '#fff' }}\n                                d='M11.967,15.942a1.412,1.412,0,0,0,1.89,0l5.6-5.138A1.167,1.167,0,1,0,17.8,9.159l-4.744,4.286a.292.292,0,0,1-.385,0L8.177,9.159a1.17,1.17,0,1,0-1.54,1.762Z'\n                                transform='translate(-6.237 -8.814)'\n                            />\n                        </g>\n                    </g>\n                </g>\n            </g>\n        </svg>\n    ),\n\n    PlusThickerSvg: () => (\n        <svg {...defaultSetting} viewBox='0 0 13.413 13.413' width='13.413' height='13.413'>\n            <path\n                id='Path_62'\n                style={{ fill: 'currentcolor' }}\n                data-name='Path 62'\n                d='M3,12.548c0-.8.287-1.468.667-1.548h12c.409,0,.741.693.741,1.548s-.332,1.548-.741,1.548h-12c-.38-.08-.669-.75-.667-1.548Z'\n                transform='translate(-3 -5.841)'\n            />\n            <path\n                id='Path_63'\n                style={{ fill: 'currentcolor' }}\n                data-name='Path 63'\n                d='M12.548,3c.8,0,1.468.287,1.548.667v12c0,.409-.693.741-1.548.741S11,16.081,11,15.672v-12c.08-.38.75-.669,1.548-.667Z'\n                transform='translate(-5.841 -3)'\n            />\n        </svg>\n    ),\n\n    FacebookOutlinedSvg: () => (\n        <svg {...defaultSetting} width='19' height='19' viewBox='0 0 19 19'>\n            <g id='Group_1080' data-name='Group 1080' transform='translate(-343 -310)'>\n                <circle\n                    id='Ellipse_69'\n                    data-name='Ellipse 69'\n                    style={{ fill: '#fff' }}\n                    cx='9.5'\n                    cy='9.5'\n                    r='9.5'\n                    transform='translate(343 310)'\n                />\n                <g id='Group_911' data-name='Group 911' transform='translate(30 183)'>\n                    <path\n                        id='Path_172'\n                        data-name='Path 172'\n                        style={{ fill: '#4073dc' }}\n                        d='M944.25,346.407h0a7.5,7.5,0,0,1-7.5-7.5h0a7.5,7.5,0,0,1,7.5-7.5h0a7.5,7.5,0,0,1,7.5,7.5h0A7.5,7.5,0,0,1,944.25,346.407Z'\n                        transform='translate(-621.75 -202.407)'\n                    />\n                    <g id='Group_88' data-name='Group 88' transform='translate(320.597 131.939)'>\n                        <path\n                            id='Path_237'\n                            data-name='Path 237'\n                            style={{ fill: '#fff' }}\n                            d='M964.347,350.144h-1.319v4.726H961.06v-4.726h-.93v-1.665h.93V347.4a2.34,2.34,0,0,1,.151-.854,1.66,1.66,0,0,1,.595-.789,2.076,2.076,0,0,1,1.233-.346l1.46.011v1.622h-1.06a.419.419,0,0,0-.27.087.455.455,0,0,0-.141.368v.984h1.492Z'\n                            transform='translate(-960.13 -345.407)'\n                        />\n                    </g>\n                </g>\n            </g>\n        </svg>\n    ),\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/components/banner-notify-package/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders-draft/order-draft-home.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/products/products-table.tsx",["1686"],"import { CheckOutlined, CloseOutlined, ReloadOutlined } from '@ant-design/icons';\nimport { AutoComplete, Button, Col, Divider, Input, InputNumber, Row, Table } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { flatten, isNumber } from 'lodash';\nimport querystring from 'querystring';\nimport React, { FC, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IImage } from '../../collections/image';\nimport { IProduct } from '../../collections/product';\nimport { UploadImage } from '../../components';\nimport {\n    createCategory,\n    deleteProduct,\n    fetchCategory,\n    fetchProducts,\n    updateProduct,\n} from '../../reducers/productState/productAction';\nimport formatMoney, { formatterInput, parserInput } from '../../utils/format-money';\nimport Action from './action';\nimport AddProduct from './add-product';\nimport BtnRemoveProduct from './btn-remove-product';\nimport InputSize from './input-size';\nimport './product-table.less';\n\nconst errorStyle = {\n    borderColor: 'red',\n};\n\nconst LIMIT = 20;\nconst { Search } = Input;\n\nconst ProductsTable: FC = (): JSX.Element => {\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n    const [selected, setSelected] = useState<any | null>(null);\n    const [textSearch, setTextSearch] = useState<string>('');\n    const [page, setPage] = useState<number>(1);\n\n    const dispatch = useDispatch();\n    const products: IProduct[] = useSelector(\n        ({ product }: { product: any }) => product.products.data\n    );\n    const total = useSelector(({ product }: { product: any }) => product.products.total);\n    const loading = useSelector(({ product }: { product: any }) => product.loading);\n\n    const category = useSelector(({ product }: { product: any }) => product.category);\n    const categoryId = useSelector(({ product }: { product: any }) => product.categoryId);\n    const [newCategory, setNewCategory] = useState('');\n    const [categoryIdFilter, setCategoryId] = useState<any>('');\n    const [sort, setSort] = useState<any>(null);\n\n    const options = useMemo(() => {\n        return (category || []).map((item: { _id: string; name: string; value?: string }) => ({\n            ...item,\n            value: item.name,\n        }));\n    }, [category]);\n\n    useEffect(() => {\n        if (categoryId) {\n            setCategoryId(categoryId);\n        }\n    }, [categoryId]);\n\n    const onSelect = (value: string, option: any) => {\n        setCategoryId(option._id);\n    };\n\n    const filterOption = (inputValue: string, option: any) => {\n        return option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;\n    };\n\n    const onChangeCategory = (value: string) => {\n        dispatch(fetchCategory(value));\n        setCategoryId(null);\n        setNewCategory(value);\n    };\n\n    const onCreateCategory = async () => {\n        await dispatch(createCategory(newCategory));\n        setNewCategory('');\n    };\n\n    const [dataSource, setDataSource] = useState(\n        (products || []).map((i: IProduct) => ({\n            ...i,\n            key: i._id,\n        }))\n    );\n    const [productSelected, setProductSelected] = useState<any>();\n\n    const onChange = (e: any) => {\n        const { value, name } = e.target || {};\n        if (selected) {\n            setSelected({ ...selected, [name]: value });\n        }\n    };\n\n    const onChangeOriginalPrice = (value: number | string | undefined) => {\n        if (selected && isNumber(value)) {\n            setSelected({ ...selected, originalPrice: value });\n        }\n    };\n\n    const onChangePrice = (value: number | string | undefined) => {\n        if (selected && isNumber(value)) {\n            setSelected({ ...selected, price: value });\n        }\n    };\n\n    const onChangeWholesalePrice = (value: number | string | undefined) => {\n        if (selected && isNumber(value)) {\n            setSelected({ ...selected, wholesalePrice: value });\n        }\n    };\n\n    const onChangeWeight = (value: number | string | undefined) => {\n        if (selected && isNumber(value)) {\n            setSelected({ ...selected, weight: value });\n        }\n    };\n\n    const onChangeLength = (value: number | string | undefined) => {\n        if (selected && isNumber(value)) {\n            setSelected({ ...selected, length: value });\n        }\n    };\n\n    const onChangeHeight = (value: number | string | undefined) => {\n        if (selected && isNumber(value)) {\n            setSelected({ ...selected, height: value });\n        }\n    };\n\n    const onChangeWidth = (value: number | string | undefined) => {\n        if (selected && isNumber(value)) {\n            setSelected({ ...selected, width: value });\n        }\n    };\n\n    const searchProduct = (value: string) => {\n        dispatch(fetchProducts({ textSearch: value.trim(), page: 1, limit: LIMIT, sort }));\n    };\n\n    const refreshProduct = () => {\n        setPage(1);\n        searchProduct(textSearch);\n    };\n\n    const reloadTable = () => {\n        dispatch(fetchProducts({ textSearch, page, limit: LIMIT, sort }));\n        setSelectedRowKeys([]);\n    };\n\n    useEffect(() => {\n        dispatch(fetchProducts({ page: 1, limit: LIMIT }));\n    }, []);\n\n    useEffect(() => {\n        setDataSource(\n            (products || []).map((i: IProduct) => ({\n                ...i,\n                key: i._id,\n            }))\n        );\n    }, [products]);\n\n    const handleImages = async (images: IImage[]) => {\n        let newImage: string[] = [];\n\n        images.forEach((img) => {\n            if (img && img.key) newImage.push(img.key);\n        });\n        const data = {\n            _id: productSelected._id,\n            images: newImage,\n        };\n        await dispatch(updateProduct(data));\n        const tempDataSource = products.map((item: any) => {\n            if (item._id === productSelected._id) {\n                item.images = newImage;\n            }\n            return item;\n        });\n        productSelected.images = newImage;\n        setDataSource(tempDataSource);\n    };\n\n    const handleTableChange = (pagination: any, filters: any, sorter: any) => {\n        setPage(pagination.current);\n\n        const columnFilters = flatten([sorter])\n            .filter((col: any) => !!col.order)\n            .map((col: any) => ({\n                key: col.columnKey,\n                value: col.order === 'ascend' ? 'asc' : 'desc',\n            }));\n\n        if (columnFilters.length === 0) {\n            setSort(null);\n            dispatch(fetchProducts({ textSearch, page: pagination.current, limit: LIMIT }));\n        } else {\n            const objFilter = Object.fromEntries(\n                columnFilters.map((item) => [item.key, item.value])\n            );\n            setSort(querystring.stringify(objFilter));\n            dispatch(\n                fetchProducts({\n                    textSearch,\n                    page: pagination.current,\n                    limit: LIMIT,\n                    sort: querystring.stringify(objFilter),\n                })\n            );\n        }\n    };\n\n    const columns: ColumnsType<any> | undefined = [\n        {\n            title: <span className='th'>Hình ảnh</span>,\n            dataIndex: 'images',\n            key: 'img',\n            render: (images) => (\n                <UploadImage\n                    size={50}\n                    img={images.length > 0 ? images[0] : ''}\n                    handleImages={handleImages}\n                    imagesSeleted={images}\n                />\n            ),\n        },\n        {\n            title: <span className='th'>Tên</span>,\n            dataIndex: '',\n            key: 'name',\n            sorter: {\n                compare: () => 0,\n                multiple: 0,\n            },\n            render: ({ name, _id }) => {\n                if (selected && selected._id === _id) {\n                    const style =\n                        selected.name.length === 0 ? { ...errorStyle, width: 80 } : { width: 80 };\n\n                    return (\n                        <Input\n                            name='name'\n                            value={selected.name}\n                            onChange={onChange}\n                            style={style}\n                        />\n                    );\n                }\n                return name;\n            },\n        },\n        {\n            title: <span className='th'>Mã</span>,\n            dataIndex: '',\n            key: 'code',\n            render: ({ code, _id }) => {\n                if (selected && selected._id === _id) {\n                    const style = { width: 80 };\n\n                    return (\n                        <Input\n                            name='code'\n                            value={selected.code}\n                            onChange={onChange}\n                            style={style}\n                        />\n                    );\n                }\n\n                if (!code) return '';\n\n                return code;\n            },\n        },\n        {\n            title: <span className='th'>Danh mục</span>,\n            dataIndex: '',\n            key: 'categoryId',\n            render: ({ categoryId, _id }) => {\n                if (selected && selected._id === _id) {\n                    const style = { width: 100 };\n\n                    return (\n                        <div className='product__table--category'>\n                            <AutoComplete\n                                style={style}\n                                options={options}\n                                onChange={onChangeCategory}\n                                onSelect={onSelect}\n                                filterOption={filterOption}\n                                searchValue={selected.categoryId ? selected.categoryId.name : ''}\n                            >\n                                <Input />\n                            </AutoComplete>\n\n                            {category.length === 0 && newCategory.trim().length > 0 && (\n                                <p onClick={onCreateCategory} className='category__item'>\n                                    Tạo mới danh mục: {newCategory}\n                                </p>\n                            )}\n                        </div>\n                    );\n                }\n\n                if (!categoryId) return '';\n\n                return categoryId.name;\n            },\n        },\n        {\n            title: <span className='th'>Giá vốn (vnd)</span>,\n            dataIndex: '',\n            key: 'originalPrice',\n            sorter: {\n                compare: () => 0,\n                multiple: 0,\n            },\n            render: ({ originalPrice, _id }) => {\n                if (selected && selected._id === _id) {\n                    return (\n                        <InputNumber\n                            name='originalPrice'\n                            min={1}\n                            formatter={formatterInput}\n                            parser={parserInput}\n                            value={selected.originalPrice}\n                            onChange={onChangeOriginalPrice}\n                        />\n                    );\n                }\n\n                if (!originalPrice) return '';\n\n                return formatMoney(originalPrice);\n            },\n        },\n        {\n            title: <span className='th'>Giá bán (vnd)</span>,\n            dataIndex: '',\n            key: 'price',\n            sorter: {\n                compare: () => 0,\n                multiple: 0,\n            },\n            render: ({ price, _id }) => {\n                if (selected && selected._id === _id) {\n                    const style = !selected.price ? { ...errorStyle } : {};\n\n                    return (\n                        <InputNumber\n                            name='price'\n                            min={1}\n                            formatter={formatterInput}\n                            parser={parserInput}\n                            value={selected.price}\n                            onChange={onChangePrice}\n                            style={style}\n                        />\n                    );\n                }\n\n                if (!price) return '\"';\n\n                return formatMoney(price);\n            },\n        },\n        {\n            title: <span className='th'>Giá buôn (vnd)</span>,\n            dataIndex: '',\n            key: 'wholesalePrice',\n            sorter: {\n                compare: () => 0,\n                multiple: 0,\n            },\n            render: ({ wholesalePrice, _id }) => {\n                if (selected && selected._id === _id) {\n                    return (\n                        <InputNumber\n                            name='wholesalePrice'\n                            min={1}\n                            formatter={formatterInput}\n                            parser={parserInput}\n                            value={selected.wholesalePrice}\n                            onChange={onChangeWholesalePrice}\n                        />\n                    );\n                }\n                if (!wholesalePrice) return '';\n\n                return formatMoney(wholesalePrice);\n            },\n        },\n        {\n            title: <span className='th'>C/dài</span>,\n            dataIndex: '',\n            key: 'length',\n            align: 'center',\n            sorter: {\n                compare: () => 0,\n                multiple: 0,\n            },\n            render: ({ length, _id }) => {\n                if (selected && selected._id === _id) {\n                    return <InputSize size={selected.length} changeSize={onChangeLength} />;\n                }\n\n                if (!length) return '\"';\n\n                return length;\n            },\n        },\n        {\n            title: <span className='th'>C/rộng</span>,\n            dataIndex: '',\n            key: 'width',\n            align: 'center',\n            sorter: {\n                compare: () => 0,\n                multiple: 0,\n            },\n            render: ({ width, _id }) => {\n                if (selected && selected._id === _id) {\n                    return <InputSize size={selected.width} changeSize={onChangeWidth} />;\n                }\n\n                if (!width) return '\"';\n\n                return width;\n            },\n        },\n        {\n            title: <span className='th'>C/cao</span>,\n            dataIndex: '',\n            key: 'height',\n            align: 'center',\n            sorter: {\n                compare: () => 0,\n                multiple: 0,\n            },\n            render: ({ height, _id }) => {\n                if (selected && selected._id === _id) {\n                    return <InputSize size={selected.height} changeSize={onChangeHeight} />;\n                }\n\n                if (!height) return '\"';\n\n                return height;\n            },\n        },\n\n        {\n            title: <span className='th'>KL (gram)</span>,\n            dataIndex: '',\n            align: 'center',\n            key: 'weight',\n            sorter: {\n                compare: () => 0,\n                multiple: 0,\n            },\n            render: ({ weight, _id }) => {\n                if (selected && selected._id === _id) {\n                    const style = selected.weight === 0 ? errorStyle : {};\n                    return (\n                        <InputNumber\n                            value={selected.weight}\n                            onChange={onChangeWeight}\n                            style={style}\n                            min={10}\n                            max={100000}\n                        />\n                    );\n                }\n\n                if (!weight) return '\"';\n\n                return weight;\n            },\n        },\n        {\n            title: '',\n            dataIndex: '',\n            align: 'right',\n            key: 'x',\n            render: (product) => {\n                const onEdit = () => {\n                    product.categoryId && setCategoryId(product.categoryId._id);\n                    setSelected(product);\n                };\n\n                const onSave = async () => {\n                    if (!categoryIdFilter) {\n                        delete selected.categoryId;\n                    } else {\n                        selected.categoryId = categoryIdFilter;\n                    }\n                    const result = await dispatch(\n                        updateProduct({ ...selected, images: productSelected.images })\n                    );\n                    if (!!result) {\n                        reloadTable();\n                        setSelected(null);\n                        setNewCategory('');\n                        setCategoryId('');\n                    }\n                };\n\n                const removeProduct = () => {\n                    dispatch(deleteProduct(product._id));\n                };\n\n                const onCancel = () => {\n                    setNewCategory('');\n                    setCategoryId('');\n                    setSelected(null);\n                };\n\n                return (\n                    <div\n                        style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                    >\n                        {selected && selected._id === product._id ? (\n                            <>\n                                <Button\n                                    onClick={onSave}\n                                    type='primary'\n                                    icon={<CheckOutlined />}\n                                ></Button>\n\n                                <Divider type='vertical' />\n\n                                <Button\n                                    onClick={onCancel}\n                                    danger\n                                    type='primary'\n                                    icon={<CloseOutlined />}\n                                ></Button>\n                            </>\n                        ) : (\n                            <Action\n                                product={product}\n                                removeProduct={removeProduct}\n                                onCancel={onCancel}\n                                onEdit={onEdit}\n                            />\n                        )}\n                    </div>\n                );\n            },\n        },\n    ];\n\n    const onSelectChange = (selectedRows: any) => {\n        setSelectedRowKeys(selectedRows);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    const resetSelect = () => {\n        setSelectedRowKeys([]);\n    };\n\n    return (\n        <>\n            <Row style={{ marginBottom: 20 }} justify='space-between' align='middle'>\n                <Col>\n                    <Row justify='space-between' align='middle'>\n                        <Col>\n                            <Search\n                                // ref={this.searchRef}\n                                onChange={(e) => setTextSearch(e.target.value)}\n                                onSearch={searchProduct}\n                                style={{ maxWidth: 250 }}\n                                placeholder='Tìm theo tên, mã sản phẩm'\n                                value={textSearch}\n                            />\n                        </Col>\n                        <Col>\n                            <Button\n                                onClick={refreshProduct}\n                                style={{ margin: '0 10px' }}\n                                icon={<ReloadOutlined />}\n                            ></Button>\n                        </Col>\n                        <Col>\n                            <AddProduct reloadTable={reloadTable} />\n                        </Col>\n                    </Row>\n                </Col>\n                <Col>\n                    {selectedRowKeys.length > 0 && (\n                        <BtnRemoveProduct\n                            products={selectedRowKeys}\n                            resetSelect={resetSelect}\n                            textSearch={textSearch}\n                            page={page}\n                            limit={LIMIT}\n                        />\n                    )}\n                </Col>\n            </Row>\n\n            <Table\n                className='product__table'\n                loading={loading}\n                rowSelection={rowSelection}\n                dataSource={dataSource}\n                columns={columns}\n                onChange={handleTableChange}\n                onRow={(r) => ({\n                    onClick: () => setProductSelected(r),\n                })}\n                rowKey='_id'\n                pagination={{\n                    current: page,\n                    total,\n                    pageSize: LIMIT,\n                }}\n            />\n        </>\n    );\n};\n\nexport default ProductsTable;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/order-home.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/select-pages/list-pages.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/order-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/index.tsx",["1687"],"import 'emoji-mart/css/emoji-mart.css';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDetailPost } from '../../../api/conversation-api';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport {\n    loadConversations,\n    removeConversations,\n} from '../../../reducers/fanpageState/fanpageAction';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { useExpriedPackage } from '../../customer/expried-package-context';\nimport { ProviderContext } from './context';\nimport ConversationDetailAction from './conversation-detail-action';\nimport ConversationDetailList from './conversation-detail-list';\nimport ConversationDetailTop from './conversation-detail-top';\nimport Labels from './labels';\n\nconst ConversationDetail: FC = (): JSX.Element => {\n    const { isExpired, isTrial } = useExpriedPackage();\n    const [contentPost, setContentPost] = useState({});\n    const [loadingContent, setLoadingContent] = useState(false);\n\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation,\n    );\n\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!conversation) return;\n        updateContentPost();\n    }, [conversation]);\n\n    if (!conversation) {\n        return <div className='conversation-detail' />;\n    }\n\n    const updateContentPost = async () => {\n        try {\n            if (conversation.type === 2 && conversation.postId) {\n                setLoadingContent(true);\n                const result = await getDetailPost({\n                    postId: conversation.postId,\n                    fbPageId: conversation.fbPageId,\n                    storeId: store._id,\n                    token: token.accessToken,\n                });\n                setContentPost(result);\n                setLoadingContent(false);\n            }\n        } catch (error) {\n            setLoadingContent(false);\n        }\n    };\n\n    const filterConversation = () => {\n        if (conversation.type === 2 && conversation.postId) {\n            let fbPageId;\n            if (store.activePage) {\n                fbPageId = store.activePage.fbObjectId;\n            }\n            dispatch(removeConversations());\n            dispatch(loadConversations(`type=2&postId=${conversation.postId}`, [fbPageId]));\n        }\n    };\n\n    const HEIGHT = `calc(100vh - ${isExpired || isTrial ? '140px' : '75px'}`;\n\n    return (\n        <ProviderContext>\n            <div className='conversation-detail' style={{ height: HEIGHT }}>\n                <ConversationDetailTop />\n                <ConversationDetailList\n                    loadingContent={loadingContent}\n                    contentPost={contentPost}\n                    updateContentPost={updateContentPost}\n                    filterConversation={filterConversation}\n                />\n\n                <Labels />\n                <ConversationDetailAction />\n            </div>\n        </ProviderContext>\n    );\n};\nexport default ConversationDetail;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/utils/format-money.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/productState/productAction.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/index.tsx",["1688"],"import { Empty } from 'antd';\nimport querystring from 'querystring';\nimport React, { FC, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Loading } from '../../../components';\nimport {\n    loadConversations,\n    removeConversations,\n} from '../../../reducers/fanpageState/fanpageAction';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport ConversationFilter from './conversation-filter';\nimport ConversationItem from './conversation-item';\n\nimport './style.less';\n\nconst CoversationList: FC = (): JSX.Element => {\n    let location = useLocation();\n    const loading = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.loading_conversation\n    );\n\n    const conversations = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversations\n    );\n\n    const next = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.next);\n\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const pages = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.pages);\n    const arrPage = Object.keys(pages).map((key: string) => pages[key]);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(removeConversations());\n\n        const query = querystring.parse(location.search.substring(1));\n\n        if ((!query.pageId || !query.postId) && !query.type) {\n            if (store.activePage) {\n                dispatch(loadConversations(undefined, [store.activePage.fbObjectId]));\n            } else {\n                dispatch(loadConversations(undefined, [arrPage[0].fbObjectId]));\n            }\n        }\n    }, []);\n\n    const loadMore = () => {\n        if (!loading && next) {\n            dispatch(loadConversations(undefined, [store.activePage.fbObjectId], undefined, next));\n        }\n    };\n\n    const renderConversation = () => {\n        if (conversations.length === 0 && !loading) {\n            return <Empty imageStyle={{ marginTop: '10px' }} description='Không có hội thoại' />;\n        }\n\n        return (\n            <InfiniteScroll\n                loadMore={loadMore}\n                hasMore={!!next}\n                initialLoad={false}\n                useWindow={false}\n                threshold={20}\n                isReverse={false}\n            >\n                {conversations.map((conversation: IConversation) => {\n                    return <ConversationItem conversation={conversation} key={conversation._id} />;\n                })}\n                {loading && <Loading />}\n            </InfiniteScroll>\n        );\n    };\n\n    return (\n        <div className='conversation-list'>\n            <div className='conversation-list-top'>\n                <ConversationFilter />\n            </div>\n\n            <div className='conversation-items'>{renderConversation()}</div>\n        </div>\n    );\n};\n\nexport default CoversationList;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/index.tsx",["1689"],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ProviderOrderContext } from './context-order';\nimport CustomerTab from './customer-tab';\nimport OrderTab from './order-tab';\nimport Tab from './tab';\n\nimport './style.less';\n\nconst ConversationCustomer = (): JSX.Element => {\n    const conversation = useSelector((state: any) => state.fanpage.conversation);\n\n    const [key, setKey] = useState('1');\n\n    const changeTabs = React.useCallback(\n        (e: any) => {\n            if (e.code === 'F4') {\n                setKey(key === '1' ? '2' : '1');\n            }\n\n            return null;\n        },\n        [key]\n    );\n\n    useEffect(() => {\n        document.addEventListener('keydown', changeTabs);\n\n        return () => {\n            document.removeEventListener('keydown', changeTabs);\n        };\n    }, [changeTabs]);\n\n    useEffect(() => {\n        if (conversation) {\n            setKey('1');\n        }\n    }, [conversation]);\n\n    const callback = (key: string) => {\n        setKey(key);\n    };\n\n    if (!conversation) {\n        return <div />;\n    }\n\n    return (\n        <ProviderOrderContext>\n            <div className='conversation-order'>\n                <div className='tabs'>\n                    <Tab\n                        active={key === '1'}\n                        tab={{\n                            key: '1',\n                            title: 'Khách hàng',\n                        }}\n                        onClick={(key: string) => setKey(key)}\n                    />\n                    <Tab\n                        active={key === '2'}\n                        tab={{\n                            key: '2',\n                            title: ' Tạo đơn',\n                        }}\n                        onClick={(key: string) => setKey(key)}\n                    />\n                </div>\n\n                <div className='tab-content'>\n                    {key === '1' && <CustomerTab />}\n                    {key === '2' && <OrderTab />}\n                </div>\n            </div>\n        </ProviderOrderContext>\n    );\n};\n\nexport default ConversationCustomer;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/tab-pages/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/orderState/orderAction.ts",["1690"],"import { Dispatch } from 'redux';\nimport { message } from 'antd';\n\nimport { IAction } from '../imagesState/interfaces';\nimport types from './orderTypes';\n\nimport {\n    fetchOrdersRequest,\n    updateStatusOrdersRequest,\n    removeOrdersRequest,\n} from '../../api/order-api';\n\nexport function setOrders(data: any): IAction {\n    return {\n        type: types.FETCH_ORDERS_SUCCESS,\n        payload: data,\n    };\n}\n\nexport function changeOrderType(type: string): IAction {\n    return {\n        type: types.CHANGE_ORDER_TYPE,\n        payload: type,\n    };\n}\n\nexport const fetchOrders = (query: { status?: string; page: number; limit: number }) => async (\n    dispatch: Dispatch,\n    getState: () => any\n) => {\n    try {\n        dispatch({\n            type: types.FETCH_ORDERS_LOADING,\n        });\n\n        const { auth, store } = getState();\n        const { token } = auth;\n        const storeId = store.store._id;\n\n        const res = await fetchOrdersRequest({\n            token: token.accessToken,\n            storeId,\n            query,\n        });\n\n        dispatch(setOrders(res));\n    } catch (error) {\n        message.error('Lỗi tải đơn hàng');\n        dispatch({ type: types.FETCH_ORDERS_FAILED });\n    }\n};\n\nexport const updateStatusOrders = (orderId: string, status: string) => async (\n    dispatch: Dispatch,\n    getState: () => any\n) => {\n    try {\n        const { auth, store } = getState();\n        const { token } = auth;\n        const storeId = store.store._id;\n\n        const res = await updateStatusOrdersRequest({\n            token: token.accessToken,\n            storeId,\n            orderId,\n            data: { status },\n        });\n\n        if (res) {\n            dispatch({\n                type: types.UPDATE_STATUS_ORDER_SUCCESS,\n                payload: res,\n            });\n            return message.success('Chỉnh sửa trạng thái thành công');\n        }\n        message.error('Lỗi chỉnh sửa trạng thái');\n    } catch (error) {\n        message.error('Lỗi chỉnh sửa trạng thái');\n    }\n};\n\nexport const removeOrders = (orderId: string) => async (\n    dispatch: Dispatch,\n    getState: () => any\n) => {\n    try {\n        const { auth, store } = getState();\n        const { token } = auth;\n        const storeId = store.store._id;\n\n        const res = await removeOrdersRequest({\n            token: token.accessToken,\n            storeId,\n            orderId,\n        });\n\n        dispatch({\n            type: types.DELETE_ORDER_SUCCESS,\n            payload: orderId,\n        });\n        message.success('Xoá đơn hàng thành công');\n    } catch (error) {\n        message.error('Lỗi xoá đơn hàng');\n    }\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-new/index.tsx",["1691"],"import { push } from 'connected-react-router';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPackagesActive } from '../../../api/billing-api';\nimport { IPackage } from '../../../collections/billing';\nimport ExpiredStore from '../../../components/expired-store';\nimport { checkRestrictAction } from '../../../utils/get-time';\nimport constants from '../../../constants';\n\nimport ScripStep from '../script-step';\n\ninterface Props {}\n\nconst ScriptNew = (props: Props) => {\n    const store = useSelector((state: any) => state.store.store);\n    const [visible, setVisible] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const handleCancelPopup = () => {\n        setVisible(false);\n        dispatch(push('/customer/livestream/scripts'));\n    }\n\n    const handleBuyPackage = () => {\n        window.open(`${constants.URL_STORE}setting/billings/list`, '_blank');\n    }\n\n    const getPackages = async () => {\n        const packages: IPackage[] = await getPackagesActive(store._id);\n        const pkgsActive = packages.filter((item: any) => item.active);\n        setVisible(checkRestrictAction(pkgsActive));\n    }\n\n    useEffect(() => {\n        getPackages();\n    }, []);\n\n    return <>\n        <ExpiredStore\n            visible={visible}\n            onCancel={handleCancelPopup}\n            onBuyPackage={handleBuyPackage}\n        />\n        <ScripStep />\n    </>;\n};\n\nexport default ScriptNew;\n",["1692","1693"],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-label/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-revenue/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-conversation/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/index.tsx",["1694"],"import { Button, Col, Row } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport livestreamApi from '../../../api/livestream-api';\nimport { Loading } from '../../../components';\nimport HeaderRight from '../../../components/header-customer/header-right';\nimport { BaseLayout } from '../../../layout';\nimport { loadLivestreams } from '../../../reducers/livestreamState/livestreamAction';\nimport EmptyLivestream from './empty-livestream';\nimport LivestreamList from './livestream-list';\nimport { PlusThickerIcon } from '../../../assets/icon';\nimport useHiddenModalExpired from '../../../hooks/use-hidden-modal-expired';\n\ninterface Props {}\n\nconst title_page = '';\n\nconst useCheckEmptyLiveStream = () => {\n    const store = useSelector((state: any) => state.store.store);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [isEmpty, setIsEmpty] = useState<boolean>(false);\n\n    useEffect(() => {\n        async function handleCheckEmptyLivestream(storeId: string) {\n            try {\n                setLoading(true);\n                const response = await livestreamApi.checkEmptyLivestream(storeId);\n                setIsEmpty(response.isEmpty);\n                setLoading(false);\n            } catch (error) {\n                setLoading(false);\n            }\n        }\n\n        if (store) {\n            handleCheckEmptyLivestream(store._id);\n        }\n    }, [store]);\n\n    return {\n        isEmpty,\n        loadingEmptyLivestream: loading,\n    };\n};\n\nconst LiveStreamList = (props: Props) => {\n    const dispatch = useDispatch();\n\n    const loading = useSelector((state: any) => state.livestream.loading);\n    const isLoaded = useSelector((state: any) => state.livestream.isLoaded);\n    const loadingPage = useSelector((state: any) => state.fanpage.loading);\n\n    const { isEmpty, loadingEmptyLivestream } = useCheckEmptyLiveStream();\n    const { hiddenModalExpired } = useHiddenModalExpired();\n\n    useEffect(() => {\n        if (!loadingEmptyLivestream && !isEmpty) {\n            dispatch(loadLivestreams());\n        }\n    }, [isEmpty, loadingEmptyLivestream]);\n\n    const renderContent = () => {\n        if (isEmpty) return <EmptyLivestream />;\n\n        if (loadingEmptyLivestream || ((loadingPage || loading) && !isLoaded)) return <Loading />;\n\n        return <LivestreamList />;\n    };\n\n    return (\n        <BaseLayout title={title_page}>\n            <HeaderRight title='Danh sách kịch bản livestream' />\n            <div className='heading' style={{ backgroundColor: '#f6f8f8' }}>\n                <Row align='middle' justify='end'>\n                    <Col>\n                        <Link to='/customer/livestream/new'>\n                            <Button\n                                disabled={hiddenModalExpired}\n                                icon={<PlusThickerIcon />}\n                                type='primary'\n                                className='btn-add'\n                            >\n                                Thêm mới\n                            </Button>\n                        </Link>\n                    </Col>\n                </Row>\n            </div>\n            <div className='content' style={{ backgroundColor: '#edf1f2' }}>\n                {renderContent()}\n            </div>\n        </BaseLayout>\n    );\n};\n\nexport default LiveStreamList;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-edit/index.tsx",["1695"],"import React, { useState, useEffect } from 'react';\nimport ScriptStep from '../script-step';\nimport { useParams } from 'react-router-dom';\nimport { Loading } from '../../../components';\nimport livestreamApi from '../../../api/livestream-api';\nimport { useSelector } from 'react-redux';\n\ninterface Props {}\ninterface Params {\n    fbPageId?: string;\n    scriptId?: string;\n}\n\nconst ScriptEdit = (props: Props) => {\n    const store = useSelector((state: any) => state.store.store);\n    const [loading, setLoading] = useState(true);\n    const [script, setScript] = useState(true);\n    const params = useParams<Params>();\n\n    useEffect(() => {\n        async function loadScript({ scriptId, fbPageId }: { scriptId: string; fbPageId: string }) {\n            try {\n                setLoading(true);\n                const response = await livestreamApi.loadScript({\n                    storeId: store._id,\n                    scriptId,\n                    fbPageId,\n                });\n                setScript(response);\n                setLoading(false);\n            } catch (error) {\n                setLoading(false);\n            }\n        }\n        if (params.fbPageId && params.scriptId) {\n            loadScript({ scriptId: params.scriptId, fbPageId: params.fbPageId });\n        }\n    }, []);\n\n    if (loading) return <Loading />;\n\n    if (!params.fbPageId || !params.scriptId || !script) {\n        return <div>No script</div>;\n    }\n\n    return <ScriptStep script={script} />;\n};\n\nexport default ScriptEdit;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/index.tsx",["1696"],"import { Button, Space, Tabs, message } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport livestreamApi from '../../../api/livestream-api';\nimport { ChartIcon, SearchDocumentIcon } from '../../../assets/icon';\nimport { ILivestreamScript, EScriptStatus } from '../../../collections/livestream-script';\nimport { Loading } from '../../../components';\nimport HeaderRight from '../../../components/header-customer/header-right';\nimport { BaseLayout } from '../../../layout';\nimport { useNotification } from '../../customer/notfication-context';\nimport './index.less';\nimport ScriptDetail from './script-detail';\nimport ScriptReport from './script-report';\n\nconst { TabPane } = Tabs;\n\ninterface Props {}\n\ninterface Params {\n    scriptId?: string;\n    fbPageId?: string;\n}\n\nconst Script = (props: Props) => {\n    const store = useSelector((state: any) => state.store.store);\n    const { title } = useNotification();\n\n    const [loading, setLoading] = useState(true);\n    const [script, setScript] = useState<ILivestreamScript>();\n    const params = useParams<Params>();\n\n    const loadScript = async ({ scriptId, fbPageId }: { scriptId: string; fbPageId: string }) => {\n        try {\n            const response = await livestreamApi.loadScript({\n                storeId: store._id,\n                fbPageId,\n                scriptId,\n            });\n            setScript(response);\n        } catch (error) {\n            message.error('Đã có lỗi xảy ra!');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const loadDataReport = () => {\n        setLoading(true);\n        if (params.scriptId && params.fbPageId) {\n            loadScript({\n                scriptId: params.scriptId,\n                fbPageId: params.fbPageId,\n            });\n        } else {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        loadDataReport();\n    }, [params.scriptId]);\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (!params.scriptId || !params.fbPageId || !script) {\n        return <div>No Script</div>;\n    }\n\n    const tabExtraContent = script && script.status === EScriptStatus.InUse && (\n        <Button\n            icon={<ReloadOutlined />}\n            type='primary'\n            style={{ backgroundColor: '#307dd2', borderColor: '#307dd2' }}\n            onClick={loadDataReport}\n        >\n            Tải lại trang\n        </Button>\n    );\n\n    const title_page = `${title} ${script.name}`;\n\n    return (\n        <BaseLayout title={title_page}>\n            <HeaderRight title={script.name} />\n\n            <div className='content script-detail-content' style={{ padding: 0 }}>\n                <Tabs\n                    defaultActiveKey='1'\n                    onChange={() => {}}\n                    tabBarStyle={{\n                        paddingLeft: 20,\n                        paddingRight: 20,\n                        background: '#f6f8f8',\n                        borderBottom: '1px solid #d3d9db',\n                    }}\n                    tabBarExtraContent={tabExtraContent}\n                >\n                    {script.status !== 0 && (\n                        <TabPane\n                            tab={\n                                <Space size={5}>\n                                    <ChartIcon style={{ fontSize: 24, margin: 0 }} />\n                                    Thống kê bài livestream\n                                </Space>\n                            }\n                            key='1'\n                        >\n                            <div className='container'>\n                                <ScriptReport script={script} />\n                            </div>\n                        </TabPane>\n                    )}\n\n                    <TabPane\n                        tab={\n                            <Space size={5}>\n                                <SearchDocumentIcon style={{ fontSize: 20, margin: 0 }} />\n                                Chi tiết kịch bản\n                            </Space>\n                        }\n                        key='2'\n                    >\n                        <div className='container'>\n                            <ScriptDetail script={script} />\n                        </div>\n                    </TabPane>\n                </Tabs>\n            </div>\n        </BaseLayout>\n    );\n};\n\nexport default Script;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customers-other/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/warehouses/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/index.tsx",["1697"],"import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { BaseLayout } from '../../layout';\nimport { loadStaffs } from '../../reducers/staffState/staffAction';\nimport { useNotification } from '../customer/notfication-context';\nimport MembersTable from './members-table';\nimport HeaderRight from '../../components/header-customer/header-right';\nimport './style.less';\n\nconst text = 'Nhân viên';\n\nfunction Members(): JSX.Element {\n    const { title } = useNotification();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(loadStaffs());\n    }, []);\n\n    const title_page = `${title} ${text}`;\n\n    return (\n        <BaseLayout title={title_page}>\n            <div className='main member-wrap'>\n                <HeaderRight title={text} />\n                <div className='content-page content'>\n                    <MembersTable />\n                </div>\n            </div>\n        </BaseLayout>\n    );\n}\n\nexport default Members;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders-draft/table-order-draft.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/products/action.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/products/input-size.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/products/btn-remove-product.tsx",["1698"],"import { DeleteOutlined } from '@ant-design/icons';\nimport { Button, message, Modal } from 'antd';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteProductRequest } from '../../api/product-api';\nimport { fetchProducts } from '../../reducers/productState/productAction';\n\ninterface Props {\n    products: string[];\n    resetSelect: () => void;\n    textSearch: string;\n    limit: number;\n    page: number;\n}\n\nconst BtnRemoveProduct = ({ products, resetSelect, textSearch, limit, page }: Props) => {\n    const dispatch = useDispatch();\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n\n    const [loading, setLoading] = useState(false);\n\n    const showDeleteConfirm = () => {\n        Modal.confirm({\n            title: 'Xóa sản phẩm?',\n            content: `Bạn chắc chắn muốn xóa những sản phẩm đã chọn?`,\n            okText: 'Xóa',\n            okType: 'danger',\n            cancelText: 'Hủy',\n            width: 450,\n            onOk() {\n                removeMoreProducts();\n            },\n            onCancel() {},\n        });\n    };\n\n    const removeMoreProducts = async () => {\n        try {\n            setLoading(true);\n\n            const response = await Promise.all(\n                products.map(async (productId: string) => {\n                    await deleteProductRequest({\n                        token: token.accessToken,\n                        storeId: store._id,\n                        productId,\n                    });\n                    return productId;\n                })\n            );\n\n            message.success('Đã xóa sản phẩm');\n            setLoading(false);\n            resetSelect();\n            dispatch(\n                fetchProducts({\n                    textSearch,\n                    page,\n                    limit,\n                })\n            );\n        } catch (error) {\n            if (error && error.response && error.response.data && error.response.data.message) {\n                message.error(`${error.response.data.message}`);\n            } else {\n                message.error('Lỗi xóa sản phẩm');\n            }\n            dispatch(\n                fetchProducts({\n                    textSearch,\n                    page,\n                    limit,\n                })\n            );\n            setLoading(false);\n        }\n    };\n\n    return (\n        <Button\n            danger\n            type='primary'\n            icon={<DeleteOutlined />}\n            onClick={showDeleteConfirm}\n            loading={loading}\n        >\n            Xóa\n        </Button>\n    );\n};\n\nexport default BtnRemoveProduct;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/products/add-product.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/tabs.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/order-table.tsx",["1699","1700","1701","1702","1703"],"import { Table } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { push } from 'connected-react-router';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchOrders, setOrders } from '../../reducers/orderState/orderAction';\nimport formatMoney from '../../utils/format-money';\nimport Action from './action';\nimport ChangeStatus from './change-status';\nimport ExpanedOrderTable from './expaned-order-table';\nimport { IOrder } from './interface';\nimport ShipStatus from './ship-status';\n\nconst LIMIT = 20;\n\nexport const getValue = (products: any, type: string) => {\n    return products.reduce(\n        (value: number, p: any) => (p.productId ? p.productId[type] : 0) * p.count + value,\n        0\n    );\n};\n\nconst columns: ColumnsType<any> | undefined = [\n    {\n        title: <span className='th'>Ngày</span>,\n        dataIndex: 'createdAt',\n        key: 'createdAt',\n        sorter: (a, b) => moment(a.createdAt).valueOf() - moment(b.createdAt).valueOf(),\n        render: (createdAt: Date) => (\n            <>\n                {moment(createdAt).format('HH:mm')}\n                <br />\n                {moment(createdAt).format('DD/MM/YYYY')}\n            </>\n        ),\n    },\n    {\n        title: <span className='th'>Khách hàng</span>,\n        dataIndex: 'customer',\n        key: 'customer',\n        sorter: (a, b) => a.customer.name.length - b.customer.name.length,\n        render: (customer: any) => {\n            return (\n                <>\n                    {customer.name}\n                    <br />\n                    {customer.phoneNo}\n                </>\n            );\n        },\n    },\n    {\n        title: <span className='th'>Người tạo</span>,\n        dataIndex: 'createdBy',\n        key: 'createdBy',\n        render: (createdBy: any) => {\n            if (!createdBy) return null;\n\n            const color = createdBy.role === 'admin' ? '#f50' : '#108ee9';\n            const text = createdBy.role === 'admin' ? 'Chủ shop' : 'Nhân viên';\n\n            return (\n                <>\n                    {createdBy.name}\n                    {/* <br />\n                    <Tag color={color}>{text}</Tag> */}\n                </>\n            );\n        },\n    },\n    {\n        title: <span className='th'>KL(g)</span>,\n        dataIndex: 'products',\n        key: 'weight',\n        sorter: (a, b) => getValue(a.products, 'weight') - getValue(b.products, 'weight'),\n\n        render: (products: any) => getValue(products, 'weight'),\n    },\n    {\n        title: <span className='th'>Tổng tiền(VND)</span>,\n        dataIndex: 'totalPrice',\n        key: 'totalPrice',\n        sorter: (a, b) => a.totalPrice - b.totalPrice,\n\n        render: (totalPrice: number) => formatMoney(totalPrice),\n    },\n    {\n        title: <span className='th'>Trạng thái</span>,\n        dataIndex: 'status',\n        key: 'trang_thai',\n        render: (status: any, record: { _id: string }) => {\n            return <ChangeStatus status={status} orderId={record._id} />;\n        },\n    },\n\n    {\n        title: <span className='th'>Vận chuyển</span>,\n        dataIndex: 'deliveryOptions',\n        key: 'ship',\n        render: ({ serviceId }: { serviceId?: number }) => {\n            return <ShipStatus ship={serviceId} />;\n        },\n    },\n    {\n        title: <span className='th'>Chênh lệch PVC(VND)</span>,\n        dataIndex: 'deliveryOptions',\n        sorter: (a, b) => {\n            const value1 = a.deliveryOptions.shipmentFeeForCustomer - a.deliveryOptions.shipmentFee;\n            const value2 = b.deliveryOptions.shipmentFeeForCustomer - b.deliveryOptions.shipmentFee;\n            return value1 - value2;\n        },\n        key: 'xx',\n        render: ({\n            shipmentFee,\n            shipmentFeeForCustomer,\n        }: {\n            shipmentFee: any;\n            shipmentFeeForCustomer: any;\n        }) => {\n            return formatMoney(shipmentFeeForCustomer - shipmentFee);\n        },\n    },\n    {\n        title: '',\n        align: 'center',\n        dataIndex: '_id',\n        key: 'action',\n        render: (_, order: IOrder) => <Action order={order} />,\n    },\n];\n\nconst OrderTable = (): JSX.Element => {\n    const dispatch = useDispatch();\n    const type = useSelector(({ order }: { order: any }) => order.type);\n    const loading = useSelector(({ order }: { order: any }) => order.loading);\n    const orders = useSelector(({ order }: { order: any }) => order.orders.data);\n    const total = useSelector(({ order }: { order: any }) => order.orders.total);\n\n    useEffect(() => {\n        const dataPost: any = { page: 1, limit: LIMIT };\n\n        if (type && type !== 'all') {\n            dataPost.status = type;\n            dispatch(fetchOrders(dataPost));\n        } else {\n            dispatch(fetchOrders({ page: 1, limit: LIMIT }));\n        }\n\n        return () => {\n            dispatch(setOrders({ data: [], total: 0 }));\n        };\n    }, [type]);\n\n    const dataSource = orders.map((o: any) => ({ ...o, key: o._id }));\n\n    const rowSelection = {\n        onChange: (selectedRowKeys: any, selectedRows: any) => {\n            // setSelectOrder(selectedRows);\n        },\n        getCheckboxProps: (record: any) => ({\n            disabled: record.name === 'Disabled User', // Column configuration not to be checked\n            name: record.name,\n        }),\n    };\n\n    const expandedRowRender = (record: any) => {\n        return <ExpanedOrderTable order={record} />;\n    };\n\n    const onChangePage = (page: number, pageSize?: number | undefined) => {\n        dispatch(fetchOrders({ page, limit: pageSize || LIMIT }));\n    };\n\n    return (\n        <div className='table-content'>\n            <Table\n                dataSource={dataSource}\n                columns={columns}\n                //  rowSelection={rowSelection}\n                loading={loading}\n                className='orders-table'\n                onRow={(record) => {\n                    return {\n                        onClick: (event) => {\n                            if (\n                                (event.target as any).className &&\n                                (event.target as any).className === 'ant-table-cell'\n                            ) {\n                                dispatch(push(`/customer/order/${record._id}`));\n                            }\n                        },\n                    };\n                }}\n                pagination={{\n                    onChange: onChangePage,\n                    total,\n                    pageSize: LIMIT,\n                }}\n                rowKey='_id'\n            />\n        </div>\n    );\n};\n\nexport default OrderTable;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/select-pages/table-list-page.tsx",["1704","1705","1706","1707","1708","1709","1710"],"import { Button, Col, message, Row, Table } from 'antd';\nimport { push } from 'connected-react-router';\nimport { get, maxBy, some } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { EBillingPackageType, getPackagesActive } from '../../api/billing-api';\nimport { loadConversation } from '../../api/conversation-api';\nimport { updatePageStatus } from '../../api/fanpage';\nimport { IPackage } from '../../collections/billing';\nimport { LoginFacebookBtn } from '../../components';\nimport { BaseLayout } from '../../layout';\nimport { loginActionWithService } from '../../reducers/authState/authAction';\nimport { loadFanpageAction } from '../../reducers/fanpageState/fanpageAction';\nimport { IFacebookState } from '../../reducers/fanpageState/fanpageReducer';\nimport ModalLoadData from './modal-load-data';\nimport './style.less';\nconst size = 'large';\n\n/**\n * 1. Load page\n * 2. Select page\n * 3. Subscribe page\n */\n\nfunction TableListPages(): JSX.Element {\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n    const pagesData = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.allPages);\n    const arrPage = Object.keys(pagesData).map((keyName: string) => {\n        return { ...pagesData[keyName], key: pagesData[keyName].fbObjectId };\n    });\n\n    const [selectedRowKeys, setSelectedRowKeys] = useState<any>(\n        arrPage\n            .map((item) => {\n                if (item.active) {\n                    return item.fbObjectId;\n                }\n                return;\n            })\n            .filter((item) => !!item),\n    );\n    const [loading, setLoading] = useState(false);\n    const [loading_sub, setLoadingSub] = useState(false);\n    const [pages, selectPages] = useState(arrPage);\n    const [period, setPeriod] = useState<number>();\n    const [selectRows, setSelectRows] = useState([]);\n    const [checkYealyPackage, setCheckYealyPackage] = useState<boolean>(false);\n    const yearly = 12;\n    const yearlyPackage = 10;\n    const monthPackage = 5;\n\n    const handleFindPackageType = (packages: any) => {\n        let selectedRows: any = [];\n        packages.filter((element: any) => {\n            if (\n                element.packageType & EBillingPackageType.Omni ||\n                element.packageType & EBillingPackageType.Trial ||\n                element.packageType & EBillingPackageType.Facebook\n            )\n                selectedRows.push(element);\n        });\n        return maxBy(selectedRows, 'period');\n    };\n\n    const getPackages = async () => {\n        const packages: IPackage[] = await getPackagesActive(store._id);\n        const periodPackage = handleFindPackageType(packages)?.period;\n        setPeriod(periodPackage);\n    };\n    useEffect(() => {\n        getPackages();\n    }, []);\n\n    useEffect(() => {\n        const checkYealyPackage =\n            (period >= yearly && selectRows.length === yearlyPackage) ||\n            (period < yearly && selectRows.length === monthPackage)\n                ? true\n                : false;\n\n        setCheckYealyPackage(checkYealyPackage);\n    }, [selectRows, period]);\n\n    const hancleCheckYearlyPackage = (record: any) => {\n        if (\n            period &&\n            ((period >= yearly && selectRows.length === yearlyPackage) ||\n                (period < yearly && selectRows.length === monthPackage)) &&\n            !some(selectRows, record)\n        ) {\n            return true;\n        }\n\n        return false;\n    };\n\n    const dispatch = useDispatch();\n\n    const handleSubscride = async () => {\n        try {\n            setLoadingSub(true);\n            const activeFbPageIds = selectedRowKeys;\n            delete store.activePage;\n            const inactiveFbPageIds: string[] = [];\n            arrPage.map((item: any) => {\n                if (item.active && !activeFbPageIds.includes(item.fbObjectId)) {\n                    inactiveFbPageIds.push(item.fbObjectId);\n                }\n            });\n\n            localStorage.removeItem('pages-setting');\n\n            for (const fbPageId of activeFbPageIds) {\n                const infoPage: any = arrPage.find((item: any) => item.fbObjectId === fbPageId);\n                await updatePageStatus({\n                    fbPageId,\n                    payload: { active: true },\n                    storeId: store._id,\n                    token: token.accessToken,\n                }).catch((err) => {\n                    if (get(err, 'response.data.message') === 'DUPLICATE_ACTIVE_PAGE') {\n                        message.error(\n                            `Fanpage ${infoPage.name} đã được sử dụng trên tài khoản khác!`,\n                        );\n                    } else {\n                        message.error(`Kích hoạt fanpage ${infoPage.name} thất bại!`);\n                    }\n                });\n            }\n\n            for (const fbPageId of inactiveFbPageIds) {\n                const infoPage: any = arrPage.find((item: any) => item.fbObjectId === fbPageId);\n                await updatePageStatus({\n                    fbPageId,\n                    payload: { active: false },\n                    storeId: store._id,\n                    token: token.accessToken,\n                }).catch((err) => message.error(`Vô hiệu hóa fanpage ${infoPage.name} thất bại!`));\n            }\n\n            await loadConversation({\n                storeId: store._id,\n                token: token.accessToken,\n                fbPageIds: activeFbPageIds,\n            });\n            await setLoadingSub(false);\n            await dispatch(loadFanpageAction());\n            await dispatch(push('/customer/conversation'));\n            await message.success('Đã đồng bộ dữ liệu');\n        } catch (error) {\n            message.error('Đã có lỗi xảy ra!');\n            setLoadingSub(false);\n        }\n    };\n\n    const columns = [\n        {\n            title: <b>Tên fanpage</b>,\n            dataIndex: 'name',\n        },\n    ];\n\n    const selectRow = (record: any) => {\n        const newSelectedRowKeys = [...selectedRowKeys];\n        if (newSelectedRowKeys.indexOf(record.key) >= 0) {\n            newSelectedRowKeys.splice(newSelectedRowKeys.indexOf(record.key), 1);\n        } else {\n            newSelectedRowKeys.push(record.key);\n        }\n        let selectedRows: any = [];\n        newSelectedRowKeys.forEach((x) => {\n            pages.filter((element) => {\n                if (element.key === x) selectedRows.push(element);\n            });\n        });\n\n        setSelectRows(selectedRows);\n        setSelectedRowKeys(newSelectedRowKeys);\n    };\n\n    const onSelectedRowKeysChange = (newSelectedRowKeys: any, selectedRows: any) => {\n        setSelectedRowKeys(newSelectedRowKeys);\n        setSelectRows(selectedRows);\n    };\n\n    const handleSocialLogin = (response: any, service?: string): void => {\n        const { accessToken } = response;\n        if (accessToken) {\n            dispatch(loginActionWithService({ accessToken }, service));\n        } else {\n            message.error('Đăng nhập không thành công.');\n        }\n    };\n\n    const loginFacebook = (data: any) => {\n        handleSocialLogin(data, 'facebook');\n    };\n\n    return (\n        <BaseLayout title='Chọn fanpage'>\n            <div className='page-wrap'>\n                <div className='header-title-active'>\n                    <h3 className='title'>Chọn fanpage cần quản lý</h3>\n                    <span className={checkYealyPackage ? '' : 'hidden-sub-header'}>\n                        Đã chọn tối đa số page!\n                    </span>\n                </div>\n                <Table\n                    columns={columns}\n                    onRow={(record: any) => {\n                        return {\n                            onClick: () => selectRow(record),\n                        };\n                    }}\n                    rowSelection={{\n                        selectedRowKeys,\n                        onChange: (selectedRowKeys: any, selectedRows: any) => {\n                            onSelectedRowKeysChange(selectedRowKeys, selectedRows);\n                        },\n                        getCheckboxProps: (record) => ({\n                            disabled: hancleCheckYearlyPackage(record),\n                        }),\n                    }}\n                    dataSource={pages}\n                    pagination={false}\n                    loading={loading}\n                    rowClassName={(record) => hancleCheckYearlyPackage(record) && 'disabled-row'}\n                />\n\n                <Row gutter={15}>\n                    <Col xs={24} sm={12} style={{ marginTop: 15 }}>\n                        <Button\n                            block\n                            size={size}\n                            type='primary'\n                            onClick={handleSubscride}\n                            loading={loading_sub}\n                            disabled={selectedRowKeys.length === 0}\n                        >\n                            Truy cập\n                        </Button>\n                    </Col>\n                    <Col xs={24} sm={12} style={{ marginTop: 15 }}>\n                        <Link to='/customer/conversation'>\n                            <Button size={size} block>\n                                Trở lại\n                            </Button>\n                        </Link>\n                    </Col>\n                </Row>\n                <Row gutter={15}>\n                    <Col xs={24} sm={24} style={{ marginTop: 15 }}>\n                        <LoginFacebookBtn\n                            loginFacebook={loginFacebook}\n                            title=' Nhập thêm fanpage'\n                        />\n                    </Col>\n                </Row>\n            </div>\n            {loading_sub && <ModalLoadData visible={loading_sub} />}\n        </BaseLayout>\n    );\n}\n\nexport default TableListPages;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/api/product-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/labelState/labelAction.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/utils/generate-url-img-fb.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/livestream-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/livestreamState/livestreamAction.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/conversation-detail-list.tsx",["1711","1712","1713","1714"],"import { Button, Space } from 'antd';\nimport { isArray, pick } from 'lodash';\nimport React, { FC, ReactElement, useEffect, useLayoutEffect, useRef } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadComments, loadMessages } from '../../../api/conversation-api';\nimport { Loading } from '../../../components';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport { setNewMessage } from '../../../reducers/fanpageState/fanpageAction';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { Comment, Message, useConversationDetail } from './context';\nimport MessageBubble from './message-bubble';\n\ntype Item = Comment | Message;\n\ninterface Props {\n    contentPost: any;\n    loadingContent: boolean;\n    updateContentPost: () => void;\n    filterConversation: () => void;\n}\n\nconst ConversationDetailList: FC<Props> = ({\n    contentPost,\n    loadingContent,\n    updateContentPost,\n    filterConversation,\n}): ReactElement => {\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n    const newMessage: any = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.newMessage\n    );\n    const isUpdateMessage: boolean = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.isUpdateMessage\n    );\n\n    const dispatch = useDispatch();\n\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const {\n        isNewMessage,\n        setIsNewMessage,\n        next,\n        loading,\n        messages,\n        updateMessage,\n        loadMoreMessages,\n    } = useConversationDetail();\n\n    const messagesEndRef = useRef<any>(null);\n\n    const scrollToBottom = () => {\n        if (!loading) {\n            messagesEndRef.current.scrollIntoView(false);\n        }\n    };\n\n    useLayoutEffect(() => {\n        if (isNewMessage) {\n            scrollToBottom();\n            setIsNewMessage(false);\n        }\n    }, [isNewMessage]);\n\n    useEffect(() => {\n        if (newMessage && isUpdateMessage) {\n            updateMessage(newMessage);\n            dispatch(setNewMessage(null));\n        }\n    }, [newMessage, isNewMessage]);\n\n    const getInnerHeight = (elm: HTMLElement) => {\n        if (elm) {\n            const computed = getComputedStyle(elm);\n            const padding = parseInt(computed.paddingTop) + parseInt(computed.paddingBottom);\n\n            return elm.clientHeight - padding;\n        }\n\n        return 0;\n    };\n\n    useLayoutEffect(() => {\n        const elmBoxChat = document.getElementById('list-chat');\n        let isScroll = false;\n\n        if (elmBoxChat) {\n            const height = getInnerHeight(elmBoxChat);\n            isScroll = elmBoxChat.scrollHeight - (elmBoxChat.scrollTop + height) < 500;\n        }\n\n        if ((isArray(messages) && messages.length <= 20) || isScroll) {\n            scrollToBottom();\n        }\n    }, [messages]);\n\n    const renderMessages = () => {\n        if (loading) return <Loading full />;\n        return messages.map((message: any, index: number) => {\n            return (\n                <MessageBubble\n                    me={message.from.id === conversation.fbPageId}\n                    userId={conversation.fbUserId}\n                    type={conversation.type}\n                    message={message}\n                    key={message.id + index}\n                    isShowAvatarHere={\n                        index === 0 || message.from.id !== messages[index - 1].from.id\n                    }\n                />\n            );\n        });\n    };\n\n    const renderButton = () => {\n        if (loading) return;\n\n        return (\n            conversation.type === 2 && (\n                <div style={{ marginBottom: 30 }}>\n                    <Space size={10} direction='vertical'>\n                        <div className='post-content'>\n                            {contentPost.full_picture && (\n                                <div\n                                    className={\n                                        contentPost.message ? 'img-post has-content' : 'img-post'\n                                    }\n                                >\n                                    <img src={contentPost.full_picture} alt='' />\n                                </div>\n                            )}\n\n                            {contentPost.message && (\n                                <div className='text'>\n                                    <div style={{ padding: '10px 15px' }}>\n                                        {contentPost.message}\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                        <div>\n                            {/* <Button\n                            type=\"primary\"\n                            size=\"small\"\n                            loading={loadingContent}\n                            onClick={() => updateContentPost()}\n                        >\n                            Cập nhật lại nội dung bài viết\n                        </Button>\n                        &nbsp; */}\n                            <Button onClick={() => filterConversation()}>\n                                Lọc bình luận của bài viết này\n                            </Button>\n                        </div>\n                    </Space>\n                </div>\n            )\n        );\n    };\n\n    const loadMore = async () => {\n        try {\n            let res: any = { data: [] };\n            if (conversation.type === 1 && !loading && next) {\n                res = await loadMessages({\n                    ...pick(conversation, ['fbObjectId', 'fbPageId']),\n                    storeId: store._id,\n                    token: token.accessToken,\n                    next,\n                });\n                if (res && isArray(res.data)) {\n                    loadMoreMessages(res.data, res.next);\n                }\n            } else if (conversation.type === 2 && !loading && next) {\n                let conversationId = conversation.fbObjectId;\n                res = await loadComments({\n                    conversationId,\n                    ...pick(conversation, ['fbPageId']),\n                    storeId: store._id,\n                    token: token.accessToken,\n                    next,\n                });\n                if (res && isArray(res.data)) {\n                    loadMoreMessages(res.data.reverse(), res.next);\n                }\n            }\n        } catch (e) {}\n    };\n\n    return (\n        <div id='list-chat' className='conversation-detail-list'>\n            {renderButton()}\n\n            <InfiniteScroll\n                pageStart={0}\n                loadMore={loadMore}\n                hasMore={!!next}\n                loader={<Loading />}\n                useWindow={false}\n                initialLoad={false}\n                threshold={20}\n                isReverse\n            >\n                {renderMessages()}\n            </InfiniteScroll>\n            {/* {renderMessagesSending()} */}\n            <div ref={messagesEndRef} />\n        </div>\n    );\n};\n\nexport default ConversationDetailList;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/conversation-detail-action.tsx",["1715","1716","1717","1718"],"import React, { FC, useState, useEffect } from 'react';\nimport { useConversationDetail } from './context';\nimport { useSelector } from 'react-redux';\n\nimport _findLast from 'lodash/findLast';\nimport _get from 'lodash/get';\nimport _isObject from 'lodash/isObject';\nimport moment from 'moment';\n\nimport BoxReply from './box-reply';\nimport Labels from './labels';\nimport ModalAnswers from './modal-answers';\nimport Emoji from './modal-emoji';\nimport ModalImgs from './modal-imgs';\nimport ModalShortcut from './model-shortcut';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { Space } from 'antd';\nimport LabelMore from './label-more';\n\nconst ConversationDetailAction: FC = (): JSX.Element => {\n    const { messages } = useConversationDetail();\n\n    const [disabled, setDisabled] = useState(true);\n\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n\n    const page: { fbObjectId: string; name: string } = useSelector(\n        ({ fanpage }: { fanpage: any }) => fanpage.page\n    );\n\n    useEffect(() => {\n        if (conversation.type === 2) {\n            return setDisabled(false);\n        }\n\n        if (messages.length > 0 && conversation.type === 1) {\n            const message = _findLast(messages, (o) => o.from.id !== page.fbObjectId);\n            if (_isObject(message)) {\n                const createDate = moment(message.created_time);\n                const newDate = moment(new Date());\n\n                if (newDate.diff(createDate, 'days', true) <= 1) {\n                    return setDisabled(false);\n                }\n            }\n        }\n\n        setDisabled(true);\n    }, [messages]);\n\n    const { labels } = useConversationDetail();\n    return (\n        <div className='conversation-detail-action'>\n            <Space size={20} align='center'>\n                <ModalShortcut />\n                <ModalImgs disabled={disabled} />\n                <ModalAnswers disabled={disabled} />\n                <LabelMore labels={labels} />\n            </Space>\n\n            <BoxReply disabled={disabled} />\n        </div>\n    );\n};\n\nexport default ConversationDetailAction;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/labels.tsx",["1719"],"import { Space } from 'antd';\nimport React, { FC } from 'react';\nimport { useConversationDetail } from './context';\nimport Label from './label';\n\nexport interface LabelType {\n    _id: string;\n    name: string;\n    color: string;\n    backgroundColor: string;\n    order: number;\n}\n\nconst Labels: FC = (): JSX.Element => {\n    const { labelIds } = useConversationDetail();\n\n    if (!labelIds || labelIds.length === 0) return <div />;\n\n    const renderLabels = () => {\n        return labelIds.map((label) => <Label label={label} key={label._id} close />);\n    };\n\n    return <div className='labels'>{renderLabels()}</div>;\n};\n\nexport default Labels;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/setting/settingAction.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/conversation-detail-top.tsx",["1720","1721"],"import { EyeInvisibleOutlined } from '@ant-design/icons';\nimport { Avatar, Tooltip, Space } from 'antd';\nimport { find } from 'lodash';\nimport moment from 'moment';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { markAsUnreadApi } from '../../../api/conversation-api';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport {\n    loadConversations,\n    markAsUnread,\n    removeConversations,\n    updateCountUnreadPage,\n} from '../../../reducers/fanpageState/fanpageAction';\nimport { IConversation, IFacebookState, Page } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport ToggleBlockBtn from './toggle-block-btn';\nimport { MessageIcon, FacebookIcon, SearchIcon } from '../../../assets/icon';\nimport { generateUrlImgFb } from '../../../utils/generate-url-img-fb';\n\nimport './conversation-detail-top.less';\n\nconst ConversationDetailTop: FC = (): JSX.Element => {\n    const [flag, setFlag] = useState<boolean>(false);\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n    const pages = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.pages);\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n    const page = find(pages, (page: Page) => page.fbObjectId === conversation.fbPageId);\n\n    useEffect(() => {\n        setFlag(false);\n    }, [conversation]);\n\n    const postId = conversation.postId ? conversation.postId.split('_')[1] : '';\n\n    const dispatch = useDispatch();\n\n    const handleFilterConversation = () => {\n        dispatch(removeConversations());\n        let fbPageId;\n        if (store.activePage) {\n            fbPageId = store.activePage.fbObjectId;\n        }\n        const query = store.queryConversation\n            ? `${store.queryConversation}&fbUserId=${conversation.fbUserId}`\n            : `fbUserId=${conversation.fbUserId}`;\n        dispatch(loadConversations(query, [fbPageId]));\n    };\n\n    const handleMarkAsUnread = () => {\n        if (!flag || !conversation.unread) {\n            markAsUnreadApi({\n                storeId: store._id,\n                fbPageId: conversation.fbPageId,\n                token: token.accessToken,\n                conversationId: conversation.fbObjectId,\n                read: false,\n            }).then((res: any) => {\n                dispatch(\n                    updateCountUnreadPage({\n                        fbObjectId: store.activePage.fbObjectId,\n                    })\n                );\n                dispatch(markAsUnread({ conversation, unread: true }));\n                setFlag(true);\n            });\n        }\n    };\n\n    return (\n        <div className='conversation-detail-top'>\n            <div className='left'>\n                <div className='avatar'>\n                    <Avatar\n                        alt={conversation.fbUsername}\n                        src={generateUrlImgFb(conversation.fbUserId, page.accessToken)}\n                        size={30}\n                    />\n\n                    <span className='icon'>\n                        {conversation.type === 1 ? <MessageIcon /> : <FacebookIcon />}\n                    </span>\n                </div>\n\n                <div className='info'>\n                    <div className='name'>{conversation.fbUsername}</div>\n                    <span className='date'>\n                        {moment(conversation.updatedAt).format('DD-MM-YYYY HH:mm')}\n                    </span>\n                </div>\n            </div>\n            <div className='right'>\n                <div className='action'>\n                    <span className='item'>\n                        <Tooltip placement='bottom' title='Tất cả hội thoại của khách này'>\n                            <SearchIcon onClick={handleFilterConversation} />\n                        </Tooltip>\n                    </span>\n\n                    <span className='item'>\n                        <ToggleBlockBtn />\n                    </span>\n\n                    <span className='item'>\n                        <Tooltip placement='bottom' title='Đánh dấu chưa đọc'>\n                            <EyeInvisibleOutlined onClick={handleMarkAsUnread} disabled={flag} />\n                        </Tooltip>\n                    </span>\n                </div>\n\n                {page && (\n                    <div className='avatar-fb'>\n                        <Space align='center' size={15}>\n                            <a href={page.link} target='_blank'>\n                                <Tooltip placement='bottom' title={page.name}>\n                                    <Avatar\n                                        src={generateUrlImgFb(page.fbObjectId, page.accessToken)}\n                                        alt={page.name}\n                                        size={38}\n                                    />\n                                </Tooltip>\n                            </a>\n\n                            {conversation.type === 2 && (\n                                <a href={`${page && page.link}/posts/${postId}`} target='_blank'>\n                                    <Tooltip placement='bottom' title='Xem trên facebook'>\n                                        <FacebookIcon style={{ fontSize: 25 }} />\n                                    </Tooltip>\n                                </a>\n                            )}\n                        </Space>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default ConversationDetailTop;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/staffState/staffAction.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/collections/livestream-script.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/actions/setting.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/customer-tab.tsx",["1722","1723"],"import { EnvironmentOutlined } from '@ant-design/icons';\nimport { Avatar, Col, Form, Row } from 'antd';\nimport { isEmpty } from 'lodash';\nimport querystring from 'querystring';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport storeApi from '../../../api/store-api';\nimport { IFacebookConversation } from '../../../collections/facebook-conversation';\nimport { Loading } from '../../../components';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport { IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { generateUrlImgFb } from '../../../utils/generate-url-img-fb';\nimport { useOrder } from './context-order';\nimport CustomerNote from './customer-note';\nimport EditAddressCustomer from './edit-address-customer';\nimport EditField from './edit-field';\n\nconst CustomerTab: FC = (): JSX.Element => {\n    const conversation: IFacebookConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const page = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.page);\n\n    const [form] = Form.useForm();\n    const [loadingForm, setLoadingForm] = useState<boolean>(true);\n    const [customerId, setCustomerId] = useState<string>('');\n    const [dataCustomer, setDataCustomer] = useState<any>({});\n    const [isEditForm, setIsEditForm] = useState<boolean>(false);\n\n    const toggleSetIsEditForm = () => setIsEditForm(!isEditForm);\n\n    const { setInfoCustomer, customerObjectId } = useOrder();\n\n    const getCustomers = async () => {\n        setLoadingForm(true);\n        const fbUserId = conversation.fbUserId;\n        const query = querystring.stringify({ fbUserId });\n        const response = await storeApi.getListCustomers({\n            storeId: store._id,\n            token: token.accessToken,\n            page: 1,\n            limit: 1,\n            query,\n        });\n        let data;\n        if (response.data.length > 0) {\n            setCustomerId(response.data[0]._id);\n            data = {\n                _id: response.data[0]._id,\n                fbUserId: response.data[0].fbUserId,\n                name: response.data[0].name,\n                phoneNo: response.data[0].phoneNo,\n                address: response.data[0].address,\n                province: response.data[0].province,\n                district: response.data[0].district,\n                ward: response.data[0].ward,\n                note: response.data[0].note,\n            };\n            setInfoCustomer(data);\n        } else {\n            form.resetFields();\n            data = {\n                _id: '',\n                fbUserId: '',\n                name: '',\n                phoneNo: '',\n                address: '',\n                province: undefined,\n                district: undefined,\n                ward: undefined,\n                note: '',\n            };\n\n            setInfoCustomer(data);\n            setCustomerId('');\n        }\n        form.resetFields();\n        setDataCustomer(data);\n        setLoadingForm(false);\n        setIsEditForm(false);\n    };\n\n    useEffect(() => {\n        getCustomers();\n    }, [conversation.fbUserId]);\n\n    useEffect(() => {\n        if (!isEmpty(customerObjectId) && customerObjectId !== customerId) {\n            getCustomers();\n        }\n    }, [customerObjectId]);\n\n    const onChangeField = (field: string, value: any) => {};\n\n    if (loadingForm) return <Loading full />;\n\n    return (\n        <div className='customer-tab'>\n            <div className='tab-content-inner'>\n                {!isEditForm && (\n                    <Row gutter={15}>\n                        <Col>\n                            <Avatar\n                                size={42}\n                                src={generateUrlImgFb(conversation.fbUserId, page.accessToken)}\n                            />\n                        </Col>\n                        <Col style={{ flex: 1 }}>\n                            <div>\n                                <EditField\n                                    field='name'\n                                    value={dataCustomer.name}\n                                    onChange={onChangeField}\n                                    dataCustomer={dataCustomer}\n                                />\n\n                                <EditField\n                                    field='phoneNo'\n                                    value={dataCustomer.phoneNo}\n                                    onChange={onChangeField}\n                                    empty='Chưa có số điện thoại'\n                                    dataCustomer={dataCustomer}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                )}\n\n                <div className='customer-address'>\n                    <Row gutter={10}>\n                        {!isEditForm && (\n                            <Col>\n                                <EnvironmentOutlined style={{ fontSize: 17 }} />\n                            </Col>\n                        )}\n\n                        <Col style={{ flex: 1 }}>\n                            <EditAddressCustomer\n                                dataCustomer={dataCustomer}\n                                isEditForm={isEditForm}\n                                toggleSetIsEditForm={toggleSetIsEditForm}\n                                changeDataCustomer={(value: any) => setDataCustomer(value)}\n                            />\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n\n            <CustomerNote\n                customer={dataCustomer}\n                onChange={(value: string) => setDataCustomer({ ...dataCustomer, note: value })}\n            />\n        </div>\n    );\n};\n\nexport default CustomerTab;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/conversation-item.tsx",["1724"],"import { MinusCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport { Avatar, Space } from 'antd';\nimport moment from 'moment';\nimport React, { FC, memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { markAsUnreadApi } from '../../../api/conversation-api';\nimport { FacebookOutlinedIcon, MessageIcon } from '../../../assets/icon';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport {\n    selectConversation,\n    setNullForConversation,\n    updateCountUnreadPage,\n} from '../../../reducers/fanpageState/fanpageAction';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { generateUrlImgFb } from '../../../utils/generate-url-img-fb';\n\ninterface Props {\n    conversation: IConversation;\n}\n\nconst ConversationItem: FC<Props> = ({ conversation }): JSX.Element => {\n    const dispatch = useDispatch();\n    const conversation_select = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n\n    const page = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.page);\n\n    const updateYear = moment(conversation.updatedAt).format('YYYY');\n    const nowYear = moment().format('YYYY');\n    const format_date = updateYear === nowYear ? 'DD/MM' : 'DD/MM/YY';\n    const date = moment(conversation.updatedAt).format(format_date);\n\n    const handleSelectConversation = async () => {\n        await dispatch(setNullForConversation());\n        dispatch(selectConversation(conversation));\n        if (conversation.unread) {\n            markAsUnreadApi({\n                storeId: store._id,\n                fbPageId: conversation.fbPageId,\n                token: token.accessToken,\n                conversationId: conversation.fbObjectId,\n                read: true,\n            }).then((res: any) => {\n                dispatch(\n                    updateCountUnreadPage({\n                        fbObjectId: store.activePage.fbObjectId,\n                    })\n                );\n            });\n        }\n    };\n\n    const active = conversation_select && conversation._id === conversation_select._id;\n\n    let className = active ? 'item active' : 'item';\n\n    if (conversation.unread) className += ' unread';\n\n    const classNameInfo = 'info';\n\n    return (\n        <div className={className} onClick={handleSelectConversation}>\n            <div className='item-avatar'>\n                <Avatar\n                    src={generateUrlImgFb(conversation.fbUserId, page.accessToken)}\n                    icon={<UserOutlined />}\n                    size={50}\n                />\n                <span className='icon'>\n                    {conversation.type === 1 ? <MessageIcon /> : <FacebookOutlinedIcon />}\n                </span>\n            </div>\n\n            <div className={classNameInfo}>\n                <div>\n                    <span className='name'>{conversation.fbUsername}</span>{' '}\n                    {conversation.blocked && <MinusCircleOutlined style={{ color: 'red' }} />}\n                </div>\n\n                <span className='message'>{conversation.message}</span>\n\n                <div className='labels-wrap'>\n                    {conversation.labelIds &&\n                        conversation.labelIds.map((item) => (\n                            <span\n                                className='label'\n                                style={{\n                                    background: item.backgroundColor,\n                                    color: item.color,\n                                    fontWeight: conversation.unread ? 700 : 400,\n                                }}\n                                key={item._id}\n                            >\n                                {item.name}\n                            </span>\n                        ))}\n                </div>\n            </div>\n            <div className='item-right'>\n                <div className='date'>{date}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(ConversationItem);\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/conversation-filter.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/context-order.tsx",["1725","1726"],"import React, { createContext, FC, ReactNode, useState, useContext, useEffect } from 'react';\n\ninterface Product {\n    productId: string;\n    count: number;\n    price: number;\n}\n\ninterface State {\n    customer: {\n        name: string;\n        phoneNo: string;\n        address: string;\n        province: string | undefined;\n        district: string | undefined;\n        ward: string | undefined;\n    };\n    products: Product[];\n\n    deliveryOptions: {\n        serviceId?: number;\n        transportType: number;\n        shipmentFee: number;\n        shipmentFeeForCustomer: number;\n        shipmentFeeByTotal: boolean;\n        discount: number;\n        discountBy: number;\n        feeForReceiver: Number;\n        moneyForSender: number;\n        customerNote: string;\n        noteForCustomerCare: string;\n        transportStatus: number;\n        noteForDelivery?: string;\n        transportLogs: {\n            status: number;\n            updatedAt: string;\n        };\n    };\n}\n\nexport const initialOrder = {\n    use_transformer: true,\n    customer: {\n        _id: '',\n        fbUserId: '',\n        name: '',\n        phoneNo: '',\n        address: '',\n        province: undefined,\n        district: undefined,\n        ward: undefined,\n    },\n    products: [],\n    deliveryOptions: {\n        serviceId: undefined,\n        transportType: undefined,\n        shipmentFeeForCustomer: 0,\n        shipmentFee: 0,\n        customerNote: '',\n        noteForCustomerCare: '',\n        discount: 0,\n        noteForDelivery: undefined,\n        discountBy: 0,\n    },\n    warehouseId: undefined,\n};\n\nconst initialCustomer = {\n    _id: '',\n    name: '',\n    phoneNo: '',\n    address: '',\n    province: undefined,\n    district: undefined,\n    ward: undefined,\n};\n\nconst initialState = {\n    loading: false,\n    order: initialOrder,\n    infoCustomer: initialCustomer,\n    customerObjectId: '',\n};\n\nconst initalContext = {\n    state: initialState,\n    setState: (state: any): any => state,\n};\n\nconst OrderContext = createContext(initalContext);\n\ninterface Props {\n    children: ReactNode;\n    order?: any;\n}\n\nconst ProviderOrderContext: FC<Props> = ({ children, order }) => {\n    const [state, setState] = useState(initialState);\n\n    useEffect(() => {\n        if (order) {\n            setState({ ...state, order, infoCustomer: order.customer });\n        }\n    }, [order]);\n\n    const value = { state, setState };\n    return <OrderContext.Provider value={value}>{children}</OrderContext.Provider>;\n};\n\nconst useOrder = () => {\n    const value = useContext(OrderContext);\n\n    const { state, setState } = value;\n\n    const setOrder = (order: any) => {\n        setState({ ...state, order });\n    };\n\n    const setProducts = (products: any[]) => {\n        setState({ ...state, order: { ...state.order, products } });\n    };\n\n    const resetOrder = () => {\n        setState({\n            ...state,\n            order: initialOrder,\n        });\n    };\n\n    const setInfoCustomer = (infoCustomer: any) => {\n        setState({\n            ...state,\n            infoCustomer,\n            customerObjectId: infoCustomer._id,\n            order: { ...state.order, customer: infoCustomer },\n        });\n    };\n\n    const setCustomerObjectId = (customerObjectId: string) => {\n        setState({ ...state, customerObjectId });\n    };\n\n    return { ...state, setOrder, setProducts, resetOrder, setInfoCustomer, setCustomerObjectId };\n};\n\nexport { ProviderOrderContext, useOrder };\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/tab.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-tab.tsx",["1727"],"import { SaveOutlined } from '@ant-design/icons';\nimport { Button, message, Space, Divider } from 'antd';\nimport { get, isEmpty, pick } from 'lodash';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport storeApi from '../../../api/store-api';\nimport AddProduct from './add-product';\nimport { useOrder } from './context-order';\nimport OrderDone from './order-done';\nimport OrderProductList from './order-product-list';\nimport OrderStore from './order-store';\nimport OrderTransport from './order-transport';\nimport SearchProduct from './search-product';\nimport { getFee } from './util';\nimport OrderCustomerInfo from './order-customer-info';\nimport useHiddenModalExpired from '../../../hooks/use-hidden-modal-expired';\n\nexport interface IOrder {\n    pageId: string;\n    order_name: string;\n    order_phone: string;\n    order_email: string;\n    address: string;\n    addressInfo: {\n        city: any;\n        district: any;\n        ward: any;\n    };\n    list_order: any[];\n    type_order: string;\n    shiper: string | null;\n    phi_van_chuyen: number;\n    phi_bao_khach: number;\n    chiet_khau: {\n        type: string;\n        value: number;\n    };\n    customer_note: string;\n    cskh_note: string;\n    store: any;\n    tien_chuyen_khoan: number;\n    tien_coc: number;\n}\n\ninterface Props {}\n\nconst OrderTab = (props: Props) => {\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n    const page = useSelector((state: any) => state.fanpage.page);\n    const conversation = useSelector((state: any) => state.fanpage.conversation);\n\n    const { order, resetOrder, customerObjectId, setCustomerObjectId } = useOrder();\n    const [submit, setSubmit] = useState(false);\n    const [done, setDone] = useState(false);\n    const { hiddenModalExpired } = useHiddenModalExpired();\n\n    const toggleDone = () => {\n        resetOrder();\n        setDone(!done);\n    };\n\n    const saveOrder = async () => {\n        try {\n            setSubmit(true);\n            let newCustomerId;\n            if (isEmpty(customerObjectId)) {\n                const dataCustomer = {\n                    ...pick(order.customer, [\n                        'name',\n                        'phoneNo',\n                        'address',\n                        'province',\n                        'district',\n                        'ward',\n                    ]),\n                    fbPageId: store.activePage._id,\n                    fbUserId: conversation.fbUserId,\n                };\n                const newCustomer = await storeApi.createCustomer({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    data: dataCustomer,\n                });\n                newCustomerId = newCustomer._id;\n                order.customer = newCustomer;\n            }\n\n            const products = order.products.map((p: any) =>\n                pick(p, ['count', 'productId', 'price']),\n            );\n\n            const valueShipmentFeeForCustomer = get(\n                order,\n                'deliveryOptions.shipmentFeeForCustomer',\n            );\n\n            const shipmentFeeForCustomer =\n                !valueShipmentFeeForCustomer || valueShipmentFeeForCustomer === 0\n                    ? get(order, 'deliveryOptions.shipmentFee')\n                    : valueShipmentFeeForCustomer;\n\n            const data = {\n                products,\n                customer: pick(order.customer, [\n                    '_id',\n                    'fbUserId',\n                    'name',\n                    'phoneNo',\n                    'address',\n                    'province',\n                    'district',\n                    'ward',\n                ]),\n                fbPageId: page.fbObjectId,\n                deliveryOptions: {\n                    ...pick(order.deliveryOptions, [\n                        'shipmentFee',\n                        'discount',\n                        'discountBy',\n                        'noteForDelivery',\n                    ]),\n                    shipmentFeeForCustomer,\n                    serviceId: order.deliveryOptions.serviceId || 0,\n                    transportType: order.deliveryOptions.transportType || 0,\n                    customerNote:\n                        order.deliveryOptions.customerNote.length > 0\n                            ? order.deliveryOptions.customerNote\n                            : undefined,\n                    noteForCustomerCare:\n                        order.deliveryOptions.noteForCustomerCare.length > 0\n                            ? order.deliveryOptions.noteForCustomerCare\n                            : undefined,\n\n                    feeForReceiver: getFee(order).feeForReceiver,\n                    shipmentFeeByTotal: true,\n                },\n                warehouseId: order.warehouseId,\n            };\n\n            await storeApi.createOrder({\n                storeId: store._id,\n                token: token.accessToken,\n                data,\n            });\n\n            setSubmit(false);\n            message.success('Đã tạo đơn thành công');\n            if (isEmpty(customerObjectId)) {\n                const dataCustomer = {\n                    ...order.customer,\n                    fbPageId: store.activePage._id,\n                    fbUserId: conversation.fbUserId,\n                };\n                const newCustomer = await storeApi.createCustomer({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    data: dataCustomer,\n                });\n                setCustomerObjectId(newCustomer._id);\n            }\n            toggleDone();\n        } catch (error) {\n            setSubmit(false);\n            if (get(error, 'response.data.message') === 'INVALID_PRODUCTS_QUANTITY') {\n                message.error(\n                    'Sản phẩm được chọn có thể không tồn tại hoặc không đủ số lượng ở kho lấy hàng mà bạn đã chọn',\n                );\n            } else {\n                message.error('Lỗi tạo đơn');\n            }\n        }\n    };\n\n    const notValidDelivery = () => {\n        const hasSelectDelivery =\n            order.deliveryOptions.serviceId && order.deliveryOptions.serviceId !== 0;\n\n        // if(!hasSelectDelivery) return true;\n\n        if (\n            (hasSelectDelivery && !order.deliveryOptions.transportType) ||\n            (hasSelectDelivery && typeof order.deliveryOptions.noteForDelivery === 'undefined')\n        ) {\n            return true;\n        }\n\n        return false;\n    };\n\n    const checkValid = () => {\n        if (\n            order.customer.name.length === 0 ||\n            order.customer.phoneNo.length === 0 ||\n            typeof order.customer.province === 'undefined' ||\n            typeof order.customer.district === 'undefined' ||\n            typeof order.customer.ward === 'undefined' ||\n            typeof order.warehouseId === 'undefined' ||\n            order.products.length === 0 ||\n            notValidDelivery() ||\n            hiddenModalExpired\n        )\n            return false;\n\n        return true;\n    };\n\n    if (done) {\n        return <OrderDone toggleDone={toggleDone} />;\n    }\n\n    return (\n        <div className='order-tab'>\n            <div className='order-tab-content'>\n                <div className='tab-content-inner' style={{ paddingTop: 5 }}>\n                    <Space direction='vertical' size={20} style={{ width: '100%' }}>\n                       <div>\n                           <OrderCustomerInfo />\n                           <Divider />\n                           <OrderStore />\n                           <Divider />\n                           <SearchProduct />\n                           <OrderProductList />\n                           <AddProduct />\n                       </div>\n                       <OrderTransport />\n                    </Space>\n                </div>\n            </div>\n\n            <div className='order-tab-bottom'>\n                <Button\n                    type='primary'\n                    htmlType='submit'\n                    loading={submit}\n                    disabled={!checkValid()}\n                    icon={<SaveOutlined />}\n                    onClick={saveOrder}\n                    style={{ height: 35 }}\n                >\n                    Lưu\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default OrderTab;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/tab-pages/pages.tsx",["1728"],"\nimport React, { FC, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport BtnPage from './btn-page';\nimport { useSelector } from 'react-redux';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { difference, intersection } from 'lodash';\n\ninterface Props {\n    items: any[];\n    pages: any[];\n    pageActive: any;\n    handleSelectPage: (page: any) => void;\n    setItems: (items: any) => void;\n    setPagesHide: (pages: any) => void;\n}\n\n\nconst Pages: FC<Props> = ({ items, pages, pageActive, handleSelectPage, setItems, setPagesHide }): JSX.Element => {\n    const storeId = useSelector(({ store }: { store: IStoreState }) => store.store._id);\n\n    useEffect(() => {\n        const data = localStorage.getItem('pages-setting');\n        if (data) {\n            const pagesSetting = JSON.parse(data);\n            if (pagesSetting.storeId !== storeId) {\n                localStorage.removeItem('pages-setting');\n                return;\n            }\n            \n            let pagesShow = intersection(pagesSetting.setting, items);\n            if (pagesShow.length === 0) {\n                pagesShow = items;\n            }\n            \n            setItems(pagesShow);\n            setPagesHide(difference(items, pagesShow));\n        }\n    }, [])\n\n    useEffect(() => {\n        const pagesSetting = {\n            storeId: storeId,\n            setting: [...items]\n        }\n        localStorage.setItem('pages-setting', JSON.stringify(pagesSetting));\n    }, [items, storeId])\n\n    const reorder = (list: any, startIndex: number, endIndex: number) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n        return result;\n    };\n\n    const hidePage = (page: any) => {\n        if (items.length <= 1) {\n            return;\n        }\n\n        function isNot(item: string, page: any) {\n            return item !== page._id\n        }\n        setItems(prev => prev.filter(item => isNot(item, page)));\n        setPagesHide(prev => [...prev, page._id]);\n    }\n\n    const onDragEnd = (result: any) => {\n        const { source, destination } = result;\n        if (!destination) {\n            return;\n        }\n\n        setItems(reorder(items, source.index, destination.index));\n    }\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"droppable\" direction='horizontal'>\n                {(provided) => (\n                    <div\n                        className='pages-draggable'\n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                    >\n                        {items.map((key, index) => (\n                            <Draggable key={key} draggableId={key} index={index}  >\n                                {(provided) => (\n                                    <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        draggable={true}\n                                    >\n                                        <BtnPage\n                                            key={key}\n                                            page={pages[key]}\n                                            active={pageActive._id === pages[key]._id}\n                                            onClick={handleSelectPage}\n                                            hidePage={hidePage}\n                                        />\n                                    </div>\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n    )\n}\n\nexport default Pages;","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-label/context.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/context.tsx",["1729"],"import React, { createContext, FC, ReactNode, useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { getOrderDetail } from '../../api/order-api';\nimport { Loading } from '../../components';\nimport OrderNotFound from './order-not-found';\nimport './style.less';\n\ninterface State {\n    loading: boolean;\n    order: any;\n}\n\nconst initialState = {\n    loading: false,\n    order: null,\n};\n\nconst initialContext = {\n    state: initialState,\n    setState: (state: State): any => state,\n};\n\nconst Context = createContext(initialContext);\n\ninterface Props {\n    children: ReactNode;\n}\n\ninterface Params {\n    id: string;\n}\n\nconst ProviderContextOrder: FC<Props> = ({ children }) => {\n    const params = useParams<Params>();\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n    const [state, setState] = useState<State>(initialState);\n\n    const value = { state, setState };\n\n    useEffect(() => {\n        async function loadOrder() {\n            setState({ ...state, loading: true });\n            try {\n                const response = await getOrderDetail({\n                    orderId: params.id,\n                    storeId: store._id,\n                    token: token.accessToken,\n                });\n\n                setState({\n                    ...state,\n                    order: {\n                        ...response,\n                        products: response.products.filter((p: any) => p.productId),\n                    },\n                    loading: false,\n                });\n            } catch (error) {\n                setState({ ...state, loading: false });\n            }\n        }\n\n        if (params.id) {\n            loadOrder();\n        }\n    }, []);\n\n    const renderContent = () => {\n        if (state.loading) return <Loading full />;\n        if (!state.order) return <OrderNotFound />;\n\n        return children;\n    };\n\n    return (\n        <Context.Provider value={value}>\n            <div className='order-detail'>{renderContent()}</div>\n        </Context.Provider>\n    );\n};\n\nconst useOrderDetail = () => {\n    const { state, setState } = useContext(Context);\n\n    const changeOrder = (order: any) => {\n        return setState({\n            ...state,\n            order,\n        });\n    };\n\n    return {\n        ...state,\n        setState,\n        changeOrder,\n    };\n};\n\nexport { ProviderContextOrder, useOrderDetail };\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-label/filter.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/form-update-order.tsx",["1730","1731","1732","1733","1734","1735"],"import { ExclamationCircleOutlined, SaveOutlined } from '@ant-design/icons';\nimport {\n    Button,\n    Card,\n    Col,\n    Divider,\n    Form,\n    Input,\n    InputNumber,\n    message,\n    Modal,\n    Row,\n    Tag,\n    Select,\n} from 'antd';\nimport { get, isNull, pick, omit, isEqual } from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateOrder } from '../../api/order-api';\nimport shippingApi from '../../api/shipping-api';\nimport ChangeStatus from '../orders/change-status';\nimport { statusDelivery } from '../orders/data';\nimport AddProduct from './add-product';\nimport { useOrderDetail } from './context';\nimport CreateShipOrder from './create-ship-order';\nimport Discount from './discount';\nimport NoteForDelivery from './note-for-delivery';\nimport OrderAddress from './order-address';\nimport SelectOptionDelivery from './select-option-delivery';\nimport ShippingList from './shipping-list';\nimport TableOrderList from './table-order-list';\nimport TotalOrder from './total-order';\nimport { ships } from './var';\nimport { formatterInput, parserInput } from '../../utils/format-money';\nimport { validatePhone } from '../../utils/validate-phone';\nimport { fetchWarehouses } from '../../reducers/warehouseState/warehouseAction';\nimport { getFee } from '../conversation/conversation-customer/util';\nimport './form-update-order.less';\n\ninterface Props {}\n\nexport const formItemLayout = {\n    labelCol: { span: 7 },\n    wrapperCol: { span: 17 },\n};\nconst formItemLayout1 = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\nconst LIMIT = 20;\n\nexport const style = { marginBottom: 5 };\n\nconst FormUpdateOrder = (props: Props): JSX.Element => {\n    const [isEdit, setIsEdit] = useState(false);\n    const [isEditShip, setIsEditShip] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [disabledUpdate, setDisabledUpdate] = useState(false);\n    const [loading_create_ship, setLoadingCreateShip] = useState(false);\n    const { order, changeOrder } = useOrderDetail();\n    const [order_local, setOrderLocal] = useState<any>(order);\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n    const [formOrderDetail] = Form.useForm();\n\n    const updateIsEdit = (bool: boolean) => {\n        setIsEdit(bool);\n    };\n\n    const handleUpdateOrder = (order_res: any) => {\n        setOrderLocal(order_res);\n        updateIsEdit(true);\n    };\n\n    const changeAddress = (order_res: any) => {\n        setIsEditShip(true);\n        handleUpdateOrder(order_res);\n    };\n\n    const onChangeDeliveryOptions = (e: any) => {\n        const deliveryOptions = {\n            ...order_local.deliveryOptions,\n            [e.target.name]: e.target.value,\n        };\n\n        handleUpdateOrder({\n            ...order_local,\n            deliveryOptions,\n        });\n    };\n\n    const handleRemoveProduct = (productId: any) => {\n        const newProducts = order_local.products.filter(\n            (product: any) => product.productId._id !== productId\n        );\n        const newOrder = { ...order_local, products: newProducts };\n        handleUpdateOrder(newOrder);\n        changeOrder(newOrder);\n        updateIsEdit(true);\n        setIsEditShip(true);\n    };\n\n    const changeCustomer = (e: any) => {\n        handleUpdateOrder({\n            ...order_local,\n            customer: {\n                ...order_local.customer,\n                [e.target.name]: e.target.value,\n            },\n        });\n    };\n\n    const updateProduct = (products: any) => {\n        handleUpdateOrder({\n            ...order_local,\n            products,\n        });\n        setIsEditShip(true);\n    };\n\n    const changeDiscount = ({ discount, discountBy }: { discount: number; discountBy: number }) => {\n        const deliveryOptions = {\n            ...order_local.deliveryOptions,\n            discount,\n            discountBy,\n        };\n        handleUpdateOrder({\n            ...order_local,\n            deliveryOptions,\n        });\n    };\n\n    const changeShipmentFee = (shipmentFee: any) => {\n        const deliveryOptions = {\n            ...order_local.deliveryOptions,\n            shipmentFee,\n        };\n        handleUpdateOrder({\n            ...order_local,\n            deliveryOptions,\n        });\n    };\n\n    const changeShipmentFeeForCustomer = (shipmentFeeForCustomer: any) => {\n        const deliveryOptions = {\n            ...order_local.deliveryOptions,\n            shipmentFeeForCustomer,\n        };\n        handleUpdateOrder({\n            ...order_local,\n            deliveryOptions,\n        });\n    };\n\n    const changeNoteForDelivery = (noteForDelivery: string) => {\n        const newOrder = {\n            ...order_local,\n            deliveryOptions: {\n                ...order_local.deliveryOptions,\n                noteForDelivery,\n            },\n        };\n        handleUpdateOrder(newOrder);\n    };\n\n    const [warehouseId, setWarehouseId] = useState<string | undefined>(\n        order_local\n            ? (order_local as any).warehouseId && (order_local as any).warehouseId._id\n            : undefined\n    );\n    const [dataWarehouse, setDataWarehouse] = useState<any[]>([]);\n    const warehouses = useSelector(\n        ({ warehouse }: { warehouse: any }) => warehouse.warehouses.data\n    );\n    const total = useSelector(({ warehouse }: { warehouse: any }) => warehouse.warehouses.total);\n    const [page, setPage] = useState(1);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchWarehouses({ page: 1, limit: LIMIT }));\n        setDataWarehouse(warehouses);\n    }, []);\n\n    useEffect(() => {\n        if (warehouses) {\n            page === 1\n                ? setDataWarehouse(warehouses)\n                : setDataWarehouse(dataWarehouse.concat(warehouses));\n        }\n    }, [warehouses]);\n\n    const handleSelectWarehouse = (warehouseId: string) => {\n        setWarehouseId(warehouseId);\n        const data = dataWarehouse.find((w: any) => w._id === warehouseId);\n        const newOrder = {\n            ...(order_local as any),\n            warehouseId: data,\n        };\n        handleUpdateOrder(newOrder);\n    };\n\n    const handleScroll = (e: any) => {\n        const maxPage = Math.ceil(total / LIMIT);\n        const element = e.target;\n        if (\n            element.scrollHeight === element.clientHeight + element.scrollTop &&\n            page + 1 <= maxPage\n        ) {\n            setPage(page + 1);\n            dispatch(fetchWarehouses({ page: page + 1, limit: LIMIT }));\n        }\n    };\n\n    const saveOrder = async ({ showMessage = true }: { showMessage?: boolean }) => {\n        setLoading(true);\n        const products = order_local.products.map((p: any) => {\n            return {\n                count: p.count,\n                productId: p.productId._id,\n                price: p.price,\n            };\n        });\n        const { feeForReceiver } = getFee(order_local);\n\n        try {\n            const deliveryOptions = {\n                ...pick(order_local.deliveryOptions, [\n                    'discount',\n                    'discountBy',\n                    'serviceId',\n                    'shipmentFee',\n                    'shipmentFeeByTotal',\n                    'shipmentFeeForCustomer',\n                    'transportType',\n                    'customerNote',\n                    'noteForCustomerCare',\n                    'noteForDelivery',\n                ]),\n                feeForReceiver,\n                shipmentOrderId: order_local.deliveryOptions.shipmentOrderId\n                    ? order_local.deliveryOptions.shipmentOrderId\n                    : undefined,\n            };\n\n            let data: any = {\n                customer: omit(order_local.customer, [\n                    '_id',\n                    'fbUserId',\n                    'provinceName',\n                    'districtName',\n                    'wardName',\n                ]),\n                deliveryOptions,\n                products,\n                warehouseId: order_local.warehouseId._id,\n            };\n\n            if (order_local.isDraft) {\n                data.isDraft = false;\n            }\n\n            const response = await updateOrder({\n                token: token.accessToken,\n                storeId: store._id,\n                orderId: order_local._id,\n                data,\n            });\n\n            if (showMessage) {\n                message.success('Đã cập nhật đơn hàng');\n            }\n            if (isEdit) {\n                setIsEdit(false);\n            }\n\n            setLoading(false);\n\n            return response;\n        } catch (error) {\n            message.error('Lỗi cập nhật đơn hàng');\n            setLoading(false);\n\n            return undefined;\n        }\n    };\n\n    const handleToggleOrderShip = async () => {\n        setLoadingCreateShip(true);\n        const cancel = order_local.deliveryOptions.shipmentOrderId;\n\n        const message_text = {\n            success: `Đã ${cancel ? 'hủy' : 'tạo'} đơn hàng`,\n            error: `Lỗi  ${cancel ? 'hủy' : 'tạo'} đơn hàng`,\n        };\n\n        try {\n            const response = await shippingApi.toggleCreateOrderShip({\n                token: token.accessToken,\n                storeId: store._id,\n                orderId: order_local._id,\n                cancel,\n                warehouseId: order_local.warehouseId._id,\n            });\n\n            setOrderLocal({\n                ...order_local,\n                status: response.status,\n                deliveryOptions: {\n                    ...response.deliveryOptions,\n                },\n            });\n            setLoadingCreateShip(false);\n            message.success(message_text.success);\n        } catch (error) {\n            setLoadingCreateShip(false);\n            message.error(message_text.error);\n        }\n    };\n\n    const handleAddProduct = (data: any) => {\n        handleUpdateOrder(data);\n        setIsEditShip(true);\n    };\n\n    const handleChangeShip = (data: any) => {\n        if (!isEqual(order_local.deliveryOptions, data.deliveryOptions)) {\n            handleUpdateOrder(data);\n        }\n    };\n\n    const createOrderShip = () => {\n        const totalWeight = order_local.products.reduce(\n            (value: number, o: any) => o.productId.weight * o.count + value,\n            0\n        );\n\n        let minWeight = order_local.deliveryOptions.serviceId == 1 ? 10 : 1;\n        let maxWeight = order_local.deliveryOptions.serviceId == 1 ? 20000 : 1600000;\n\n        if (totalWeight < minWeight) {\n            message.error(`Tổng khối lượng của sản phẩm chưa đạt mức tối thiểu ${minWeight}g`);\n            return;\n        } else if (totalWeight > maxWeight) {\n            message.error(`Tổng khối lượng của sản phẩm vượt mức tối đa ${maxWeight / 1000}kg`);\n            return;\n        }\n\n        if (isEdit) {\n            Modal.confirm({\n                title: 'Đơn hàng chưa cập nhật',\n                icon: <ExclamationCircleOutlined />,\n                content: 'Bạn muốn tạo đơn vận chuyển với những cập nhật mới',\n                okText: 'Tạo đơn',\n                cancelText: 'Thoát',\n                onOk: () => {\n                    saveOrder({ showMessage: false }).then(() => {\n                        handleToggleOrderShip();\n                    });\n                },\n            });\n        } else {\n            handleToggleOrderShip();\n        }\n    };\n\n    const cancelDelivery = () => {\n        Modal.confirm({\n            title: 'Hủy đơn vận chuyển',\n            icon: <ExclamationCircleOutlined />,\n            content: 'Bạn muốn hủy đơn vận chuyển',\n            okText: 'Hủy đơn',\n            cancelText: 'Thoát',\n            onOk: handleToggleOrderShip,\n        });\n    };\n\n    const renderShipLabel = () => {\n        const { deliveryOptions } = order_local;\n\n        if ((deliveryOptions as any).serviceId === 1) {\n            return (\n                <Tag\n                    title={ships[1].label}\n                    style={{\n                        background: ships[1].color,\n                        borderColor: ships[1].color,\n                        color: '#fff',\n                    }}\n                >\n                    {ships[1].label}\n                </Tag>\n            );\n        }\n        if ((deliveryOptions as any).serviceId === 2) {\n            return (\n                <Tag\n                    title={ships[2].label}\n                    style={{\n                        background: ships[2].color,\n                        borderColor: ships[2].color,\n                        color: '#fff',\n                    }}\n                >\n                    {ships[2].label}\n                </Tag>\n            );\n        }\n\n        return <Tag>TVC</Tag>;\n    };\n\n    const renderButtonCreateOrderShip = () => {\n        const serviceId = get(order_local, 'deliveryOptions.serviceId');\n        const shipmentOrderId = get(order_local, 'deliveryOptions.shipmentOrderId');\n\n        if (isNull(serviceId) || typeof serviceId === 'undefined' || serviceId === 0) return null;\n\n        if (order_local.status === 4) return null;\n\n        return (\n            <CreateShipOrder\n                shipmentOrderId={shipmentOrderId}\n                createOrderShip={createOrderShip}\n                loading={loading_create_ship}\n                disabled={\n                    !order_local.deliveryOptions.noteForDelivery ||\n                    !order_local.deliveryOptions.serviceId ||\n                    disabledData ||\n                    isEditShip\n                }\n            />\n        );\n    };\n\n    const renderStatusDelivery = () => {\n        const transportStatus: string = get(order_local, 'deliveryOptions.transportStatus');\n\n        if (transportStatus) {\n            const status = (statusDelivery as any)[transportStatus];\n\n            if (!status) return;\n\n            return (\n                <Tag color='#87d068' style={{ marginLeft: 5 }}>\n                    {status.title}\n                </Tag>\n            );\n        }\n\n        return;\n    };\n\n    const renderOrderDeliveryCancel = () => {\n        const shipmentOrderId = get(order_local, 'deliveryOptions.shipmentOrderId');\n        if (shipmentOrderId)\n            return (\n                <Tag\n                    color='#f50'\n                    style={{ marginLeft: 5, cursor: 'pointer' }}\n                    onClick={cancelDelivery}\n                >\n                    Hủy đơn\n                </Tag>\n            );\n\n        return null;\n    };\n\n    const disabled = !!order_local.deliveryOptions.shipmentOrderId;\n\n    const disabledData =\n        !order_local.customer.name ||\n        !order_local.customer.phoneNo ||\n        !order_local.customer.address ||\n        !order_local.customer.province ||\n        !order_local.customer.district ||\n        !order_local.customer.ward ||\n        order_local.products.length === 0;\n\n    useEffect(() => {\n        const optionDelivery = get(order_local, 'deliveryOptions.serviceId');\n        if (optionDelivery !== 0) {\n            setDisabledUpdate(\n                disabled ||\n                    disabledData ||\n                    !order_local.deliveryOptions.noteForDelivery ||\n                    !order_local.deliveryOptions.serviceId\n            );\n        } else {\n            setDisabledUpdate(disabled || disabledData);\n        }\n    }, [order_local]);\n\n    return (\n        <Form form={formOrderDetail}>\n            <Row gutter={30} style={{ padding: '0 15px 15px' }}>\n                <Col md={16}>\n                    <Card type='inner'>\n                        <Row gutter={30}>\n                            <Col span={12}>\n                                <div className='title'>Khách hàng</div>\n                                <Form.Item\n                                    label='Tên'\n                                    {...formItemLayout}\n                                    style={style}\n                                    rules={[{ required: true, message: 'Điền tên khách hàng' }]}\n                                    initialValue={order_local.customer.name}\n                                    name='name'\n                                >\n                                    <Input\n                                        placeholder='Điền tên khách hàng'\n                                        value={order_local.customer.name}\n                                        name='name'\n                                        onChange={changeCustomer}\n                                        disabled={disabled}\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    label='Số ĐT'\n                                    {...formItemLayout}\n                                    style={style}\n                                    name='phoneNo'\n                                    rules={[\n                                        { required: true, message: 'Điền số điện thoại' },\n                                        {\n                                            validator: validatePhone,\n                                        },\n                                    ]}\n                                    initialValue={order_local.customer.phoneNo}\n                                >\n                                    <Input\n                                        placeholder='Điền số điện thoại KH'\n                                        value={order_local.customer.phoneNo}\n                                        name='phoneNo'\n                                        onChange={changeCustomer}\n                                        disabled={disabled}\n                                    />\n                                </Form.Item>\n\n                                <OrderAddress\n                                    changeAddress={changeAddress}\n                                    order={order_local}\n                                    disabled={disabled}\n                                />\n\n                                <Form.Item\n                                    label='Địa chỉ'\n                                    {...formItemLayout}\n                                    style={style}\n                                    rules={[{ required: true, message: 'Điền địa chỉ' }]}\n                                    name='address'\n                                    initialValue={order_local.customer.address}\n                                >\n                                    <Input.TextArea\n                                        name='address'\n                                        value={order_local.customer.address}\n                                        onChange={changeCustomer}\n                                        disabled={disabled}\n                                    />\n                                </Form.Item>\n\n                                <Form.Item label='Ghi chú KH' {...formItemLayout} style={style}>\n                                    <Input.TextArea\n                                        name='customerNote'\n                                        onChange={onChangeDeliveryOptions}\n                                        value={order_local.deliveryOptions.customerNote}\n                                        disabled={disabled}\n                                    />\n                                </Form.Item>\n\n                                <Form.Item label='Ghi chú CSKH' {...formItemLayout} style={style}>\n                                    <Input.TextArea\n                                        name='noteForCustomerCare'\n                                        onChange={onChangeDeliveryOptions}\n                                        value={order_local.deliveryOptions.noteForCustomerCare}\n                                        disabled={disabled}\n                                    />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span={12}>\n                                <div className='title'>Giao hàng</div>\n                                <Form.Item style={{ marginBottom: 10 }}>\n                                    <SelectOptionDelivery\n                                        order={order_local}\n                                        disabled={disabled}\n                                        changeTypeDelivery={handleUpdateOrder}\n                                    />\n                                </Form.Item>\n\n                                <Divider dashed style={{ margin: '10px 0' }} />\n\n                                {order_local.deliveryOptions.serviceId !== 0 && (\n                                    <>\n                                        <Form.Item style={{ marginBottom: 10 }}>\n                                            <Row justify='space-between' align='middle'>\n                                                <Col>Hãng vận chuyển</Col>\n                                                <Col>{renderButtonCreateOrderShip()}</Col>\n                                            </Row>\n                                        </Form.Item>\n                                        <ShippingList\n                                            disabled={disabled}\n                                            order={order_local}\n                                            changeShip={handleChangeShip}\n                                            edit={isEditShip}\n                                            updateIsEditShip={() => setIsEditShip(false)}\n                                        />\n                                        <Divider dashed style={{ margin: '15px 0' }} />\n                                        <Form.Item\n                                            label='Ghi chú'\n                                            {...formItemLayout1}\n                                            style={style}\n                                            rules={[\n                                                {\n                                                    required: true,\n                                                    message: 'Chọn ghi chú vận chuyển',\n                                                },\n                                            ]}\n                                            name='noteForDelivery'\n                                            initialValue={get(\n                                                order_local,\n                                                'deliveryOptions.noteForDelivery'\n                                            )}\n                                        >\n                                            <NoteForDelivery\n                                                noteForDelivery={get(\n                                                    order_local,\n                                                    'deliveryOptions.noteForDelivery'\n                                                )}\n                                                changeNoteForDelivery={changeNoteForDelivery}\n                                                disabled={disabled}\n                                            />\n                                        </Form.Item>\n                                    </>\n                                )}\n\n                                {/* {order_local.deliveryOptions.serviceId !== 0 &&\n                                    order_local.customer.province &&\n                                    order_local.customer.district &&\n                                    order_local.customer.ward && (\n                                        <>\n                                            <Form.Item style={{ marginBottom: 10 }}>\n                                                <Row justify='space-between' align='middle'>\n                                                    <Col>Hãng vận chuyển</Col>\n                                                    <Col>{renderButtonCreateOrderShip()}</Col>\n                                                </Row>\n                                            </Form.Item>\n                                            <ShippingList\n                                                disabled={disabled}\n                                                order={order_local}\n                                                changeShip={handleUpdateOrder}\n                                            />\n                                            <Divider dashed style={{ margin: '15px 0' }} />\n                                            <Form.Item\n                                                label='Ghi chú'\n                                                {...formItemLayout1}\n                                                style={style}\n                                            >\n                                                <NoteForDelivery\n                                                    noteForDelivery={get(\n                                                        order_local,\n                                                        'deliveryOptions.noteForDelivery'\n                                                    )}\n                                                    changeNoteForDelivery={changeNoteForDelivery}\n                                                    disabled={disabled}\n                                                />\n                                            </Form.Item>\n                                        </>\n                                    )} */}\n                                <Form.Item\n                                    label='Địa chỉ lấy hàng'\n                                    {...formItemLayout1}\n                                    style={style}\n                                    rules={[{ required: true, message: 'Chọn địa chỉ lấy hàng' }]}\n                                    name='warehouseId'\n                                    initialValue={warehouseId}\n                                >\n                                    <Select\n                                        onPopupScroll={handleScroll}\n                                        onChange={handleSelectWarehouse}\n                                        value={warehouseId}\n                                        placeholder='Chọn địa chỉ lấy hàng'\n                                        style={{ width: '100%' }}\n                                        disabled={disabled}\n                                    >\n                                        {dataWarehouse.map((warehouse: any) => (\n                                            <Select.Option\n                                                key={warehouse._id}\n                                                value={warehouse._id}\n                                            >\n                                                {warehouse.name}\n                                            </Select.Option>\n                                        ))}\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n\n                            <Col span={24}>\n                                <Divider dashed style={{ margin: '10px 0' }} />\n                            </Col>\n\n                            <Col span={24}>\n                                <Row\n                                    align='middle'\n                                    justify='space-between'\n                                    style={{\n                                        marginTop: 20,\n                                        marginBottom: 15,\n                                    }}\n                                >\n                                    <Col>\n                                        <div className='title' style={{ margin: 0 }}>\n                                            Sản phẩm\n                                        </div>\n                                    </Col>\n\n                                    <Col>\n                                        {!disabled && (\n                                            <AddProduct\n                                                order={order_local}\n                                                changeProduct={handleAddProduct}\n                                            />\n                                        )}\n                                    </Col>\n                                </Row>\n\n                                <Form.Item style={style}>\n                                    <TableOrderList\n                                        products={order_local.products}\n                                        removeProduct={handleRemoveProduct}\n                                        updateProduct={updateProduct}\n                                        disabled={disabled}\n                                    />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span={24}>\n                                <Divider dashed style={{ margin: '10px 0' }} />\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n\n                <Col md={8}>\n                    <Card type='inner' style={{ marginBottom: 15 }}>\n                        <div className='title'>Trạng thái</div>\n                        <Form.Item label='Đơn hàng' {...formItemLayout1} style={style}>\n                            <ChangeStatus status={order_local.status} orderId={order_local._id} />\n                        </Form.Item>\n                        {order_local.code && (\n                            <Form.Item label='Mã Đơn hàng' {...formItemLayout1} style={style}>\n                                <Tag style={{ wordBreak: 'break-all' }}>{order_local.code}</Tag>\n                            </Form.Item>\n                        )}\n                        <Form.Item label='Vận chuyển' {...formItemLayout1} style={style}>\n                            {renderShipLabel()}\n                            {renderStatusDelivery()}\n                        </Form.Item>\n\n                        {order_local.deliveryOptions &&\n                            order_local.deliveryOptions.shipmentOrderId && (\n                                <Form.Item label='Mã vận đơn' {...formItemLayout1} style={style}>\n                                    <Tag style={{ wordBreak: 'break-all' }}>\n                                        {order_local.deliveryOptions.shipmentOrderId}\n                                    </Tag>\n                                </Form.Item>\n                            )}\n                    </Card>\n\n                    <Card type='inner' style={{ marginBottom: 15 }}>\n                        <div className='title'>Thanh toán</div>\n\n                        <Form.Item label='Chiết khấu' {...formItemLayout1} style={style}>\n                            <Discount\n                                discount={order_local.deliveryOptions.discount}\n                                discountBy={order_local.deliveryOptions.discountBy}\n                                changeDiscount={changeDiscount}\n                                disabled={disabled}\n                            />\n                        </Form.Item>\n\n                        <Form.Item label='Phí vận chuyển' {...formItemLayout1} style={style}>\n                            <InputNumber\n                                min={0}\n                                style={{ width: '100%' }}\n                                value={order_local.deliveryOptions.shipmentFee}\n                                onChange={changeShipmentFee}\n                                disabled\n                                formatter={formatterInput}\n                                parser={parserInput}\n                            />\n                        </Form.Item>\n\n                        <Form.Item label='Phí báo khách' {...formItemLayout1} style={style}>\n                            <InputNumber\n                                style={{ width: '100%' }}\n                                min={0}\n                                value={order_local.deliveryOptions.shipmentFeeForCustomer}\n                                onChange={changeShipmentFeeForCustomer}\n                                formatter={formatterInput}\n                                parser={parserInput}\n                                disabled={disabled}\n                            />\n                        </Form.Item>\n                    </Card>\n\n                    <TotalOrder order={order_local} />\n\n                    <div style={{ marginTop: 15 }}>\n                        <Button\n                            type='primary'\n                            icon={<SaveOutlined />}\n                            onClick={() => saveOrder({ showMessage: true })}\n                            loading={loading}\n                            disabled={disabledUpdate}\n                        >\n                            Cập nhật\n                        </Button>\n                    </div>\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nexport default FormUpdateOrder;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/empty-livestream.tsx",["1736"],"import { Button, Col, Row } from 'antd';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport livestream_empty from '../images/livestream-empty.svg';\nimport { Card } from 'antd';\n\ninterface Props {}\n\nconst EmptyLivestream = (props: Props) => {\n    return (\n        <div className='empty-livestream'>\n            <Row gutter={30}>\n                <Col md={12} xs={24}>\n                    <Card type='inner' title='Bạn chưa có kịch bản livestream nào!'>\n                        <span className='lead-to-step-text'>\n                            Tìm hiểu 3 bước dưới đây để bắt đầu tạo và sử dụng kịch bản bán hàng\n                            livestream trên Facebook đầu tiên bạn nhé\n                        </span>\n\n                        <ul className='steps'>\n                            <li>\n                                <div className='step-number'>1</div>\n                                <div className='step-content'>\n                                    Tạo kịch bản livestream và kích hoạt\n                                </div>\n                            </li>\n                            <li>\n                                <div className='step-number'>2</div>\n                                <div className='step-content'>\n                                    Tiến hành phát livestream trên trang Facebook của bạn\n                                </div>\n                            </li>\n                            <li>\n                                <div className='step-number'>3</div>\n                                <div className='step-content'>\n                                    Xem thống kê bình luận, đơn hàng theo từng video livestream\n                                </div>\n                            </li>\n                        </ul>\n\n                        <Link to='/customer/livestream/new' className='make-new-script-link'>\n                            <Button size='large' type='primary'>\n                                Tạo kịch bản bán hàng livestream\n                            </Button>\n                        </Link>\n\n                        <div className='script-guide-lead'>\n                            <span className='script-guide-lead-text'>\n                                Xem hướng dẫn chi tiết về tính năng này{' '}\n                                <a href='https://insa.app/kham-pha/huong-dan-ban-hang-livestream' target='_blank' className='script-guide-lead-link'>\n                                    tại đây\n                                </a>\n                            </span>\n                        </div>\n                    </Card>\n                </Col>\n                <Col md={12} xs={24}>\n                    <img src={livestream_empty} alt='Bạn chưa có kịch bản livestream nào!' />\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default EmptyLivestream;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/livestream-list.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-conversation/filter.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-conversation/chart.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-conversation/context.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/warehouses/warehouses-table.tsx",["1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747"],"import {\n    CheckOutlined,\n    CloseOutlined,\n    ReloadOutlined,\n    PlusOutlined,\n    DashOutlined,\n} from '@ant-design/icons';\nimport {\n    Button,\n    Col,\n    Divider,\n    Input,\n    InputNumber,\n    Row,\n    Table,\n    AutoComplete,\n    message,\n    Modal,\n    Dropdown,\n} from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport React, { FC, useEffect, useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n    deleteWarehouse,\n    fetchWarehouses,\n    updateWarehouse,\n} from '../../reducers/warehouseState/warehouseAction';\nimport Action from './action';\nimport BtnRemoveWarehouse from './btn-remove-warehouse';\nimport { IWarehouse } from './interface';\nimport FormAddWarehouse from './form-add-warehouse';\nimport { IStoreState } from '../../reducers/storeState/storeReducer';\n\nconst LIMIT = 20;\n\nconst WarehousesTable: FC = (): JSX.Element => {\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n    const [selected, setSelected] = useState<any | null>(null);\n    const [page, setPage] = useState<number>(1);\n    const [visible, setVisible] = useState<boolean>(false);\n\n    const dispatch = useDispatch();\n    const warehouses = useSelector(\n        ({ warehouse }: { warehouse: any }) => warehouse.warehouses.data\n    );\n    const total = useSelector(({ warehouse }: { warehouse: any }) => warehouse.warehouses.total);\n    const loading = useSelector(({ warehouse }: { warehouse: any }) => warehouse.loading);\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const [dataSource, setDataSource] = useState(\n        (warehouses || []).map((i: IWarehouse) => ({\n            ...i,\n            key: i._id,\n        }))\n    );\n\n    const reloadTable = () => {\n        dispatch(fetchWarehouses({ page, limit: LIMIT }));\n        setSelectedRowKeys([]);\n    };\n\n    const refreshWarehouses = () => {\n        onChangePage(1);\n    };\n\n    useEffect(() => {\n        dispatch(fetchWarehouses({ page: 1, limit: LIMIT }));\n    }, []);\n\n    useEffect(() => {\n        setDataSource(\n            (warehouses || []).map((i: IWarehouse) => ({\n                ...i,\n                key: i._id,\n            }))\n        );\n    }, [warehouses]);\n\n    const columns: ColumnsType<any> | undefined = [\n        {\n            title: <span className='th'>Tên</span>,\n            dataIndex: '',\n            key: 'name',\n            render: ({ name }) => {\n                return name;\n            },\n        },\n        {\n            title: <span className='th'>Số điện thoại</span>,\n            dataIndex: '',\n            key: 'phoneNo',\n            render: ({ phoneNo }) => {\n                return phoneNo;\n            },\n        },\n        {\n            title: <span className='th'>Tỉnh/ Thành phố</span>,\n            dataIndex: '',\n            key: 'province',\n            render: ({ provinceName }) => {\n                return provinceName;\n            },\n        },\n        {\n            title: <span className='th'>Quận/ Huyện</span>,\n            dataIndex: '',\n            key: 'district',\n            render: ({ districtName }) => {\n                return districtName;\n            },\n        },\n        {\n            title: <span className='th'>Phường/ Xã</span>,\n            dataIndex: '',\n            key: 'ward',\n            render: ({ wardName }) => {\n                return wardName;\n            },\n        },\n        {\n            title: <span className='th'>Địa chỉ</span>,\n            dataIndex: '',\n            key: 'address',\n            render: ({ address }) => {\n                return address;\n            },\n        },\n        {\n            title: '',\n            dataIndex: '',\n            align: 'right',\n            key: 'x',\n            render: (warehouse) => {\n                const onEdit = () => {\n                    setSelected(warehouse);\n                    toggle();\n                };\n\n                const removeWarehouse = () => {\n                    dispatch(deleteWarehouse(warehouse._id));\n                };\n\n                const onCancel = () => {\n                    setSelected(null);\n                };\n\n                if (store.role !== 0) {\n                    return (\n                        <div style={{ textAlign: 'right' }}>\n                            <Button type='primary' icon={<DashOutlined />} disabled={true}></Button>\n                        </div>\n                    );\n                }\n\n                return (\n                    <div style={{ textAlign: 'right' }}>\n                        {selected && selected._id === warehouse._id ? (\n                            <Button loading={true} type='primary'></Button>\n                        ) : (\n                            <Action\n                                warehouse={warehouse}\n                                removeWarehouse={removeWarehouse}\n                                onCancel={onCancel}\n                                onEdit={onEdit}\n                            />\n                        )}\n                    </div>\n                );\n            },\n        },\n    ];\n\n    const onSelectChange = (selectedRows: any) => {\n        let data = selectedRows;\n        if (selectedRows.includes(store.warehouseId)) {\n            data = selectedRows.filter((item: any) => item !== store.warehouseId);\n        }\n        setSelectedRowKeys(data);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    const onChangePage = (page: number, pageSize?: number | undefined) => {\n        setPage(page);\n        dispatch(fetchWarehouses({ page, limit: pageSize || LIMIT }));\n    };\n\n    const resetSelect = () => {\n        setSelectedRowKeys([]);\n    };\n\n    const toggle = () => {\n        if (visible) {\n            setSelected(null);\n        }\n        setVisible(!visible);\n    };\n\n    const createNew = () => {\n        setSelected(null);\n        toggle();\n    };\n\n    const onCancelForm = () => {\n        setSelected(null);\n    };\n\n    return (\n        <>\n            <Row style={{ marginBottom: 20 }} justify='space-between' align='middle'>\n                <Col>\n                    <Row justify='space-between' align='middle'>\n                        <Col>\n                            <Button\n                                type='primary'\n                                icon={<PlusOutlined />}\n                                onClick={createNew}\n                                disabled={store.role !== 0}\n                            >\n                                Thêm\n                            </Button>\n                        </Col>\n                        <Col>\n                            <Button\n                                onClick={refreshWarehouses}\n                                style={{ margin: '0 10px' }}\n                                icon={<ReloadOutlined />}\n                            ></Button>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col>\n                    {selectedRowKeys.length > 0 && store.role === 0 && (\n                        <BtnRemoveWarehouse\n                            warehouses={selectedRowKeys}\n                            resetSelect={resetSelect}\n                            page={page}\n                            limit={LIMIT}\n                        />\n                    )}\n                </Col>\n            </Row>\n\n            <Table\n                loading={loading}\n                rowSelection={store.role === 0 ? rowSelection : undefined}\n                dataSource={dataSource}\n                columns={columns}\n                rowKey='_id'\n                pagination={{\n                    onChange: onChangePage,\n                    current: page,\n                    total,\n                    pageSize: LIMIT,\n                }}\n            />\n\n            <Modal\n                visible={visible}\n                onCancel={toggle}\n                onOk={toggle}\n                title={selected ? 'Cập nhật chi nhánh' : 'Tạo mới chi nhánh'}\n                footer={null}\n                afterClose={onCancelForm}\n                destroyOnClose\n            >\n                <FormAddWarehouse\n                    reloadTable={reloadTable}\n                    toggle={toggle}\n                    warehouse={selected}\n                    visible={visible}\n                />\n            </Modal>\n        </>\n    );\n};\n\nexport default WarehousesTable;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/tabs.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customers-other/context.tsx",["1748"],"import querystring from 'querystring';\nimport React, { createContext, FC, ReactNode, useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport storeApi from '../../api/store-api';\nimport { Page } from '../../reducers/fanpageState/fanpageReducer';\nimport { getEndTime, getStartTime } from '../report/util';\n\ninterface IState {\n    loading: boolean;\n    pageId: any;\n    customers: any[];\n    total: number;\n    pageCustomer: number;\n    type: string;\n    date: number | any[];\n}\n\nconst initialState: IState = {\n    loading: false,\n    pageId: null,\n    customers: [],\n    total: 0,\n    pageCustomer: 1,\n    type: 'month',\n    date: Date.now(),\n};\n\nconst initialContext = {\n    state: initialState,\n    setState: (state: any): any => state,\n};\n\nconst Context = createContext(initialContext);\n\nconst ProviderCustomerContext: FC<{ children: ReactNode }> = ({ children }) => {\n    const page = useSelector((state: any) => state.fanpage.page);\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n\n    const [state, setState] = useState(() => {\n        if (page) {\n            return {\n                ...initialState,\n                pageId: page._id,\n            };\n        }\n\n        return initialState;\n    });\n\n    useEffect(() => {\n        async function handleFilter() {\n            setState({ ...state, loading: true });\n\n            try {\n                const arg = { type: state.type, date: state.date };\n                const fbPageId = state.pageId;\n                const fromAt = getStartTime(arg);\n                const toAt = getEndTime(arg);\n                const query = querystring.stringify({ fbPageId, fromAt, toAt });\n                const data = {\n                    storeId: store._id,\n                    token: token.accessToken,\n                    page: initialState.pageCustomer,\n                    limit: 10,\n                    query,\n                };\n                const response = await storeApi.getListCustomers(data);\n\n                setState({\n                    ...state,\n                    loading: false,\n                    customers: response.data,\n                    total: response.total,\n                });\n            } catch (error) {\n                setState({\n                    ...state,\n                    loading: false,\n                });\n            }\n        }\n\n        if (state.pageId) {\n            handleFilter();\n        }\n    }, []);\n\n    return <Context.Provider value={{ state, setState }}>{children}</Context.Provider>;\n};\n\nconst useContextCustomer = () => {\n    const { state, setState } = useContext(Context);\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n    const pages = useSelector((state: any) => state.fanpage.pages);\n\n    const selectPage = (pageId: string) => {\n        setState({ ...state, pageId: (pages[pageId] as Page)._id });\n    };\n\n    const selectDateType = (type: string) => {\n        setState({ ...state, type, date: Date.now() });\n    };\n\n    const selectDate = (date: any) => {\n        setState({ ...state, date });\n    };\n\n    const setPageCustomer = (pageCustomer: number) => {\n        setState({ ...state, pageCustomer });\n    };\n\n    const handleFilter = async (pageNumber: number) => {\n        setState({ ...state, loading: true });\n        const arg = { type: state.type, date: state.date };\n        const fbPageId = state.pageId;\n        const fromAt = getStartTime(arg);\n        const toAt = getEndTime(arg);\n        const query = querystring.stringify({ fbPageId, fromAt, toAt });\n        const data = {\n            storeId: store._id,\n            token: token.accessToken,\n            page: pageNumber,\n            limit: 10,\n            query,\n        };\n        const response = await storeApi.getListCustomers(data);\n\n        setState({\n            ...state,\n            customers: response.data,\n            total: response.total,\n            pageCustomer: pageNumber,\n        });\n    };\n\n    return {\n        ...state,\n        selectPage,\n        setPageCustomer,\n        selectDateType,\n        selectDate,\n        handleFilter,\n    };\n};\n\nexport { ProviderCustomerContext, useContextCustomer };\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customers-other/customers-table.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/script-detail.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/members-table.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/script-report.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-revenue/group-chart.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-label/chart.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-revenue/filter.tsx",["1749"],"import React, { FC } from 'react';\nimport { Row, Col, Button } from 'antd';\n\nimport SelectPage from '../form-filter/select-page';\nimport SelectDateType from '../form-filter/select-date-type';\nimport SelectDate from '../form-filter/select-date';\nimport { useReportRevenueContext } from './context';\nimport ButtonFilter from '../form-filter/button-filter';\n\nconst Filter: FC = (): JSX.Element => {\n    const {\n        type,\n        date,\n        loading,\n        handleFilter,\n        pageId,\n        selectDateType,\n        selectDate,\n        selectPage,\n    } = useReportRevenueContext();\n\n    const onFilter = () => {\n        handleFilter();\n    };\n\n    return (\n        <Row gutter={10}>\n            <Col>\n                <SelectPage selectPage={selectPage} />\n            </Col>\n            <Col>\n                <SelectDateType selectDateType={selectDateType} type={type} />\n            </Col>\n            <Col>\n                <SelectDate date={date} selectDate={selectDate} type={type} />\n            </Col>\n\n            <Col>\n                <ButtonFilter\n                    loading={loading}\n                    values={{\n                        date,\n                        type,\n                        pageId,\n                    }}\n                    onClick={onFilter}\n                />\n            </Col>\n        </Row>\n    );\n};\n\nexport default Filter;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-revenue/context.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/products/form-add-product.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/action.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/expaned-order-table.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/change-status.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/ship-status.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/select-pages/modal-load-data.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/setting.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/staff-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/util.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/report-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/var.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/util.ts",["1750"],"import moment from 'moment';\n\ntype ITypeTime = 'month' | 'day' | 'week' | 'custom';\n\ninterface IGetTime {\n    type: string;\n    date: any;\n}\n\nconst format_date = 'DD/MM/YYYY';\n\nexport function getStartTime({ type, date }: IGetTime): number {\n    // day\n    if (type === 'day') {\n        return moment(date).startOf('day').toDate().getTime();\n    }\n\n    // week\n    if (type === 'week') {\n        const weekStart = moment(date).startOf('week');\n\n        return moment(weekStart).add(0, 'days').startOf('day').valueOf();\n    }\n\n    // custom\n    if (type === 'custom') {\n        return moment(date[0]).startOf('day').valueOf();\n    }\n\n    const month = moment(date).format('MM');\n    const year = moment(date).format('YYYY');\n\n    return moment(`1/${month}/${year}`, format_date).startOf('day').valueOf();\n}\n\nexport function getEndTime({ type, date }: IGetTime): number {\n    // day\n    if (type === 'day') {\n        return moment(date).endOf('day').toDate().getTime();\n    }\n\n    // week\n    if (type === 'week') {\n        const weekStart = moment(date).startOf('week');\n\n        return moment(weekStart).add(6, 'days').endOf('day').valueOf();\n    }\n\n    // custom\n    if (type === 'custom') {\n        return date[1] ? moment(date[1]).endOf('day').valueOf() : moment().endOf('day').valueOf();\n    }\n    const dateInMonth: number = moment(date).daysInMonth();\n    const month = moment(date).format('MM');\n    const year = moment(date).format('YYYY');\n\n    return moment(`${dateInMonth}/${month}/${year}`, format_date).endOf('day').valueOf();\n}\n","/Users/mac3/Desktop/workspace/FacebookClient/src/utils/validate-phone.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/reducers/warehouseState/warehouseAction.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/message-bubble.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/box-reply.tsx",["1751","1752","1753","1754","1755"],"import { Col, Input, message, Row } from 'antd';\nimport { findLast, get, isObject } from 'lodash';\nimport moment from 'moment';\nimport React, { FC, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sendReply } from '../../../api/conversation-api';\nimport { SendIcon } from '../../../assets/icon';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { useConversationDetail } from './context';\nimport ModalEmoji from './modal-emoji';\nimport QuickmessageList from './quick-message-list';\n\ninterface Props {\n    privateReply?: boolean;\n    handlePrivateReply?: (text: string) => void;\n    disabled?: boolean;\n}\n\nconst BoxReply: FC<Props> = ({\n    privateReply = false,\n    handlePrivateReply,\n    disabled = false,\n}): JSX.Element => {\n    const dispatch = useDispatch();\n    const inputRef = useRef<any>(null);\n    const [show, setShow] = useState(false);\n    const [data, setData] = useState<any | null>(null);\n    const {\n        text,\n        changeText,\n        isFocus,\n        messages,\n        setIdMessage,\n        changeIsFocus,\n        removeMessageError,\n        setMessageSending,\n    } = useConversationDetail();\n\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n    const page: { fbObjectId: string; name: string } = useSelector(\n        ({ fanpage }: { fanpage: any }) => fanpage.page\n    );\n\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n\n    const toggle = () => setShow(!show);\n\n    useEffect(() => {\n        if (data) {\n            setIdMessage(data);\n            setData(null);\n        }\n    }, [data]);\n\n    const handleKeyPress = async (e: any) => {\n        const isValid = e.shiftKey !== true && e.key === 'Enter';\n\n        if (show) {\n            return toggle();\n        }\n\n        if (isValid && !show && text.trim()) {\n            e.preventDefault();\n\n            const regex = new RegExp(`{${conversation.fbUsername}}`, 'g');\n\n            let convertText = text;\n            if (conversation.type === 2) {\n                convertText = (text || '').replace(regex, conversation.fbUsername || '');\n            }\n\n            const fakeId = Date.now();\n\n            const message_sending = {\n                create_time: moment(new Date()).format(),\n                message: convertText,\n                from: {\n                    name: page.name,\n                    email: '',\n                    id: page.fbObjectId,\n                },\n                id: fakeId,\n            };\n\n            changeText('');\n            setMessageSending(message_sending);\n\n            if (privateReply && handlePrivateReply) {\n                handlePrivateReply(text);\n            } else {\n                convertText = text;\n                if (conversation.type === 2) {\n                    convertText = (text || '').replace(regex, `@[${conversation.fbUserId}]`);\n                }\n\n                try {\n                    const res = await sendReply({\n                        text: convertText,\n                        fbPageId: conversation.fbPageId,\n                        token: token.accessToken,\n                        storeId: store._id,\n                        id: conversation.fbUserId,\n                        type: conversation.type,\n                        fbObjectId: conversation.fbObjectId,\n                    });\n                    if (res) {\n                        setData({\n                            realId: get(res, '[1].data.id') || get(res, '[1].data.message_id'),\n                            fakeId,\n                        });\n                    }\n                } catch (e) {\n                    message.error('Đã xảy ra lỗi');\n                    removeMessageError(message_sending);\n                }\n            }\n        }\n\n        return null;\n    };\n\n    const onChangeText = (e: any) => {\n        if (e.target.value.length === 0) {\n            setShow(false);\n        }\n        if (e.target.value[0] === '/') {\n            setShow(true);\n        }\n\n        if (show) {\n            changeText((e.target.value as string).trim());\n        } else {\n            changeText(e.target.value as string);\n        }\n    };\n\n    const onBlur = () => {\n        changeIsFocus(false);\n    };\n\n    const sendMessage = () => {\n        if (!show && text.trim()) {\n            const regex = new RegExp(`{${conversation.fbUsername}}`, 'g');\n\n            let convertText = text;\n            if (conversation.type === 2) {\n                convertText = (text || '').replace(regex, conversation.fbUsername || '');\n            }\n\n            const fakeId = Date.now();\n\n            const message_sending = {\n                create_time: moment(new Date()).format(),\n                message: convertText,\n                from: {\n                    name: page.name,\n                    email: '',\n                    id: page.fbObjectId,\n                },\n                id: fakeId,\n            };\n\n            changeText('');\n            setMessageSending(message_sending);\n\n            if (privateReply && handlePrivateReply) {\n                handlePrivateReply(text);\n            } else {\n                convertText = text;\n                if (conversation.type === 2) {\n                    convertText = (text || '').replace(regex, `@[${conversation.fbUserId}]`);\n                }\n\n                sendReply({\n                    text: convertText,\n                    fbPageId: conversation.fbPageId,\n                    token: token.accessToken,\n                    storeId: store._id,\n                    id: conversation.fbUserId,\n                    type: conversation.type,\n                    fbObjectId: conversation.fbObjectId,\n                })\n                    .then((res: any) => {\n                        if (res) {\n                            setData({\n                                realId: get(res, '[1].data.id') || get(res, '[1].data.message_id'),\n                                fakeId,\n                            });\n                        }\n                    })\n                    .catch((error) => {\n                        message.error('Đã xảy ra lỗi');\n                        removeMessageError(message_sending);\n                    });\n            }\n        }\n\n        return null;\n    };\n\n    useEffect(() => {\n        inputRef.current.focus();\n    }, [text]);\n\n    useEffect(() => {\n        inputRef.current.focus();\n    }, [isFocus]);\n\n    return (\n        <div className='box-reply'>\n            {show && <QuickmessageList toggle={toggle} textFilter={text} />}\n\n            <Row align='middle' justify='space-between' gutter={10}>\n                <Col style={{ flex: 1 }}>\n                    <div className='wrap-input'>\n                        <Input\n                            ref={inputRef}\n                            onBlur={onBlur}\n                            autoFocus\n                            onChange={onChangeText}\n                            onKeyPress={handleKeyPress}\n                            disabled={disabled}\n                            className='input'\n                            value={text}\n                            placeholder={\n                                disabled\n                                    ? 'Bạn chỉ có thể phản hồi tin nhắn của khách hàng trong vòng 24h'\n                                    : 'Viết tin nhắn. (Enter để gửi tin và Shift + Enter để xuống hàng)'\n                            }\n                        />\n                        {!disabled && (\n                            <div className='emoji-btn'>\n                                <ModalEmoji />\n                            </div>\n                        )}\n                    </div>\n                </Col>\n\n                <Col style={{ lineHeight: 1 }}>\n                    <SendIcon\n                        className={text.length === 0 ? 'send-btn disable' : 'send-btn'}\n                        style={{ fontSize: 20 }}\n                        onClick={text.length === 0 ? null : sendMessage}\n                    />\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default BoxReply;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/model-shortcut.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/modal-answers.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/modal-imgs.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/label-more.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/label.tsx",["1756"],"import { LoadingOutlined } from '@ant-design/icons';\nimport { Col, Row } from 'antd';\nimport React, { FC, memo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { labelConversationApi } from '../../../api/conversation-api';\nimport { CloseIcon } from '../../../assets/icon';\nimport { ILabel } from '../../../collections/label';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport { updateLabelConversations } from '../../../reducers/fanpageState/fanpageAction';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { useConversationDetail } from './context';\nimport { LabelType } from './labels';\n\ninterface Props {\n    label: ILabel;\n    close?: boolean;\n    block?: boolean;\n}\n\nconst Label: FC<Props> = ({ label, close = false, block = false }): JSX.Element => {\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n\n    const dispatch = useDispatch();\n\n    const { labelIds, updateLabels } = useConversationDetail();\n    const [loading, setLoading] = useState(false);\n\n    const isActive = labelIds && labelIds.filter((item) => item._id === label._id).length > 0;\n\n    const handleClickLabel = () => {\n        if (!loading) {\n            setLoading(true);\n            labelConversationApi({\n                storeId: store._id,\n                fbPageId: conversation.fbPageId,\n                token: token.accessToken,\n                conversationId: conversation._id,\n                action: isActive ? 'unset' : 'set',\n                labelId: label._id,\n            })\n                .then((res: any) => {\n                    updateLabels(label);\n                    dispatch(\n                        updateLabelConversations({\n                            conversation,\n                            label,\n                        })\n                    );\n                    setLoading(false);\n                })\n                .catch((err) => {\n                    setLoading(false);\n                });\n        }\n    };\n\n    const style = {\n        background: label.backgroundColor,\n        color: label.color,\n        opacity: isActive || loading ? 1 : 0.5,\n        display: block ? 'block' : 'inline-block',\n    };\n\n    const className = close ? 'label close' : 'label';\n\n    return (\n        <div className={className} style={style} onClick={handleClickLabel} title={label.name}>\n            <Row align='middle' justify='space-between' gutter={15}>\n                <Col>{label.name}</Col>\n\n                {close && <Col>{loading ? <LoadingOutlined /> : <CloseIcon />}</Col>}\n            </Row>\n        </div>\n    );\n};\n\nexport default memo(Label);\n","/Users/mac3/Desktop/workspace/FacebookClient/src/components/expired-store/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/toggle-block-btn.tsx",["1757"],"import { MinusCircleOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport { message, Tooltip, Modal } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { toggleBlockUser } from '../../../api/conversation-api';\nimport { toggleBlockUser as toggleBlockUserAction } from '../../../reducers/fanpageState/fanpageAction';\nimport { IConversation } from '../../../reducers/fanpageState/fanpageReducer';\n\nconst ToggleBlockBtn = (): JSX.Element => {\n    const conversation: IConversation = useSelector((state: any) => state.fanpage.conversation);\n    const store = useSelector((state: any) => state.store.store);\n    const token: any = useSelector((state: any) => state.auth.token);\n    const [blocked, setBlocked] = useState(() => {\n        if (conversation.blocked) return conversation.blocked;\n        return false;\n    });\n    const dispatch = useDispatch();\n    const { confirm } = Modal;\n\n    const message_text = {\n        success: `Đã ${blocked ? 'mở khóa' : 'khóa'} tài khoản.`,\n        error: `Lỗi ${blocked ? 'mở khóa' : 'khóa'} tài khoản.`,\n    };\n\n    useEffect(() => {\n        if (conversation) {\n            setBlocked(conversation.blocked || false);\n        }\n    }, [conversation]);\n\n    const showConfirm = () => {\n        confirm({\n            title: blocked\n                ? 'Bạn có thực sự muốn bỏ chặn?'\n                : 'Bạn có thực sự muốn chặn khách hàng?',\n            icon: <ExclamationCircleOutlined />,\n            onOk() {\n                toggleUser();\n            },\n            onCancel() {},\n        });\n    };\n\n    const toggleUser = async () => {\n        const data = {\n            token: token.accessToken,\n            pageId: conversation.fbPageId,\n            storeId: store._id,\n            userId: conversation.fbUserId,\n        };\n\n        try {\n            const response = await toggleBlockUser({\n                ...data,\n                blocked: !blocked,\n            });\n\n            dispatch(toggleBlockUserAction(conversation));\n\n            setBlocked(!blocked);\n\n            message.success(message_text.success);\n        } catch (error) {\n            message.error(message_text.error);\n        }\n    };\n    return (\n        <Tooltip placement='bottom' title={blocked ? 'Bỏ chặn khách hàng' : 'Chặn khách hàng'}>\n            <MinusCircleOutlined\n                onClick={showConfirm}\n                style={{ color: blocked ? 'red' : 'inherit' }}\n            />\n        </Tooltip>\n    );\n};\n\nexport default ToggleBlockBtn;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/customer-note.tsx",["1758"],"import { useSelector } from 'react-redux';\nimport { Button, Col, Form, Input, Row, message } from 'antd';\nimport React, { FC, useState } from 'react';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport storeApi from '../../../api/store-api';\n\ninterface Props {\n    customer: any;\n    onChange: (value: string) => void;\n}\n\nconst FormAddCustomerNote: FC<Props> = ({ customer, onChange }) => {\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n    const [loading, setLoading] = useState(false);\n    const [text, setText] = useState<any>(customer.note);\n    const [disable, setDisable] = useState(true);\n\n    const [formNote] = Form.useForm();\n\n    const disableNote = !customer._id;\n\n    const onFinish = async () => {\n        try {\n            setLoading(true);\n            const res = await storeApi.updateCustomer({\n                token: token.accessToken,\n                storeId: store._id,\n                customerId: customer._id,\n                data: {\n                    note: text,\n                    province: customer.province,\n                    district: customer.district,\n                    ward: customer.ward,\n                    phoneNo: customer.phoneNo,\n                },\n            });\n\n            onChange(text);\n            setDisable(true);\n            setLoading(false);\n            message.success('Lưu thành công');\n        } catch (e) {\n            message.error('Đã có lỗi xảy ra');\n            setLoading(false);\n        }\n    };\n\n    const onCancel = () => {\n        setText(customer.note);\n        setDisable(true);\n        formNote.resetFields();\n        formNote.setFieldsValue({\n            note: customer.note,\n        });\n    };\n\n    const handleChangeText = (e: any) => {\n        setText(e.target.value);\n        setDisable(false);\n    };\n\n    const handleNote = () => {\n        message.warning('Vui lòng tạo thông tin khách hàng trước khi nhập ghi chú.', 2);\n    }\n\n    const handleClick = () => {\n        if(disableNote) { \n            handleNote();\n        }\n    }\n\n    return (\n        <Form className='form-add-customer-note' form={formNote} onFinish={onFinish}>\n            <Form.Item\n                name='note'\n                rules={[{ required: true, message: 'Nhập ghi chú' }]}\n                initialValue={text}\n            >\n                <Input.TextArea\n                    placeholder='Nhập ghi chú'\n                    rows={3}\n                    onChange={handleChangeText}\n                    readOnly={disableNote}\n                    onClick={handleClick}\n                ></Input.TextArea>\n            </Form.Item>\n\n            <Row justify='end' align='middle' gutter={10}>\n                <Col>\n                    <Button disabled={disable} onClick={onCancel}>\n                        Hủy\n                    </Button>\n                </Col>\n                <Col>\n                    <Button\n                        type='primary'\n                        htmlType='submit'\n                        disabled={disable || !customer._id}\n                        loading={loading}\n                    >\n                        Lưu\n                    </Button>\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst CutomerNote: FC<Props> = ({ customer, onChange }) => {\n    return (\n        <div className='customer-note'>\n            <Row justify='space-between' align='middle'>\n                <Col>\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <span style={{ marginRight: 5 }}>Ghi chú</span>\n                    </div>\n                </Col>\n            </Row>\n\n            <div className='customer-note-content'>\n                <FormAddCustomerNote customer={customer} onChange={onChange} />\n            </div>\n        </div>\n    );\n};\n\nexport default CutomerNote;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/edit-field.tsx",["1759"],"import { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { Button, Col, Form, Input, message, Row, Space } from 'antd';\nimport { Store } from 'antd/lib/form/interface';\nimport { omit } from 'lodash';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport storeApi from '../../../api/store-api';\n\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\n\ninterface Props {\n    value: string;\n    field: string;\n    dataCustomer: any;\n    empty?: string;\n\n    onChange: (field: string, value: any) => void;\n}\n\nconst EditField = ({ value, field, onChange, empty, dataCustomer }: Props) => {\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n\n    const [loading, setLoading] = useState(false);\n    const [edit, setEdit] = useState(false);\n\n    const toggleEdit = () => setEdit(!edit);\n\n    const onSubmit = async (values: Store) => {\n        try {\n            const data = {\n                ...omit(dataCustomer, ['_id']),\n                ...values,\n                fbPageId: store.activePage._id,\n                fbUserId: conversation.fbUserId,\n            };\n\n            let res;\n\n            if (dataCustomer._id || dataCustomer._id.length === 0) {\n                res = await storeApi.createCustomer({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    data,\n                });\n\n                message.success('Đã tạo thành công khách hàng');\n            } else {\n                res = await storeApi.updateCustomer({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    customerId: dataCustomer._id,\n                    data,\n                });\n                message.success('Cập nhật thành công khách hàng');\n            }\n\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            message.error('Đã có lỗi xảy ra!');\n        }\n    };\n\n    if (edit) {\n        return (\n            <Form\n                initialValues={{\n                    [field]: value,\n                }}\n                onFinish={onSubmit}\n            >\n                <Row align='middle' justify='space-between' gutter={5}>\n                    <Col style={{ flex: 1 }}>\n                        <Form.Item\n                            style={{ margin: 0 }}\n                            name={field}\n                            rules={[\n                                {\n                                    required: true,\n                                },\n                            ]}\n                        >\n                            <Input size='small' placeholder={empty} />\n                        </Form.Item>\n                    </Col>\n\n                    <Col>\n                        <Form.Item style={{ margin: 0 }}>\n                            <Space size={2}>\n                                <Button\n                                    type='primary'\n                                    htmlType='submit'\n                                    size='small'\n                                    loading={loading}\n                                >\n                                    <CheckCircleOutlined />\n                                </Button>\n                                <Button onClick={toggleEdit} size='small'>\n                                    <CloseCircleOutlined />\n                                </Button>\n                            </Space>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        );\n    }\n    return (\n        <Row align='middle' justify='space-between'>\n            <Col>{value || empty}</Col>\n            {/* <Col>\n                <EditOutlined onClick={toggleEdit} />\n            </Col> */}\n        </Row>\n    );\n};\n\nexport default EditField;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/edit-address-customer.tsx",["1760","1761","1762","1763"],"import { Button, Col, Form, Input, message, Row, Select, Space } from 'antd';\nimport { Store } from 'antd/lib/form/interface';\nimport { map, omit } from 'lodash';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport locationApi from '../../../api/location-api';\nimport storeApi from '../../../api/store-api';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { District, Province } from '../../create-store/create-store-form';\nimport { useOrder } from './context-order';\nimport { validatePhone } from '../../../utils/validate-phone';\nimport { disabledAutosuggestion } from '../../../utils/disabled-autosuggestion';\nimport useHiddenModalExpired from '../../../hooks/use-hidden-modal-expired';\n\ninterface Props {\n    dataCustomer: any;\n    isEditForm: boolean;\n    toggleSetIsEditForm: () => void;\n    changeDataCustomer: (value: any) => void;\n}\n\nconst styleField = {\n    marginBottom: 10,\n};\n\nconst EditAddressCustomer: FC<Props> = ({\n    dataCustomer,\n    toggleSetIsEditForm,\n    changeDataCustomer,\n}: Props) => {\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation,\n    );\n\n    const { setInfoCustomer } = useOrder();\n\n    const [form] = Form.useForm();\n    const [edit, setEdit] = useState(false);\n\n    const [loading, setLoading] = useState(false);\n\n    const [provinces, setProvinces] = useState<Province[]>([]);\n    const [loadingProvince, setLoadingProvince] = useState<boolean>(true);\n    const [province, setProvince] = useState<string | null>(dataCustomer.province);\n\n    const [districts, setDistricts] = useState<District[]>([]);\n    const [loadingDistrict, setLoadingDistrict] = useState<boolean>(false);\n    const [district, setDistrict] = useState<string | null>(dataCustomer.district);\n\n    const [wards, setWards] = useState<District[]>([]);\n    const [loadingWard, setLoadingWard] = useState<boolean>(false);\n    const [ward, setWard] = useState<string | null>(null);\n    const { hiddenModalExpired } = useHiddenModalExpired();\n\n    const onChangeProvince = (value: string) => {\n        setProvince(value);\n    };\n\n    const onChangeDistrict = (value: string) => {\n        setDistrict(value);\n    };\n\n    const onChangeWard = (value: string) => {\n        setWard(value);\n    };\n\n    const toggleEdit = () => {\n        setEdit(!edit);\n        toggleSetIsEditForm();\n    };\n\n    const cancelEdit = () => {\n        if (!dataCustomer._id) {\n            const data = {\n                _id: '',\n                fbUserId: '',\n                name: '',\n                phoneNo: '',\n                address: '',\n                province: undefined,\n                district: undefined,\n                ward: undefined,\n                note: '',\n            };\n\n            form.setFieldsValue(data);\n        } else {\n            setProvince(dataCustomer.province);\n            setDistrict(dataCustomer.district);\n            setWard(dataCustomer.ward);\n\n            form.setFieldsValue(dataCustomer);\n        }\n\n        setEdit(false);\n        toggleSetIsEditForm();\n    };\n\n    const onFinish = async (values: Store) => {\n        try {\n            const data = {\n                ...omit(dataCustomer, ['_id']),\n                ...values,\n                fbPageId: store.activePage._id,\n                fbUserId: conversation.fbUserId,\n            };\n\n            let res;\n\n            if (!dataCustomer._id || dataCustomer._id.length === 0) {\n                res = await storeApi.createCustomer({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    data: omit(data, ['note']),\n                });\n\n                message.success('Đã tạo thành công khách hàng');\n            } else {\n                res = await storeApi.updateCustomer({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    customerId: dataCustomer._id,\n                    data,\n                });\n\n                message.success('Cập nhật thành công khách hàng');\n            }\n\n            setInfoCustomer({\n                ...res,\n            });\n\n            setLoading(false);\n            changeDataCustomer({\n                _id: res._id,\n                fbUserId: res.fbUserId,\n                name: res.name,\n                phoneNo: res.phoneNo,\n                address: res.address,\n                province: res.province,\n                district: res.district,\n                ward: res.ward,\n                note: res.note,\n            });\n            toggleEdit();\n        } catch (error) {\n            const errorStatusDupplicateTel = error.response?.data?.statusCode;\n            setLoading(false);\n            message.error(\n                errorStatusDupplicateTel === 409\n                    ? 'Số điện thoại đã được sử dụng!'\n                    : 'Đã có lỗi xảy ra!',\n            );\n        }\n    };\n\n    useEffect(() => {\n        async function getListProvinces() {\n            try {\n                const response = await locationApi.getProvinces();\n\n                setProvinces(response);\n                setLoadingProvince(false);\n            } catch (error) {\n                setProvinces([]);\n                setLoadingProvince(false);\n            }\n        }\n        getListProvinces();\n    }, []);\n\n    useEffect(() => {\n        async function getListDistricts() {\n            if (!province) return null;\n            setLoadingDistrict(true);\n            form.setFieldsValue({\n                district: undefined,\n                ward: undefined,\n            });\n            try {\n                const response = await locationApi.getDistricts(province);\n                setDistricts(response);\n                setLoadingDistrict(false);\n            } catch (error) {\n                setDistricts([]);\n                setLoadingDistrict(false);\n            }\n        }\n        getListDistricts();\n    }, [province]);\n\n    useEffect(() => {\n        async function getListWard() {\n            if (!district) return null;\n            setLoadingWard(true);\n            form.setFieldsValue({\n                ward: undefined,\n            });\n            try {\n                const response = await locationApi.getWards({\n                    provinceId: province,\n                    districtId: district,\n                });\n\n                setWards(response);\n                setLoadingWard(false);\n            } catch (error) {\n                setWards([]);\n                setLoadingWard(false);\n            }\n        }\n        getListWard();\n    }, [district]);\n\n    const renderContent = () => {\n        if (!edit) {\n            const addressCustomer = `${dataCustomer.address}  ${\n                (wards && wards[dataCustomer.ward] && wards[dataCustomer.ward].path_with_type) || ''\n            }`;\n\n            if (dataCustomer.phoneNo.trim().length === 0 && addressCustomer.trim().length === 0) {\n                return <div>Chưa có địa chỉ giao hàng</div>;\n            }\n\n            return (\n                <div>\n                    {dataCustomer.phoneNo}\n                    <br />\n                    {addressCustomer}\n                </div>\n            );\n        }\n\n        return (\n            <Form form={form} onFinish={onFinish}>\n                <Form.Item\n                    name='name'\n                    rules={[{ required: true, message: 'Tên khách hàng không để trống' }]}\n                    style={styleField}\n                    initialValue={dataCustomer.name}\n                >\n                    <Input placeholder='Nhập tên khách hàng' />\n                </Form.Item>\n                <Form.Item\n                    name='phoneNo'\n                    rules={[\n                        { required: true, message: 'Số điện thoại không để trống' },\n                        {\n                            validator: validatePhone,\n                        },\n                    ]}\n                    style={styleField}\n                    initialValue={dataCustomer.phoneNo}\n                >\n                    <Input placeholder='Nhập số điện thoại' />\n                </Form.Item>\n\n                <Form.Item\n                    name='province'\n                    initialValue={dataCustomer.province}\n                    rules={[{ required: true, message: 'Chọn tỉnh/ thành phố' }]}\n                    style={styleField}\n                >\n                    <Select\n                        placeholder='Tỉnh/thành phố'\n                        onChange={onChangeProvince}\n                        showSearch\n                        value={dataCustomer.province}\n                        filterOption={(input, option: any) =>\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                        // disabled={!!customerId && !isEditForm}\n                        loading={loadingProvince}\n                        onFocus={disabledAutosuggestion}\n                    >\n                        {map(provinces, (province: Province) => (\n                            <Select.Option value={province.code} key={province.code}>\n                                {province.name}\n                            </Select.Option>\n                        ))}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    name='district'\n                    initialValue={dataCustomer.district}\n                    rules={[{ required: true, message: 'Chọn quận/ huyện' }]}\n                    style={styleField}\n                >\n                    <Select\n                        placeholder='Quận/huyện'\n                        onChange={onChangeDistrict}\n                        showSearch\n                        filterOption={(input, option: any) =>\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                        value={dataCustomer.district}\n                        // disabled={!dataCustomer.province || (!!customerId && !isEditForm)}\n                        loading={loadingDistrict}\n                        onFocus={disabledAutosuggestion}\n                    >\n                        {map(districts, (district: District) => (\n                            <Select.Option value={district.code} key={district.code}>\n                                {district.name}\n                            </Select.Option>\n                        ))}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    name='ward'\n                    initialValue={dataCustomer.ward}\n                    rules={[{ required: true, message: 'Chọn xã/ phường' }]}\n                    style={styleField}\n                >\n                    <Select\n                        placeholder='Xã/phường'\n                        onChange={onChangeWard}\n                        showSearch\n                        filterOption={(input, option: any) =>\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                        value={dataCustomer.ward}\n                        // disabled={!dataCustomer.district || (!!customerId && !isEditForm)}\n                        loading={loadingWard}\n                        onFocus={disabledAutosuggestion}\n                    >\n                        {map(wards, (district: District) => (\n                            <Select.Option value={district.code} key={district.code}>\n                                {district.name}\n                            </Select.Option>\n                        ))}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    name='address'\n                    rules={[{ required: true, message: 'Địa chỉ không để trống' }]}\n                    style={styleField}\n                    initialValue={dataCustomer.address}\n                >\n                    <Input.TextArea rows={3} placeholder='Nhập địa chỉ' />\n                </Form.Item>\n\n                <Form.Item style={{ margin: 0, textAlign: 'right' }}>\n                    <Space>\n                        <Button onClick={cancelEdit}>Hủy</Button>\n                        <Button\n                            type='primary'\n                            htmlType='submit'\n                            loading={loading}\n                            disabled={hiddenModalExpired}\n                        >\n                            Lưu\n                        </Button>\n                    </Space>\n                </Form.Item>\n            </Form>\n        );\n    };\n\n    return (\n        <div>\n            {!edit && (\n                <Row justify='space-between' align='middle'>\n                    <Col>\n                        <span className='customer-address-title'>Địa chỉ giao hàng</span>\n                    </Col>\n\n                    <Col>\n                        <a onClick={toggleEdit}>Thay đổi</a>\n                    </Col>\n                </Row>\n            )}\n            <div style={{ marginTop: 5 }}>{renderContent()}</div>\n        </div>\n    );\n};\n\nexport default EditAddressCustomer;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/filter-bar.tsx",["1764","1765"],"import { EyeInvisibleOutlined } from '@ant-design/icons';\nimport { push } from 'connected-react-router';\nimport { difference, find, intersection } from 'lodash';\nimport querystring from 'querystring';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { BookmarkIcon, PhoneIcon, ReloadIcon, UnPhoneIcon } from '../../../assets/icon';\nimport { ConversationType } from '../../../collections/facebook-conversation';\nimport {\n    loadConversations,\n    removeConversations,\n    setCurrentPage,\n    setFilterConversation,\n} from '../../../reducers/fanpageState/fanpageAction';\nimport { IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { changePageActive } from '../../../reducers/storeState/storeAction';\nimport menus from '../sidebar/sidebar-menu';\nimport FilterBarItem from './filter-bar-item';\nimport FilterDate from './filter-date';\nimport FilterLabels from './filter-labels';\nimport FilterTabs from './filter-tabs';\nimport FilterIdPost from './filterId-post';\n\ninterface Props {\n    visible: boolean;\n    onChange?: Function;\n}\n\ntype QueryConversation = {\n    type?: number;\n    unread?: boolean;\n    hasPhoneNo?: boolean;\n    label?: string;\n    postId?: string;\n    startDate?: string;\n    endDate?: string;\n    fbUserId?: string;\n    replied?: boolean;\n};\n\nconst FilterBar: FC<Props> = ({ visible, onChange }): JSX.Element => {\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const store = useSelector((state: any) => state.store.store);\n    const pages = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.pages);\n\n    const [selected, setSelected] = useState<string[]>([]);\n    const [postId, setPostId] = useState<string>();\n    const [label, setLabel] = useState<string>();\n    const [date, setDate] = useState<string>();\n\n    const menuParent: string[] = menus.parent.map((item) => item.active);\n\n    const handleFilter = (value: string | number, action: string, active: string) => {\n        active === 'post_id' && setPostId(value as string);\n        active === 'label' && setLabel(value as string);\n        active === 'date' && setDate(value as string);\n        handleFilterConversation(action, active);\n    };\n\n    const handleFilterConversation = (action: string, active: string) => {\n        let newSelected: string[];\n\n        dispatch(push('/customer/conversation'));\n\n        if (action === 'delete') {\n            newSelected = selected.filter((item) => item !== active);\n            if (newSelected.length === 0) {\n                newSelected.push('remove');\n            }\n            setSelected(newSelected);\n        } else {\n            if (menuParent.includes(active)) {\n                newSelected = selected.filter(\n                    (item) => !menuParent.filter((menu) => menu !== active).includes(item)\n                );\n                setSelected([...newSelected, active]);\n            } else if (active === 'has_phone' || active === 'not_phone') {\n                newSelected = selected.filter((item) => !['has_phone', 'not_phone'].includes(item));\n                setSelected([...newSelected, active]);\n            } else {\n                setSelected([...selected, active]);\n            }\n        }\n    };\n\n    useEffect(() => {\n        const query = querystring.parse(location.search.substring(1));\n\n        if (query.pageId) {\n            const dataSelected = [...selected];\n            switch (parseInt(query.type as string)) {\n                case ConversationType.Message:\n                    dataSelected.push('message');\n                    break;\n                case ConversationType.Comment:\n                    dataSelected.push('comment');\n                    break;\n                default:\n                    break;\n            }\n\n            if (query.postId) {\n                dataSelected.push('post_id');\n                setPostId(`${query.postId}`);\n            }\n\n            setSelected(dataSelected);\n\n            const page = find(pages, (p: any) => p.fbObjectId === `${query.pageId}`);\n            dispatch(setCurrentPage(page));\n            dispatch(changePageActive(page));\n        }\n    }, [location]);\n\n    useEffect(() => {\n        onChange && onChange(difference(selected, menuParent));\n\n        if (selected.length > 0) {\n            dispatch(removeConversations());\n            let fbPageId;\n            if (store.activePage) {\n                fbPageId = store.activePage.fbObjectId;\n            }\n            if (selected.includes('changePage')) {\n                store.queryConversation = undefined;\n                dispatch(loadConversations(store.queryConversation, [fbPageId], store.activePage));\n                setSelected([]);\n                return;\n            }\n            if (selected.includes('remove')) {\n                let selectedTabItem = intersection(selected, menuParent);\n\n                if (selectedTabItem.length > 0) {\n                    setSelected(selectedTabItem);\n                } else {\n                    store.queryConversation = undefined;\n                    dispatch(loadConversations(store.queryConversation, [fbPageId]));\n                    setSelected([]);\n                }\n            } else {\n                let queryConversation: QueryConversation = {};\n                selected.forEach((item) => {\n                    if (item === 'comment') {\n                        queryConversation.type = 2;\n                    }\n                    if (item === 'message') {\n                        queryConversation.type = 1;\n                    }\n                    if (item === 'not_read') {\n                        queryConversation.unread = true;\n                    }\n                    if (item === 'has_phone') {\n                        queryConversation.hasPhoneNo = true;\n                    }\n                    if (item === 'not_phone') {\n                        queryConversation.hasPhoneNo = false;\n                    }\n                    if (item === 'not_answer') {\n                        queryConversation.replied = false;\n                    }\n                    if (item === 'post_id') {\n                        queryConversation.postId = postId;\n                    }\n                    if (item === 'label' && label !== '') {\n                        queryConversation.label = label;\n                    }\n                    if (item === 'date') {\n                        const arrDate = date ? date.split('-') : [];\n                        if (arrDate.length === 2) {\n                            queryConversation.startDate = arrDate[0];\n                            queryConversation.endDate = arrDate[1];\n                        }\n                    }\n                    if (item === 'user_id') {\n                        queryConversation.fbUserId = store.filterUserId;\n                    }\n                });\n                store.queryConversation = querystring.stringify(queryConversation);\n                dispatch(loadConversations(store.queryConversation, [fbPageId]));\n            }\n        }\n        dispatch(setFilterConversation(selected));\n    }, [selected]);\n\n    useEffect(() => {\n        if (store.queryConversation === null) {\n            setSelected(['changePage']);\n        }\n    }, [store.queryConversation]);\n\n    return (\n        <>\n            {visible && (\n                <div className='filter-bar'>\n                    <FilterBarItem\n                        menu={{ icon: <ReloadIcon />, title: 'Bỏ lọc', active: 'remove' }}\n                        selected={selected}\n                        onClick={handleFilterConversation}\n                    />\n\n                    <FilterBarItem\n                        menu={{\n                            icon: <EyeInvisibleOutlined />,\n                            title: 'Tin chưa đọc',\n                            active: 'not_read',\n                        }}\n                        selected={selected}\n                        onClick={handleFilterConversation}\n                    />\n\n                    <FilterBarItem\n                        menu={{\n                            icon: <PhoneIcon />,\n                            title: 'Tìm có số điện thoại',\n                            active: 'has_phone',\n                        }}\n                        selected={selected}\n                        onClick={handleFilterConversation}\n                    />\n\n                    <FilterBarItem\n                        menu={{\n                            icon: <UnPhoneIcon />,\n                            title: 'Tìm không có số điện thoại',\n                            active: 'not_phone',\n                        }}\n                        selected={selected}\n                        onClick={handleFilterConversation}\n                    />\n\n                    <FilterBarItem\n                        menu={{\n                            icon: <BookmarkIcon />,\n                            title: 'Tìm chưa trả lời',\n                            active: 'not_answer',\n                        }}\n                        selected={selected}\n                        onClick={handleFilterConversation}\n                    />\n\n                    <FilterDate selected={selected} onClick={handleFilter} />\n                    <FilterLabels selected={selected} onClick={handleFilter} />\n\n                    <FilterIdPost selected={selected} onClick={handleFilter} />\n                </div>\n            )}\n\n            <FilterTabs selected={selected} onClick={handleFilterConversation} />\n        </>\n    );\n};\n\nexport default FilterBar;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/converstion-search.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/add-product.tsx",["1766"],"import { PlusCircleOutlined } from '@ant-design/icons';\nimport { Col, Row, Space } from 'antd';\nimport Modal from 'antd/lib/modal/Modal';\nimport React from 'react';\nimport useModal from '../../../hooks/use-modal';\nimport FormAddProduct from './add-product-form';\n\nconst AddProduct = () => {\n    const { visible, toggle } = useModal();\n\n    return (\n        <>\n            <Row justify='end'>\n                <Col>\n                    <a onClick={toggle} style={{ display: 'inline-block', marginTop: 15 }}>\n                        <Space size={5}>\n                            Thêm sản phẩm <PlusCircleOutlined />\n                        </Space>\n                    </a>\n                </Col>\n            </Row>\n\n            <Modal\n                visible={visible}\n                onCancel={toggle}\n                footer={null}\n                title='Thêm sản phẩm'\n                destroyOnClose\n            >\n                <FormAddProduct onCancel={toggle} />\n            </Modal>\n        </>\n    );\n};\n\nexport default AddProduct;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-done.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-product-list.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-transport.tsx",["1767"],"import { Button, Space } from 'antd';\nimport React, { FC, memo, useState, useEffect } from 'react';\nimport { useOrder } from './context-order';\nimport Shipping from './shipping';\nimport UseCarrier from './use-carrier';\n\ninterface Props {\n    hasOrder?: boolean;\n}\n\nconst OrderTransport: FC<Props> = ({ hasOrder = false }) => {\n    const { order, setOrder } = useOrder();\n    const [tab, setTab] = useState('use_transformer');\n\n    useEffect(() => {\n        if (hasOrder) {\n            if (order.deliveryOptions.serviceId) {\n                setTab('use_transformer');\n            } else {\n                setTab('use_carrier');\n            }\n        }\n    }, [order.deliveryOptions.serviceId]);\n\n    function callback(key: string) {\n        setTab(key);\n        const is3ndShipment = key === 'use_transformer';\n\n        const newOrder = {\n            ...order,\n            use_transformer: is3ndShipment,\n            deliveryOptions: {\n                ...order.deliveryOptions,\n                serviceId: is3ndShipment ? undefined : 0,\n                transportType: undefined,\n                noteForDelivery: undefined,\n                shipmentFee: 0,\n            },\n        };\n\n        setOrder(newOrder);\n    }\n\n    const notValid =\n        typeof order.customer.province === 'undefined' ||\n        typeof order.customer.district === 'undefined' ||\n        typeof order.customer.ward === 'undefined' ||\n        typeof order.warehouseId === 'undefined' ||\n        order.products.length === 0;\n\n    if (notValid) return <div />;\n\n    return (\n        <>\n            <div style={{ paddingBottom: '12px' }}>Thông tin vận chuyển</div>\n            <Space size={20}>\n                <Button\n                    onClick={() => callback('use_transformer')}\n                    type={tab === 'use_transformer' ? 'primary' : 'default'}\n                    style={{ height: 38 }}\n                >\n                    Gửi vận chuyển\n                </Button>\n                <Button\n                    onClick={() => callback('use_carrier')}\n                    type={tab === 'use_carrier' ? 'primary' : 'default'}\n                    style={{ height: 38 }}\n                >\n                    Tự vận chuyển\n                </Button>\n            </Space>\n\n            <div>\n                {tab === 'use_transformer' && <Shipping />}\n\n                <UseCarrier />\n            </div>\n        </>\n    );\n};\n\nexport default memo(OrderTransport);\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/search-product.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-store.tsx",["1768","1769"],"import { Form, Select } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchWarehouses } from '../../../reducers/warehouseState/warehouseAction';\nimport { useOrder } from './context-order';\n\nconst FormItem = Form.Item;\nconst style = { margin: '10px 0' };\nconst LIMIT = 20;\n\nconst OrderStore = () => {\n    const { order, setOrder } = useOrder();\n    const [page, setPage] = useState(1);\n    const [dataWarehouse, setDataWarehouse] = useState<any[]>([]);\n    const warehouses = useSelector(\n        ({ warehouse }: { warehouse: any }) => warehouse.warehouses.data\n    );\n    const total = useSelector(({ warehouse }: { warehouse: any }) => warehouse.warehouses.total);\n\n    const dispatch = useDispatch();\n    const [formStore] = Form.useForm();\n\n    useEffect(() => {\n        dispatch(fetchWarehouses({ page: 1, limit: LIMIT }));\n        setDataWarehouse(warehouses);\n    }, []);\n\n    useEffect(() => {\n        if (warehouses) {\n            page === 1\n                ? setDataWarehouse(warehouses)\n                : setDataWarehouse(dataWarehouse.concat(warehouses));\n        }\n    }, [warehouses]);\n\n    const handleSelectWarehouse = (warehouseId: string) => {\n        setOrder({ ...order, warehouseId });\n    };\n\n    const handleScroll = (e: any) => {\n        const maxPage = Math.ceil(total / LIMIT);\n        const element = e.target;\n        if (\n            element.scrollHeight === element.clientHeight + element.scrollTop &&\n            page + 1 <= maxPage\n        ) {\n            setPage(page + 1);\n            dispatch(fetchWarehouses({ page: page + 1, limit: LIMIT }));\n        }\n    };\n\n    formStore.setFieldsValue({\n        warehouseId: order.warehouseId,\n    });\n\n    const renderWarehouse = () => {\n        return (\n            <Select\n                onPopupScroll={handleScroll}\n                onChange={handleSelectWarehouse}\n                placeholder='Chọn địa chỉ lấy hàng'\n                style={{ width: '100%' }}\n                value={order.warehouseId}\n            >\n                {dataWarehouse.map((warehouse: any) => (\n                    <Select.Option key={warehouse._id} value={warehouse._id}>\n                        {warehouse.name}\n                    </Select.Option>\n                ))}\n            </Select>\n        );\n    };\n\n    return (\n        <Form form={formStore}>\n            <FormItem\n                label='Địa chỉ lấy hàng'\n                style={{ ...style }}\n                rules={[{ required: true, message: 'Chọn địa chỉ lấy hàng' }]}\n                name='warehouseId'\n                initialValue={order.warehouseId}\n            >\n                {renderWarehouse()}\n            </FormItem>\n        </Form>\n    );\n};\n\nexport default OrderStore;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-customer-info.tsx",["1770","1771","1772"],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/tab-pages/btn-page.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/orders/data.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/order-not-found.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/total-order.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/table-order-list.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/select-page.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-conversation/table.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/warehouses/form-add-warehouse.tsx",["1773","1774","1775","1776"],"import { Button, Col, Form, Input, Row, Select } from 'antd';\nimport { get, map } from 'lodash';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport locationApi from '../../api/location-api';\nimport { createWarehouse, updateWarehouse } from '../../reducers/warehouseState/warehouseAction';\nimport { disabledAutosuggestion } from '../../utils/disabled-autosuggestion';\nimport { validatePhone } from '../../utils/validate-phone';\n\nconst style = {\n    width: '100%',\n};\n\nconst size = 'middle';\n\ninterface Props {\n    toggle: any;\n    reloadTable: any;\n    visible: boolean;\n    warehouse?: any;\n}\n\nconst FormAddWarehouse: FC<Props> = (props): JSX.Element => {\n    const { toggle, reloadTable, visible, warehouse } = props;\n\n    const dispatch = useDispatch();\n    const [form] = Form.useForm();\n\n    const [loading, setLoading] = useState<boolean>(false);\n    const [dataForm, setDataForm] = useState<any>({});\n\n    const resetForm = () => {\n        setDataForm({});\n        form.resetFields();\n    };\n\n    const onFinish = async (values: any) => {\n        const data = {\n            ...values,\n        };\n        let result;\n        if (get(warehouse, '_id')) {\n            result = await dispatch(updateWarehouse({ ...data, _id: warehouse._id }));\n        } else {\n            result = await dispatch(createWarehouse(data));\n        }\n        if (!!result) {\n            resetForm();\n            toggle();\n            reloadTable();\n        }\n    };\n\n    const onCancel = () => {\n        resetForm();\n        toggle();\n    };\n\n    const [provinces, setProvinces] = useState<any[]>([]);\n    const [loadingProvince, setLoadingProvince] = useState<boolean>(true);\n\n    const [districts, setDistricts] = useState<any[]>([]);\n    const [loadingDistrict, setLoadingDistrict] = useState<boolean>(false);\n\n    const [wards, setWards] = useState<any[]>([]);\n    const [loadingWard, setLoadingWard] = useState<boolean>(false);\n\n    useEffect(() => {\n        setDataForm({\n            ...dataForm,\n            ...warehouse,\n        });\n        form.setFieldsValue(warehouse);\n        // if (warehouse) {\n        //     form.setFieldsValue(warehouse);\n        // } else {\n        //     form.setFieldsValue(dataForm);\n        // }\n    }, [warehouse]);\n\n    const onChange = (e: any) => {\n        setDataForm({\n            ...dataForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const onChangeProvince = (value: string) => {\n        setDataForm({\n            ...dataForm,\n            province: value,\n            district: undefined,\n            ward: undefined,\n        });\n        form.setFieldsValue({\n            district: undefined,\n            ward: undefined,\n        });\n    };\n\n    const onChangeDistrict = (value: string) => {\n        setDataForm({\n            ...dataForm,\n            district: value,\n            ward: undefined,\n        });\n        form.setFieldsValue({\n            ward: undefined,\n        });\n    };\n\n    const onChangeWard = (value: string) => {\n        setDataForm({\n            ...dataForm,\n            ward: value,\n        });\n    };\n\n    const dataInput = form.getFieldsValue();\n    const isValidForm =\n        dataInput.name &&\n        dataInput.phoneNo &&\n        dataInput.province &&\n        dataInput.district &&\n        dataInput.ward &&\n        dataInput.address;\n\n    useEffect(() => {\n        const fixAutocomplete = () => {\n            document.querySelectorAll('.ant-select-selector input').forEach((e) => {\n                e.setAttribute('autocomplete', 'stopDamnAutocomplete');\n            });\n        };\n\n        fixAutocomplete();\n    }, []);\n\n    useEffect(() => {\n        async function getListProvinces() {\n            try {\n                const response = await locationApi.getProvinces();\n\n                setProvinces(response);\n                setLoadingProvince(false);\n            } catch (error) {\n                setProvinces([]);\n                setLoadingProvince(false);\n            }\n        }\n        getListProvinces();\n    }, []);\n\n    useEffect(() => {\n        async function getListDistricts() {\n            if (!dataForm.province) return null;\n            setLoadingDistrict(true);\n            try {\n                const response = await locationApi.getDistricts(dataForm.province);\n                setDistricts(response);\n                setLoadingDistrict(false);\n            } catch (error) {\n                setDistricts([]);\n                setLoadingDistrict(false);\n            }\n        }\n        getListDistricts();\n    }, [dataForm.province]);\n\n    useEffect(() => {\n        async function getListWard() {\n            if (!dataForm.district) return null;\n            setLoadingWard(true);\n            try {\n                const response = await locationApi.getWards({\n                    provinceId: dataForm.province,\n                    districtId: dataForm.district,\n                });\n                setWards(response);\n                setLoadingWard(false);\n            } catch (error) {\n                setWards([]);\n                setLoadingWard(false);\n            }\n        }\n        getListWard();\n    }, [dataForm.district]);\n\n    return (\n        <Form layout='vertical' onFinish={onFinish} form={form} initialValues={dataForm}>\n            <Form.Item\n                name='name'\n                label='Tên chi nhánh'\n                rules={[{ required: true, message: 'Điền tên chi nhánh' }]}\n            >\n                <Input size={size} placeholder='Tên chi nhánh' onChange={onChange} autoFocus />\n            </Form.Item>\n\n            <Form.Item\n                name='phoneNo'\n                label='Số điện thoại'\n                rules={[\n                    { required: true, message: 'Điền số điện thoại' },\n                    {\n                        validator: validatePhone,\n                    },\n                ]}\n            >\n                <Input\n                    style={style}\n                    size={size}\n                    placeholder='Số điện thoại chi nhánh'\n                    onChange={onChange}\n                />\n            </Form.Item>\n\n            <Row gutter={15}>\n                <Col md={8}>\n                    <Form.Item\n                        name='province'\n                        label='Tỉnh/thành phố'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Chọn tỉnh/thành phố',\n                            },\n                        ]}\n                    >\n                        <Select\n                            size={size}\n                            placeholder='Chọn tỉnh/thành phố'\n                            onChange={onChangeProvince}\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            loading={loadingProvince}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-1'} key={'-1'} disabled>\n                                Chọn tỉnh/thành phố\n                            </Select.Option>\n                            {map(provinces, (province: any) => (\n                                <Select.Option value={province.code} key={province.code}>\n                                    {province.name}\n                                </Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                </Col>\n\n                <Col md={8}>\n                    <Form.Item\n                        name='district'\n                        label='Quận/huyện'\n                        rules={[{ required: true, message: 'Chọn quận/huyện' }]}\n                    >\n                        <Select\n                            size={size}\n                            placeholder='Chọn quận/huyện'\n                            onChange={onChangeDistrict}\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            disabled={!dataForm.province}\n                            loading={loadingDistrict}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-2'} key={'-2'} disabled>\n                                Chọn quận/huyện\n                            </Select.Option>\n                            {map(districts, (district: any) => (\n                                <Select.Option value={district.code} key={district.code}>\n                                    {district.name}\n                                </Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                </Col>\n\n                <Col md={8}>\n                    <Form.Item\n                        name='ward'\n                        label='Phường/xã'\n                        rules={[{ required: true, message: 'Chọn phường/xã' }]}\n                    >\n                        <Select\n                            size={size}\n                            placeholder='Chọn phường/xã'\n                            onChange={onChangeWard}\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            disabled={!dataForm.district}\n                            loading={loadingWard}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-3'} key={'-3'} disabled>\n                                Chọn phường/xã\n                            </Select.Option>\n                            {map(wards, (ward: any) => {\n                                return (\n                                    <Select.Option value={ward.code} key={ward.code}>\n                                        {ward.name}\n                                    </Select.Option>\n                                );\n                            })}\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n\n            <Form.Item\n                name='address'\n                rules={[{ required: true, message: 'Điền địa chỉ chi nhánh' }]}\n                label='Địa chỉ'\n            >\n                <Input.TextArea\n                    autoComplete='off'\n                    placeholder='Điền địa chỉ chi nhánh'\n                    rows={4}\n                    onChange={onChange}\n                ></Input.TextArea>\n            </Form.Item>\n\n            <Form.Item style={{ textAlign: 'end' }}>\n                <Button style={{ marginRight: 15 }} onClick={onCancel}>\n                    Hủy\n                </Button>\n                <Button type='primary' htmlType='submit' loading={loading} disabled={!isValidForm}>\n                    {warehouse && warehouse ? 'Cập nhật chi nhánh' : 'Tạo mới chi nhánh'}\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default FormAddWarehouse;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customers-other/columns.tsx",["1777"],"import React from 'react';\nimport moment from 'moment';\nimport { ColumnProps } from 'antd/lib/table/Column';\n\nimport { Th } from '../../components';\nimport { Customer } from './types';\nimport Page from './page';\n\nexport default (customers: Customer[]): Array<ColumnProps<[]>> => [\n    {\n        title: <Th>Họ và tên</Th>,\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: <Th>Số điện thoại</Th>,\n        dataIndex: 'phoneNo',\n        key: 'phoneNo',\n    },\n    {\n        title: <Th>Page</Th>,\n        dataIndex: 'fbPageId',\n        key: 'fbPageId',\n        render: (fbPageId: string) => <Page pageId={fbPageId} />,\n    },\n    { title: <Th>Email</Th>, dataIndex: 'email', key: 'email' },\n    { title: <Th>Địa chỉ</Th>, dataIndex: 'address', key: 'address' },\n\n    {\n        title: <Th>Ngày tạo</Th>,\n        dataIndex: 'createdAt',\n        key: 'createdAt',\n        render: (createdAt: string) => moment(createdAt).format('HH:mm DD/MM/YYYY'),\n    },\n];\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/table-keywords.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/page-apply.tsx",["1778"],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Avatar, Spin, Space } from 'antd';\nimport { find } from 'lodash';\nimport { generateUrlImgFb } from '../../../utils/generate-url-img-fb';\n\ninterface Props {\n    fbPageId: string;\n}\n\nconst PageApply = (props: Props) => {\n    const loading = useSelector((state: any) => state.fanpage.loading);\n    const pages = useSelector((state: any) => state.fanpage.pages);\n\n    if (loading) return <Spin />;\n\n    const page = find(pages, (page: any) => page.fbObjectId === props.fbPageId);\n\n    if (!page) return <span>--</span>;\n\n    return (\n        <a target='_blank' href={page.link}>\n            <Space>\n                <Avatar src={generateUrlImgFb(page.fbObjectId, page.accessToken)} />\n                <span>{page.name}</span>\n            </Space>\n        </a>\n    );\n};\n\nexport default PageApply;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/remove-staff-btn.tsx",["1779"],"import { DeleteOutlined } from '@ant-design/icons';\nimport { Button, message, Modal } from 'antd';\nimport React, { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport staffApi from '../../api/staff-api';\nimport { deleteStaff } from '../../reducers/staffState/staffAction';\nimport { IStaff } from '../../reducers/staffState/staffReducer';\n\ninterface Props {\n    staff: IStaff;\n}\n\nconst MemberAddBtn: FC<Props> = ({ staff }) => {\n    const [loading, setLoading] = useState(false);\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n    const dispatch = useDispatch();\n\n    const removeStaff = async () => {\n        setLoading(true);\n\n        try {\n            const response = await staffApi.deleteStaff({\n                storeId: store._id,\n                staffId: staff._id,\n                token: token.accessToken,\n            });\n            dispatch(deleteStaff(staff._id));\n            setLoading(false);\n            message.success('Đã xóa nhân viên');\n        } catch (error) {\n            setLoading(false);\n            message.error('Lỗi xóa nhân viên');\n        }\n    };\n\n    const showConfirm = () => {\n        Modal.confirm({\n            title: 'Xóa Nhân Viên?',\n            content: `Bạn chắc chắn muốn xóa nhân viên?`,\n            okText: 'Xóa',\n            okType: 'danger',\n            cancelText: 'Hủy',\n            onOk() {\n                removeStaff();\n            },\n        });\n    };\n\n    return <Button icon={<DeleteOutlined />} onClick={showConfirm} loading={loading} />;\n};\n\nexport default MemberAddBtn;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-revenue/chart.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/report-label/table.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/form-filter/select-date.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/form-filter/button-filter.tsx",["1780"],"import React, { FC } from 'react';\nimport { Button } from 'antd';\nimport { filter } from 'lodash';\nimport { FilterFilled, FilterOutlined } from '@ant-design/icons';\n\ninterface IFilter {\n    pageId: string;\n    date: any;\n    type: string;\n}\n\ninterface Props {\n    loading: boolean;\n    values: IFilter;\n    onClick: () => void;\n}\n\nconst ButtonFilter: FC<Props> = ({ loading, values, onClick }) => {\n    const disabled = filter(values, (i) => !i).length > 0;\n\n    return (\n        <Button\n            disabled={disabled}\n            loading={loading}\n            onClick={onClick}\n            type='primary'\n            icon={<FilterOutlined />}\n        >\n            Lọc\n        </Button>\n    );\n};\n\nexport default ButtonFilter;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/form-filter/select-date-type.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/form-filter/select-page.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/livestream-customer.tsx",["1781","1782","1783"],"import { Button, Card, Col, Input, Pagination, Row, Tabs, Tag } from 'antd';\nimport { TablePaginationConfig } from 'antd/lib/table';\nimport { debounce } from 'lodash';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport livestreamApi from '../../../api/livestream-api';\nimport { CloseIcon, SearchIcon } from '../../../assets/icon';\nimport { ConversationType } from '../../../collections/facebook-conversation';\nimport { ILivestreamScript } from '../../../collections/livestream-script';\nimport { TagFilter } from '../../../components';\nimport FilterCustomer from './filter-customer';\nimport LivestreamCustomerTable from './livestream-customer-table';\n\nexport interface DataFilterItem {\n    value: string;\n    title: string;\n    hide?: boolean;\n    filters: any[];\n}\n\nexport const default_data_filters: DataFilterItem[] = [\n    {\n        value: 'phoneNo',\n        title: 'Số điện thoại',\n        filters: [\n            {\n                title: 'Có số điện thoại',\n                isHasPhoneNo: true,\n            },\n            {\n                title: 'Không có số điện thoại',\n                isHasPhoneNo: false,\n            },\n        ],\n    },\n];\n\ninterface TabKeywordProps {\n    keyword: string;\n    handleSelectKeyWord: (id: number, keyword: any) => void;\n    isActive: boolean;\n    id: number;\n}\n\nconst TagKeyword: FC<TabKeywordProps> = ({ keyword, handleSelectKeyWord, isActive, id }) => {\n    const color = isActive ? 'blue' : 'default';\n\n    const onClick = () => {\n        handleSelectKeyWord(id, keyword);\n    };\n\n    return (\n        <div className='keyword'>\n            <Tag style={{ cursor: 'pointer' }} color={color} onClick={onClick}>\n                {keyword}\n            </Tag>\n        </div>\n    );\n};\n\ninterface Props {\n    script: ILivestreamScript;\n}\n\nconst { TabPane } = Tabs;\nconst LIMIT = 15;\n\nconst LivestreamCustomer: FC<Props> = ({ script }) => {\n    const store = useSelector((state: any) => state.store.store);\n    const [filters, setFilters] = useState<any[]>([]);\n\n    const [tab, setTab] = useState<string>('all');\n    const [loading, setLoading] = useState(true);\n    const [customers, setCustomer] = useState<any[]>([]);\n    const [total, setTotal] = useState<number>(1);\n    const [page, setPage] = useState<number>(1);\n    const [pageSize, setPageSize] = useState<number>(LIMIT);\n    const [text, setText] = useState<string | undefined>();\n    const [isHasOrder, setIsHasOrder] = useState<string | undefined>(undefined);\n    const [isHasPhoneNo, setIsHasPhoneNo] = useState<string | undefined>(undefined);\n    const [idKeywordActive, setIdKeywordActive] = useState<number>();\n    const [textSearch, setTextSearch] = useState<any>();\n\n    const handleSearch = (searchText: string) => {\n        const textString = searchText.length > 0 ? searchText : undefined;\n        setText(textString);\n    };\n\n    const handleSearchTimeOut = (searchText: string) => {\n        setIdKeywordActive(-1);\n        setTextSearch(searchText);\n        debouncedSearch(searchText);\n    };\n    const debouncedSearch = useCallback(debounce(handleSearch, 300), []);\n\n    const handleSelectKeyWord = (id: number, text: string) => {\n        if (id === idKeywordActive) {\n            setIdKeywordActive(-1);\n            handleSearch('');\n            setTextSearch('');\n        } else {\n            setIdKeywordActive(id);\n            handleSearch(text);\n            setTextSearch(text);\n        }\n    };\n\n    const changeTab = (key: string) => {\n        if (key === 'noOrder') {\n            setIsHasOrder('false');\n        } else if (key === 'hasOrder') {\n            setIsHasOrder('true');\n        } else {\n            setIsHasOrder('undefined');\n        }\n\n        setTab(key);\n    };\n\n    const onChangeTable = (pagination: TablePaginationConfig) => {\n        setPage(Number(pagination.current));\n        setPageSize(Number(pagination.pageSize));\n    };\n\n    const handleFilter = (newFilters: any[]) => {\n        if (['noOrder', 'hasOrder'].includes(tab)) {\n            setFilters([...filters, ...newFilters]);\n        } else {\n            setFilters(newFilters);\n        }\n    };\n\n    const removeFilter = (filter: any) => {\n        const newFilters = filters.filter((item: any) => item.value !== filter.value);\n\n        setFilters(newFilters);\n    };\n\n    const loadCustomers = useCallback(async () => {\n        setLoading(true);\n\n        const isHasOrderValue =\n            !isHasOrder || isHasOrder === 'undefined' ? undefined : JSON.parse(isHasOrder);\n        const isHasPhoneNoValue =\n            !isHasPhoneNo || isHasPhoneNo === 'undefined' ? undefined : JSON.parse(isHasPhoneNo);\n\n        const response = await livestreamApi.getCustomerInLivestream({\n            storeId: store._id,\n            scriptId: script._id,\n            fbPageId: script.fbPageId,\n            page,\n            limit: pageSize,\n            isHasOrder: isHasOrderValue,\n            isHasPhoneNo: isHasPhoneNoValue,\n            search: text,\n        });\n\n        setCustomer(response.customerOrders);\n        setTotal(response.total);\n        setLoading(false);\n    }, [isHasOrder, isHasPhoneNo, store._id, script._id, script.fbPageId, page, pageSize, text]);\n\n    const reloadCustomer = () => {\n        loadCustomers();\n    };\n\n    const changePagination = (page: number, pageSize: number | undefined) => {\n        setPage(page);\n        setPageSize(pageSize || 1);\n    };\n\n    useEffect(() => {\n        const newFilterValue: any[] = filters.map((item: any) => item.value_filter);\n        if (newFilterValue.length > 0) {\n            newFilterValue.forEach((item) => {\n                setIsHasPhoneNo(`${item['isHasPhoneNo']}`);\n                setIsHasOrder(`${item['isHasOrder']}`);\n            });\n        } else {\n            setIsHasPhoneNo('undefined');\n            setIsHasOrder('undefined');\n        }\n    }, [filters]);\n\n    useEffect(() => {\n        loadCustomers();\n    }, [page, pageSize, isHasOrder, isHasPhoneNo, text]);\n\n    const filterDataFilterDefault = ['noOrder', 'hasOrder'].includes(tab)\n        ? default_data_filters.filter((item: any) => item.value !== 'order')\n        : default_data_filters;\n\n    const filterValuetFilters = ['noOrder', 'hasOrder'].includes(tab)\n        ? filters.filter((item: any) => item.value !== 'order')\n        : filters;\n\n    const renderKeywords = script.keywords.map((item: any, index: number) => {\n        return (\n            <TagKeyword\n                keyword={item.keyword}\n                key={item.keyword + index}\n                id={index}\n                handleSelectKeyWord={handleSelectKeyWord}\n                isActive={index === idKeywordActive}\n            />\n        );\n    });\n\n    return (\n        <div style={{ marginBottom: 20 }} className='script-report-cutomer'>\n            <Card bodyStyle={{ padding: 0 }} style={{ borderColor: '#cfd2d4', overflow: 'hidden' }}>\n                <Tabs\n                    activeKey={tab}\n                    onChange={changeTab}\n                    tabBarStyle={{ padding: '0 20px' }}\n                    tabBarExtraContent={\n                        <a\n                            href={`/customer/conversation?pageId=${script.fbPageId}&postId=${script.fbPageId}_${script.videoId}&type=${ConversationType.Comment}`}\n                            target='_blank'\n                        >\n                            <Button type='primary'>Xem tất cả bình luận trong hội thoại</Button>\n                        </a>\n                    }\n                >\n                    <TabPane tab='Tất cả bình luận' key='all'></TabPane>\n                    <TabPane tab='Chưa được tạo đơn' key='noOrder'></TabPane>\n                    <TabPane tab='Đã được tạo đơn' key='hasOrder'></TabPane>\n                </Tabs>\n                <div>\n                    <div style={{ padding: '20px' }}>\n                        <Row gutter={15}>\n                            <Col span={4}>\n                                <FilterCustomer\n                                    handleFilter={handleFilter}\n                                    filters={filterValuetFilters}\n                                    dataDefaultFilter={filterDataFilterDefault}\n                                    tabName={tab}\n                                />\n                            </Col>\n\n                            <Col span={12}>\n                                <Input\n                                    onChange={(e: any) => handleSearchTimeOut(e.target.value)}\n                                    prefix={<SearchIcon />}\n                                    value={textSearch}\n                                    allowClear\n                                    placeholder='Nhập từ khóa tìm kiếm'\n                                />\n                            </Col>\n                            <Col span={24}>\n                                <div className='keywords'>{renderKeywords}</div>\n                            </Col>\n                        </Row>\n\n                        {filters.length > 0 && (\n                            <div style={{ marginTop: 10 }}>\n                                {filters.map((filter: any) => {\n                                    const closable =\n                                        ['noOrder', 'hasOrder'].includes(tab) &&\n                                        filter.value === 'order';\n                                    return (\n                                        <TagFilter\n                                            closable={!closable}\n                                            closeIcon={<CloseIcon />}\n                                            key={filter.value}\n                                            onClose={() => removeFilter(filter)}\n                                        >\n                                            {filter.title}: {filter.value_filter.title}\n                                        </TagFilter>\n                                    );\n                                })}\n                            </div>\n                        )}\n                    </div>\n\n                    <LivestreamCustomerTable\n                        script={script}\n                        customers={customers}\n                        loading={loading}\n                        total={total}\n                        page={page}\n                        pageSize={pageSize}\n                        onChangeTable={onChangeTable}\n                        reloadCustomer={reloadCustomer}\n                    />\n                </div>\n            </Card>\n            <Row justify='end'>\n                <Col>\n                    <Pagination\n                        total={total}\n                        showSizeChanger\n                        pageSize={pageSize}\n                        onChange={changePagination}\n                        style={{ marginTop: 20 }}\n                    />\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default LivestreamCustomer;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/video-thumnail.tsx",["1784"],"import { QuestionOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport React, { FC } from 'react';\nimport { IFBVideo } from '../../../collections/livestream-script';\n\ninterface Props {\n    video?: IFBVideo;\n    style?: any;\n}\n\nconst VideoThumnail: FC<Props> = ({ video, style }) => {\n    if (!video) {\n        return (\n            <div className='thumnail-livestream' style={{ ...style }}>\n                <QuestionOutlined />\n            </div>\n        );\n    }\n\n    return (\n        <Tooltip title={video.title}>\n            <a\n                className='thumnail-livestream'\n                style={{ ...style }}\n                target='_blank'\n                href={`https://www.facebook.com/${video.id}`}\n            >\n                <img src={video.picture} alt={video.title} />\n            </a>\n        </Tooltip>\n    );\n};\n\nexport default VideoThumnail;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/edit-member-form.tsx",["1785"],"import { EditFilled } from '@ant-design/icons';\nimport { Button, Form, Input, message, Modal, Select } from 'antd';\nimport { map } from 'lodash';\nimport React, { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport staffApi from '../../api/staff-api';\nimport useModal from '../../hooks/use-modal';\nimport { updateStaff } from '../../reducers/staffState/staffAction';\nimport { IStaff } from '../../reducers/staffState/staffReducer';\nimport roles, { IRole } from './roles';\n\ninterface Props {\n    staff: IStaff;\n}\n\nconst EditMemberForm: FC<Props> = ({ staff }) => {\n    const { visible, toggle } = useModal();\n    const dispatch = useDispatch();\n    const [form] = Form.useForm();\n    const [loading, setLoading] = useState(false);\n\n    const reset = () => form.resetFields();\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n\n    const onFinish = async (values: any) => {\n        setLoading(true);\n        try {\n            const response = await staffApi.updateStaff({\n                storeId: store._id,\n                token: token.accessToken,\n                staffId: staff._id,\n                data: {\n                    role: values.role,\n                    name: values.name,\n                },\n            });\n\n            dispatch(\n                updateStaff({\n                    _id: staff._id,\n                    name: values.name,\n                    role: values.role,\n                })\n            );\n\n            setLoading(false);\n            message.success('Chỉnh sửa nhân viên thành công');\n            toggle();\n        } catch (error) {\n            setLoading(false);\n            message.error('Lỗi chỉnh sửa nhân viên');\n        }\n    };\n\n    const closeModal = () => {\n        toggle();\n        reset();\n    };\n\n    return (\n        <>\n            <Button icon={<EditFilled />} onClick={toggle} style={{ marginLeft: '10px' }} />\n\n            <Modal\n                visible={visible}\n                onCancel={closeModal}\n                title='Chỉnh sửa nhân viên'\n                footer={null}\n            >\n                <Form layout='vertical' form={form} onFinish={onFinish}>\n                    <Form.Item\n                        label='Tên'\n                        name='name'\n                        initialValue={staff.name}\n                        rules={[{ required: true, message: 'Điền tên nhân viên' }]}\n                    >\n                        <Input placeholder='Tên nhân viên' />\n                    </Form.Item>\n\n                    <Form.Item\n                        label='Vị trí'\n                        name='role'\n                        initialValue={staff.role}\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Chọn vị trí cho nhân viên',\n                            },\n                        ]}\n                    >\n                        <Select placeholder='Chọn vị trí'>\n                            {map(roles, (role: IRole) => (\n                                <Select.Option value={role.id} key={role.id}>\n                                    {role.title}\n                                </Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button htmlType='button' onClick={closeModal} style={{ marginRight: 15 }}>\n                            Hủy\n                        </Button>\n                        <Button type='primary' htmlType='submit' loading={loading}>\n                            Lưu\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    );\n};\n\nexport default EditMemberForm;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/member-add-btn.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/change-role.tsx",["1786","1787"],"import { message, Select } from 'antd';\nimport { map } from 'lodash';\nimport React, { FC, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport staffApi from '../../api/staff-api';\nimport { updateStaff } from '../../reducers/staffState/staffAction';\nimport { IStaff } from '../../reducers/staffState/staffReducer';\nimport roles from './roles';\n\ninterface Props {\n    staff: IStaff;\n}\n\nconst ChangeRole: FC<Props> = ({ staff }): JSX.Element => {\n    const [loading, setLoading] = useState(false);\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n    const dispatch = useDispatch();\n\n    const changRoleStaff = async (value: any) => {\n        setLoading(true);\n        try {\n            const reponse = await staffApi.updateStaff({\n                staffId: staff._id,\n                storeId: store._id,\n                data: {\n                    role: value,\n                },\n                token: token.accessToken,\n            });\n            setLoading(false);\n            dispatch(updateStaff({ _id: staff._id, role: value }));\n            message.success('Đã cập nhật vị trí');\n        } catch (error) {\n            setLoading(false);\n            message.error('Lỗi cập nhật vị trí');\n        }\n    };\n\n    return (\n        <Select onChange={changRoleStaff} value={staff.role} loading={loading}>\n            {map(roles, (role: any) => (\n                <Select.Option key={role.id} value={role.id}>\n                    {role.title}\n                </Select.Option>\n            ))}\n        </Select>\n    );\n};\n\nexport default ChangeRole;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/script-action.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/warehouses/btn-remove-warehouse.tsx",["1788"],"import { DeleteOutlined } from '@ant-design/icons';\nimport { Button, message, Modal } from 'antd';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteWarehouseRequest } from '../../api/warehouse-api';\nimport { fetchWarehouses } from '../../reducers/warehouseState/warehouseAction';\nimport { get } from 'lodash';\n\ninterface Props {\n    warehouses: string[];\n    resetSelect: () => void;\n    limit: number;\n    page: number;\n}\n\nconst BtnRemoveWarehouse = ({ warehouses, resetSelect, limit, page }: Props) => {\n    const dispatch = useDispatch();\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n\n    const [loading, setLoading] = useState(false);\n\n    const showDeleteConfirm = () => {\n        Modal.confirm({\n            title: 'Xóa chi nhánh?',\n            content: `Bạn chắc chắn muốn xóa những chi nhánh đã chọn?`,\n            okText: 'Xóa',\n            okType: 'danger',\n            cancelText: 'Hủy',\n            width: 450,\n            onOk() {\n                removeMoreWarehouses();\n            },\n            onCancel() {},\n        });\n    };\n\n    const removeMoreWarehouses = async () => {\n        try {\n            setLoading(true);\n\n            const response = await Promise.all(\n                warehouses.map(async (warehouseId: string) => {\n                    await deleteWarehouseRequest({\n                        token: token.accessToken,\n                        storeId: store._id,\n                        warehouseId,\n                    });\n                    return warehouseId;\n                })\n            );\n\n            message.success('Đã xóa chi nhánh');\n            setLoading(false);\n            resetSelect();\n            dispatch(\n                fetchWarehouses({\n                    page,\n                    limit,\n                })\n            );\n        } catch (error) {\n            if (get(error, 'response.data.message') === 'HAS_RELATED_ORDER') {\n                message.error('Đã tạo đơn với chi nhánh này, bạn không thể xóa chi nhánh');\n            } else {\n                message.error('Lỗi xóa chi nhánh');\n            }\n            dispatch(\n                fetchWarehouses({\n                    page,\n                    limit,\n                })\n            );\n            setLoading(false);\n        }\n    };\n\n    return (\n        <Button\n            danger\n            type='primary'\n            icon={<DeleteOutlined />}\n            onClick={showDeleteConfirm}\n            loading={loading}\n        >\n            Xóa\n        </Button>\n    );\n};\n\nexport default BtnRemoveWarehouse;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/warehouses/action.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/search-script.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/script-table-pagination.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/script-table.tsx",["1789"],"import { FileAddOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { Checkbox, Col, Row, Space, Table, Tooltip } from 'antd';\nimport { ColumnsType, TablePaginationConfig } from 'antd/lib/table';\nimport { isUndefined } from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { DownIcon } from '../../../assets/icon';\nimport { TextEllipsis } from '../../../components';\nimport { changeFilter, loadLivestreams } from '../../../reducers/livestreamState/livestreamAction';\nimport { style } from '../../order-detail/form-update-order';\nimport Post from './post';\nimport ScriptCopy from './script-copy';\nimport ScriptTableAction from './script-table-action';\nimport './script-table.less';\nimport SwitchActiveScript from './switch-active-script';\n\nconst renderCountNumber = (value?: number) => (isUndefined(value) ? '---' : value);\n\nconst getTitle = (status: number): { label: string; title: string; color: string } => {\n    switch (status) {\n        case 0:\n            return {\n                color: '#0872d7',\n                label: 'Chưa sử dụng',\n                title: 'Kịch bản chưa được áp dụng cho bài livestream.',\n            };\n        case 1:\n            return {\n                color: '#307dd2',\n                label: 'Đang sử dụng',\n                title: 'Kịch bản đang được áp dụng cho bài livestream.',\n            };\n        case 2:\n            return {\n                color: '#23ad44',\n                label: 'Đang tạo đơn hàng',\n                title: 'Đang tạo đơn hàng',\n            };\n\n        case 3:\n            return {\n                color: '#23b7e5',\n                label: 'Đang chờ xử lý',\n                title: 'Đang chờ xử lý',\n            };\n        default:\n            return {\n                color: '#f05050',\n                label: 'Đã sử dụng',\n                title: 'Kịch bản đã sử dụng',\n            };\n    }\n};\n\nconst columns: ColumnsType<any> = [\n    {\n        title: 'Tên kịch bản',\n        dataIndex: '',\n        key: 'name',\n        width: 250,\n        sorter: true,\n\n        render: (script: any) => {\n            return (\n                <Link\n                    to={`script/${script.fbPageId}/${script._id}`}\n                    className='insa-align-center script-link'\n                >\n                    <TextEllipsis width={250}>\n                        <Tooltip title={script.name}>{script.name}</Tooltip>\n                    </TextEllipsis>\n                </Link>\n            );\n        },\n    },\n\n    {\n        title: 'Bài viết',\n        dataIndex: '',\n        key: 'text',\n\n        width: 210,\n        render: (script: any) => {\n            return <Post script={script} />;\n        },\n    },\n    {\n        title: 'Trạng thái',\n        dataIndex: 'status',\n        key: 'status',\n        render: (status: number) => {\n            const { label, color, title } = getTitle(status);\n            return (\n                <Space\n                >\n                    <span style={{ color }}>{label}</span>\n                    <Tooltip\n                        title={title}\n                        placement='top'\n                        style={{\n                            whiteSpace: 'nowrap'\n                        }}\n                    >\n                        <QuestionCircleOutlined />\n                    </Tooltip>\n                </Space>\n            );\n        },\n    },\n    {\n        title: 'Khách hàng',\n        dataIndex: 'customerCount',\n        key: 'customerCount',\n        align: 'center',\n        render: (customerCount) => renderCountNumber(customerCount),\n    },\n    {\n        title: 'Bình luận',\n        dataIndex: 'commentCount',\n        key: 'commentCount',\n        align: 'center',\n        render: (commentCount) => renderCountNumber(commentCount),\n    },\n    {\n        title: 'Đơn hàng',\n        dataIndex: 'orderCount',\n        key: 'orderCount',\n        align: 'center',\n        render: (orderCount) => renderCountNumber(orderCount),\n    },\n    {\n        title: 'Thao tác',\n        dataIndex: '',\n        key: 'actions',\n        align: 'center',\n        width: 90,\n        render: (script) => {\n            const title = script.active ? 'Ngưng kích hoạt' : 'Kích hoạt';\n\n            return (\n                <Row\n                    gutter={5}\n                    justify='space-around'\n                    align='middle'\n                >\n                    <Col>\n                        <Tooltip\n                            title={title}\n                            placement='top'\n                            style={{\n                                whiteSpace: 'nowrap'\n                            }}\n                        >\n                            <SwitchActiveScript script={script} />\n                        </Tooltip>\n                    </Col>\n                    <Col>\n                        <Tooltip\n                            title='Sao chép kịch bản'\n                            placement='top'\n                            style={{\n                                whiteSpace: 'nowrap'\n                            }}\n                        >\n                            <span>\n                                <ScriptCopy script={script}>\n                                    <FileAddOutlined\n                                        style={{\n                                            fontSize: 20,\n                                            color: '#9f9f9f'\n                                        }}\n                                    />\n                                </ScriptCopy>\n                            </span>\n                        </Tooltip>\n                    </Col>\n                </Row>\n            );\n        },\n    },\n    {\n        title: 'Ngày tạo',\n        dataIndex: 'createdAt',\n        align: 'center',\n        width: 100,\n        sorter: true,\n        defaultSortOrder: 'descend',\n        key: 'createdAt',\n        render: (createdAt) => moment(createdAt).format('DD/MM/YYYY HH:mm'),\n    },\n];\n\ninterface Props {}\n\nconst ScriptTable = (props: Props) => {\n    const dispatch = useDispatch();\n    const scripts = useSelector((state: any) => state.livestream.scripts);\n    const loading = useSelector((state: any) => state.livestream.loading);\n    const total = useSelector((state: any) => state.livestream.total);\n    const limit = useSelector((state: any) => state.livestream.limit);\n    const page = useSelector((state: any) => state.livestream.page);\n    const fbPageId = useSelector((state: any) => state.livestream.fbPageId);\n\n    const [scripts_select, setScriptsSelect] = useState([]);\n    const [rowSelection, setRowSelection] = useState<any>({\n        onChange: (selectedRowKeys: any, selectedRows: any) => {\n            setScriptsSelect(selectedRows);\n        },\n        columnTitle: undefined,\n    });\n\n    useEffect(() => {\n        const antTableHeadEle: HTMLTableHeaderCellElement | null = document?.querySelector(\n            '.livestream-list-section .ant-table-thead',\n        );\n        var scriptActionsWidth: number = antTableHeadEle ? antTableHeadEle.clientWidth : 0;\n\n        setRowSelection({\n            ...rowSelection,\n            selectedRowKeys: scripts_select.map((i: any) => i?._id),\n            columnTitle:\n                scripts_select.length > 0 ? (\n                    <div className='script-actions' style={{ width: scriptActionsWidth }}>\n                        <div className='checkbox-section'>\n                            <Checkbox\n                                indeterminate={\n                                    scripts_select.length === scripts.length ? false : true\n                                }\n                                onChange={\n                                    scripts_select.length === scripts.length\n                                        ? resetScriptSelect\n                                        : selectedAllRow\n                                }\n                                checked={!!scripts_select.length}\n                            >\n                                <span className='checkbox-next-text'>\n                                    Đã chọn ({scripts_select.length} kịch bản)\n                                </span>\n                            </Checkbox>\n                        </div>\n                        <div className='script-dropdown-action'>\n                            <ScriptTableAction\n                                scripts={scripts_select}\n                                resetScriptSelect={resetScriptSelect}\n                            />\n                        </div>\n                    </div>\n                ) : (\n                    <div className='script-actions not-select' style={{ width: 63 }}>\n                        <div className='checkbox-section'>\n                            <Checkbox\n                                onChange={\n                                    scripts_select.length === scripts.length\n                                        ? resetScriptSelect\n                                        : selectedAllRow\n                                }\n                                checked={!!scripts_select.length}\n                            />\n\n                            <DownIcon className='down-icon-suffix' />\n                        </div>\n                    </div>\n                ),\n        });\n\n        // eslint-disable-next-line\n    }, [scripts_select, scripts]);\n\n    useEffect(() => {\n        resetScriptSelect();\n    }, [fbPageId]);\n\n    const onChange = async (pagination: TablePaginationConfig, filters: any, sorter: any) => {\n        const sort = sorter.columnKey;\n        const direction =\n            sorter.order === 'descend' ? 'desc' : sorter.order === 'ascend' ? 'asc' : undefined;\n\n        await dispatch(\n            changeFilter({\n                sort,\n                direction,\n                page,\n                limit,\n            }),\n        );\n        await dispatch(loadLivestreams());\n    };\n\n    const resetScriptSelect = () => {\n        setScriptsSelect([]);\n    };\n    const selectedAllRow = () => {\n        setScriptsSelect(scripts);\n    };\n\n    const renderFooter = (currentPageData: any) => {\n        return (\n            <div className='table-footer'>\n                Hiển thị kết quả từ {(page - 1) * limit + 1} -{' '}\n                {page * limit > total ? total : page * limit} trong tổng {total}\n            </div>\n        );\n    };\n\n    return (\n        <>\n            <Table\n                size='middle'\n                columns={columns}\n                dataSource={scripts}\n                rowSelection={{\n                    type: 'checkbox',\n                    ...rowSelection,\n                }}\n                rowKey={(item) => item._id}\n                onChange={onChange}\n                sortDirections={['ascend', 'descend']}\n                loading={loading}\n                pagination={false}\n                rowClassName={(record, index) =>\n                    index % 2 !== 0 ? 'table-row-dark' : 'table-row-light'\n                }\n                footer={renderFooter}\n            />\n        </>\n    );\n};\n\nexport default ScriptTable;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/select-option-delivery.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/constant_url.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/shipping-list.tsx",["1790","1791","1792","1793","1794","1795","1796","1797"],"import { Button, Checkbox, Table } from 'antd';\nimport { compact, flatten, pick } from 'lodash';\nimport React, { FC, memo, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport shippingApi from '../../api/shipping-api';\nimport { API_URI } from '../../configs/vars';\nimport formatMoney from '../../utils/format-money';\n\nexport interface IService {\n    id: string;\n    name: string;\n    ServiceID: string;\n    shiper: {\n        id: string;\n    };\n    price: number;\n}\n\ninterface Props {\n    order: any;\n    changeShip: (order: any) => void;\n    disabled?: boolean;\n    edit?: boolean;\n    updateIsEditShip: () => void;\n}\n\nconst formatShips = (ships: any[]) =>\n    ships.map((ship: any) => {\n        const { info, shipmentFees } = ship;\n\n        const ship_items = shipmentFees.map((s: any) => ({\n            avatar: info.avatar,\n            serviceId: info.id,\n            transportType: s.transportType,\n            shipmentFee: s.total,\n            name: info.name,\n        }));\n\n        return compact(ship_items);\n    });\n\nconst Shipping: FC<Props> = ({\n    order,\n    changeShip,\n    edit = false,\n    disabled = false,\n    updateIsEditShip,\n}): JSX.Element => {\n    const [loading, setLoading] = useState(false);\n\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n    const [ships, setShips] = useState<any>([]);\n\n    const loadShipping = async () => {\n        setLoading(true);\n        try {\n            const response = await shippingApi.servicesTransport({\n                storeId: store._id,\n                token: token.accessToken,\n                data: {\n                    toProvinceId: order.customer.province,\n                    toDistrictId: order.customer.district,\n                    toWardId: order.customer.ward,\n                    warehouseId: order.warehouseId._id,\n                    weight: order.products.reduce(\n                        (value: number, o: any) => o.productId.weight * o.count + value,\n                        0\n                    ),\n                    length: 20,\n                    width: 20,\n                    height: 10,\n                },\n            });\n\n            const format_ships = formatShips(response);\n\n            const res_ships = flatten(format_ships).map((s: any, i: number) => ({\n                ...s,\n                key: i,\n            }));\n\n            setShips(res_ships);\n\n            const ship_exist = res_ships.find(\n                (ship: any) =>\n                    order.deliveryOptions.serviceId == ship.serviceId &&\n                    order.deliveryOptions.transportType == ship.transportType\n            );\n\n            if (ship_exist) {\n                const shipmentFeeForCustomer =\n                    !order.deliveryOptions.shipmentFeeForCustomer ||\n                    ship_exist.shipmentFee > order.deliveryOptions.shipmentFeeForCustomer\n                        ? 0\n                        : order.deliveryOptions.shipmentFeeForCustomer;\n\n                const newOrder = {\n                    ...order,\n\n                    deliveryOptions: {\n                        ...order.deliveryOptions,\n                        ...pick(ship_exist, ['serviceId', 'transportType', 'shipmentFee']),\n                        shipmentFeeForCustomer,\n                    },\n                };\n\n                changeShip(newOrder);\n            }\n\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n\n    const updateFeeShip = () => {\n        const valid =\n            order.customer.province &&\n            order.customer.district &&\n            order.customer.ward &&\n            order.warehouseId &&\n            order.products.length > 0;\n\n        if (valid) {\n            updateIsEditShip();\n            loadShipping();\n        }\n    };\n\n    useEffect(() => {\n        const valid =\n            order.customer.province &&\n            order.customer.district &&\n            order.customer.ward &&\n            order.warehouseId &&\n            order.products.length > 0;\n\n        if (valid) {\n            loadShipping();\n        }\n    }, []);\n\n    const columns = [\n        {\n            title: '',\n            dataIndex: '',\n            key: 'x',\n            render: (ship: any) => {\n                const checked =\n                    order.deliveryOptions.serviceId == ship.serviceId &&\n                    order.deliveryOptions.transportType == ship.transportType;\n                return <Checkbox style={{ margin: 0 }} checked={checked} disabled={disabled} />;\n            },\n        },\n        {\n            title: 'Hãng',\n            dataIndex: 'avatar',\n            key: 'avatar',\n            render: (avatar: string) => {\n                return <img src={`${API_URI}/store${avatar}`} style={{ width: 100 }} />;\n            },\n        },\n        {\n            title: 'Gói',\n            dataIndex: 'transportType',\n            key: 'transportType',\n            render: (transportType: any) => {\n                if (transportType == 1) return 'Nhanh';\n                if (transportType == 2) return 'Tiêu chuẩn';\n\n                return '';\n            },\n        },\n        {\n            title: 'Giá',\n            dataIndex: 'shipmentFee',\n            key: 'shipmentFee',\n            render: (shipmentFee: any) => {\n                return formatMoney(shipmentFee);\n            },\n        },\n    ];\n\n    const disableBtn =\n        !order.customer.province || !order.customer.district || !order.customer.ward || !edit;\n\n    return (\n        <>\n            <Table\n                loading={loading}\n                size='small'\n                onRow={(ship) => {\n                    return {\n                        onClick: () => {\n                            if (disabled) return;\n                            if (order.deliveryOptions.serviceId !== 0) {\n                                const shipmentFeeForCustomer =\n                                    !order.deliveryOptions.shipmentFeeForCustomer ||\n                                    ship.shipmentFee > order.deliveryOptions.shipmentFeeForCustomer\n                                        ? 0\n                                        : order.deliveryOptions.shipmentFeeForCustomer;\n\n                                const newOrder = {\n                                    ...order,\n\n                                    deliveryOptions: {\n                                        ...order.deliveryOptions,\n                                        ...pick(ship, [\n                                            'serviceId',\n                                            'transportType',\n                                            'shipmentFee',\n                                        ]),\n                                        shipmentFeeForCustomer,\n                                    },\n                                };\n\n                                changeShip(newOrder);\n                            }\n                        },\n                    };\n                }}\n                style={{ marginBottom: 20 }}\n                columns={columns}\n                bordered\n                dataSource={ships}\n                pagination={false}\n            />\n            <div style={{ textAlign: 'right' }}>\n                <Button onClick={updateFeeShip} type='primary' size='small' disabled={disableBtn}>\n                    Tính lại phí vận chuyển\n                </Button>\n            </div>\n        </>\n    );\n};\n\nexport default memo(Shipping);\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/order-address.tsx",["1798"],"import { Select, Form } from 'antd';\nimport { map } from 'lodash';\nimport React, { useEffect, useState } from 'react';\n\nimport locationApi from '../../api/location-api';\nimport { disabledAutosuggestion } from '../../utils/disabled-autosuggestion';\nimport { Province, District, Ward } from '../create-store/create-store-form';\nimport { formItemLayout, style } from './form-update-order';\n\ninterface Props {\n    changeAddress: (order: any) => void;\n    order: any;\n    disabled?: boolean;\n}\n\nconst OrderAddress = ({ changeAddress, order, disabled = false }: Props): JSX.Element => {\n    const [loadingProvince, setLoadingProvince] = useState(true);\n    const [provinceId, setProvinceId] = useState<string | undefined>(\n        order ? (order as any).customer.province : undefined\n    );\n    const [provinces, setProvinces] = useState<Province[]>([]);\n\n    const [districtId, setDistrictId] = useState<string | undefined>(\n        order ? (order as any).customer.district : undefined\n    );\n    const [loadingDistrict, setLoadingDistrict] = useState<boolean>(false);\n    const [districts, setDistricts] = useState<District[]>([]);\n\n    const [wardId, setWardId] = useState<string | undefined>(\n        order ? (order as any).customer.ward : undefined\n    );\n    const [wards, setWards] = useState<District[]>([]);\n    const [loadingWard, setLoadingWard] = useState<boolean>(false);\n\n    const [form] = Form.useForm();\n\n    const onChangeProvince = (value: string) => {\n        setProvinceId(value);\n        setDistrictId(undefined);\n        setWardId(undefined);\n        form.setFieldsValue({\n            districtId: undefined,\n            wardId: undefined,\n        });\n        const newOrder = {\n            ...(order as any),\n            customer: {\n                ...(order as any).customer,\n                province: value,\n                district: undefined,\n                ward: undefined,\n            },\n        };\n        changeAddress(newOrder);\n    };\n\n    const onChangeDistrict = (value: string) => {\n        setDistrictId(value);\n        setWardId(undefined);\n        form.setFieldsValue({\n            wardId: undefined,\n        });\n        const newOrder = {\n            ...(order as any),\n            customer: {\n                ...(order as any).customer,\n                district: value,\n                ward: undefined,\n            },\n        };\n        changeAddress(newOrder);\n    };\n\n    const onChangeWard = (value: string) => {\n        setWardId(value);\n\n        const newOrder = {\n            ...(order as any),\n            customer: {\n                ...(order as any).customer,\n                ward: value,\n            },\n        };\n        changeAddress(newOrder);\n    };\n\n    useEffect(() => {\n        async function getListProvinces() {\n            try {\n                const response = await locationApi.getProvinces();\n\n                setProvinces(response);\n                setLoadingProvince(false);\n            } catch (error) {\n                setProvinces([]);\n                setLoadingProvince(false);\n            }\n        }\n        getListProvinces();\n    }, []);\n\n    useEffect(() => {\n        async function getListDistricts() {\n            if (!provinceId) return null;\n            setLoadingDistrict(true);\n            try {\n                const response = await locationApi.getDistricts(provinceId);\n                setDistricts(response);\n                setLoadingDistrict(false);\n            } catch (error) {\n                setDistricts([]);\n                setLoadingDistrict(false);\n            }\n        }\n        getListDistricts();\n    }, [provinceId]);\n\n    useEffect(() => {\n        async function getListWard() {\n            if (!districtId) return null;\n            setLoadingWard(true);\n            try {\n                const response = await locationApi.getWards({\n                    provinceId,\n                    districtId,\n                });\n                setWards(response);\n                setLoadingWard(false);\n            } catch (error) {\n                setWards([]);\n                setLoadingWard(false);\n            }\n        }\n        getListWard();\n    }, [districtId]);\n\n    return (\n        <Form form={form}>\n            <Form.Item\n                label='Tỉnh/TP'\n                {...formItemLayout}\n                style={style}\n                rules={[{ required: true, message: 'Chọn Tỉnh/thành phố' }]}\n                name='provinceId'\n                initialValue={provinceId}\n            >\n                <Select\n                    loading={loadingProvince}\n                    placeholder='Tỉnh/thành phố'\n                    value={provinceId}\n                    onChange={onChangeProvince}\n                    disabled={disabled}\n                    onFocus={disabledAutosuggestion}\n                >\n                    {map(provinces, (province: Province) => (\n                        <Select.Option key={province.code} value={province.code}>\n                            {province.name}\n                        </Select.Option>\n                    ))}\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                label='Quận/Huyện'\n                {...formItemLayout}\n                style={style}\n                rules={[{ required: true, message: 'Chọn Quận/Huyện' }]}\n                name='districtId'\n                initialValue={districtId}\n            >\n                <Select\n                    style={{ width: '100%' }}\n                    placeholder='Quận/Huyện'\n                    value={districtId}\n                    loading={loadingDistrict}\n                    onChange={onChangeDistrict}\n                    disabled={disabled}\n                    onFocus={disabledAutosuggestion}\n                >\n                    {map(districts, (district: District) => (\n                        <Select.Option value={district.code} key={district.code}>\n                            {district.name}\n                        </Select.Option>\n                    ))}\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                label='Xã/Phường'\n                {...formItemLayout}\n                style={style}\n                rules={[{ required: true, message: 'Chọn Phường/Xã' }]}\n                name='wardId'\n                initialValue={wardId}\n            >\n                <Select\n                    style={{ width: '100%' }}\n                    placeholder='Phường/Xã'\n                    value={wardId}\n                    loading={loadingWard}\n                    onChange={onChangeWard}\n                    disabled={disabled || !order.customer.district}\n                    onFocus={disabledAutosuggestion}\n                >\n                    {map(wards, (ward: Ward) => (\n                        <Select.Option value={ward.code} key={ward.code}>\n                            {ward.name}\n                        </Select.Option>\n                    ))}\n                </Select>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default OrderAddress;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/discount.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/filter-detail.tsx",["1799","1800","1801","1802","1803"],"import moment from 'moment';\nimport React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CloseIcon } from '../../../assets/icon';\nimport { TagFilter } from '../../../components';\nimport { changeFilter, loadLivestreams } from '../../../reducers/livestreamState/livestreamAction';\nimport { dataActiveScript, dataStatusScript } from './data';\nimport './filter-detail.less';\n\ninterface Props {}\n\nconst momentFormat = 'DD/MM/YYYY';\n\nconst ScriptFilterDetail = (props: Props) => {\n    const dispatch = useDispatch();\n    const startTime: number | undefined = useSelector((state: any) => state.livestream.startTime);\n    const endTime: number | undefined = useSelector((state: any) => state.livestream.endTime);\n    const status: number | undefined = useSelector((state: any) => state.livestream.status);\n    const active: boolean | undefined = useSelector((state: any) => state.livestream.active);\n\n    const getActiveScriptTitle = (value: boolean) => {\n        let listValueDataActiveScript: Array<any> = Object.values(dataActiveScript);\n        return listValueDataActiveScript.filter((item: any) => item.id == value)?.[0]?.title || '';\n    };\n\n    const getStatusScriptTitle = (value: number) => {\n        return dataStatusScript?.[value]?.title || '';\n    };\n\n    const onClearTag = async (filterData: any) => {\n        await dispatch(changeFilter(filterData));\n        dispatch(loadLivestreams());\n    };\n\n    return (\n        <div className='advance-script-filter-detail'>\n            {status != undefined && (\n                <TagFilter\n                    closable\n                    onClose={() => onClearTag({ status: undefined })}\n                    closeIcon={<CloseIcon />}\n                >\n                    Trạng thái sử dụng: {getStatusScriptTitle(status)}\n                </TagFilter>\n            )}\n\n            {active != undefined && (\n                <TagFilter\n                    closable\n                    onClose={() => onClearTag({ active: undefined })}\n                    closeIcon={<CloseIcon />}\n                >\n                    Trạng thái kịch bản: {getActiveScriptTitle(active)}\n                </TagFilter>\n            )}\n\n            {(startTime != undefined || endTime != undefined) && (\n                <TagFilter\n                    closable\n                    onClose={() => onClearTag({ startTime: undefined, endTime: undefined })}\n                    closeIcon={<CloseIcon />}\n                >\n                    Khoảng thời gian: Từ {moment(startTime).format(momentFormat)} đến{' '}\n                    {moment(endTime).format(momentFormat)}\n                </TagFilter>\n            )}\n        </div>\n    );\n};\n\nexport default memo(ScriptFilterDetail);\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/add-product.tsx",["1804"],"import { FileImageOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Avatar, Button, Checkbox, Modal, Table } from 'antd';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { fetchProductsRequest } from '../../api/product-api';\nimport useModal from '../../hooks/use-modal';\nimport { IMG_URL } from '../../configs/vars';\n\ninterface Props {\n    order: any;\n    changeProduct: (order: any) => void;\n}\n\nconst LIMIT = 5;\n\nconst AddProuct: FC<Props> = ({ order, changeProduct }): JSX.Element => {\n    const token: any = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n\n    const { toggle, visible } = useModal();\n\n    const [dataSource, setDataSource] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [pageProduct, setPageProduct] = useState<number>(1);\n    const [total, setTotal] = useState<number>(0);\n\n    const handleFilter = async (page: number) => {\n        setLoading(true);\n        const response = await fetchProductsRequest({\n            token: token.accessToken,\n            storeId: store._id,\n            query: {\n                page,\n                limit: LIMIT,\n            },\n        });\n\n        const dataSource = response.data.map((d: any) => ({\n            ...d,\n            key: d._id,\n        }));\n\n        setDataSource(dataSource);\n        setTotal(response.total);\n        setLoading(false);\n    };\n\n    const handleSelectProduct = (product: any) => {\n        const exist = order.products.find((p: any) => p.productId._id === product._id);\n\n        if (exist) {\n            const products = order.products.filter((p: any) => p.productId._id !== product._id);\n            const newOrder = { ...order, products };\n\n            changeProduct(newOrder);\n        } else {\n            const newProduct = {\n                count: 1,\n                productId: {\n                    ...product,\n                },\n                price: product.price,\n            };\n\n            const products = [...order.products, newProduct];\n            const newOrder = { ...order, products };\n\n            changeProduct(newOrder);\n        }\n    };\n\n    const onChangePage = (page: number, pageSize?: number | undefined) => {\n        setPageProduct(page);\n        handleFilter(page);\n    };\n\n    useEffect(() => {\n        if (visible) {\n            handleFilter(pageProduct);\n        }\n    }, [visible]);\n\n    return (\n        <>\n            <Button icon={<PlusOutlined />} onClick={toggle}>\n                Sản phẩm\n            </Button>\n\n            <Modal\n                visible={visible}\n                footer={null}\n                title='Thêm sản phẩm'\n                onOk={toggle}\n                onCancel={toggle}\n                bodyStyle={{ width: '700px' }}\n                width='700'\n                centered={true}\n            >\n                <Table\n                    loading={loading}\n                    dataSource={dataSource}\n                    rowKey='_id'\n                    columns={[\n                        {\n                            title: '',\n                            dataIndex: '',\n                            key: 'check',\n                            render: ({ _id }: { _id: string }) => {\n                                const product = order.products.find(\n                                    (p: any) => p.productId._id === _id\n                                );\n                                const checked = !!product;\n                                return <Checkbox checked={checked} />;\n                            },\n                        },\n                        {\n                            title: 'Hình ảnh',\n                            dataIndex: 'images',\n                            key: 'image',\n                            render: (images) => {\n                                if (images.length === 0)\n                                    return (\n                                        <Avatar\n                                            icon={<FileImageOutlined />}\n                                            size='large'\n                                            shape='square'\n                                        />\n                                    );\n                                return (\n                                    <Avatar\n                                        src={`${IMG_URL}${images[0]}`}\n                                        size='large'\n                                        shape='square'\n                                    />\n                                );\n                            },\n                        },\n                        {\n                            title: 'Tên',\n                            dataIndex: 'name',\n                            key: 'name',\n                        },\n                        {\n                            title: 'Giá bán',\n                            dataIndex: 'price',\n                            key: 'price',\n                            render: (price) => {\n                                return `${price}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n                            },\n                        },\n\n                        {\n                            title: 'Khối lượng',\n                            dataIndex: 'weight',\n                            key: 'weight',\n                        },\n                    ]}\n                    onRow={(product) => {\n                        return {\n                            onClick: () => {\n                                handleSelectProduct(product);\n                            },\n                        };\n                    }}\n                    pagination={{\n                        onChange: onChangePage,\n                        current: pageProduct,\n                        total,\n                        pageSize: LIMIT,\n                    }}\n                />\n            </Modal>\n        </>\n    );\n};\n\nexport default AddProuct;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/note-for-delivery.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/order-detail/create-ship-order.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/warehouse-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/api/shipping-api.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/filter-script/index.tsx",["1805","1806","1807"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState, useMemo, memo } from 'react';\nimport { Popover, Button } from 'antd';\nimport FilterItem from './component/filter-item';\nimport { FilterOptions, FilterData } from './interface';\nimport { isEqual } from 'lodash';\nimport {\n    changeFilter,\n    loadLivestreams,\n} from '../../../../reducers/livestreamState/livestreamAction';\nimport { DownIcon } from '../../../../assets/icon';\n\nimport './index.less';\n\ninterface Props {}\n\nconst defaultFilterOptions: Array<FilterOptions> = [\n    { label: 'Chọn điều kiện lọc', value: 'default', used: false },\n    { label: 'Trạng thái kịch bản', value: 'active', used: false },\n    { label: 'Trạng thái sử dụng', value: 'status', used: false },\n    { label: 'Ngày tạo', value: 'date_created', used: false },\n];\n\nconst FilterScript = (props: Props) => {\n    const dispatch = useDispatch();\n    const startTime: number | undefined = useSelector((state: any) => state.livestream.startTime);\n    const endTime: number | undefined = useSelector((state: any) => state.livestream.endTime);\n    const status: number | undefined = useSelector((state: any) => state.livestream.status);\n    const active: number | undefined = useSelector((state: any) => state.livestream.active);\n    const [filterOptions, setFilterOptions] = useState<Array<FilterOptions>>(defaultFilterOptions);\n    const [filterData, setFilterData] = useState<Array<FilterData>>([]);\n    const [popoverVisible, setPopoverVisible] = useState<boolean>(false);\n\n    useEffect(() => {\n        let newFilterOptions: Array<FilterOptions> = defaultFilterOptions;\n        let newFilterData: Array<FilterData> = [];\n\n        if (active !== undefined) {\n            newFilterData.push({ key: 'active', value: active });\n            newFilterOptions = newFilterOptions.map((i: FilterOptions) => {\n                return i.value === 'active' ? { ...i, used: true } : i;\n            });\n        }\n\n        if (status !== undefined) {\n            newFilterData.push({ key: 'status', value: status });\n            newFilterOptions = newFilterOptions.map((i: FilterOptions) => {\n                return i.value === 'status' ? { ...i, used: true } : i;\n            });\n        }\n\n        if (startTime !== undefined || endTime !== undefined) {\n            newFilterData.push({ key: 'date_created', value: [startTime, endTime] });\n            newFilterOptions = newFilterOptions.map((i: FilterOptions) => {\n                return i.value === 'date_created' ? { ...i, used: true } : i;\n            });\n        }\n\n        if (!isEqual(newFilterOptions, filterOptions)) setFilterOptions(newFilterOptions);\n        if (newFilterData.length < 3)\n            newFilterData = [...newFilterData, { key: 'default', value: undefined }];\n        if (!isEqual(newFilterData, filterData)) setFilterData(newFilterData);\n    }, [status, active, startTime, endTime, popoverVisible]);\n\n    const onFilterKeyChange = (prevKey: string, nextKey: string) => {\n        let newFilterOptions: Array<FilterOptions> = filterOptions;\n        let newFilterData: Array<FilterData> = filterData;\n\n        newFilterOptions = newFilterOptions.map((i) => {\n            if (i.value === prevKey) return { ...i, used: false };\n            if (i.value === nextKey) return { ...i, used: true };\n\n            return i;\n        });\n\n        newFilterData = newFilterData.map((i) => {\n            if (i.key === prevKey) return { key: nextKey, value: undefined };\n\n            return i;\n        });\n\n        if (!isEqual(newFilterOptions, filterOptions)) setFilterOptions(newFilterOptions);\n        if (prevKey === defaultFilterOptions[0].value && newFilterData.length < 3)\n            newFilterData = [...newFilterData, { key: 'default', value: undefined }];\n        if (!isEqual(newFilterData, filterData)) setFilterData(newFilterData);\n    };\n\n    const onFilterValueChange = (key: string, nextValue: any) => {\n        let newFilterData: Array<FilterData> = filterData;\n\n        newFilterData = newFilterData.map((i) => {\n            if (i.key === key) return { ...i, value: nextValue };\n\n            return i;\n        });\n\n        if (!isEqual(newFilterData, filterData)) setFilterData(newFilterData);\n    };\n\n    const onRemoveFilterItem = (removedKey: string) => {\n        let newFilterData: Array<FilterData> = filterData;\n\n        newFilterData = newFilterData.filter((i) => i.key !== removedKey);\n\n        if (\n            newFilterData.length < 3 &&\n            newFilterData.filter((i) => i.key === 'default').length === 0\n        )\n            newFilterData = [...newFilterData, { key: 'default', value: undefined }];\n        if (!isEqual(newFilterData, filterData)) setFilterData(newFilterData);\n    };\n\n    const onSubmitFilter = async () => {\n        setPopoverVisible(false);\n\n        let submitFilterData: any = {\n            status: undefined,\n            startTime: undefined,\n            endTime: undefined,\n            active: undefined,\n        };\n\n        filterData\n            .filter((i) => i.key !== defaultFilterOptions[0].value)\n            .forEach((filterItemData) => {\n                if (filterItemData.key == 'date_created') {\n                    submitFilterData['startTime'] = filterItemData.value\n                        ? filterItemData.value[0]\n                        : undefined;\n                    submitFilterData['endTime'] = filterItemData.value\n                        ? filterItemData.value[1]\n                        : undefined;\n                } else submitFilterData[filterItemData.key] = filterItemData.value;\n            });\n\n        await dispatch(changeFilter(submitFilterData));\n        dispatch(loadLivestreams());\n    };\n\n    const overlayContent = useMemo(\n        () => (\n            <div>\n                <span className='advance-script-filter-lead-text'>Hiển thị kịch bản theo: </span>\n                <div className='advance-script-filter-items'>\n                    {filterData.map((filterItemData: FilterData, filterItemIndex: number) => (\n                        <FilterItem\n                            data={filterItemData}\n                            key={`filter-item-${filterItemIndex}`}\n                            options={filterOptions}\n                            onFilterKeyChange={(nextKey: string) =>\n                                onFilterKeyChange(filterItemData.key, nextKey)\n                            }\n                            onFilterValueChange={onFilterValueChange}\n                            onRemoveFilterItem={onRemoveFilterItem}\n                        />\n                    ))}\n                </div>\n                <div className='advance-script-filter-btn'>\n                    <Button type='primary' onClick={onSubmitFilter}>\n                        Lọc\n                    </Button>\n                </div>\n            </div>\n        ),\n        [filterOptions, filterData]\n    );\n\n    return (\n        <div className='advance-script-filter'>\n            <Popover\n                content={overlayContent}\n                trigger='click'\n                placement='bottom'\n                visible={popoverVisible}\n                onVisibleChange={setPopoverVisible}\n            >\n                <Button className='btn-trigger-popover'>\n                    Lọc kịch bản <DownIcon />\n                </Button>\n            </Popover>\n        </div>\n    );\n};\n\nexport default memo(FilterScript);\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/modal-chat.tsx",["1808","1809","1810"],"import { Col, Input, message, Modal, Row, Space, Tooltip } from 'antd';\nimport { findLast, get, isObject } from 'lodash';\nimport moment from 'moment';\nimport React, { FC, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n    loadConversation,\n    loadMessages,\n    sendPrivateReply,\n    sendReply,\n} from '../../../api/conversation-api';\nimport { ChatIcon, SendIcon } from '../../../assets/icon';\nimport { Loading } from '../../../components';\nimport useModal from '../../../hooks/use-modal';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { Comment, Message, useConversationDetail } from './context';\nimport MessageBubble from './message-bubble';\nimport ModalAnswers from './modal-answers';\nimport ModelEmoji from './modal-emoji';\nimport QuickmessageList from './quick-message-list';\n\ninterface Props {\n    name: string;\n    comment: Comment;\n}\n\nconst formatMessages = ({ arr, type }: { arr: any[]; type: number }): any =>\n    arr.map((item: any) => ({ ...item, type }));\n\nconst ModalChat: FC<Props> = ({ name, comment }): JSX.Element => {\n    const [messages, setMessage] = useState<Message[]>([]);\n    const [loading, setLoading] = useState(true);\n    const { visible, toggle } = useModal();\n    const [disabled, setDisabled] = useState(true);\n    const [show, setShow] = useState(false);\n    const messagesEndRef = useRef<any>(null);\n    const inputRefModal = useRef<any>();\n\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n\n    const page: any = useSelector(({ fanpage }: { fanpage: IFacebookState }) => fanpage.page);\n\n    const originSocketMessage: any = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.originSocketMessage\n    );\n\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n\n    const { textChat, changeTextChat } = useConversationDetail();\n    const toggleShowQuick = () => setShow(!show);\n\n    const scrollToBottom = () => {\n        if (messagesEndRef.current) {\n            messagesEndRef.current.scrollIntoView(false);\n        }\n    };\n\n    useEffect(() => {\n        if (\n            originSocketMessage &&\n            originSocketMessage.type === 1 &&\n            get(originSocketMessage, 'from.id') === get(comment, 'from.id')\n        ) {\n            setMessage([...messages, originSocketMessage]);\n        }\n    }, [originSocketMessage]);\n\n    useEffect(() => {\n        const newDate = moment(new Date());\n        let createDate = moment(comment.created_time);\n        if (messages.length === 0 && newDate.diff(createDate, 'days', true) <= 1) {\n            return setDisabled(false);\n        }\n\n        if (messages.length > 0) {\n            const message = findLast(messages, (o) => o.from.id !== page.fbObjectId);\n            if (isObject(message)) {\n                createDate = moment(message.created_time);\n\n                if (newDate.diff(createDate, 'days', true) <= 1) {\n                    return setDisabled(false);\n                }\n            }\n        }\n\n        setDisabled(true);\n    }, [messages]);\n\n    useEffect(() => {\n        if (visible) {\n            const fetchData = async () => {\n                const responses = await loadConversation({\n                    storeId: store._id,\n                    token: token.accessToken,\n                    fbPageIds: [conversation.fbPageId],\n                    query: `type=1&fbUserId=${comment.from.id}`,\n                });\n                if (responses.data.length > 0) {\n                    const dataMessage = await loadMessages({\n                        storeId: store._id,\n                        token: token.accessToken,\n                        fbPageId: conversation.fbPageId,\n                        fbObjectId: responses.data[0].fbObjectId,\n                    });\n                    setMessage(\n                        formatMessages({\n                            arr: dataMessage.data,\n                            type: 1,\n                        }).reverse()\n                    );\n                    setLoading(false);\n                } else {\n                    setLoading(false);\n                }\n            };\n            fetchData();\n        }\n    }, [visible]);\n\n    useLayoutEffect(() => scrollToBottom, [messages, loading]);\n\n    useLayoutEffect(() => {\n        if (inputRefModal.current) {\n            inputRefModal.current.focus();\n        }\n    }, [textChat]);\n\n    const renderMessages = () => {\n        if (loading) return <Loading full />;\n\n        return messages.map((message: any) => {\n            return (\n                <MessageBubble\n                    me={message.from.id === conversation.fbPageId}\n                    userId={comment.from.id}\n                    type={1}\n                    message={message}\n                    key={message.id}\n                />\n            );\n        });\n    };\n\n    const handlePrivateReply = () => {\n        sendPrivateReply({\n            storeId: store._id,\n            fbPageId: conversation.fbPageId,\n            token: token.accessToken,\n            commentId: comment.id,\n            text: textChat,\n        })\n            .then((res: any) => {\n                const newMessages = [...messages];\n                newMessages.push({\n                    from: {\n                        name: page.name,\n                        email: '',\n                        id: conversation.fbPageId,\n                    },\n                    id: conversation.fbPageId,\n                    created_time: `${new Date()}`,\n                    type: 2,\n                    message: textChat,\n                });\n                setMessage(newMessages);\n            })\n            .catch((error) => {\n                message.error('Đã có lỗi xảy ra!');\n            });\n    };\n\n    const handleKeyPress = () => {\n        sendReply({\n            text: textChat,\n            fbPageId: conversation.fbPageId,\n            token: token.accessToken,\n            storeId: store._id,\n            id: conversation.fbUserId,\n            type: 1,\n            fbObjectId: conversation.fbObjectId,\n        })\n            .then((res: any) => {\n                const message: Message = {\n                    from: {\n                        email: '',\n                        id: conversation.fbPageId,\n                        name: page.name,\n                    },\n                    id: conversation.fbPageId,\n                    created_time: `${new Date()}`,\n                    type: 1,\n                    message: textChat,\n                };\n                const newMessages = [...messages];\n                newMessages.push(message);\n                setMessage(newMessages);\n            })\n            .catch((error) => {\n                message.error('Đã có lỗi xảy ra!');\n            });\n    };\n\n    const sendMessage = (isValid: any) => {\n        if (show) {\n            return toggleShowQuick();\n        }\n\n        if (isValid) {\n            changeTextChat('');\n            if (messages.length > 0) {\n                return handleKeyPress();\n            }\n            return handlePrivateReply();\n        }\n        return null;\n    };\n\n    const handleSendMessage = () => {\n        const isValid = !show && textChat.trim();\n        sendMessage(isValid);\n    };\n\n    const handleEnterMessage = (e: any) => {\n        const isValid = e.shiftKey !== true && e.key === 'Enter';\n\n        sendMessage(isValid && !show && textChat.trim());\n    };\n\n    const onChangeText = (e: any) => {\n        if (e.target.value.length === 0) {\n            setShow(false);\n        }\n        if (e.target.value[0] === '/') {\n            setShow(true);\n        }\n\n        if (show) {\n            changeTextChat((e.target.value as string).trim());\n        } else {\n            changeTextChat(e.target.value as string);\n        }\n    };\n\n    const handleCancel = () => {\n        changeTextChat('');\n        toggle();\n    };\n\n    const placeholder = () => {\n        if (messages.length > 0) {\n            const message = findLast(messages, (o) => o.from.id !== page.fbObjectId);\n            if (!isObject(message)) {\n                return 'Bạn chỉ có thể tiếp tục nhắn tin sau khi nhận được phản hồi của khách hàng';\n            }\n        }\n\n        return disabled\n            ? 'Bạn chỉ có thể phản hồi tin nhắn của khách hàng trong vòng 24h'\n            : 'Viết tin nhắn....(Enter để gửi tin và Shift + Enter để xuống hàng)';\n    };\n\n    return (\n        <>\n            <Tooltip placement='top' title='Nhắn tin'>\n                <div onClick={toggle} className='bubble_action-item'>\n                    <ChatIcon />\n                </div>\n            </Tooltip>\n            <Modal\n                title={`Nhắn tin đến: ${name}`}\n                visible={visible}\n                onCancel={handleCancel}\n                onOk={toggle}\n                footer={null}\n                bodyStyle={{ padding: '0' }}\n            >\n                <div className='conversation-detail conversation-detail-modal'>\n                    <div className='conversation-detail-list conversation-detail-list-modal'>\n                        {renderMessages()}\n                        <div ref={messagesEndRef} />\n                    </div>\n                </div>\n\n                <div className='conversation-detail-action'>\n                    <div className='action-bottom'>\n                        <Space>\n                            <ModalAnswers chat={true} />\n                        </Space>\n                    </div>\n                    <div className='box-reply'>\n                        {show && (\n                            <QuickmessageList\n                                chat={true}\n                                toggle={toggleShowQuick}\n                                textFilter={textChat}\n                            />\n                        )}\n\n                        <Row align='middle' gutter={10}>\n                            <Col style={{ flex: 1 }}>\n                                <div className='wrap-input'>\n                                    <Input\n                                        ref={inputRefModal}\n                                        autoFocus\n                                        onChange={onChangeText}\n                                        onKeyPress={handleEnterMessage}\n                                        className='input'\n                                        value={textChat}\n                                        disabled={loading || disabled}\n                                        placeholder={placeholder()}\n                                    />\n                                    <div className='emoji-btn'>\n                                        <ModelEmoji chat={true} />\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col>\n                                <span\n                                    className={\n                                        textChat.length === 0 ? 'send-btn disable' : 'send-btn'\n                                    }\n                                >\n                                    <SendIcon\n                                        style={{ fontSize: 20 }}\n                                        onClick={textChat.length === 0 ? null : handleSendMessage}\n                                    />\n                                </span>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default ModalChat;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/delete-comment.tsx",["1811","1812"],"import { message, Modal, Tooltip } from 'antd';\nimport { isEmpty } from 'lodash';\nimport React, { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteComment } from '../../../api/conversation-api';\nimport { TrashIcon } from '../../../assets/icon';\nimport { IAuthState } from '../../../reducers/authState/authReducer';\nimport {\n    removeConversation,\n    setNullForConversation,\n    updateMainCommentConversation,\n} from '../../../reducers/fanpageState/fanpageAction';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { IStoreState } from '../../../reducers/storeState/storeReducer';\nimport { Comment, useConversationDetail } from './context';\n\ninterface Props {\n    comment: Comment;\n}\n\nconst DeleteComment: FC<Props> = ({ comment }): JSX.Element => {\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n    const store = useSelector(({ store }: { store: IStoreState }) => store.store);\n\n    const token: any = useSelector(({ auth }: { auth: IAuthState }) => auth.token);\n\n    const { deleteMessage, getComments } = useConversationDetail();\n\n    const dispatch = useDispatch();\n\n    const showDeleteConfirm = () => {\n        Modal.confirm({\n            title: 'Xóa bình luận?',\n            content: 'Bạn chắc chắn muốn xóa bình luận này?',\n            okText: 'Xóa bình luận',\n            okType: 'danger',\n            cancelText: 'Hủy',\n            width: 450,\n            onOk() {\n                handleDeleteComment();\n            },\n            onCancel() {},\n        });\n    };\n\n    const handleDeleteComment = async () => {\n        try {\n            const res = await deleteComment({\n                commentId: comment.id,\n                fbPageId: conversation.fbPageId,\n                storeId: store._id,\n                token: token.accessToken,\n                conversationId: conversation._id,\n            });\n            deleteMessage(comment);\n            if (comment.id === conversation.fbObjectId) {\n                if (isEmpty(conversation.commentIds)) {\n                    dispatch(setNullForConversation());\n                    dispatch(\n                        removeConversation({\n                            conversationId: conversation._id,\n                        })\n                    );\n                } else {\n                    const fbObjectId = (conversation.commentIds || []).shift() || '';\n                    dispatch(\n                        updateMainCommentConversation({\n                            conversationId: conversation._id,\n                            fbObjectId,\n                            commentIds: conversation.commentIds || [],\n                        })\n                    );\n                }\n                return;\n            } else if (\n                Array.isArray(conversation.commentIds) &&\n                conversation.commentIds.includes(comment.id)\n            ) {\n                dispatch(\n                    updateMainCommentConversation({\n                        conversationId: conversation._id,\n                        fbObjectId: conversation.fbObjectId,\n                        commentIds: conversation.commentIds.filter((id) => id !== comment.id),\n                    })\n                );\n            }\n        } catch (error) {\n            message.error('Đã có lỗi xảy ra!');\n        }\n    };\n\n    return (\n        <Tooltip placement='top' title='Xóa bình luận'>\n            <div className='bubble_action-item'>\n                <TrashIcon onClick={showDeleteConfirm} />\n            </div>\n        </Tooltip>\n    );\n};\n\nexport default DeleteComment;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/like-comment.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/hide-comment.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/quick-message-list.tsx",["1813"],"import { SettingFilled } from '@ant-design/icons';\nimport { Col, Row } from 'antd';\nimport { filter } from 'lodash';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { IConversation, IFacebookState } from '../../../reducers/fanpageState/fanpageReducer';\nimport { QuickMessageInterface } from '../../../reducers/setting/interfaces';\nimport { IState as SettingState } from '../../../reducers/setting/settingReducer';\nimport { useConversationDetail } from './context';\nimport QuickMessageItem from './quick-message-item';\n\ninterface Props {\n    toggle: () => void;\n    textFilter?: string;\n    chat?: boolean;\n}\n\nconst QuickmessageList: FC<Props> = ({ toggle, textFilter = '', chat = false }): JSX.Element => {\n    const { changeText, changeTextChat } = useConversationDetail();\n    const [index, setIndex] = useState(0);\n\n    const quickMessage = useSelector(\n        ({ setting }: { setting: SettingState }) => setting.quickMessage\n    );\n\n    const conversation: IConversation = useSelector(\n        ({ fanpage }: { fanpage: IFacebookState }) => fanpage.conversation\n    );\n\n    const quickMessageArr = Object.keys(quickMessage).map((key: string) => ({\n        ...quickMessage[key],\n    }));\n\n    const handMoveSelect = React.useCallback(\n        (e) => {\n            const leng_answers = quickMessageArr.length;\n\n            if (e.code === 'ArrowDown') {\n                if (index === leng_answers - 1) return null;\n                return setIndex(index + 1);\n            }\n\n            if (e.code === 'ArrowUp') {\n                if (index === 0) return null;\n                return setIndex(index - 1);\n            }\n\n            if (e.code === 'Enter') {\n                const answer = messages[index];\n                if (answer) {\n                    if (!chat) {\n                        changeText('');\n                        let message = (answer.message as string).trim();\n\n                        if (conversation.type === 2) {\n                            message = message.replace(\n                                /{FULL_NAME}/gi,\n                                `{${conversation.fbUsername || ''}}`\n                            );\n                        } else {\n                            message = message.replace(\n                                /{FULL_NAME}/gi,\n                                conversation.fbUsername || ''\n                            );\n                        }\n\n                        return changeText(message);\n                    } else {\n                        changeTextChat('');\n                        return changeTextChat(\n                            (answer.message as string)\n                                .trim()\n                                .replace(/{FULL_NAME}/gi, conversation.fbUsername || '')\n                        );\n                    }\n                } else {\n                    toggle();\n                    if (!chat) {\n                        return changeText(`${textFilter}`);\n                    } else {\n                        return changeTextChat(`${textFilter}`);\n                    }\n                }\n            }\n\n            return null;\n        },\n        [index, quickMessage]\n    );\n\n    useEffect(() => {\n        document.addEventListener('keydown', handMoveSelect);\n\n        return () => {\n            document.removeEventListener('keydown', handMoveSelect);\n        };\n    }, [handMoveSelect]);\n\n    const messages = filter(quickMessage, (message: QuickMessageInterface) =>\n        (message.shortcut as string).includes(textFilter.substring(1))\n    );\n\n    return (\n        <div className='quick-messages'>\n            <Row align='middle' justify='space-between' style={{ background: '#eee', padding: 10 }}>\n                <Col>Sử dụng ↑ hoặc ↓ để di chuyển [enter để chọn]</Col>\n                <Col>\n                    <Link to='/customer/other/setting'>\n                        <SettingFilled /> Cài đặt\n                    </Link>\n                </Col>\n            </Row>\n            {messages.map((message: QuickMessageInterface, i: number) => {\n                return (\n                    <QuickMessageItem\n                        chat={chat}\n                        active={index === i}\n                        key={message._id}\n                        message={message}\n                        toggleModal={toggle}\n                        conversation={conversation}\n                        fbUsername={conversation.fbUsername}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nexport default QuickmessageList;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/quick-message-item.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-detail/modal-emoji.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/setup-reply.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/step-nav.tsx",["1814","1815","1816","1817"],"import React, { useState } from 'react';\nimport { Link } from 'react-scroll';\nimport { CheckOutlined } from '@ant-design/icons';\nimport { useNewLiveStream } from './context';\n\ninterface Props {}\n\nconst steps: any[] = [\n    {\n        title: 'Thiết lập chung',\n        number: 0,\n        to: '0',\n    },\n    {\n        title: 'Tạo từ khóa',\n        number: 1,\n        to: '1',\n    },\n    {\n        title: 'Tạo cú pháp',\n        number: 2,\n        to: '2',\n    },\n    {\n        title: 'Trả lời tự động',\n        number: 3,\n        to: '3',\n    },\n    {\n        title: 'Kích hoạt',\n        number: 4,\n        to: '4',\n    },\n];\n\nconst Step = ({\n    done = false,\n    step,\n    handleSetCurrent,\n}: {\n    step: { to: string; title: string; number: number };\n    done: boolean;\n    handleSetCurrent: (number: number) => void;\n}) => {\n    const { livestream } = useNewLiveStream();\n\n    const active = () => {\n        if (step.number == 0) {\n            return true;\n        }\n\n        if (step.number == 1) {\n            if (livestream.keywords.length > 0) return true;\n            return false;\n        }\n\n        if (step.number == 2) {\n            if (livestream.syntax === 1) return true;\n            return false;\n        }\n\n        if (step.number == 3) {\n            if (livestream.autoReplyIfCommentIsCorrect || livestream.autoReplyIfCommentIsIncorrect)\n                return true;\n            return false;\n        }\n\n        return false;\n    };\n\n    const className = `step ${done ? 'done' : ''} ${active() ? 'active' : ''}`;\n\n    const onSetActive = (e: any) => {\n        const numberScroll: number = parseInt(e);\n\n        handleSetCurrent(numberScroll);\n    };\n\n    return (\n        <Link\n            to={step.to}\n            spy={true}\n            activeClass='active'\n            onSetActive={onSetActive}\n            smooth={true}\n            duration={500}\n            offset={-20}\n            containerId='containerElement'\n        >\n            <div className={className}>\n                <span className='title'>{step.title}</span>\n                <span className='number'>{active() ? <CheckOutlined /> : step.number + 1}</span>\n            </div>\n        </Link>\n    );\n};\n\nconst Scroll = (props: Props) => {\n    const [current, setCurrent] = useState(0);\n\n    const handleSetCurrent = (number: number) => {\n        setCurrent(number);\n    };\n\n    return (\n        <div className='steps-nav'>\n            {steps.map((step: any) => {\n                return (\n                    <Step\n                        key={step.number}\n                        handleSetCurrent={handleSetCurrent}\n                        done={step.number <= current}\n                        step={step}\n                    />\n                );\n            })}\n\n            <div className='progress'>\n                <div className='inner' style={{ width: `${current * 25}%` }} />\n            </div>\n        </div>\n    );\n};\n\nexport default Scroll;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/quick-message/index.tsx",["1818","1819"],"import { InputNumber, Table, Tag } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport React, { ReactNode, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { deleteQuickMessageAction, loadQuickMessageAction } from '../../../actions/setting';\nimport useModal from '../../../hooks/use-modal';\nimport { FanpageStateInterface, QuickMessageInterface } from '../../../reducers/setting/interfaces';\nimport Action from './actions';\nimport QuickMessageHeader from './header';\nimport QuickMessageModal from './modal';\nimport ModalCopyMessage from './modal-copy-message';\nimport './style.less';\n\nfunction QuickMessage(): JSX.Element {\n    const dispatch = useDispatch();\n    const { pages, page } = useSelector((state: any) => state.fanpage);\n    const loading = useSelector((state: any) => state.setting.loading);\n    const quickMessage = useSelector((state: any) => state.setting.quickMessage);\n    const { visible, toggle } = useModal();\n    const [isShowModalCopy, setShowModalCopy] = useState(false);\n    const [dataSource, setDataSource] = useState<QuickMessageInterface[]>([]);\n    const [currentPage, setCurrentPage] = useState<FanpageStateInterface>(() => {\n        if (Object.keys(pages).length === 0) return undefined;\n\n        if (page) return page;\n\n        const firstPage = Object.keys(pages)[0];\n\n        return pages[firstPage];\n    });\n\n    const [selectedRowKeys, setSelectedRowKeys] = useState<string[]>([]);\n\n    const [currentItem, setCurrentItem] = useState<QuickMessageInterface>();\n    const quickMessages: QuickMessageInterface[] = Object.values(quickMessage);\n\n    useEffect(() => {\n        if (currentPage) {\n            dispatch(\n                loadQuickMessageAction({\n                    pageId: currentPage.fbObjectId,\n                    storeId: currentPage.storeId,\n                })\n            );\n        }\n    }, [loadQuickMessageAction, currentPage]);\n\n    useEffect(() => {\n        setDataSource(quickMessages);\n    }, [quickMessage]);\n\n    const handleChangePage = (pageId: string) => {\n        setCurrentPage(pages[pageId]);\n    };\n\n    const handleDelete = (quickId: string) => {\n        dispatch(\n            deleteQuickMessageAction({\n                quickId,\n                pageId: currentPage._id,\n                storeId: currentPage.storeId,\n            })\n        );\n    };\n\n    const handleShowModal = (val: any) => {\n        setCurrentItem((prevState) => ({ ...prevState, ...val }));\n        toggle();\n    };\n\n    const handleSearch = (val: string) => {\n        const filterTable = quickMessages.filter((o: any) =>\n            Object.keys(o).some((k) => String(o[k]).toLowerCase().includes(val.toLowerCase()))\n        );\n\n        setDataSource(filterTable);\n    };\n\n    const columns: ColumnsType<any> | undefined = [\n        {\n            title: <span className='th'>Phím tắt</span>,\n            dataIndex: 'shortcut',\n            key: 'shortcut',\n        },\n        {\n            title: <span className='th'>Tiêu đề</span>,\n            dataIndex: 'title',\n            key: 'title',\n            render: (title: string, record: any) => (\n                <Tag style={{ color: record.color }} color={record.backgroundColor}>\n                    {title}\n                </Tag>\n            ),\n        },\n        {\n            title: <span className='th'>Sắp xếp</span>,\n            dataIndex: 'order',\n            key: 'order',\n            render: (order: number) => {\n                return <InputNumber defaultValue={order} min={0} />;\n            },\n        },\n        {\n            title: <span className='th'>Tin nhắn</span>,\n            dataIndex: 'message',\n            key: 'message',\n        },\n        {\n            title: '',\n            align: 'right',\n            key: 'message',\n            render: (row: any): ReactNode => (\n                <Action\n                    onEdit={() => handleShowModal({ ...row, mode: 'update' })}\n                    onDelete={() => handleDelete(row._id)}\n                />\n            ),\n        },\n    ];\n\n    const onSelectChange = (ids: any) => {\n        setSelectedRowKeys(ids);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    return (\n        <div>\n            <QuickMessageHeader\n                defaultPage={currentPage && currentPage._id}\n                toggle={() => handleShowModal({ mode: 'create' })}\n                toggleModalCopy={() => setShowModalCopy(!isShowModalCopy)}\n                onSearch={handleSearch}\n                onChangePage={handleChangePage}\n            />\n            <div style={{ marginTop: 20 }}>\n                <Table\n                    dataSource={dataSource}\n                    columns={columns}\n                    rowSelection={rowSelection}\n                    rowKey='_id'\n                    loading={loading}\n                />\n            </div>\n\n            {currentPage && (\n                <>\n                    <QuickMessageModal\n                        visible={visible}\n                        toggle={toggle}\n                        data={{\n                            ...currentItem,\n                            pageId: currentPage.fbObjectId,\n                            storeId: currentPage.storeId,\n                        }}\n                        setCurrentItem={setCurrentItem}\n                    />\n                    <ModalCopyMessage\n                        quickAnswerIds={selectedRowKeys}\n                        pageId={currentPage._id}\n                        storeId={currentPage.storeId}\n                        visible={isShowModalCopy}\n                        toggle={() => setShowModalCopy(!isShowModalCopy)}\n                    />\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default QuickMessage;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/setup-keyword.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/setup-livestream.tsx",["1820"],"import { Col, Form, Input, Radio, Row, Select, Avatar } from 'antd';\nimport { map } from 'lodash';\nimport React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNewLiveStream } from './context';\nimport { radioStyle, size } from './index';\nimport SelectVideo from './select-video';\nimport { PictureOutlined } from '@ant-design/icons';\nimport { generateUrlImgFb } from '../../../utils/generate-url-img-fb';\n\ninterface Props {}\n\nconst SetupLivestream = (props: Props) => {\n    const { setFbPageId, setNameLiveStream, setTypeLivestream, livestream } = useNewLiveStream();\n\n    const pages = useSelector((state: any) => state.fanpage.pages);\n    const changUseLivestream = (e: any) => {\n        setTypeLivestream(e.target.value);\n    };\n\n    const changeNameLivestream = (e: any) => {\n        setNameLiveStream(e.target.value);\n    };\n\n    const selectPage = (value: string) => {\n        setFbPageId(value);\n    };\n\n    return (\n        <div>\n            <Form.Item\n                label={<span className='label_form'>Chọn trang livestream</span>}\n                labelCol={{ span: 24 }}\n            >\n                <Select size={size} value={livestream.fbPageId} onChange={selectPage}>\n                    {map(pages, (page: any) => (\n                        <Select.Option key={page.fbObjectId} value={page.fbObjectId}>\n                            <Avatar\n                                size={25}\n                                src={generateUrlImgFb(page.fbObjectId, page.accessToken)}\n                            />\n                            <span style={{ marginLeft: 10, fontSize: 14, color: '#717171' }}>\n                                {page.name}\n                            </span>\n                        </Select.Option>\n                    ))}\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                label={\n                    <span className='label_form'>\n                        Lựa chọn video livestream áp dụng cho kịch bản này\n                    </span>\n                }\n                labelCol={{ span: 24 }}\n            >\n                <Row justify='space-between' align='bottom'>\n                    <Col>\n                        <Radio.Group value={livestream.type} onChange={changUseLivestream}>\n                            <Radio style={radioStyle} value={0}>\n                                Sử dụng cho video livestream sắp tới\n                            </Radio>\n\n                            <Radio style={{ ...radioStyle, marginTop: 15 }} value={1}>\n                                Sử dụng cho video livestream đã kết thúc\n                            </Radio>\n                        </Radio.Group>\n                    </Col>\n                    <Col>{livestream.type === 1 && <SelectVideo />}</Col>\n                </Row>\n            </Form.Item>\n\n            <Form.Item\n                label={<span className='label_form'>Tên kịch bản</span>}\n                labelCol={{ span: 24 }}\n            >\n                <Input\n                    size={size}\n                    value={livestream.name}\n                    onChange={changeNameLivestream}\n                    autoFocus\n                />\n            </Form.Item>\n        </div>\n    );\n};\n\nexport default memo(SetupLivestream);\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/setup-create-order.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/filter-tabs.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/note-create-order.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/context.tsx",["1821","1822"],"import { find } from 'lodash';\nimport moment from 'moment';\nimport React, { createContext, FC, ReactNode, useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPage } from '../../../reducers/livestreamState/livestreamAction';\nimport { templatesComment } from './comment-template';\nimport { templatesMessage } from './message-template';\nimport { templatesWrongKeyword } from './message-template-wrong-keyword';\nimport { templatesWrongPhone } from './message-template-wrong-phone';\n\ninterface Keyword {\n    productIds: string[];\n    keyword: string;\n}\n\nexport interface LivestreamType {\n    name: string;\n    type: 0 | 1;\n    keywords: Keyword[];\n    syntax: 0 | 1;\n    orderCreationType: 0 | 1 | 2;\n    autoReplyIfCommentIsCorrect: boolean;\n    autoReplyIfCommentIsIncorrect: boolean;\n    autoHideComments: boolean;\n    commentTemplate: string | undefined;\n    messageTemplate: string | undefined;\n    messageTemplateForWrongKeyword: string | undefined;\n    messageTemplateForWrongPhoneNo: string | undefined;\n    active: boolean;\n    status: 0 | 1 | 2 | 3 | 4;\n    videoId?: string;\n    fbPageId: string;\n}\n\nconst initial_livestream = {\n    fbPageId: undefined,\n    type: 0,\n    videoId: undefined,\n    name: undefined,\n    keywords: [],\n    syntax: 0,\n    orderCreationType: 0,\n    autoReplyIfCommentIsCorrect: false,\n    autoReplyIfCommentIsIncorrect: false,\n    autoHideComments: false,\n    commentTemplate: undefined,\n    messageTemplate: undefined,\n    messageTemplateForWrongKeyword: undefined,\n    messageTemplateForWrongPhoneNo: undefined,\n    active: false,\n};\n\nconst initialContext = {\n    livestream: initial_livestream,\n    setLiveStream: (livestream: any) => livestream,\n};\n\nconst NewLiveStreamContext = createContext(initialContext);\n\ninterface Props {\n    children: ReactNode;\n    script?: any;\n}\n\ninterface Params {\n    fbPageId?: string;\n    scriptId?: string;\n}\n\nexport const NewLiveStreamProvider: FC<Props> = ({ children, script }) => {\n    const dispatch = useDispatch();\n    const fbPageIdState = useSelector((state: any) => state.livestream.fbPageId);\n    const pages = useSelector((state: any) => state.fanpage.pages);\n\n    const [livestream, setLiveStream] = useState<any>(initial_livestream);\n\n    const value = {\n        livestream,\n        setLiveStream,\n    };\n\n    useEffect(() => {\n        async function initialSetUpContext() {\n            if (script) {\n                return setLiveStream(script);\n            }\n            const page = find(pages, (page: any) => page.fbObjectId === fbPageIdState);\n\n            if (page) {\n                const fbPageId = fbPageIdState ? fbPageIdState : page.fbObjectId;\n                const name = `Livestream ngày ${moment().format('DD/MM')} page ${page.name}`;\n\n                return setLiveStream({ ...livestream, fbPageId, name });\n            }\n\n            const arrPageIds = Object.keys(pages).map((pageId: string) => pageId);\n\n            if (arrPageIds.length > 0) {\n                const pageId = arrPageIds[0];\n                const fbPageId = pages[pageId].fbObjectId;\n\n                dispatch(selectPage(fbPageId));\n\n                const name = `Livestream ngày ${moment().format('DD/MM')} page ${\n                    pages[pageId].name\n                }`;\n\n                return setLiveStream({ ...livestream, fbPageId, name });\n            }\n\n            return null;\n        }\n\n        initialSetUpContext();\n    }, [pages]);\n\n    return <NewLiveStreamContext.Provider value={value}>{children}</NewLiveStreamContext.Provider>;\n};\n\nexport const useNewLiveStream = () => {\n    const { livestream, setLiveStream } = useContext(NewLiveStreamContext);\n    const pages = useSelector((state: any) => state.fanpage.pages);\n\n    const setFbPageId = (fbPageId: string) => {\n        const page = find(pages, (p: any) => p.fbObjectId === fbPageId);\n\n        setLiveStream({\n            ...livestream,\n            fbPageId,\n            name: page\n                ? `Livestream ngày ${moment().format('DD/MM')} page ${page.name}`\n                : undefined,\n        });\n    };\n\n    const setNameLiveStream = (name: string) => {\n        setLiveStream({\n            ...livestream,\n            name,\n        });\n    };\n\n    const setTypeLivestream = (type: boolean) => {\n        setLiveStream({\n            ...livestream,\n            type,\n        });\n    };\n\n    const addKeyword = (keyword: any) => {\n        setLiveStream({\n            ...livestream,\n            keywords: [...livestream.keywords, keyword],\n        });\n    };\n\n    const removeKeyword = (keywordIndex: number) => {\n        setLiveStream({\n            ...livestream,\n            keywords: livestream.keywords.filter(\n                (keyword: any, index: number) => index !== keywordIndex\n            ),\n        });\n    };\n\n    const updateKeyword = (keyword: any, keywordIndex: number) => {\n        const newKeywords = livestream.keywords.map((item: any, index: number) => {\n            if (keywordIndex === index) return keyword;\n            return item;\n        });\n\n        setLiveStream({\n            ...livestream,\n            keywords: newKeywords,\n        });\n    };\n\n    const setSyntaxWithPhone = (syntax: number) => {\n        const autoReplyIfCommentIsIncorrect = () => {\n            if (syntax === 0 && livestream.autoReplyIfCommentIsIncorrect) {\n                return false;\n            }\n\n            return livestream.autoReplyIfCommentIsIncorrect;\n        };\n        setLiveStream({\n            ...livestream,\n            syntax,\n            autoReplyIfCommentIsIncorrect: autoReplyIfCommentIsIncorrect(),\n        });\n    };\n\n    const setOrderCreationType = (orderCreationType: number) => {\n        setLiveStream({\n            ...livestream,\n            orderCreationType,\n        });\n    };\n\n    const setAutoReplyIfCommentIsCorrect = () => {\n        if (!livestream.autoReplyIfCommentIsCorrect) {\n            setLiveStream({\n                ...livestream,\n                autoReplyIfCommentIsCorrect: !livestream.autoReplyIfCommentIsCorrect,\n                messageTemplate: templatesMessage[0].text,\n                commentTemplate: templatesComment[0].text,\n            });\n        } else {\n            setLiveStream({\n                ...livestream,\n                autoReplyIfCommentIsCorrect: !livestream.autoReplyIfCommentIsCorrect,\n                messageTemplate: undefined,\n                commentTemplate: undefined,\n            });\n        }\n    };\n\n    const setAutoReplyIfCommentIsIncorrect = () => {\n        if (!livestream.autoReplyIfCommentIsIncorrect) {\n            setLiveStream({\n                ...livestream,\n                autoReplyIfCommentIsIncorrect: !livestream.autoReplyIfCommentIsIncorrect,\n                messageTemplateForWrongKeyword: templatesWrongKeyword[0].text,\n                messageTemplateForWrongPhoneNo: templatesWrongPhone[0].text,\n            });\n        } else {\n            setLiveStream({\n                ...livestream,\n                autoReplyIfCommentIsIncorrect: !livestream.autoReplyIfCommentIsIncorrect,\n                messageTemplateForWrongKeyword: undefined,\n                messageTemplateForWrongPhoneNo: undefined,\n            });\n        }\n    };\n\n    const setAutoHideComments = () => {\n        setLiveStream({\n            ...livestream,\n            autoHideComments: !livestream.autoHideComments,\n        });\n    };\n\n    const setCommentTemplate = (commentTemplate: string) => {\n        setLiveStream({\n            ...livestream,\n            commentTemplate,\n        });\n    };\n\n    const setMessageTemplate = (messageTemplate: string) => {\n        setLiveStream({\n            ...livestream,\n            messageTemplate,\n        });\n    };\n\n    const setTemplateCommentIsCorrect = ({\n        commentTemplate,\n        messageTemplate,\n    }: {\n        commentTemplate: string;\n        messageTemplate: string;\n    }) => {\n        setLiveStream({\n            ...livestream,\n            commentTemplate,\n            messageTemplate,\n        });\n    };\n\n    const setMessageTemplateForWrongKeyword = (messageTemplateForWrongKeyword: string) => {\n        setLiveStream({\n            ...livestream,\n            messageTemplateForWrongKeyword,\n        });\n    };\n\n    const setMessageTemplateForWrongPhoneNo = (messageTemplateForWrongPhoneNo: string) => {\n        setLiveStream({\n            ...livestream,\n            messageTemplateForWrongPhoneNo,\n        });\n    };\n\n    const setVideoId = (videoId?: string) => {\n        setLiveStream({\n            ...livestream,\n            videoId,\n        });\n    };\n\n    const resetLiveStream = () => {\n        setLiveStream(initial_livestream);\n    };\n\n    return {\n        livestream,\n        setLiveStream,\n        setFbPageId,\n        setNameLiveStream,\n        setTypeLivestream,\n        setSyntaxWithPhone,\n        setAutoReplyIfCommentIsCorrect,\n        setAutoReplyIfCommentIsIncorrect,\n        setAutoHideComments,\n        addKeyword,\n        removeKeyword,\n        updateKeyword,\n        setOrderCreationType,\n        setTemplateCommentIsCorrect,\n        setCommentTemplate,\n        setMessageTemplate,\n        setMessageTemplateForWrongKeyword,\n        setMessageTemplateForWrongPhoneNo,\n        setVideoId,\n        resetLiveStream,\n    };\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/card-title.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/add-product-form.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/filterId-post.tsx",["1823"],"import React, { FC, ReactElement, useState } from 'react';\nimport { Modal, Divider, Input, Button, message } from 'antd';\nimport { FileTextOutlined } from '@ant-design/icons';\n\nimport useModal from '../../../hooks/use-modal';\nimport FilterBarItem from './filter-bar-item';\nimport { EmultipleIcon } from '../../../assets/icon';\nimport guide from '../../../assets/guide-getlinkpost.png';\n\ninterface Props {\n    selected: string[];\n    onClick: (value: string, action: string, active: string) => void;\n}\n\nconst FilterIdPost: FC<Props> = ({ selected, onClick }): ReactElement => {\n    const [url, setUrl] = useState('');\n    const { visible, toggle } = useModal();\n\n    const handleClick = (isFiltered: boolean) => {\n        const queryString = url && url.split('?') ? url.split('?')[1] : '';\n        const urlParams = new URLSearchParams(queryString);\n        const postId = `${urlParams.get('id')}_${urlParams.get('story_fbid')}`;\n        if (!queryString || !urlParams.get('id') || !urlParams.get('story_fbid')) {\n            message.error('Link bài viết không hợp lệ');\n            return;\n        }\n        if (isFiltered) {\n            onClick(postId, 'add', 'post_id');\n        } else {\n            setUrl('');\n            onClick(postId, 'delete', 'post_id');\n        }\n        toggle();\n    };\n\n    const onChange = (e: { target: { value: React.SetStateAction<string> } }) => {\n        setUrl(e.target.value);\n    };\n\n    const handleReset = () => {\n        toggle();\n        setUrl('');\n    };\n\n    return (\n        <>\n            <FilterBarItem\n                onClick={toggle}\n                menu={{\n                    icon: <EmultipleIcon />,\n                    title: 'Tìm theo ID bài viết',\n                    active: 'post_id',\n                }}\n                selected={selected}\n            />\n            <Modal\n                width={450}\n                onCancel={toggle}\n                onOk={toggle}\n                visible={visible}\n                title='Tìm theo id bài viết'\n                footer={null}\n            >\n                <div>Hướng dẫn lấy link</div> <br />\n                <img\n                    style={{ display: 'block', width: '100%' }}\n                    src={guide}\n                    alt=''\n                />\n                <br />\n                <div>Nhập link bài viết:</div> <br />\n                <div>\n                    <Input autoFocus={visible} onChange={onChange} value={url} />\n                </div>\n                <Divider />\n                <div style={{ textAlign: 'right' }}>\n                    <Button\n                        type='primary'\n                        danger\n                        style={{ marginRight: 10 }}\n                        onClick={handleReset}\n                    >\n                        Hủy\n                    </Button>\n                    <Button type='primary' onClick={() => handleClick(true)}>\n                        Lọc\n                    </Button>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default FilterIdPost;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/shipping.tsx",["1824","1825","1826","1827","1828","1829","1830"],"import { Checkbox, Col, Row } from 'antd';\nimport FormItem from 'antd/lib/form/FormItem';\nimport { compact, flatten, pick } from 'lodash';\nimport React, { FC, memo, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport shippingApi from '../../../api/shipping-api';\nimport { Loading } from '../../../components';\nimport { API_URI } from '../../../configs/vars';\nimport formatMoney from '../../../utils/format-money';\nimport NoteForDelivery from '../../order-detail/note-for-delivery';\nimport { useOrder } from './context-order';\nimport './shipping.less';\n\nexport interface IService {\n    id: string;\n    name: string;\n    ServiceID: string;\n    shiper: {\n        id: string;\n    };\n    price: number;\n}\n\nconst Shipping: FC = (): JSX.Element => {\n    const { order, setOrder } = useOrder();\n    const [loading, setLoading] = useState(false);\n\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n    const [ships, setShips] = useState<any>(null);\n\n    const changeNoteForDelivery = (noteForDelivery: string) => {\n        const newOrder = {\n            ...order,\n            deliveryOptions: {\n                ...order.deliveryOptions,\n                noteForDelivery,\n            },\n        };\n        setOrder(newOrder);\n    };\n\n    useEffect(() => {\n        async function loadShipping() {\n            setLoading(true);\n            try {\n                const response = await shippingApi.servicesTransport({\n                    storeId: store._id,\n                    token: token.accessToken,\n                    data: {\n                        toProvinceId: order.customer.province,\n                        toDistrictId: order.customer.district,\n                        toWardId: order.customer.ward,\n                        warehouseId: order.warehouseId,\n                        weight: order.products.reduce(\n                            (value: number, o: any) => o.weight * o.count + value,\n                            0\n                        ),\n                        length: 20,\n                        width: 20,\n                        height: 10,\n                    },\n                });\n                setShips(response);\n                setLoading(false);\n            } catch (error) {\n                setLoading(false);\n            }\n        }\n\n        const valid =\n            order.customer.province &&\n            order.customer.district &&\n            order.customer.ward &&\n            order.warehouseId &&\n            order.products.length > 0;\n\n        if (valid) {\n            loadShipping();\n        }\n    }, [\n        order.customer.province,\n        order.customer.district,\n        order.customer.ward,\n        order.products,\n        order.warehouseId,\n    ]);\n\n    function handleUpdateShip(service: any) {\n        setOrder({\n            ...order,\n            shiper: service,\n            phi_van_chuyen: service ? service.price : 0,\n            order_type: 'use_carrier',\n        });\n    }\n\n    if (loading)\n        return (\n            <div className='ships'>\n                <Loading />\n            </div>\n        );\n\n    if (!ships) return <div />;\n\n    const formatShips = ships.map((ship: any) => {\n        const { info, shipmentFees } = ship;\n\n        const ship_items = shipmentFees.map((s: any) => ({\n            avatar: info.avatar,\n            serviceId: info.id,\n            transportType: s.transportType,\n            shipmentFee: s.total,\n            name: info.name,\n        }));\n\n        return compact(ship_items);\n    });\n\n    const mergeShipArr = flatten(formatShips).map((s: any, i: number) => ({\n        ...s,\n        key: i,\n    }));\n\n    return (\n        <>\n            <div className='ships'>\n                {mergeShipArr.map((ship: any) => {\n                    const selectShip = () => {\n                        const newOrder = {\n                            ...order,\n                            deliveryOptions: {\n                                ...order.deliveryOptions,\n                                ...pick(ship, ['serviceId', 'transportType', 'shipmentFee']),\n                            },\n                        };\n\n                        setOrder(newOrder);\n                    };\n\n                    const checked =\n                        order.deliveryOptions.serviceId == ship.serviceId &&\n                        order.deliveryOptions.transportType == ship.transportType;\n\n                    return (\n                        <div key={ship.key} className='ship' onClick={selectShip}>\n                            <Row gutter={5} justify='space-between' align='middle'>\n                                <Col span={3}>\n                                    <Checkbox checked={checked}></Checkbox>\n                                </Col>\n                                <Col span={9}>\n                                    <img\n                                        src={`${API_URI}/store${ship.avatar}`}\n                                        style={{ width: 80 }}\n                                    />\n                                </Col>\n                                <Col span={5}>\n                                    {ship.transportType == 1\n                                        ? 'Nhanh'\n                                        : ship.transportType == 2\n                                        ? 'Tiêu chuẩn'\n                                        : ''}\n                                </Col>\n                                <Col span={7} style={{ textAlign: 'right' }}>\n                                    {formatMoney(ship.shipmentFee)}đ\n                                </Col>\n                            </Row>\n                        </div>\n                    );\n                })}\n            </div>\n\n            <FormItem label='Ghi chú'>\n                <NoteForDelivery\n                    changeNoteForDelivery={changeNoteForDelivery}\n                    noteForDelivery={order.deliveryOptions.noteForDelivery}\n                />\n            </FormItem>\n        </>\n    );\n};\n\nexport default memo(Shipping);\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/order-product-row.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-customer/use-carrier.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/filter-labels.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/roles.ts",["1831"],"export interface IRole {\n    id: number;\n    title: string;\n}\n\nexport default {\n    1: {\n        id: 1,\n        title: 'Quản lý',\n    },\n    2: {\n        id: 2,\n        title: 'Nhân viên',\n    },\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/filter-date.tsx",["1832"],"import React, { FC, ReactElement, useState } from 'react';\nimport { Popover, DatePicker, Button } from 'antd';\nimport moment from 'moment';\nimport { TableOutlined } from '@ant-design/icons';\nimport FilterBarItem from './filter-bar-item';\nimport { ClockIcon } from '../../../assets/icon';\n\nconst { RangePicker } = DatePicker;\n\ninterface Props {\n    selected: string[];\n    onClick: (value: string, action: string, active: string) => void;\n}\n\nconst FilterDate: FC<Props> = ({ selected, onClick }): ReactElement => {\n    const dateFormat = 'DD/MM/YYYY';\n    const [visible, setVisible] = useState(false);\n    const [startDate, setStartDate] = useState(moment());\n    const [endDate, setEndDate] = useState(moment());\n    const [block, setBlock] = useState(false);\n\n    const toggle = () => {\n        setVisible(!visible);\n    };\n\n    const handleClick = (isFiltered: boolean) => {\n        const value = `${startDate.startOf('day').valueOf()}-${endDate.endOf('day').valueOf()}`;\n        if (isFiltered) {\n            onClick(value, 'add', 'date');\n        } else {\n            onClick(value, 'delete', 'date');\n        }\n        toggle();\n    };\n\n    const onChange = (value: any, dateString: any) => {\n        if (value) {\n            setBlock(false);\n            setStartDate(value[0]);\n            setEndDate(value[1]);\n        } else {\n            setBlock(true);\n        }\n    };\n\n    return (\n        <>\n            <Popover\n                content={\n                    <div>\n                        <div style={{ marginBottom: '10px' }}>Chọn khoảng thời gian cần tìm:</div>\n                        <RangePicker\n                            defaultValue={[\n                                moment(startDate, dateFormat),\n                                moment(endDate, dateFormat),\n                            ]}\n                            format={dateFormat}\n                            onChange={onChange}\n                        />\n                        <div style={{ textAlign: 'right', marginTop: '10px' }}>\n                            <Button\n                                type='primary'\n                                danger\n                                style={{ marginRight: 10 }}\n                                onClick={() => handleClick(false)}\n                            >\n                                Hủy\n                            </Button>\n                            <Button\n                                type='primary'\n                                onClick={() => handleClick(true)}\n                                disabled={block}\n                            >\n                                Lọc\n                            </Button>\n                        </div>\n                    </div>\n                }\n                placement='bottom'\n                trigger='click'\n                visible={visible}\n                onVisibleChange={toggle}\n            >\n                <div>\n                    <FilterBarItem\n                        menu={{\n                            icon: <ClockIcon />,\n                            title: 'Tìm theo thời gian',\n                            active: 'date',\n                        }}\n                        selected={selected}\n                    />\n                </div>\n            </Popover>\n        </>\n    );\n};\n\nexport default FilterDate;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/conversation-list/filter-bar-item.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/btn-save.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/btn-demo.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/customers-other/page.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/add-keyword-extra.tsx",["1833"],"import React from 'react';\n\nimport AddKeyword from './add-keyword';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { useNewLiveStream } from './context';\n\ninterface Props {}\n\nconst AddKeywordExtra = (props: Props) => {\n    const { livestream } = useNewLiveStream();\n\n    if (livestream.keywords.length === 0) return null;\n    return (\n        <AddKeyword>\n            <a>\n                <PlusOutlined /> Thêm mẫu\n            </a>\n        </AddKeyword>\n    );\n};\n\nexport default AddKeywordExtra;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/conversation/sidebar/sidebar-menu.tsx",["1834"],"import React, { ReactElement } from 'react';\n\nimport {\n    HomeOutlined,\n    MessageOutlined,\n    MailOutlined,\n    EyeInvisibleOutlined,\n    PhoneOutlined,\n    MobileOutlined,\n    ShakeOutlined,\n} from '@ant-design/icons';\n\nexport interface SidebarItemType {\n    icon: ReactElement;\n    title: string;\n    active: string;\n}\n\nconst parent: SidebarItemType[] = [\n    // { icon: 'sync', title: 'Bỏ lọc', handle: () => {} },\n    {\n        icon: <HomeOutlined />,\n        title: 'Tất cả hội thoại',\n        active: 'all',\n    },\n    {\n        icon: <MessageOutlined />,\n        title: 'Bình luận',\n        active: 'comment',\n    },\n    { icon: <MailOutlined />, title: 'Tin nhắn', active: 'message' },\n];\n\nconst chidlren: SidebarItemType[] = [\n    {\n        icon: <EyeInvisibleOutlined />,\n        title: 'Tin chưa đọc',\n        active: 'not_read',\n    },\n    {\n        icon: <PhoneOutlined />,\n        title: 'Tìm có số điện thoại',\n        active: 'has_phone',\n    },\n    {\n        icon: <MobileOutlined />,\n        title: 'Tìm không có số điện thoại',\n        active: 'not_phone',\n    },\n    {\n        icon: <ShakeOutlined />,\n        title: 'Tìm chưa trả lời',\n        active: 'not_answer',\n    },\n    // {\n    //   icon: 'table',\n    //   title: 'Tìm theo thời gian',\n    //   active: 'time'\n    // },\n    // {\n    //   icon: 'tag',\n    //   title: 'Tìm theo nhãn hội thoại',\n    //   active: 'label'\n    // },\n    // {\n    //   icon: 'file-text',\n    //   title: 'Tìm theo id bài viết',\n    //   active: 'id'\n    // }\n];\n\nexport default {\n    parent,\n    chidlren,\n};\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/filter-customer.tsx",["1835"],"import { DeleteOutlined } from '@ant-design/icons';\nimport { Button, Col, Input, Popover, Row, Select, Space } from 'antd';\nimport React, { FC, useEffect, useState } from 'react';\nimport { DownIcon } from '../../../assets/icon';\n\nimport { DataFilterItem } from './livestream-customer';\n\ninterface IFilterItem {\n    value: string;\n    title: string;\n    filters: any[];\n    value_filter?: any;\n}\n\ninterface FilterRowProps {\n    filter: IFilterItem;\n    updateFilter: (filter: any, item: any) => void;\n    removeFilter: (value: any) => void;\n}\n\nconst FilterRow: FC<FilterRowProps> = ({ filter, updateFilter, removeFilter }) => {\n    return (\n        <Row gutter={15} key={filter.value}>\n            <Col style={{ flex: 1 }}>\n                <Row gutter={15}>\n                    <Col>\n                        <Input value={filter.title} disabled />\n                    </Col>\n                    <Col style={{ flex: 1 }}>\n                        <Row justify='space-between' gutter={15}>\n                            {filter.filters.map((item: any) => (\n                                <Col key={item.title}>\n                                    <Button\n                                        block\n                                        type={\n                                            filter.value_filter &&\n                                            filter.value_filter.title === item.title\n                                                ? 'primary'\n                                                : 'default'\n                                        }\n                                        onClick={() => updateFilter(filter, item)}\n                                    >\n                                        {item.title}\n                                    </Button>\n                                </Col>\n                            ))}\n                        </Row>\n                    </Col>\n                </Row>\n            </Col>\n\n            <Col>\n                <Button\n                    icon={<DeleteOutlined />}\n                    onClick={() => removeFilter(filter.value)}\n                ></Button>\n            </Col>\n        </Row>\n    );\n};\n\ninterface Props {\n    handleFilter: (filters: any) => void;\n    filters: any[];\n    tabName: string;\n    dataDefaultFilter: DataFilterItem[];\n}\n\nconst FilterCustomer: FC<Props> = (props) => {\n    const [visible, setVisible] = useState(false);\n    const [filters, setFilters] = useState<IFilterItem[]>([]);\n\n    const [dataFilters, setDataFilters] = useState<DataFilterItem[]>(props.dataDefaultFilter);\n\n    const onSelectFilter = (value: any) => {\n        const filter = dataFilters.find((item) => item.value === value);\n\n        if (filter) {\n            setFilters([...filters, filter]);\n\n            const newDataFilters = dataFilters.map((item) => {\n                if (item.value === value) return { ...item, hide: true };\n                return item;\n            });\n            setDataFilters(newDataFilters);\n        }\n    };\n\n    const updateFilter = (filter: any, item: any) => {\n        const newFilter = filters.map((f: any) => {\n            if (f.value === filter.value) return { ...f, value_filter: item };\n            return f;\n        });\n        setFilters(newFilter);\n    };\n\n    const removeFilter = (value: any) => {\n        const newFilters = filters.filter((item: IFilterItem) => item.value !== value);\n\n        setFilters(newFilters);\n\n        const newDataFilters = dataFilters.map((item) => {\n            if (item.value !== value) return { ...item, hide: false };\n            return item;\n        });\n        setDataFilters(newDataFilters);\n    };\n\n    const toggle = () => setVisible(!visible);\n\n    const onFilter = () => {\n        const filterHasValue = filters.filter((item: any) => item.value_filter);\n        props.handleFilter(filterHasValue);\n        toggle();\n    };\n\n    const dataFiltersShow = dataFilters.filter((item: DataFilterItem) => !item.hide);\n\n    useEffect(() => {\n        setFilters(props.filters);\n        const values: string[] = props.filters.map((item: any) => item.value);\n\n        const newDataFilters = props.dataDefaultFilter.map((item) => {\n            if (values.includes(item.value)) return { ...item, hide: true };\n            return item;\n        });\n\n        setDataFilters(newDataFilters);\n    }, [props.filters]);\n\n    const overlayContent = (\n        <div>\n            <Space style={{ width: '100%' }} size={15} direction='vertical'>\n                <span>Hiển thị kịch bản theo: </span>\n\n                {filters.length > 0 && (\n                    <Space style={{ width: '100%' }} size={15} direction='vertical'>\n                        {filters.map((filter) => {\n                            return (\n                                <div key={filter.value}>\n                                    <FilterRow\n                                        filter={filter}\n                                        updateFilter={updateFilter}\n                                        removeFilter={removeFilter}\n                                    />\n                                </div>\n                            );\n                        })}\n                    </Space>\n                )}\n\n                {dataFiltersShow.length > 0 && (\n                    <Select value={'default'} onChange={onSelectFilter}>\n                        <Select.Option value='default'>Chọn điều kiện lọc</Select.Option>\n                        {dataFiltersShow.map((filter: any) => (\n                            <Select.Option value={filter.value} key={filter.value}>\n                                {filter.title}\n                            </Select.Option>\n                        ))}\n                    </Select>\n                )}\n\n                <Button type='primary' onClick={onFilter}>\n                    Lọc\n                </Button>\n            </Space>\n        </div>\n    );\n\n    return (\n        <Popover\n            content={overlayContent}\n            placement='bottomLeft'\n            trigger='click'\n            visible={visible}\n            onVisibleChange={toggle}\n        >\n            <Button block>\n                Lọc khách hàng <DownIcon />\n            </Button>\n        </Popover>\n    );\n};\n\nexport default FilterCustomer;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/livestream-customer-table.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/members/member-add-form.tsx",["1836","1837"],"import { Button, Form, Input, Select, message } from 'antd';\nimport { Store } from 'antd/lib/form/interface';\nimport { map, get } from 'lodash';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport staffApi from '../../api/staff-api';\nimport { loadStaffs } from '../../reducers/staffState/staffAction';\nimport roles, { IRole } from './roles';\n\nconst { Password } = Input;\n\ninterface IProps {\n    toggle: () => void;\n}\n\nfunction MemberAddForm({ toggle }: IProps): JSX.Element {\n    const dispatch = useDispatch();\n    const [form] = Form.useForm();\n    const [loading, setLoading] = useState(false);\n\n    const [isFullUser, setIsFullUser] = useState(false);\n    const reset = () => form.resetFields();\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n\n    const onFinish = async (values: Store) => {\n        setLoading(true);\n        try {\n            const response = await staffApi.createStaff({\n                data: {\n                    email: values.email,\n                    password: values.password,\n                    role: values.role,\n                    name: values.name,\n                },\n                storeId: store._id,\n                token: token.accessToken,\n            });\n            dispatch(loadStaffs());\n\n            setLoading(false);\n            message.success('Thêm nhân viên thành công');\n            reset();\n            toggle();\n        } catch (error) {\n            setLoading(false);\n            if (get(error, 'response.status') === 409) {\n                message.error('Email đã tồn tại trong hệ thống');\n            } else {\n                message.error('Lỗi thêm nhân viên');\n            }\n        }\n    };\n\n    if (isFullUser) {\n        return (\n            <div>\n                <p>\n                    Tài khoản của bạn đã thành viên. Để có thể thêm thành viên bạn có thể nâng cấp\n                    lên gói dịch vụ cao hơn.\n                </p>\n            </div>\n        );\n    }\n\n    return (\n        <Form layout='vertical' form={form} onFinish={onFinish}>\n            <Form.Item\n                label='Tên'\n                name='name'\n                rules={[{ required: true, message: 'Điền tên nhân viên' }]}\n            >\n                <Input placeholder='Tên nhân viên' />\n            </Form.Item>\n            <Form.Item\n                label='Email'\n                name='email'\n                rules={[\n                    { required: true, message: 'Điền email nhân viên' },\n                    {\n                        type: 'email',\n                        message: 'The input is not valid E-mail!',\n                    },\n                ]}\n            >\n                <Input placeholder='Email nhân viên' />\n            </Form.Item>\n            <Form.Item\n                label='Mật khẩu'\n                name='password'\n                rules={[{ required: true, message: 'Điền mật khẩu' }]}\n            >\n                <Password placeholder='Điền mật khẩu' />\n            </Form.Item>\n            <Form.Item\n                label='Vị trí'\n                name='role'\n                rules={[\n                    {\n                        required: true,\n                        message: 'Chọn vị trí cho nhân viên',\n                    },\n                ]}\n            >\n                <Select placeholder='Chọn vị trí'>\n                    {map(roles, (role: IRole) => (\n                        <Select.Option value={role.id} key={role.id}>\n                            {role.title}\n                        </Select.Option>\n                    ))}\n                </Select>\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType='button' onClick={toggle} style={{ marginRight: 15 }}>\n                    Hủy\n                </Button>\n                <Button type='primary' htmlType='submit' loading={loading}>\n                    Thêm\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default MemberAddForm;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/general/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/script-copy.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/comment/index.tsx",["1838"],"import React, { useState, useEffect } from 'react';\nimport { Switch, message, Row, Col } from 'antd';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport { getFacebookPageSetting, updateFacebookPageSetting } from '../../../api/setting';\nimport { useSelector } from 'react-redux';\nimport SelectPage from '../../report/form-filter/select-page';\nimport useHiddenModalExpired from '../../../hooks/use-hidden-modal-expired';\n\nconst style = { marginBottom: 5, marginRight: 10 };\n\nconst Comment = (): JSX.Element => {\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n    const pages = useSelector((state: any) => state.fanpage.pages);\n    const page = useSelector((state: any) => state.fanpage.page);\n\n    const [hideAllComments, setHideAllComment] = useState(false);\n    const [hidePhoneComments, setHidePhoneComments] = useState(false);\n    const [pageId, setPageId] = useState(page._id);\n    const [dataPage, setDataPage] = useState(page);\n    const { hiddenModalExpired } = useHiddenModalExpired();\n\n    useEffect(() => {\n        async function fetchFacebookPageSetting() {\n            try {\n                const res = await getFacebookPageSetting({\n                    storeId: store._id,\n                    fbPageId: dataPage.fbObjectId,\n                    token: token.accessToken,\n                });\n                if (res) {\n                    setHideAllComment(res.hideAllComments || false);\n                    setHidePhoneComments(res.hidePhoneComments || false);\n                } else {\n                    setHideAllComment(false);\n                    setHidePhoneComments(false);\n                }\n            } catch (error) {\n                message.error('Lỗi tải trang!');\n            }\n        }\n        fetchFacebookPageSetting();\n    }, [pageId]);\n\n    const onChangeHideAllComment = async (value: boolean) => {\n        try {\n            setHideAllComment(value);\n            if (value) {\n                setHidePhoneComments(!value);\n            }\n            await updateFacebookPageSetting({\n                storeId: store._id,\n                fbPageId: dataPage.fbObjectId,\n                token: token.accessToken,\n                data: {\n                    hideAllComments: value,\n                    hidePhoneComments: false,\n                },\n            });\n            message.success('Cài đặt thành công');\n        } catch (error) {\n            message.error('Cài đặt thất bại');\n        }\n    };\n\n    const onChangeHidePhoneComments = async (value: boolean) => {\n        try {\n            setHidePhoneComments(value);\n            if (value) {\n                setHideAllComment(!value);\n            }\n            await updateFacebookPageSetting({\n                storeId: store._id,\n                fbPageId: dataPage.fbObjectId,\n                token: token.accessToken,\n                data: {\n                    hideAllComments: false,\n                    hidePhoneComments: value,\n                },\n            });\n            message.success('Cài đặt thành công');\n        } catch (error) {\n            message.error('Cài đặt thất bại');\n        }\n    };\n\n    const selectPage = (pageId: string) => {\n        setPageId(pageId);\n        const pageSelected = Object.keys(pages)\n            .map((key: string) => pages[key])\n            .find((p: any) => p._id === pageId);\n        setDataPage(pageSelected);\n    };\n\n    const renderContent = () => {\n        return (\n            <div>\n                <Row gutter={15} style={style}>\n                    <Col>\n                        <p style={{ color: 'red', marginTop: 5 }}>\n                            Cài đặt tự động ẩn bình luận cho trang\n                        </p>\n                    </Col>\n                    <Col>\n                        <SelectPage selectPage={selectPage} valuePage={pageId} />\n                    </Col>\n                </Row>\n                <p style={style}>\n                    <Switch\n                        disabled={hiddenModalExpired}\n                        checkedChildren={<CheckOutlined />}\n                        unCheckedChildren={<CloseOutlined />}\n                        onChange={onChangeHideAllComment}\n                        checked={hideAllComments}\n                        style={style}\n                    />\n                    <span>Ẩn tất cả bình luận</span>\n                </p>\n                <p>\n                    <Switch\n                        disabled={hiddenModalExpired}\n                        checkedChildren={<CheckOutlined />}\n                        unCheckedChildren={<CloseOutlined />}\n                        onChange={onChangeHidePhoneComments}\n                        checked={hidePhoneComments}\n                        style={style}\n                    />\n                    <span>Chỉ ẩn những bình luận chứa số điện thoại</span>\n                </p>\n            </div>\n        );\n    };\n\n    return <>{renderContent()}</>;\n};\n\nexport default Comment;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/post.tsx",["1839"],"import { Avatar, Col, Row, Tooltip } from 'antd';\nimport { find } from 'lodash';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { TextEllipsis } from '../../../components';\nimport { generateUrlImgFb } from '../../../utils/generate-url-img-fb';\nimport VideoThumnail from './video-thumnail';\n\ninterface Props {\n    script: any;\n}\n\nconst Post = ({ script }: Props) => {\n    const pages = useSelector((state: any) => state.fanpage.pages);\n    const page = find(pages, (page: any) => page.fbObjectId === script.fbPageId);\n\n    if (!page) return <span>---</span>;\n\n    return (\n        <Row gutter={10} align='middle' justify='space-between'>\n            <Col>\n                <VideoThumnail video={script.video} />\n            </Col>\n\n            <Col style={{ flex: 1 }}>\n                <div>\n                    <a target='_blank' href={page.link}>\n                        <Row gutter={5}>\n                            <Col>\n                                <Avatar\n                                    size='small'\n                                    src={generateUrlImgFb(page.fbObjectId, page.accessToken)}\n                                />\n                            </Col>\n                            <Col>\n                                <Tooltip placement='top' title={page.name}>\n                                    <span>\n                                        <TextEllipsis width={78}>{page.name}</TextEllipsis>\n                                    </span>\n                                </Tooltip>\n                            </Col>\n                        </Row>\n                    </a>\n                </div>\n                <Tooltip\n                    placement='top'\n                    title={\n                        script.type === 0\n                            ? 'Áp dụng cho livestream sắp tới'\n                            : 'Áp dụng cho livestream đã kết thúc'\n                    }\n                >\n                    <span>\n                        <TextEllipsis width={112}>\n                            {script.type === 0\n                                ? 'Áp dụng cho livestream sắp tới'\n                                : 'Áp dụng cho livestream đã kết thúc'}\n                        </TextEllipsis>\n                    </span>\n                </Tooltip>\n            </Col>\n        </Row>\n    );\n};\n\nexport default Post;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/script-table-action.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/switch-active-script.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/data.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/filter-script/component/filter-item.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/shared.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/comment-template.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/message-template-wrong-keyword.tsx",["1840"],"import React, { useEffect } from 'react';\nimport SelectReply from './select-reply';\nimport { useNewLiveStream } from './context';\n\ninterface Props {}\n\nexport const templatesWrongKeyword = [\n    {\n        text: `Xin chào {{Name}}, Bình luận của bạn: “{{comment livestream}}” đang bị thiếu hoặc sai từ khóa sản phẩm. Vui lòng chat cho shop sản phẩm bạn muốn đặt mua nhé !`,\n        title: 'Mẫu 1',\n        id: '1',\n    },\n    {\n        text: `Xin chào {{Name}}, Từ khóa đặt hàng của bạn đang bị thiếu hoặc sai, bạn vui lòng chat cho shop tên sản phẩm bạn muốn đặt mua nhé!`,\n        title: 'Mẫu 2',\n        id: '2',\n    },\n    {\n        text: `{{Name}} ơi, bình luận của bạn đang bị thiếu hoặc sai từ khóa sản phẩm rồi nhé, bạn vui lòng gửi lại tên mã sản phẩm bạn muốn đặt mua qua inbox cho shop nha! Cảm ơn bạn!`,\n        title: 'Mẫu 3',\n        id: '3',\n    },\n];\n\nconst MessageTemplateWrongKeyword = (props: Props) => {\n    const { setMessageTemplateForWrongKeyword, livestream } = useNewLiveStream();\n\n    const changeMessageTemplateForWrongKeyword = (text: string) => {\n        setMessageTemplateForWrongKeyword(text);\n    };\n\n    return (\n        <div style={{ marginBottom: 20 }}>\n            <p style={{ color: '#1890ff', fontWeight: 500 }}>\n                Soạn nội dung tin nhắn gửi khách hàng khi bình luận có số điện thoại nhưng thiếu\n                hoặc sai từ khóa\n            </p>\n\n            <SelectReply\n                text={livestream.messageTemplateForWrongKeyword}\n                templates={templatesWrongKeyword}\n                changeTemplate={changeMessageTemplateForWrongKeyword}\n            />\n        </div>\n    );\n};\n\nexport default MessageTemplateWrongKeyword;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/message-template.tsx",["1841","1842","1843"],"import { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Checkbox, Tooltip } from 'antd';\nimport React from 'react';\nimport { useNewLiveStream } from './context';\nimport SelectReply from './select-reply';\n\ninterface Props {}\n\nexport const templatesMessage = [\n    {\n        text: `Cảm ơn quý khách {{Name}} đã đặt hàng, bạn vui lòng xác nhận đồng ý nhận hàng và gửi lại giúp shop địa chỉ nhận hàng để shop hoàn thiện thông tin gửi hàng cho bạn nhé.`,\n        title: 'Mẫu 1',\n        id: '1',\n    },\n    {\n        text: `Cảm ơn quý khách {{Name}} đã đặt hàng, đơn hàng của quý khách đã được tạo thành công, quý khách vui lòng xác nhận đồng ý nhận hàng để shop gửi về ạ.`,\n        title: 'Mẫu 2',\n        id: '2',\n    },\n    {\n        text: `Chào bạn, đơn hàng của bạn đã được tạo thành công. Nếu đồng ý nhận hàng, bạn vui lòng gửi tin nhắn xác nhận giúp shop nhé.`,\n        title: 'Mẫu 3',\n        id: '3',\n    },\n];\n\nconst MessageTemplate = (props: Props) => {\n    const { livestream, setMessageTemplate } = useNewLiveStream();\n\n    const changeMessageTemplate = (text: string) => {\n        setMessageTemplate(text);\n    };\n\n    return (\n        <div>\n            <p style={{ color: '#1890ff', fontWeight: 500 }}>\n                Soạn nội dung tin nhắn gửi cho khách\n            </p>\n\n            <SelectReply\n                templates={templatesMessage}\n                changeTemplate={changeMessageTemplate}\n                text={livestream.messageTemplate}\n            />\n\n            {/*\n            <div style={{ marginTop: 15 }}>\n                <p>\n                    <Checkbox>\n                        Gửi chi tiết đơn hàng của bạn\n                        <Tooltip\n                            title='Hỗ trợ gửi mẫu tin nhắn kèm trang chi tiết đơn hàng'\n                            placement='right'\n                        >\n                            <QuestionCircleOutlined style={{ marginLeft: 5 }} />\n                        </Tooltip>\n                    </Checkbox>\n                </p>\n            </div>\n             */}\n        </div>\n    );\n};\n\nexport default MessageTemplate;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/message-template-wrong-phone.tsx",["1844","1845","1846","1847"],"import React, { useEffect } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport SelectReply from './select-reply';\nimport { useNewLiveStream } from './context';\n\ninterface Props {}\n\nexport const templatesWrongPhone = [\n    {\n        text: `Xin chào {{Name}}, Bình luận của bạn: “{{comment livestream}}” đang bị thiếu hoặc sai số điện thoại. Vui lòng chat cho shop số điện thoại của bạn nhé !`,\n        title: 'Mẫu 1',\n        id: '1',\n    },\n    {\n        text: `Chào {{Name}}, nội dung bình luận của bạn đang bị thiếu hoặc sai số điện thoại. Để đặt hàng bạn vui lòng chat cho shop số điện thoại của bạn nhé! Cảm ơn bạn!`,\n        title: 'Mẫu 2',\n        id: '2',\n    },\n    {\n        text: `Hi {{Name}}, cảm ơn bạn đã quan tâm đến sản phẩm của shop, để hoàn tất đặt sản phẩm bạn vui lòng gửi cho shop số điện thoại nhé!`,\n        title: 'Mẫu 3',\n        id: '3',\n    },\n];\n\nconst MessageTemplateWrongPhone = (props: Props) => {\n    const { livestream, setMessageTemplateForWrongPhoneNo } = useNewLiveStream();\n\n    const changeMessageTemplateForWrongPhoneNo = (text: string) => {\n        setMessageTemplateForWrongPhoneNo(text);\n    };\n\n    return (\n        <div>\n            <p style={{ color: '#1890ff', fontWeight: 500 }}>\n                Soạn nội dung tin nhắn gửi khách hàng khi bình luận đúng từ khoá nhưng thiếu hoặc\n                sai số điện thoại\n            </p>\n\n            <SelectReply\n                templates={templatesWrongPhone}\n                changeTemplate={changeMessageTemplateForWrongPhoneNo}\n                text={livestream.messageTemplateForWrongPhoneNo}\n            />\n\n            {/*\n\n            <div style={{ marginTop: 15 }}>\n                <p>\n                    <Checkbox>\n                        Gửi chi tiết đơn hàng của bạn\n                        <Tooltip\n                            title='Hỗ trợ gửi mẫu tin nhắn kèm trang chi tiết đơn hàng'\n                            placement='right'\n                        >\n                            <QuestionCircleOutlined style={{ marginLeft: 5 }} />\n                        </Tooltip>\n                    </Checkbox>\n                </p>\n            </div>\n            */}\n        </div>\n    );\n};\n\nexport default MessageTemplateWrongPhone;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/report/table-chart/index.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/quick-message/actions.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/quick-message/header.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/quick-message/modal.tsx",["1848"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SketchPicker } from 'react-color';\nimport { Modal, Form, Input, Tag, Button, Space } from 'antd';\nimport {\n    BgColorsOutlined,\n    HighlightOutlined,\n    SaveOutlined,\n    CloseOutlined,\n} from '@ant-design/icons';\nimport { Store } from 'antd/lib/form/interface';\n\nimport { createQuickMessageAction, updateQuickMessageAction } from '../../../actions/setting';\n\ninterface IProps {\n    visible: boolean;\n    toggle: () => void;\n    data: any;\n    setCurrentItem: any;\n}\n\nconst tags = [\n    {\n        id: 1,\n        key: '{FULL_NAME}',\n        description: 'Chèn tên khách hàng dưới dạng \"mentions\"(Nhắc tới..)',\n    },\n];\n\nfunction QuickMessageModal({ visible, toggle, data = {}, setCurrentItem }: IProps): JSX.Element {\n    const dispatch = useDispatch();\n    const [title, setTitle] = useState({\n        title: '',\n        backgroundColor: '#87d068',\n        color: '#000',\n    });\n    const [isShow, setIsShow] = useState({\n        backgroundColor: false,\n        color: false,\n    });\n    const modalTitle = data.mode === 'update' ? 'Sửa phím tắt' : 'Thêm phím tắt';\n\n    useEffect(() => {\n        if (data.title) {\n            const { title, backgroundColor, color } = data;\n            setTitle({\n                title: title,\n                backgroundColor,\n                color,\n            });\n        }\n    }, [data.title]);\n\n    const resetForm = () => {\n        setCurrentItem();\n        setTitle({\n            title: '',\n            backgroundColor: '#87d068',\n            color: '#000',\n        });\n    };\n\n    const handleSubmit = async (val: Store) => {\n        try {\n            const fromData = {\n                pageId: data.pageId,\n                storeId: data.storeId,\n                data: {\n                    ...val,\n                    order: 1,\n                    ...title,\n                },\n                toggle,\n            };\n\n            if (data.mode === 'create') {\n                await dispatch(createQuickMessageAction(fromData));\n            } else if (data.mode === 'update') {\n                await dispatch(updateQuickMessageAction({ ...fromData, quickId: data._id }));\n            }\n\n            resetForm();\n        } catch (e) {}\n    };\n\n    const renderTags = (getFieldValue: any, setFieldsValue: any) => {\n        const oldMessage = getFieldValue('message');\n\n        return tags.map((tag) => (\n            <div key={tag.id} style={{ marginBottom: 10 }}>\n                <Tag\n                    color='processing'\n                    onClick={() => {\n                        setFieldsValue({\n                            message: oldMessage ? `${oldMessage} ${tag.key}` : tag.key,\n                        });\n                    }}\n                    className='quick-message-form-tag'\n                >\n                    {tag.key}\n                </Tag>\n                <span>{tag.description}</span>\n            </div>\n        ));\n    };\n\n    const closeSketchColor = () => {\n        setIsShow({\n            backgroundColor: false,\n            color: false,\n        });\n    };\n\n    const handleChangeBackground = (color: { hex: string }) => {\n        setTitle({ ...title, backgroundColor: color.hex });\n        closeSketchColor();\n    };\n\n    const handleChangeColor = (color: { hex: string }) => {\n        setTitle({ ...title, color: color.hex });\n        closeSketchColor();\n    };\n\n    const onCancel = () => {\n        resetForm();\n        toggle();\n    };\n\n    return (\n        <Modal\n            visible={visible}\n            onCancel={onCancel}\n            title={modalTitle}\n            width={640}\n            destroyOnClose\n            footer={null}\n        >\n            <Form className='quick-message-form' initialValues={data} onFinish={handleSubmit}>\n                {title.title && (\n                    <div className='quick-message-form-titletag'>\n                        <Tag style={{ color: title.color }} color={title.backgroundColor}>\n                            {title.title}\n                        </Tag>\n                    </div>\n                )}\n                <Form.Item style={{ marginBottom: 0 }}>\n                    <Form.Item\n                        name='title'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Điền tiêu đề tin nhắn.',\n                            },\n                        ]}\n                        style={{ display: 'inline-block', width: '50%' }}\n                    >\n                        <Input\n                            style={{ marginRight: 10 }}\n                            placeholder='Tiêu đề'\n                            onChange={(e: any) => setTitle({ ...title, title: e.target.value })}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        style={{ display: 'inline-block', width: '25%' }}\n                        name='backgroundColor'\n                    >\n                        <Button\n                            icon={<BgColorsOutlined />}\n                            style={{\n                                marginRight: 10,\n                            }}\n                            onClick={() => setIsShow({ ...isShow, backgroundColor: true })}\n                        >\n                            Chọn màu nền\n                        </Button>\n\n                        {isShow.backgroundColor && (\n                            <SketchPicker\n                                color={title.backgroundColor}\n                                onChangeComplete={handleChangeBackground}\n                            />\n                        )}\n                    </Form.Item>\n                    <Form.Item style={{ display: 'inline-block', width: '25%' }} name='color'>\n                        <Button\n                            icon={<HighlightOutlined />}\n                            style={{\n                                marginRight: 10,\n                            }}\n                            onClick={() => setIsShow({ ...isShow, color: true })}\n                        >\n                            Chọn màu chữ\n                        </Button>\n\n                        {isShow.color && (\n                            <SketchPicker\n                                color={title.color}\n                                onChangeComplete={handleChangeColor}\n                            />\n                        )}\n                    </Form.Item>\n                </Form.Item>\n                <Form.Item name='shortcut' rules={[{ required: true, message: 'Điền phím tắt.' }]}>\n                    <Input addonBefore='Phím tắt /' />\n                </Form.Item>\n                <Form.Item\n                    name='message'\n                    rules={[{ required: true, message: 'Nhập nội dung tin nhắn.' }]}\n                >\n                    <Input.TextArea placeholder='Nhập tin nhắn.'></Input.TextArea>\n                </Form.Item>\n                <Form.Item shouldUpdate>\n                    {({ getFieldValue, setFieldsValue }) => {\n                        return renderTags(getFieldValue, setFieldsValue);\n                    }}\n                </Form.Item>\n                <Form.Item noStyle>\n                    <Space>\n                        <Button icon={<CloseOutlined />} onClick={onCancel}>\n                            Huỷ\n                        </Button>\n                        <Button htmlType='submit' type='primary' icon={<SaveOutlined />}>\n                            Lưu\n                        </Button>\n                    </Space>\n                </Form.Item>\n            </Form>\n        </Modal>\n    );\n}\n\nexport default QuickMessageModal;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/quick-message/modal-copy-message.tsx",["1849","1850"],"import { CloseOutlined, CopyOutlined } from '@ant-design/icons';\nimport { Button, Form, message, Modal, Radio, Select, Space, Checkbox } from 'antd';\nimport { Store } from 'antd/lib/form/interface';\nimport { filter } from 'lodash';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport * as settingApi from '../../../api/setting';\nimport { Page } from '../../../reducers/fanpageState/fanpageReducer';\n\ninterface IProps {\n    visible: boolean;\n    toggle: () => void;\n    pageId: string;\n    storeId: string;\n    quickAnswerIds: string[];\n}\n\nconst { Option } = Select;\n\nfunction QuickMessageModal({\n    visible,\n    toggle,\n    pageId,\n    storeId,\n    quickAnswerIds,\n}: IProps): JSX.Element {\n    const [loading, setLoading] = useState(false);\n    const pages = useSelector((state: any) => state.fanpage.pages);\n    const quickMessages = useSelector((state: any) => state.setting.quickMessage);\n\n    const page = pages[pageId] as Page;\n\n    const handleSubmit = async (val: Store) => {\n        setLoading(true);\n\n        try {\n            const response = await settingApi.cloneQuickMessage({\n                storeId,\n                pageId: page.fbObjectId,\n                data: {\n                    fbPageId: val.fbPageId,\n                    copyAll: val.copyAll,\n                    replace: val.replace === 1,\n                    quickAnswerIds,\n                },\n            });\n            message.success('Sao chép thành công');\n            toggle();\n            setLoading(false);\n        } catch (error) {\n            message.error('Sao chép thất bại');\n            setLoading(false);\n        }\n    };\n\n    const filter_pages = filter(pages, (page: Page) => page._id !== pageId);\n\n    return (\n        <Modal\n            visible={visible}\n            title='Copy tin nhắn nhanh sang page khác'\n            destroyOnClose\n            onCancel={toggle}\n            footer={null}\n        >\n            <Form\n                className='quick-message-form'\n                onFinish={handleSubmit}\n                layout='vertical'\n                initialValues={{\n                    fbPageId: filter_pages.length > 0 ? filter_pages[0].fbObjectId : undefined,\n                    replace: 1,\n                    copyAll: quickAnswerIds.length === 0,\n                }}\n            >\n                <Form.Item\n                    name='fbPageId'\n                    label='Chọn page'\n                    rules={[{ required: true, message: 'Chọn page.' }]}\n                >\n                    <Select>\n                        {filter_pages.map((page: Page) => (\n                            <Option value={page.fbObjectId} key={page._id}>\n                                {page.name}\n                            </Option>\n                        ))}\n                    </Select>\n                </Form.Item>\n                <Form.Item name='replace'>\n                    <Radio.Group>\n                        <Radio value={1}>Thay thế danh sách đã có</Radio>\n                        <Radio value={2}>Thêm mới vào danh sách đã có</Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item name='copyAll' valuePropName='checked'>\n                    <Checkbox>Sao chép tất cả</Checkbox>\n                </Form.Item>\n\n                <Form.Item noStyle>\n                    <Space>\n                        <Button icon={<CloseOutlined />} onClick={toggle}>\n                            Huỷ\n                        </Button>\n                        <Button\n                            htmlType='submit'\n                            loading={loading}\n                            type='primary'\n                            icon={<CopyOutlined />}\n                        >\n                            Sao chép\n                        </Button>\n                    </Space>\n                </Form.Item>\n            </Form>\n        </Modal>\n    );\n}\n\nexport default QuickMessageModal;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/list-keyword.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/select-video.tsx",["1851"],"import { message, Modal, Radio } from 'antd';\nimport React, { useState } from 'react';\nimport useModal from '../../../hooks/use-modal';\nimport GetVideoForm from './get-video-form';\nimport { size } from './index';\nimport Videos from './videos';\nimport { useNewLiveStream } from './context';\n\ninterface Props {}\n\nconst SelectVideo = (props: Props) => {\n    const { setVideoId } = useNewLiveStream();\n    const [select_type, setSelectType] = useState(0);\n    const [videoId, handleSetVideoId] = useState<string | undefined>(undefined);\n\n    const { visible, toggle } = useModal();\n\n    const changeSelectType = (e: any) => {\n        setSelectType(parseInt(e.target.value));\n        handleSetVideoId(undefined);\n    };\n\n    const selectVideo = (video: string) => {\n        handleSetVideoId(video);\n    };\n\n    const applyVideo = () => {\n        if (videoId) {\n            setVideoId(videoId);\n            toggle();\n        } else {\n            message.error('Chưa chọn video livestream');\n        }\n    };\n\n    return (\n        <div>\n            <a onClick={toggle}>Chọn video</a>\n            <Modal\n                visible={visible}\n                onCancel={toggle}\n                okButtonProps={{\n                    size,\n                }}\n                cancelButtonProps={{\n                    size,\n                }}\n                okText='Áp dụng'\n                width={650}\n                title={'Lựa chọn video livestream đã kết thúc cho kịch bản'}\n                onOk={applyVideo}\n            >\n                <div style={{ display: 'grid', gridGap: 10 }}>\n                    <div>\n                        <Radio checked={select_type === 0} value={0} onChange={changeSelectType}>\n                            Tìm video livestream theo đường dẫn\n                        </Radio>\n                        {select_type === 0 && (\n                            <GetVideoForm selectVideo={selectVideo} videoId={videoId} />\n                        )}\n                    </div>\n\n                    <div>\n                        <Radio checked={select_type === 1} value={1} onChange={changeSelectType}>\n                            Lựa chọn video livestream của page (50 video livestream gần nhất)\n                        </Radio>\n                        {select_type === 1 && (\n                            <div style={{ margin: '7px 0px 15px 23px' }}>\n                                <Videos selectVideo={selectVideo} videoId={videoId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default SelectVideo;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/empty-keyword.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/demo.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/add-keyword.tsx",["1852","1853"],"import { Button, Col, Divider, Empty, Input, message, Modal, Row } from 'antd';\nimport React, { ReactElement, useCallback, useState } from 'react';\nimport { EmptyProduct } from '../../../assets/icon';\nimport useModal from '../../../hooks/use-modal';\nimport './add-keyword.less';\nimport AddProduct from './add-product';\nimport { useNewLiveStream } from './context';\nimport { ListProducts } from './list-keyword';\nimport SearchProducts from './search-products';\n\ninterface Props {\n    children: ReactElement;\n}\n\nconst size = 'large';\n\nconst SetupKeyWord = (props: Props) => {\n    const { visible, toggle } = useModal();\n    const { addKeyword, livestream } = useNewLiveStream();\n\n    const [show_list, setShowList] = useState(false);\n\n    const [products, setProducts] = useState<any[]>([]);\n    const [keyword, setKeyword] = useState('');\n\n    const validate = useCallback(() => {\n        if (products.length === 0) {\n            message.error('Bạn chưa chọn sản phẩm');\n            return false;\n        }\n\n        if (keyword.length === 0) {\n            message.error('Bạn chưa điền từ khóa');\n            return false;\n        }\n\n        if (\n            livestream.keywords.map((keywordItem: any) => keywordItem.keyword).indexOf(keyword) !==\n            -1\n        ) {\n            message.error('Từ khoá đã tồn tại');\n            return false;\n        }\n\n        return true;\n    }, [products, keyword, livestream.keywords]);\n\n    const addKeywordAndClose = () => {\n        if (!validate()) return;\n\n        addKeyword({\n            id: Date.now(),\n            keyword,\n            products,\n        });\n        setKeyword('');\n        setProducts([]);\n        toggle();\n    };\n\n    const addKeywordAndAddNew = () => {\n        if (!validate()) return;\n\n        addKeyword({\n            id: Date.now(),\n            keyword,\n            products,\n        });\n        setKeyword('');\n        setProducts([]);\n    };\n\n    const addProduct = (product: any) => {\n        if (\n            products.filter((item: any) =>\n                item.productId ? item.productId._id === product._id : item._id === product._id\n            ).length\n        ) {\n            message.warning('Sản phẩm này đã được chọn');\n\n            return;\n        }\n\n        const newProducts = [...products, product];\n\n        setProducts(newProducts);\n    };\n\n    const removeProduct = (productId: string) => {\n        const newProducts = products.filter((product: any) => product._id !== productId);\n\n        setProducts(newProducts);\n    };\n\n    const updateProduct = (productId: string, price: number) => {\n        const newProducts = products.map((product: any) => {\n            if (product._id === productId) {\n                product.price = price;\n            }\n            return product;\n        });\n        setProducts(newProducts);\n    };\n\n    const changeKeyword = (e: any) => {\n        setKeyword(e.target.value);\n    };\n\n    const addOtherService = () => {\n        const fakeId: number = products.filter((item) => item.type == 'service').length;\n        let newService: any = {\n            _id: `service-${fakeId + 1}`,\n            name: '',\n            price: 0,\n            type: 'service',\n        };\n\n        setProducts([...products, newService]);\n    };\n\n    const updateService = (productId: string, propertyChanged: any) => {\n        const newProducts = products.map((product: any) => {\n            if (product._id === productId) {\n                return { ...product, ...propertyChanged };\n            }\n            return product;\n        });\n        setProducts(newProducts);\n    };\n\n    const renderContent = () => {\n        if (show_list) {\n            return null;\n        }\n\n        if (products.length > 0) {\n            return (\n                <ListProducts\n                    className='selected-product-table'\n                    products={products}\n                    removeProduct={removeProduct}\n                    updateProduct={updateProduct}\n                    updateService={updateService}\n                />\n            );\n        }\n\n        return (\n            <Row justify='center' align='middle'>\n                <Col md={18}>\n                    <Empty\n                        image={<EmptyProduct className='icon-empty-product' />}\n                        description='Bạn chưa chọn sản phẩm nào. Vui lòng bấm vào ô tìm kiếm hoặc thêm mới sản phẩm để tạo từ khóa'\n                    />\n                </Col>\n            </Row>\n        );\n    };\n\n    return (\n        <div>\n            {React.cloneElement(props.children, { onClick: toggle })}\n\n            <Modal\n                visible={visible}\n                onCancel={toggle}\n                title='Chọn sản phẩm và tạo từ khóa tương ứng'\n                footer={null}\n                width={650}\n                wrapClassName='modal-add-keyword'\n            >\n                <Row justify='space-between' align='middle' style={{ marginBottom: 10 }}>\n                    <Col>\n                        <span className='label_form'>Chọn sản phẩm</span>\n                    </Col>\n\n                    <Col>\n                        <AddProduct addProduct={addProduct} />\n                    </Col>\n                </Row>\n\n                <SearchProducts\n                    setShowList={(value) => setShowList(value)}\n                    addProduct={addProduct}\n                />\n\n                {renderContent()}\n\n                {/* <div className=\"other-services\">\n                    <span onClick={addOtherService}>\n                        <PlusCircleOutlined /> Thêm dịch vụ khác\n                    </span>\n                </div> */}\n\n                <div style={{ marginTop: 20 }}>\n                    <span className='label_form'>Từ khóa đặt hàng</span>\n                    <br />\n                    <Input\n                        placeholder='Nhập từ khóa đặt hàng'\n                        style={{ margin: '10px 0' }}\n                        size={size}\n                        onChange={changeKeyword}\n                        value={keyword}\n                    />\n                    <br />\n\n                    <div className='secondary-paragraph'>\n                        Nếu bạn chọn sản phẩm là SON MAC thì nên đặt từ khóa tương ứng là “MAC”. Nếu\n                        sản phẩm là tai nghe Airpod thì từ khóa đặt hàng nên là “AIRPOD”.\n                    </div>\n                </div>\n\n                <Divider />\n\n                <Row gutter={15} justify='end' align='middle'>\n                    <Col span={6}></Col>\n                    <Col span={6}>\n                        <Button onClick={toggle} block>\n                            Hủy\n                        </Button>\n                    </Col>\n                    <Col span={6}>\n                        <Button block type='primary' onClick={addKeywordAndClose}>\n                            Lưu & Đóng\n                        </Button>\n                    </Col>\n                    <Col span={6}>\n                        <Button block type='primary' onClick={addKeywordAndAddNew}>\n                            Lưu và Thêm mới\n                        </Button>\n                    </Col>\n                </Row>\n            </Modal>\n        </div>\n    );\n};\n\nexport default SetupKeyWord;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/view-order-detail.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/context.tsx",["1854","1855"],"import React, { createContext, FC, ReactNode, useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport labelApi from '../../../api/label-api';\nimport { Loading } from '../../../components';\nimport { Page } from '../../../reducers/fanpageState/fanpageReducer';\n\ninterface IState {\n    loading: boolean;\n    page: string | null;\n    labels: any[];\n    labelIds: string[];\n}\n\nconst initialState: IState = {\n    loading: true,\n    page: null,\n    labels: [],\n    labelIds: [],\n};\n\nconst initialContext = {\n    state: initialState,\n    setState: (state: any): any => state,\n};\n\nconst Context = createContext(initialContext);\n\ninterface Props {\n    children: ReactNode;\n}\n\nconst ProviderLabelContext: FC<Props> = ({ children }): JSX.Element => {\n    const [state, setState] = useState(initialState);\n    const store = useSelector((state: any) => state.store.store);\n    const pages = useSelector((state: any) => state.fanpage.pages);\n    const page = useSelector((state: any) => state.fanpage.page);\n    const loading = useSelector((state: any) => state.fanpage.loading);\n\n    useEffect(() => {\n        if (page) {\n            setState({ ...state, page: page._id });\n        } else {\n            const keys: string[] = Object.keys(pages);\n            if (keys.length > 0) {\n                setState({ ...state, page: keys[0] });\n            }\n        }\n    }, []);\n\n    useEffect(() => {\n        async function loadLabels() {\n            try {\n                setState({ ...state, loading: true });\n                const data = {\n                    storeId: store._id,\n                    pageId: (pages[state.page as string] as Page).fbObjectId,\n                };\n\n                const labels = await labelApi.getListLabels(data);\n\n                return setState({ ...state, labels, loading: false });\n            } catch (error) {\n                return setState({ ...state, loading: false });\n            }\n        }\n\n        if (state.page) {\n            loadLabels();\n        }\n    }, [state.page]);\n\n    if (loading) return <Loading full />;\n\n    return <Context.Provider value={{ state, setState }}>{children}</Context.Provider>;\n};\n\nconst useContextLabel = () => {\n    const { state, setState } = useContext(Context);\n\n    const selectPage = (page: string) => {\n        setState({ ...state, page });\n    };\n\n    const setLabelIds = (labelIds: string[]) => {\n        setState({\n            ...state,\n            labelIds,\n        });\n    };\n\n    return {\n        ...state,\n        selectPage,\n        setLabelIds,\n    };\n};\n\nexport { ProviderLabelContext, useContextLabel };\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/header.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/label-table.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/select-reply.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/util.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/filter-script/component/right-side-commponents/status.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/filter-script/component/right-side-commponents/active.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/scripts/filter-script/component/right-side-commponents/date-created.tsx",["1856","1857","1858"],"import React, { memo, useState, useEffect } from 'react';\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\n\ninterface Props {\n    onChange?: Function;\n    value: any;\n}\n\nconst { RangePicker } = DatePicker;\n\nconst RightSideDateCreated = (props: Props) => {\n    const onChange = async (values: any) => {\n        const dates = values\n            ? [moment(values[0]).startOf('day').valueOf(), moment(values[1]).endOf('day').valueOf()]\n            : [undefined, undefined];\n\n        props.onChange && props.onChange(dates);\n    };\n\n    return (\n        <RangePicker\n            onChange={onChange}\n            value={props.value ? [moment(props.value[0]), moment(props.value[1])] : undefined}\n        />\n    );\n};\n\nexport default RightSideDateCreated;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/product-item.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/videos.tsx",["1859"],"import { Empty } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport livestreamApi from '../../../api/livestream-api';\nimport { Loading } from '../../../components';\nimport { useNewLiveStream } from './context';\nimport Video from './video';\n\ninterface Props {\n    videoId?: string;\n    selectVideo: (videoId: string) => void;\n}\n\nconst Videos = (props: Props) => {\n    const { livestream } = useNewLiveStream();\n    const store = useSelector((state: any) => state.store.store);\n    const [loading, setLoading] = useState(true);\n    const [videos, setVideos] = useState([]);\n\n    const handleSelectVideo = (videoId: string) => {\n        props.selectVideo(videoId);\n    };\n\n    useEffect(() => {\n        async function loadVideos(fbPageId: any) {\n            try {\n                setLoading(true);\n                const response = await livestreamApi.getVideos({\n                    storeId: store._id,\n                    fbPageId,\n                });\n                setVideos(response);\n                setLoading(false);\n            } catch (error) {\n                setLoading(false);\n            }\n        }\n\n        if (livestream.fbPageId) {\n            loadVideos(livestream.fbPageId);\n        }\n    }, []);\n\n    if (loading) return <Loading />;\n    if (videos.length === 0) return <Empty image={Empty.PRESENTED_IMAGE_DEFAULT} />;\n\n    return (\n        <div className='videos'>\n            {videos.map((video: any) => (\n                <Video\n                    key={video.id}\n                    video={video}\n                    active={video.id === props.videoId}\n                    onClick={handleSelectVideo}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Videos;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/edit-keyword.tsx",["1860","1861"],"import React, { useState, useEffect, useCallback } from 'react';\nimport { useNewLiveStream } from './context';\nimport useModal from '../../../hooks/use-modal';\n\nimport { size } from './index';\nimport { Button, Col, Divider, Empty, Input, Modal, Row, message } from 'antd';\nimport { ListProducts } from './list-keyword';\nimport SearchProducts from './search-products';\nimport AddProduct from './add-product';\nimport { EmptyProduct } from '../../../assets/icon';\n\nimport './add-keyword.less';\n\ninterface Props {\n    keyword: {\n        id: any;\n        keyword: string;\n        products: any[];\n    };\n    keywordIndex: number;\n}\n\nconst EditKeyword = ({ keyword, keywordIndex }: Props) => {\n    const [state, setState] = useState(keyword);\n    const [show_list, setShowList] = useState(false);\n\n    const { updateKeyword, removeKeyword, livestream } = useNewLiveStream();\n    const { visible, toggle } = useModal();\n\n    useEffect(() => {\n        setState(keyword);\n    }, [visible, keyword]);\n\n    const validate = useCallback(() => {\n        if (state.products.length === 0) {\n            message.error('Bạn chưa chọn sản phẩm');\n            return false;\n        }\n\n        if (state.keyword.length === 0) {\n            message.error('Bạn chưa điền từ khóa');\n            return false;\n        }\n\n        if (\n            livestream.keywords\n                .map((keywordItem: any) => keywordItem.keyword)\n                .filter(\n                    (keywordItem: any, index: number) =>\n                        index !== keywordIndex && keywordItem === state.keyword\n                ).length\n        ) {\n            message.error('Từ khoá đã tồn tại');\n            return false;\n        }\n\n        return true;\n    }, [state, livestream.keywords]);\n\n    const handlechangeKeyword = (e: any) => {\n        setState({\n            ...state,\n            keyword: e.target.value,\n        });\n    };\n\n    const handleRemoveKeyword = () => {\n        removeKeyword(keywordIndex);\n        toggle();\n    };\n\n    const handleSaveEdit = () => {\n        if (!validate()) return;\n\n        updateKeyword(state, keywordIndex);\n        toggle();\n    };\n\n    const addProduct = (product: any) => {\n        if (\n            state.products.filter((item: any) =>\n                item.productId ? item.productId._id === product._id : item._id === product._id\n            ).length\n        ) {\n            message.warning('Sản phẩm này đã được chọn');\n\n            return;\n        }\n\n        const newProducts = [...state.products, product];\n\n        setState({ ...state, products: newProducts });\n    };\n\n    const removeProduct = (productId: string) => {\n        const newProducts = state.products.filter((product: any) => {\n            let productData = product.productId ? product.productId : product;\n            return productData._id !== productId;\n        });\n\n        setState({ ...state, products: newProducts });\n    };\n\n    const updateProduct = (productId: string, price: number) => {\n        const newProducts = state.products.map((product: any) => {\n            let productData = product.productId ? product.productId : product;\n\n            if (productData._id === productId) {\n                product.price = price;\n            }\n            return product;\n        });\n        setState({ ...state, products: newProducts });\n    };\n\n    const updateService = (productId: string, propertyChanged: any) => {\n        const newProducts = state.products.map((product: any) => {\n            let productData = product.productId ? product.productId : product;\n\n            if (productData._id === productId) {\n                return { ...product, ...propertyChanged };\n            }\n            return product;\n        });\n        setState({ ...state, products: newProducts });\n    };\n\n    const renderContent = () => {\n        if (show_list) {\n            return null;\n        }\n\n        if (state.products.length > 0) {\n            return (\n                <ListProducts\n                    className='selected-product-table'\n                    products={state.products}\n                    removeProduct={removeProduct}\n                    updateProduct={updateProduct}\n                    updateService={updateService}\n                />\n            );\n        }\n\n        return (\n            <Row justify='center' align='middle'>\n                <Col md={18}>\n                    <Empty\n                        image={<EmptyProduct className='icon-empty-product' />}\n                        description='Bạn chưa chọn sản phẩm nào. Vui lòng bấm vào ô tìm kiếm hoặc thêm mới sản phẩm để tạo từ khóa'\n                    />\n                </Col>\n            </Row>\n        );\n    };\n\n    return (\n        <>\n            <a onClick={toggle}>{state.keyword}</a>\n\n            <Modal\n                visible={visible}\n                onCancel={toggle}\n                title='Chỉnh sửa mẫu nội dung đặt hàng'\n                footer={null}\n                wrapClassName='modal-add-keyword'\n            >\n                <Row justify='space-between' align='middle' style={{ marginBottom: 10 }}>\n                    <Col>\n                        <span className='label_form'>Chọn sản phẩm</span>\n                    </Col>\n\n                    <Col>\n                        <AddProduct addProduct={addProduct} />\n                    </Col>\n                </Row>\n\n                <SearchProducts\n                    setShowList={(value) => setShowList(value)}\n                    addProduct={addProduct}\n                />\n\n                {renderContent()}\n\n                <div style={{ marginTop: 20 }}>\n                    <span className='label_form'>Từ khóa đặt hàng</span>\n                    <br />\n                    <Input\n                        placeholder='Nhập từ khóa đặt hàng'\n                        style={{ margin: '10px 0' }}\n                        size={size}\n                        onChange={handlechangeKeyword}\n                        value={state.keyword}\n                    />\n                    <br />\n\n                    <div>\n                        Nếu bạn chọn sản phẩm là SON MAC thì nên đặt từ khóa tương ứng là “MAC”. Nếu\n                        sản phẩm là tai nghe Airpod thì từ khóa đặt hàng nên là “AIRPOD”.\n                    </div>\n                </div>\n\n                <Divider />\n\n                <Row justify='space-between' align='middle'>\n                    <Col>\n                        <Button type='primary' danger onClick={handleRemoveKeyword}>\n                            Xóa\n                        </Button>\n                    </Col>\n\n                    <Col>\n                        <Button onClick={toggle}>Hủy</Button>\n                        <Button type='primary' style={{ marginLeft: 15 }} onClick={handleSaveEdit}>\n                            Lưu lại\n                        </Button>\n                    </Col>\n                </Row>\n            </Modal>\n        </>\n    );\n};\n\nexport default EditKeyword;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/get-video-form.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/search-products.tsx",["1862"],"import { SearchOutlined } from '@ant-design/icons';\nimport { Input, Table } from 'antd';\nimport { debounce, pick } from 'lodash';\nimport React, { useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { useSelector } from 'react-redux';\nimport { fetchProductsRequest } from '../../../api/product-api';\nimport { Loading } from '../../../components';\nimport formatMoney from '../../../utils/format-money';\nimport ProductItem from './product-item';\n\ninterface Props {\n    setShowList: (value: boolean) => void;\n    addProduct: (product: any) => void;\n}\n\nconst LIMIT = 10;\n\nconst SearchProducts = (props: Props) => {\n    const [page, setPage] = useState(1);\n\n    const [text, setText] = useState('');\n    const [show, setShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [hasMore, setHasmore] = useState(true);\n    const [products, setProducts] = useState<any[]>([]);\n    const [total, setTotal] = useState(1);\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n\n    const loadProducts = async ({\n        textSearch,\n        page,\n        limit = LIMIT,\n    }: {\n        textSearch?: string;\n        page: number;\n        limit?: number;\n    }) => {\n        const res = await fetchProductsRequest({\n            token: token.accessToken,\n            storeId: store._id,\n            query: {\n                textSearch,\n                page,\n                limit,\n            },\n        });\n\n        return res;\n    };\n\n    const onChange = async (e: any) => {\n        const textSearch = e.target.value;\n        setText(textSearch);\n\n        handleSearchProduct(textSearch);\n    };\n\n    const handleSearchProduct = debounce(async (textSearch: string) => {\n        setShow(true);\n        props.setShowList(true);\n\n        try {\n            setLoading(true);\n\n            const response = await loadProducts({\n                textSearch,\n                page: 1,\n            });\n\n            setProducts(response.data);\n            setTotal(response.total);\n            setLoading(false);\n        } catch (error) {}\n    }, 300);\n\n    const onFocus = async () => {\n        setShow(true);\n        props.setShowList(true);\n        try {\n            setLoading(true);\n\n            const response = await loadProducts({\n                page: 1,\n            });\n\n            setProducts(response.data);\n            setTotal(response.total);\n            setLoading(false);\n        } catch (error) {}\n    };\n\n    const onBlur = () => {\n        setTimeout(() => {\n            setShow(false);\n            props.setShowList(false);\n        }, 300);\n    };\n\n    const handleInfiniteOnLoad = async () => {\n        const number = Math.ceil(total / LIMIT);\n\n        if (number === page) {\n            return;\n        }\n\n        const response = await loadProducts({\n            textSearch: text,\n            page: page + 1,\n        });\n\n        setProducts([...products, ...response.data]);\n        setTotal(response.total);\n        setPage(page + 1);\n        setLoading(false);\n    };\n\n    const renderContent = () => {\n        if (!show) return null;\n\n        if (loading) return <Loading />;\n\n        return (\n            <>\n                <div style={{ height: 215, overflow: 'auto' }}>\n                    <InfiniteScroll\n                        initialLoad={false}\n                        pageStart={0}\n                        loadMore={handleInfiniteOnLoad}\n                        hasMore={!loading && hasMore}\n                        threshold={20}\n                        useWindow={false}\n                    >\n                        <Table\n                            style={{ border: '1px solid #eee' }}\n                            showHeader={false}\n                            pagination={false}\n                            columns={[\n                                {\n                                    title: 'Sản phẩm',\n                                    dataIndex: '',\n                                    key: 'product',\n                                    render: (product: any) => {\n                                        return (\n                                            <div>\n                                                <ProductItem product={product} />\n                                            </div>\n                                        );\n                                    },\n                                },\n                                {\n                                    title: 'Đơn giá',\n                                    dataIndex: 'price',\n                                    key: 'product',\n                                    align: 'right',\n                                    render: (price: any) => {\n                                        return (\n                                            <div className='secondary-paragraph'>\n                                                {formatMoney(price)} đ\n                                            </div>\n                                        );\n                                    },\n                                },\n                            ]}\n                            dataSource={products}\n                            onRow={(item) => {\n                                return {\n                                    onClick: () => {\n                                        props.addProduct(\n                                            pick(item, ['_id', 'name', 'price', 'images'])\n                                        );\n                                    },\n                                };\n                            }}\n                            rowKey={(item: any) => item._id}\n                        />\n                    </InfiniteScroll>\n                </div>\n            </>\n        );\n    };\n    return (\n        <div style={{ position: 'relative' }}>\n            <Input\n                style={{ marginBottom: 30 }}\n                prefix={<SearchOutlined />}\n                placeholder='Tìm kiếm sản phẩm'\n                size='large'\n                onFocus={onFocus}\n                onBlur={onBlur}\n                onChange={onChange}\n            />\n\n            <div>{renderContent()}</div>\n        </div>\n    );\n};\n\nexport default SearchProducts;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/add-product.tsx",["1863"],"import { PlusCircleOutlined } from '@ant-design/icons';\nimport { Button, Col, Form, Input, InputNumber, Modal, Row, message } from 'antd';\nimport { Store } from 'antd/lib/form/interface';\nimport { pick } from 'lodash';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { createProductRequest } from '../../../api/product-api';\nimport useModal from '../../../hooks/use-modal';\nimport { formatterInput, parserInput } from '../../../utils/format-money';\n\ninterface Props {\n    addProduct: (product: any) => void;\n}\n\nconst AddProduct = (props: Props) => {\n    const { visible, toggle } = useModal();\n    const [loading, setLoading] = useState(false);\n    const token: any = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n\n    const handleSubmit = async (values: Store) => {\n        try {\n            setLoading(true);\n\n            const response = await createProductRequest({\n                token: token.accessToken,\n                storeId: store._id,\n                data: values,\n            });\n\n            const product = pick(response, ['name', 'price', '_id', 'images']);\n\n            props.addProduct(product);\n            setLoading(false);\n            toggle();\n        } catch (error) {\n            message.error('Lỗi tạo sản phẩm');\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div>\n            <a onClick={toggle} className='add-product-toogle-btn'>\n                <PlusCircleOutlined /> Thêm sản phẩm\n            </a>\n\n            <Modal\n                visible={visible}\n                onCancel={toggle}\n                title='Thêm sản phẩm'\n                footer={null}\n                destroyOnClose\n            >\n                <Form layout='vertical' onFinish={handleSubmit}>\n                    <Form.Item\n                        label='Tên sản phẩm'\n                        name='name'\n                        rules={[{ required: true, message: 'Điền tên sản phẩm' }]}\n                    >\n                        <Input placeholder='' />\n                    </Form.Item>\n\n                    <Form.Item\n                        label='Giá (vnd)'\n                        name='price'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Điền giá sản phẩm',\n                                type: 'number',\n                            },\n                        ]}\n                    >\n                        <InputNumber\n                            style={{ width: '100%' }}\n                            formatter={formatterInput}\n                            parser={parserInput}\n                        />\n                    </Form.Item>\n\n                    <Form.Item\n                        label='Khối lượng (gram)'\n                        name='weight'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Khối lượng sản phẩm tối thiểu 10g',\n                                type: 'number',\n                                min: 10,\n                                max: 1000000,\n                            },\n                        ]}\n                    >\n                        <InputNumber\n                            style={{ width: '100%' }}\n                            formatter={formatterInput}\n                            parser={parserInput}\n                        />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Row gutter={15} justify='end'>\n                            <Col>\n                                <Button onClick={toggle}>Hủy</Button>\n                            </Col>\n                            <Col>\n                                <Button type='primary' htmlType='submit' loading={loading}>\n                                    Tạo sản phẩm\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </div>\n    );\n};\n\nexport default AddProduct;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/api/label-api.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/order-detail.tsx",["1864","1865","1866","1867"],"import { Button, Col, Divider, Row, Space } from 'antd';\nimport { get, pick } from 'lodash';\nimport querystring from 'querystring';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getOrderDetail } from '../../../api/order-api';\nimport storeApi from '../../../api/store-api';\nimport { Loading } from '../../../components';\nimport AddProduct from '../../conversation/conversation-customer/add-product';\nimport {\n    initialOrder,\n    ProviderOrderContext,\n} from '../../conversation/conversation-customer/context-order';\nimport OrderCustomerInfo from '../../conversation/conversation-customer/order-customer-info';\nimport OrderProductList from '../../conversation/conversation-customer/order-product-list';\nimport OrderStore from '../../conversation/conversation-customer/order-store';\nimport OrderTransport from '../../conversation/conversation-customer/order-transport';\nimport SearchProduct from '../../conversation/conversation-customer/search-product';\nimport BtnSave from './btn-save';\n\ninterface Props {\n    orderId: string;\n    customer: any;\n    fbPageId: string;\n    scriptId: string;\n    toggle: () => void;\n    setOrderCode: (code: string) => void;\n    reloadCustomer: () => void;\n}\n\nconst initOrder = {\n    use_transformer: true,\n    customer: {\n        _id: '',\n        fbUserId: '',\n        name: '',\n        phoneNo: '',\n        address: '',\n        province: undefined,\n        district: undefined,\n        ward: undefined,\n        note: '',\n    },\n    products: [],\n    deliveryOptions: {\n        serviceId: undefined,\n        transportType: undefined,\n        shipmentFeeForCustomer: 0,\n        shipmentFee: 0,\n        customerNote: '',\n        noteForCustomerCare: '',\n        discount: 0,\n        noteForDelivery: undefined,\n        discountBy: 0,\n    },\n    warehouseId: undefined,\n};\n\nconst useFetchCustomer = (fbUserId: string) => {\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n    const [customer, setCustomer] = useState<any>(null);\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n        async function getCustomer(id: string) {\n            setLoading(true);\n            const query = querystring.stringify({ fbUserId: id });\n\n            const response = await storeApi.getListCustomers({\n                storeId: store._id,\n                token: token.accessToken,\n                page: 1,\n                limit: 1,\n                query,\n            });\n\n            let data;\n            if (response.data.length > 0) {\n                data = {\n                    _id: response.data[0]._id,\n                    fbUserId: response.data[0].fbUserId,\n                    name: response.data[0].name,\n                    phoneNo: response.data[0].phoneNo,\n                    address: response.data[0].address,\n                    province: response.data[0].province,\n                    district: response.data[0].district,\n                    ward: response.data[0].ward,\n                    note: response.data[0].note,\n                };\n            } else {\n                data = {\n                    _id: '',\n                    fbUserId: fbUserId,\n                    name: '',\n                    phoneNo: '',\n                    address: '',\n                    province: undefined,\n                    district: undefined,\n                    ward: undefined,\n                    note: undefined,\n                };\n            }\n\n            setCustomer(data);\n            setLoading(false);\n        }\n\n        if (fbUserId) {\n            getCustomer(fbUserId);\n        } else {\n            setLoading(false);\n        }\n    }, [fbUserId, store._id, token.accessToken]);\n\n    return { customer, loading };\n};\n\nconst useFetchOrder = (orderId: string) => {\n    const token = useSelector((state: any) => state.auth.token);\n    const store = useSelector((state: any) => state.store.store);\n\n    const [loading, setLoading] = useState(true);\n    const [order, setOrder] = useState<any>(null);\n\n    useEffect(() => {\n        async function loadOrder(id: string) {\n            try {\n                setLoading(true);\n                const response = await getOrderDetail({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    orderId: id,\n                });\n\n                const order = {\n                    ...response,\n                    deliveryOptions: !get(response, 'deliveryOptions.transportType')\n                        ? {\n                              serviceId: undefined,\n                              transportType: undefined,\n                              shipmentFeeForCustomer: 0,\n                              shipmentFee: 0,\n                              customerNote: '',\n                              noteForCustomerCare: '',\n                              discount: 0,\n                              noteForDelivery: undefined,\n                              discountBy: 0,\n                          }\n                        : response.deliveryOptions,\n                    products: response.products.map((product: any) => {\n                        return {\n                            ...product,\n                            ...product.productId,\n                            productId: product.productId._id,\n                        };\n                    }),\n                    warehouseId: get(response, 'warehouseId._id'),\n                };\n\n                setOrder(order);\n                setLoading(false);\n            } catch (error) {\n                setLoading(false);\n            }\n        }\n\n        if (orderId) {\n            loadOrder(orderId);\n        } else {\n            setLoading(false);\n        }\n    }, [orderId, store._id, token.accessToken]);\n\n    return { loading, order, setOrder };\n};\n\nconst OrderDetail: FC<Props> = ({\n    orderId,\n    customer,\n    fbPageId,\n    scriptId,\n    toggle,\n    setOrderCode,\n    reloadCustomer,\n}) => {\n    const { loading, order } = useFetchOrder(orderId);\n    const { customer: customer_detail, loading: loadingCustomer } = useFetchCustomer(\n        customer.fbUserId\n    );\n\n    useEffect(() => {\n        if (order) {\n            setOrderCode(order.code);\n        }\n    }, [order]);\n\n    if (loading || loadingCustomer) return <Loading />;\n\n    const order_local = order\n        ? {\n              ...order,\n              customer: {\n                  ...customer_detail,\n                  name: customer.fbUserName,\n                  phoneNo: customer.phoneNo,\n                  province: customer.province,\n                  district: customer.district,\n                  ward: customer.ward,\n                  address: customer.address,\n              },\n          }\n        : {\n              ...initialOrder,\n              customer: {\n                  ...customer_detail,\n                  name: customer.fbUserName,\n                  fbUserId: customer.fbUserId,\n                  phoneNo: customer.phoneNo,\n                  province: customer.province,\n                  district: customer.district,\n                  ward: customer.ward,\n                  address: customer.address,\n              },\n          };\n\n    return (\n        <ProviderOrderContext order={order_local}>\n            <Row gutter={20}>\n                <Col span={12}>\n                        <OrderCustomerInfo\n                            defaultActiveKey={['customer']}\n                            dataCustomer={order_local.customer}\n                        />\n                        <Divider style={{ marginTop: 0, marginBottom: 10 }} />\n                        <OrderStore />\n                        <SearchProduct />\n                        <OrderProductList />\n                        <AddProduct />\n                </Col>\n                <Col span={12}>\n                        <OrderTransport hasOrder={!!get(order, 'warehouseId')} />\n                </Col>\n            </Row>\n            <Divider />\n            <Row gutter={15} justify='end'>\n                <Col>\n                    <Button onClick={toggle}>Đóng</Button>\n                </Col>\n                {(!order || order.isDraft) && (\n                    <Col>\n                        <BtnSave\n                            isNew={!order}\n                            fbPageId={fbPageId}\n                            scriptId={scriptId}\n                            customerId={customer_detail && customer_detail._id}\n                            toggle={toggle}\n                            reloadCustomer={reloadCustomer}\n                        />\n                    </Col>\n                )}\n            </Row>\n        </ProviderOrderContext>\n    );\n};\n\nexport default OrderDetail;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/modal-add-label.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/modal-copy-label.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/actions.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/edit-label-status.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/edit-label-order.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/edit-label.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/form-add-label.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/utils/string.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script-step/video.tsx",["1868"],"import React from 'react';\nimport { Card, Row, Col } from 'antd';\nimport moment from 'moment';\n\ninterface Props {\n    active?: boolean;\n    video: any;\n    onClick: (videoId: string) => void;\n}\n\nconst Video = ({ video, active = false, onClick }: Props) => {\n    const className = active ? 'video active' : 'video';\n\n    const handleOnClick = () => {\n        onClick(video.id);\n    };\n\n    return (\n        <div className={className} onClick={handleOnClick}>\n            <Row gutter={15}>\n                <Col>\n                    <div className='img'>\n                        <img src={video.picture} alt={video.title} />\n                    </div>\n                </Col>\n                <Col>\n                    <div>{video.title}</div>\n                    <span>{`kết thúc trực tiếp lúc ${moment(video.updated_time).format(\n                        'DD/MM/YYYY HH:mm'\n                    )}`}</span>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default Video;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/live-stream/script/btn-save.tsx",["1869","1870"],"import { Button, message } from 'antd';\nimport { find, get, isEmpty, omit, pick, trim } from 'lodash';\nimport React, { FC, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { updateOrder } from '../../../api/order-api';\nimport storeApi from '../../../api/store-api';\nimport { useOrder } from '../../conversation/conversation-customer/context-order';\nimport { getFee } from '../../conversation/conversation-customer/util';\nimport livestreamApi from '../../../api/livestream-api';\nimport shippingApi from '../../../api/shipping-api';\nimport { EDeliveryDiscountBy, EDeliveryServiceIds } from '../../../collections/order';\n\nenum errorMsg {\n    INVALID_PRODUCT_QUANTITY = 'INVALID_PRODUCT_QUANTITY',\n}\n\ninterface Props {\n    title?: string;\n    fbPageId: string;\n    customerId?: string;\n    isNew?: boolean;\n    scriptId: string;\n    toggle: () => void;\n    reloadCustomer: () => void;\n}\n\nconst BtnSave: FC<Props> = ({\n    title = 'Giao hàng',\n    fbPageId,\n    customerId,\n    isNew = false,\n    scriptId,\n    toggle,\n    reloadCustomer,\n}) => {\n    const [loading, setLoading] = useState(false);\n    const store = useSelector((state: any) => state.store.store);\n    const token = useSelector((state: any) => state.auth.token);\n    const pages = useSelector((state: any) => state.fanpage.pages);\n\n    const { order } = useOrder();\n\n    const createOrderShip = async (newOrder: any) => {\n        const totalWeight = newOrder.products.reduce(\n            (value: number, o: any) => o.productId.weight * o.count + value,\n            0,\n        );\n\n        let minWeight = newOrder.deliveryOptions.serviceId == 1 ? 10 : 1;\n        let maxWeight = newOrder.deliveryOptions.serviceId == 1 ? 20000 : 1600000;\n\n        if (totalWeight < minWeight) {\n            message.error(`Tổng khối lượng của sản phẩm chưa đạt mức tối thiểu ${minWeight}g`);\n            return;\n        } else if (totalWeight > maxWeight) {\n            message.error(`Tổng khối lượng của sản phẩm vượt mức tối đa ${maxWeight / 1000}kg`);\n            return;\n        }\n\n        const response = await shippingApi.toggleCreateOrderShip({\n            token: token.accessToken,\n            storeId: store._id,\n            orderId: newOrder._id,\n            cancel: false,\n            warehouseId: newOrder.warehouseId,\n        });\n\n        return response;\n    };\n\n    const createNewOrder = async () => {\n        try {\n            setLoading(true);\n            const page = find(pages, (p: any) => p.fbObjectId === fbPageId);\n\n            if (isEmpty(customerId)) {\n                const dataCustomer = {\n                    ...pick(order.customer, [\n                        'name',\n                        'phoneNo',\n                        'address',\n                        'province',\n                        'district',\n                        'ward',\n                    ]),\n                    fbPageId: page._id,\n                    fbUserId: order.customer.fbUserId,\n                };\n                const newCustomer = await storeApi.createCustomer({\n                    token: token.accessToken,\n                    storeId: store._id,\n                    data: dataCustomer,\n                });\n\n                order.customer = newCustomer;\n            }\n\n            const products = order.products.map((p: any) =>\n                pick(p, ['count', 'productId', 'price']),\n            );\n\n            const valueShipmentFeeForCustomer = get(\n                order,\n                'deliveryOptions.shipmentFeeForCustomer',\n            );\n\n            const shipmentFeeForCustomer =\n                !valueShipmentFeeForCustomer || valueShipmentFeeForCustomer === 0\n                    ? get(order, 'deliveryOptions.shipmentFee')\n                    : valueShipmentFeeForCustomer;\n\n            const data = {\n                products,\n                customer: pick(order.customer, [\n                    '_id',\n                    'fbUserId',\n                    'name',\n                    'phoneNo',\n                    'address',\n                    'province',\n                    'district',\n                    'ward',\n                ]),\n                fbPageId,\n                deliveryOptions: {\n                    ...pick(order.deliveryOptions, [\n                        'shipmentFee',\n                        'discount',\n                        'discountBy',\n                        'noteForDelivery',\n                    ]),\n                    shipmentFeeForCustomer,\n                    serviceId: order.deliveryOptions.serviceId || 0,\n                    transportType: order.deliveryOptions.transportType || 0,\n                    customerNote:\n                        order.deliveryOptions.customerNote.length > 0\n                            ? order.deliveryOptions.customerNote\n                            : undefined,\n                    noteForCustomerCare:\n                        order.deliveryOptions.noteForCustomerCare.length > 0\n                            ? order.deliveryOptions.noteForCustomerCare\n                            : undefined,\n\n                    feeForReceiver: getFee(order).feeForReceiver,\n                    shipmentFeeByTotal: true,\n                },\n                warehouseId: order.warehouseId,\n            };\n\n            const response = await storeApi.createOrder({\n                storeId: store._id,\n                token: token.accessToken,\n                data,\n            });\n\n            await livestreamApi.updateOrderIdInComment({\n                storeId: store._id,\n                fbPageId,\n                scriptId,\n                data: {\n                    fbUserId: order.customer.fbUserId,\n                    orderId: response._id,\n                },\n            });\n\n            const serviceId = get(response, 'deliveryOptions.serviceId', 0);\n            if ([EDeliveryServiceIds.GHN, EDeliveryServiceIds.GHTK].includes(serviceId)) {\n                await createOrderShip(response);\n            }\n\n            setLoading(false);\n            message.success('Đã tạo đơn giao hàng');\n            toggle();\n            reloadCustomer();\n        } catch (error) {\n            setLoading(false);\n            message.error('Lỗi tạo đơn giao hàng');\n        }\n    };\n\n    const notValidDelivery = () => {\n        const hasSelectDelivery =\n            order.deliveryOptions.serviceId && order.deliveryOptions.serviceId !== 0;\n\n        if (\n            (hasSelectDelivery && !order.deliveryOptions.transportType) ||\n            (hasSelectDelivery && typeof order.deliveryOptions.noteForDelivery === 'undefined')\n        ) {\n            return true;\n        }\n\n        return false;\n    };\n\n    const checkValid = () => {\n        const serviceId = get(order, 'deliveryOptions.serviceId');\n\n        if (\n            order.customer.name.length === 0 ||\n            !order.customer.phoneNo ||\n            order.customer.phoneNo.length === 0 ||\n            !trim(get(order, 'customer.address')) ||\n            typeof serviceId === 'undefined' ||\n            typeof order.customer.province === 'undefined' ||\n            typeof order.customer.district === 'undefined' ||\n            typeof order.customer.ward === 'undefined' ||\n            typeof order.warehouseId === 'undefined' ||\n            order.products.length === 0 ||\n            notValidDelivery()\n        )\n            return false;\n\n        return true;\n    };\n\n    const handleUpdateOrder = async () => {\n        setLoading(true);\n        const products = order.products.map((p: any) => {\n            return {\n                count: p.count,\n                productId: p._id || p.productId,\n                price: p.price,\n            };\n        });\n\n        const { feeForReceiver } = getFee(order);\n\n        const shipmentFeeForCustomer =\n            get(order, 'deliveryOptions.shipmentFeeForCustomer', 0) === 0\n                ? get(order, 'deliveryOptions.shipmentFee', 0)\n                : get(order, 'deliveryOptions.shipmentFeeForCustomer', 0);\n\n        try {\n            const deliveryOptions = {\n                ...pick(order.deliveryOptions, [\n                    'discount',\n                    'discountBy',\n                    'serviceId',\n                    'shipmentFee',\n                    'shipmentFeeByTotal',\n                    'transportType',\n                    'noteForDelivery',\n                ]),\n                shipmentFeeForCustomer,\n                feeForReceiver,\n                customerNote:\n                    order.deliveryOptions.customerNote &&\n                    order.deliveryOptions.customerNote.length > 0\n                        ? order.deliveryOptions.customerNote\n                        : undefined,\n                noteForCustomerCare:\n                    order.deliveryOptions.noteForCustomerCare &&\n                    order.deliveryOptions.noteForCustomerCare.length > 0\n                        ? order.deliveryOptions.noteForCustomerCare\n                        : undefined,\n                shipmentOrderId: (order as any).deliveryOptions.shipmentOrderId\n                    ? (order as any).deliveryOptions.shipmentOrderId\n                    : undefined,\n            };\n\n            let data: any = {\n                customer: omit(order.customer, [\n                    'fbUserId',\n                    'provinceName',\n                    'districtName',\n                    'wardName',\n                    'note',\n                ]),\n                deliveryOptions,\n                products,\n                warehouseId: (order as any).warehouseId,\n                isDraft: false,\n            };\n\n            const response = await updateOrder({\n                token: token.accessToken,\n                storeId: store._id,\n                orderId: (order as any)._id,\n                data,\n            });\n\n            const serviceId = get(response, 'deliveryOptions.serviceId');\n\n            if ([EDeliveryServiceIds.GHN, EDeliveryServiceIds.GHTK].includes(serviceId)) {\n                await createOrderShip(response);\n            }\n\n            message.success('Đã tạo đơn giao hàng');\n\n            setLoading(false);\n\n            toggle();\n            reloadCustomer();\n        } catch (error) {\n            const msg = get(error, 'response.data.message');\n            switch (msg) {\n                case errorMsg.INVALID_PRODUCT_QUANTITY:\n                    message.error('Số lượng sản phẩm không hợp lệ');\n                    break;\n                default:\n                    message.error('Lỗi tạo đơn giao hàng');\n                    break;\n            }\n\n            setLoading(false);\n        }\n    };\n\n    const maxDiscount = (): number => {\n        const { discountBy } = get(order, 'deliveryOptions');\n        let maxValue = 100;\n\n        if (discountBy === EDeliveryDiscountBy.Money) {\n            const products = order.products.map((p: any) =>\n                pick(p, ['count', 'productId', 'price']),\n            );\n            const productsPrice = products.reduce(\n                (value: number, product) =>\n                    ((product.price as number) || 0) * product.count + value,\n                0,\n            );\n\n            maxValue = productsPrice;\n        }\n\n        return maxValue;\n    };\n\n    const validOrder = (): boolean => {\n        const { discount } = get(order, 'deliveryOptions');\n\n        if ((discount as number) > maxDiscount()) {\n            message.error('Giá trị chiết khấu không hợp lệ');\n            return false;\n        }\n\n        return true;\n    };\n\n    const handleOnClick = async () => {\n        if (!validOrder()) {\n            return;\n        }\n\n        if (isNew) {\n            createNewOrder();\n        } else {\n            handleUpdateOrder();\n        }\n    };\n\n    return (\n        <Button type='primary' onClick={handleOnClick} loading={loading} disabled={!checkValid()}>\n            {title}\n        </Button>\n    );\n};\n\nexport default BtnSave;\n","/Users/mac3/Desktop/workspace/FacebookClient/src/pages/settings/conversation-label/color-picker.tsx",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/collections/order.ts",[],"/Users/mac3/Desktop/workspace/FacebookClient/src/app-router/use-progress-auth.ts",["1871"],"import { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport authApi from '../api/auth-api';\nimport { getToken } from '../api/token';\nimport { getUserAction, logout } from '../reducers/authState/authAction';\nimport { IAuthState } from '../reducers/authState/authReducer';\n\nexport interface AuthState {\n    auth: IAuthState;\n}\n\nexport function useProgressAuth() {\n    const dispatch = useDispatch();\n    const isAuth = useSelector(({ auth }: AuthState) => auth.isAuth);\n    const loading = useSelector(({ auth }: AuthState) => auth.loading);\n    const [progress, setProgress] = useState<boolean>(true);\n\n    useEffect(() => {\n        async function processAuth() {\n            try {\n                if (window.location.pathname === '/save-token') {\n                    return;\n                }\n\n                const refreshToken = getToken('refreshToken');\n\n                if (!refreshToken) {\n                    dispatch(logout());\n                    return;\n                }\n\n                const response = await authApi.existingRefreshToken(refreshToken);\n\n                if (!response.existingRefreshToken) {\n                    dispatch(logout(false));\n                    return;\n                }\n\n                dispatch(getUserAction());\n            } catch (error) {\n                dispatch(logout(false));\n            } finally {\n                setProgress(false);\n            }\n        }\n\n        if (isAuth) {\n            processAuth();\n        } else {\n            setProgress(false);\n        }\n    }, []);\n\n    return useMemo(() => ({ loading, isAuth, progress }), [loading, isAuth, progress]);\n}\n","/Users/mac3/Desktop/workspace/FacebookClient/src/hooks/use-hidden-modal-expired.tsx",[],{"ruleId":"1872","replacedBy":"1873"},{"ruleId":"1874","replacedBy":"1875"},{"ruleId":"1876","severity":1,"message":"1877","line":19,"column":1,"nodeType":"1878","endLine":49,"endColumn":3},{"ruleId":"1879","severity":1,"message":"1880","line":2,"column":10,"nodeType":"1881","messageId":"1882","endLine":2,"endColumn":21},{"ruleId":"1879","severity":1,"message":"1883","line":4,"column":10,"nodeType":"1881","messageId":"1882","endLine":4,"endColumn":29},{"ruleId":"1879","severity":1,"message":"1884","line":1,"column":25,"nodeType":"1881","messageId":"1882","endLine":1,"endColumn":29},{"ruleId":"1885","severity":1,"message":"1886","line":58,"column":8,"nodeType":"1887","endLine":58,"endColumn":10,"suggestions":"1888"},{"ruleId":"1876","severity":1,"message":"1889","line":1,"column":1,"nodeType":"1878","endLine":11,"endColumn":3},{"ruleId":"1876","severity":1,"message":"1889","line":1,"column":1,"nodeType":"1878","endLine":14,"endColumn":3},{"ruleId":"1876","severity":1,"message":"1889","line":1,"column":1,"nodeType":"1878","endLine":14,"endColumn":3},{"ruleId":"1876","severity":1,"message":"1889","line":1,"column":1,"nodeType":"1878","endLine":6,"endColumn":3},{"ruleId":"1876","severity":1,"message":"1889","line":1,"column":1,"nodeType":"1878","endLine":10,"endColumn":3},{"ruleId":"1876","severity":1,"message":"1889","line":1,"column":1,"nodeType":"1878","endLine":7,"endColumn":3},{"ruleId":"1876","severity":1,"message":"1889","line":1,"column":1,"nodeType":"1878","endLine":19,"endColumn":3},{"ruleId":"1876","severity":1,"message":"1889","line":1,"column":1,"nodeType":"1878","endLine":7,"endColumn":3},{"ruleId":"1890","severity":1,"message":"1891","line":11,"column":31,"nodeType":"1892","messageId":"1893","endLine":11,"endColumn":33},{"ruleId":"1879","severity":1,"message":"1894","line":2,"column":8,"nodeType":"1881","messageId":"1882","endLine":2,"endColumn":14},{"ruleId":"1879","severity":1,"message":"1895","line":15,"column":11,"nodeType":"1881","messageId":"1882","endLine":15,"endColumn":22},{"ruleId":"1896","severity":1,"message":"1897","line":107,"column":45,"nodeType":"1898","messageId":"1899","endLine":107,"endColumn":47},{"ruleId":"1876","severity":1,"message":"1889","line":1,"column":1,"nodeType":"1878","endLine":8,"endColumn":3},{"ruleId":"1876","severity":1,"message":"1889","line":1,"column":1,"nodeType":"1878","endLine":29,"endColumn":3},{"ruleId":"1900","severity":1,"message":"1901","line":1,"column":24,"nodeType":"1902","messageId":"1903","endLine":1,"endColumn":61},{"ruleId":"1900","severity":1,"message":"1901","line":2,"column":40,"nodeType":"1902","messageId":"1903","endLine":2,"endColumn":93},{"ruleId":"1900","severity":1,"message":"1901","line":3,"column":32,"nodeType":"1902","messageId":"1903","endLine":3,"endColumn":77},{"ruleId":"1900","severity":1,"message":"1901","line":7,"column":30,"nodeType":"1902","messageId":"1903","endLine":7,"endColumn":73},{"ruleId":"1900","severity":1,"message":"1901","line":11,"column":24,"nodeType":"1902","messageId":"1903","endLine":11,"endColumn":61},{"ruleId":"1885","severity":1,"message":"1904","line":32,"column":8,"nodeType":"1887","endLine":32,"endColumn":10,"suggestions":"1905"},{"ruleId":"1885","severity":1,"message":"1906","line":37,"column":8,"nodeType":"1887","endLine":37,"endColumn":10,"suggestions":"1907"},{"ruleId":"1879","severity":1,"message":"1908","line":23,"column":12,"nodeType":"1881","messageId":"1882","endLine":23,"endColumn":19},{"ruleId":"1879","severity":1,"message":"1909","line":37,"column":19,"nodeType":"1881","messageId":"1882","endLine":37,"endColumn":27},{"ruleId":"1879","severity":1,"message":"1909","line":55,"column":19,"nodeType":"1881","messageId":"1882","endLine":55,"endColumn":27},{"ruleId":"1876","severity":1,"message":"1877","line":9,"column":1,"nodeType":"1878","endLine":15,"endColumn":3},{"ruleId":"1879","severity":1,"message":"1910","line":6,"column":5,"nodeType":"1881","messageId":"1882","endLine":6,"endColumn":12},{"ruleId":"1879","severity":1,"message":"1911","line":14,"column":5,"nodeType":"1881","messageId":"1882","endLine":14,"endColumn":19},{"ruleId":"1879","severity":1,"message":"1912","line":4,"column":8,"nodeType":"1881","messageId":"1882","endLine":4,"endColumn":16},{"ruleId":"1879","severity":1,"message":"1913","line":5,"column":8,"nodeType":"1881","messageId":"1882","endLine":5,"endColumn":14},{"ruleId":"1879","severity":1,"message":"1914","line":6,"column":8,"nodeType":"1881","messageId":"1882","endLine":6,"endColumn":15},{"ruleId":"1879","severity":1,"message":"1915","line":7,"column":8,"nodeType":"1881","messageId":"1882","endLine":7,"endColumn":12},{"ruleId":"1916","severity":1,"message":"1917","line":22,"column":37,"nodeType":"1918","endLine":22,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":25,"column":37,"nodeType":"1918","endLine":25,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":28,"column":37,"nodeType":"1918","endLine":28,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":31,"column":37,"nodeType":"1918","endLine":31,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":34,"column":37,"nodeType":"1918","endLine":34,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":45,"column":37,"nodeType":"1918","endLine":45,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":48,"column":37,"nodeType":"1918","endLine":48,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":51,"column":37,"nodeType":"1918","endLine":51,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":54,"column":37,"nodeType":"1918","endLine":54,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":57,"column":37,"nodeType":"1918","endLine":57,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":60,"column":37,"nodeType":"1918","endLine":60,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":63,"column":37,"nodeType":"1918","endLine":63,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":66,"column":37,"nodeType":"1918","endLine":66,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":69,"column":37,"nodeType":"1918","endLine":69,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":72,"column":37,"nodeType":"1918","endLine":72,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":75,"column":37,"nodeType":"1918","endLine":75,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":78,"column":37,"nodeType":"1918","endLine":78,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":81,"column":37,"nodeType":"1918","endLine":81,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":84,"column":37,"nodeType":"1918","endLine":84,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":87,"column":37,"nodeType":"1918","endLine":87,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":98,"column":37,"nodeType":"1918","endLine":98,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":101,"column":37,"nodeType":"1918","endLine":101,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":104,"column":37,"nodeType":"1918","endLine":104,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":107,"column":37,"nodeType":"1918","endLine":107,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":110,"column":37,"nodeType":"1918","endLine":110,"endColumn":48},{"ruleId":"1916","severity":1,"message":"1917","line":113,"column":37,"nodeType":"1918","endLine":113,"endColumn":48},{"ruleId":"1885","severity":1,"message":"1919","line":33,"column":8,"nodeType":"1887","endLine":33,"endColumn":18,"suggestions":"1920"},{"ruleId":"1879","severity":1,"message":"1921","line":13,"column":8,"nodeType":"1881","messageId":"1882","endLine":13,"endColumn":17},{"ruleId":"1885","severity":1,"message":"1922","line":222,"column":8,"nodeType":"1887","endLine":222,"endColumn":10,"suggestions":"1923"},{"ruleId":"1885","severity":1,"message":"1924","line":271,"column":8,"nodeType":"1887","endLine":271,"endColumn":20,"suggestions":"1925"},{"ruleId":"1896","severity":1,"message":"1926","line":78,"column":51,"nodeType":"1898","messageId":"1899","endLine":78,"endColumn":53},{"ruleId":"1885","severity":1,"message":"1927","line":115,"column":8,"nodeType":"1887","endLine":115,"endColumn":10,"suggestions":"1928"},{"ruleId":"1885","severity":1,"message":"1906","line":161,"column":8,"nodeType":"1887","endLine":161,"endColumn":10,"suggestions":"1929"},{"ruleId":"1885","severity":1,"message":"1930","line":166,"column":8,"nodeType":"1887","endLine":166,"endColumn":16,"suggestions":"1931"},{"ruleId":"1885","severity":1,"message":"1932","line":173,"column":8,"nodeType":"1887","endLine":173,"endColumn":23,"suggestions":"1933"},{"ruleId":"1885","severity":1,"message":"1906","line":184,"column":8,"nodeType":"1887","endLine":184,"endColumn":21,"suggestions":"1934"},{"ruleId":"1876","severity":1,"message":"1889","line":1,"column":1,"nodeType":"1878","endLine":25,"endColumn":3},{"ruleId":"1879","severity":1,"message":"1935","line":4,"column":10,"nodeType":"1881","messageId":"1882","endLine":4,"endColumn":23},{"ruleId":"1885","severity":1,"message":"1936","line":89,"column":8,"nodeType":"1887","endLine":89,"endColumn":10,"suggestions":"1937"},{"ruleId":"1885","severity":1,"message":"1906","line":19,"column":8,"nodeType":"1887","endLine":19,"endColumn":10,"suggestions":"1938"},{"ruleId":"1879","severity":1,"message":"1939","line":11,"column":5,"nodeType":"1881","messageId":"1882","endLine":11,"endColumn":26},{"ruleId":"1879","severity":1,"message":"1940","line":29,"column":11,"nodeType":"1881","messageId":"1882","endLine":29,"endColumn":19},{"ruleId":"1885","severity":1,"message":"1941","line":128,"column":8,"nodeType":"1887","endLine":128,"endColumn":21,"suggestions":"1942"},{"ruleId":"1885","severity":1,"message":"1943","line":269,"column":8,"nodeType":"1887","endLine":269,"endColumn":33,"suggestions":"1944"},{"ruleId":"1879","severity":1,"message":"1909","line":62,"column":19,"nodeType":"1881","messageId":"1882","endLine":62,"endColumn":27},{"ruleId":"1879","severity":1,"message":"1909","line":89,"column":23,"nodeType":"1881","messageId":"1882","endLine":89,"endColumn":31},{"ruleId":"1879","severity":1,"message":"1945","line":36,"column":19,"nodeType":"1881","messageId":"1882","endLine":36,"endColumn":26},{"ruleId":"1879","severity":1,"message":"1946","line":35,"column":11,"nodeType":"1881","messageId":"1882","endLine":35,"endColumn":17},{"ruleId":"1879","severity":1,"message":"1947","line":66,"column":6,"nodeType":"1881","messageId":"1882","endLine":66,"endColumn":10},{"ruleId":"1879","severity":1,"message":"1948","line":76,"column":11,"nodeType":"1881","messageId":"1882","endLine":76,"endColumn":35},{"ruleId":"1885","severity":1,"message":"1949","line":150,"column":8,"nodeType":"1887","endLine":150,"endColumn":22,"suggestions":"1950"},{"ruleId":"1879","severity":1,"message":"1909","line":27,"column":19,"nodeType":"1881","messageId":"1882","endLine":27,"endColumn":27},{"ruleId":"1879","severity":1,"message":"1951","line":2,"column":10,"nodeType":"1881","messageId":"1882","endLine":2,"endColumn":18},{"ruleId":"1879","severity":1,"message":"1952","line":56,"column":15,"nodeType":"1881","messageId":"1882","endLine":56,"endColumn":18},{"ruleId":"1876","severity":1,"message":"1889","line":12,"column":1,"nodeType":"1878","endLine":521,"endColumn":3},{"ruleId":"1885","severity":1,"message":"1906","line":156,"column":8,"nodeType":"1887","endLine":156,"endColumn":10,"suggestions":"1953"},{"ruleId":"1885","severity":1,"message":"1954","line":37,"column":8,"nodeType":"1887","endLine":37,"endColumn":22,"suggestions":"1955"},{"ruleId":"1885","severity":1,"message":"1956","line":49,"column":8,"nodeType":"1887","endLine":49,"endColumn":10,"suggestions":"1957"},{"ruleId":"1879","severity":1,"message":"1958","line":40,"column":11,"nodeType":"1881","messageId":"1882","endLine":40,"endColumn":19},{"ruleId":"1879","severity":1,"message":"1952","line":91,"column":15,"nodeType":"1881","messageId":"1882","endLine":91,"endColumn":18},{"ruleId":"1885","severity":1,"message":"1927","line":37,"column":8,"nodeType":"1887","endLine":37,"endColumn":10,"suggestions":"1959"},{"ruleId":"1872","replacedBy":"1960"},{"ruleId":"1874","replacedBy":"1961"},{"ruleId":"1885","severity":1,"message":"1906","line":61,"column":8,"nodeType":"1887","endLine":61,"endColumn":41,"suggestions":"1962"},{"ruleId":"1885","severity":1,"message":"1963","line":38,"column":8,"nodeType":"1887","endLine":38,"endColumn":10,"suggestions":"1964"},{"ruleId":"1885","severity":1,"message":"1965","line":63,"column":8,"nodeType":"1887","endLine":63,"endColumn":25,"suggestions":"1966"},{"ruleId":"1885","severity":1,"message":"1906","line":18,"column":8,"nodeType":"1887","endLine":18,"endColumn":10,"suggestions":"1967"},{"ruleId":"1879","severity":1,"message":"1909","line":42,"column":19,"nodeType":"1881","messageId":"1882","endLine":42,"endColumn":27},{"ruleId":"1879","severity":1,"message":"1968","line":60,"column":19,"nodeType":"1881","messageId":"1882","endLine":60,"endColumn":24},{"ruleId":"1879","severity":1,"message":"1969","line":61,"column":19,"nodeType":"1881","messageId":"1882","endLine":61,"endColumn":23},{"ruleId":"1885","severity":1,"message":"1906","line":153,"column":8,"nodeType":"1887","endLine":153,"endColumn":14,"suggestions":"1970"},{"ruleId":"1879","severity":1,"message":"1971","line":157,"column":11,"nodeType":"1881","messageId":"1882","endLine":157,"endColumn":23},{"ruleId":"1879","severity":1,"message":"1972","line":167,"column":11,"nodeType":"1881","messageId":"1882","endLine":167,"endColumn":28},{"ruleId":"1896","severity":1,"message":"1897","line":40,"column":17,"nodeType":"1973","messageId":"1974","endLine":40,"endColumn":24},{"ruleId":"1879","severity":1,"message":"1975","line":44,"column":21,"nodeType":"1881","messageId":"1882","endLine":44,"endColumn":31},{"ruleId":"1879","severity":1,"message":"1976","line":46,"column":19,"nodeType":"1881","messageId":"1882","endLine":46,"endColumn":30},{"ruleId":"1896","severity":1,"message":"1926","line":56,"column":40,"nodeType":"1898","messageId":"1899","endLine":56,"endColumn":42},{"ruleId":"1885","severity":1,"message":"1927","line":74,"column":8,"nodeType":"1887","endLine":74,"endColumn":10,"suggestions":"1977"},{"ruleId":"1896","severity":1,"message":"1897","line":107,"column":37,"nodeType":"1898","messageId":"1899","endLine":107,"endColumn":39},{"ruleId":"1896","severity":1,"message":"1926","line":174,"column":36,"nodeType":"1898","messageId":"1899","endLine":174,"endColumn":38},{"ruleId":"1879","severity":1,"message":"1947","line":15,"column":6,"nodeType":"1881","messageId":"1882","endLine":15,"endColumn":10},{"ruleId":"1885","severity":1,"message":"1978","line":68,"column":8,"nodeType":"1887","endLine":68,"endColumn":22,"suggestions":"1979"},{"ruleId":"1885","severity":1,"message":"1980","line":75,"column":8,"nodeType":"1887","endLine":75,"endColumn":34,"suggestions":"1981"},{"ruleId":"1885","severity":1,"message":"1982","line":100,"column":8,"nodeType":"1887","endLine":100,"endColumn":18,"suggestions":"1983"},{"ruleId":"1879","severity":1,"message":"1984","line":6,"column":8,"nodeType":"1881","messageId":"1882","endLine":6,"endColumn":12},{"ruleId":"1879","severity":1,"message":"1985","line":11,"column":8,"nodeType":"1881","messageId":"1882","endLine":11,"endColumn":14},{"ruleId":"1879","severity":1,"message":"1986","line":13,"column":8,"nodeType":"1881","messageId":"1882","endLine":13,"endColumn":13},{"ruleId":"1885","severity":1,"message":"1987","line":51,"column":8,"nodeType":"1887","endLine":51,"endColumn":18,"suggestions":"1988"},{"ruleId":"1879","severity":1,"message":"1989","line":1,"column":10,"nodeType":"1881","messageId":"1882","endLine":1,"endColumn":15},{"ruleId":"1990","severity":1,"message":"1991","line":117,"column":29,"nodeType":"1918","messageId":"1992","endLine":117,"endColumn":65,"fix":"1993"},{"ruleId":"1990","severity":1,"message":"1991","line":128,"column":33,"nodeType":"1918","messageId":"1992","endLine":128,"endColumn":98,"fix":"1994"},{"ruleId":"1885","severity":1,"message":"1995","line":89,"column":8,"nodeType":"1887","endLine":89,"endColumn":31,"suggestions":"1996"},{"ruleId":"1885","severity":1,"message":"1997","line":95,"column":8,"nodeType":"1887","endLine":95,"endColumn":26,"suggestions":"1998"},{"ruleId":"1879","severity":1,"message":"1989","line":2,"column":18,"nodeType":"1881","messageId":"1882","endLine":2,"endColumn":23},{"ruleId":"1879","severity":1,"message":"1999","line":9,"column":11,"nodeType":"1881","messageId":"1882","endLine":9,"endColumn":16},{"ruleId":"1885","severity":1,"message":"2000","line":104,"column":8,"nodeType":"1887","endLine":104,"endColumn":15,"suggestions":"2001"},{"ruleId":"1879","severity":1,"message":"2002","line":85,"column":17,"nodeType":"1881","messageId":"1882","endLine":85,"endColumn":30},{"ruleId":"1885","severity":1,"message":"2003","line":39,"column":8,"nodeType":"1887","endLine":39,"endColumn":10,"suggestions":"2004"},{"ruleId":"1885","severity":1,"message":"2005","line":69,"column":8,"nodeType":"1887","endLine":69,"endColumn":10,"suggestions":"2006"},{"ruleId":"1885","severity":1,"message":"2007","line":182,"column":8,"nodeType":"1887","endLine":182,"endColumn":10,"suggestions":"2008"},{"ruleId":"1885","severity":1,"message":"2009","line":190,"column":8,"nodeType":"1887","endLine":190,"endColumn":20,"suggestions":"2010"},{"ruleId":"2011","severity":1,"message":"2012","line":337,"column":63,"nodeType":"2013","messageId":"1893","endLine":337,"endColumn":65},{"ruleId":"2011","severity":1,"message":"2012","line":338,"column":63,"nodeType":"2013","messageId":"1893","endLine":338,"endColumn":65},{"ruleId":"1879","severity":1,"message":"2014","line":453,"column":11,"nodeType":"1881","messageId":"1882","endLine":453,"endColumn":36},{"ruleId":"1885","severity":1,"message":"2015","line":492,"column":8,"nodeType":"1887","endLine":492,"endColumn":21,"suggestions":"2016"},{"ruleId":"1990","severity":1,"message":"1991","line":50,"column":33,"nodeType":"1918","messageId":"1992","endLine":50,"endColumn":150,"fix":"2017"},{"ruleId":"1879","severity":1,"message":"2018","line":2,"column":5,"nodeType":"1881","messageId":"1882","endLine":2,"endColumn":18},{"ruleId":"1879","severity":1,"message":"2019","line":3,"column":5,"nodeType":"1881","messageId":"1882","endLine":3,"endColumn":18},{"ruleId":"1879","severity":1,"message":"2020","line":11,"column":5,"nodeType":"1881","messageId":"1882","endLine":11,"endColumn":12},{"ruleId":"1879","severity":1,"message":"2021","line":12,"column":5,"nodeType":"1881","messageId":"1882","endLine":12,"endColumn":10},{"ruleId":"1879","severity":1,"message":"2022","line":13,"column":5,"nodeType":"1881","messageId":"1882","endLine":13,"endColumn":16},{"ruleId":"1879","severity":1,"message":"2023","line":16,"column":5,"nodeType":"1881","messageId":"1882","endLine":16,"endColumn":17},{"ruleId":"1879","severity":1,"message":"2024","line":17,"column":5,"nodeType":"1881","messageId":"1882","endLine":17,"endColumn":12},{"ruleId":"1879","severity":1,"message":"2025","line":19,"column":5,"nodeType":"1881","messageId":"1882","endLine":19,"endColumn":13},{"ruleId":"1879","severity":1,"message":"2026","line":22,"column":42,"nodeType":"1881","messageId":"1882","endLine":22,"endColumn":49},{"ruleId":"1879","severity":1,"message":"2027","line":28,"column":5,"nodeType":"1881","messageId":"1882","endLine":28,"endColumn":20},{"ruleId":"1885","severity":1,"message":"1906","line":70,"column":8,"nodeType":"1887","endLine":70,"endColumn":10,"suggestions":"2028"},{"ruleId":"1885","severity":1,"message":"2029","line":88,"column":8,"nodeType":"1887","endLine":88,"endColumn":10,"suggestions":"2030"},{"ruleId":"1879","severity":1,"message":"2031","line":2,"column":20,"nodeType":"1881","messageId":"1882","endLine":2,"endColumn":26},{"ruleId":"1879","severity":1,"message":"2032","line":3,"column":6,"nodeType":"1881","messageId":"1882","endLine":3,"endColumn":15},{"ruleId":"1879","severity":1,"message":"2033","line":2,"column":10,"nodeType":"1881","messageId":"1882","endLine":2,"endColumn":18},{"ruleId":"1879","severity":1,"message":"2034","line":2,"column":25,"nodeType":"1881","messageId":"1882","endLine":2,"endColumn":33},{"ruleId":"1879","severity":1,"message":"2035","line":26,"column":11,"nodeType":"1881","messageId":"1882","endLine":26,"endColumn":19},{"ruleId":"1879","severity":1,"message":"2036","line":34,"column":9,"nodeType":"1881","messageId":"1882","endLine":34,"endColumn":17},{"ruleId":"1885","severity":1,"message":"2037","line":59,"column":8,"nodeType":"1887","endLine":59,"endColumn":14,"suggestions":"2038"},{"ruleId":"1879","severity":1,"message":"2039","line":13,"column":10,"nodeType":"1881","messageId":"1882","endLine":13,"endColumn":19},{"ruleId":"1879","severity":1,"message":"1909","line":54,"column":19,"nodeType":"1881","messageId":"1882","endLine":54,"endColumn":27},{"ruleId":"1879","severity":1,"message":"1952","line":27,"column":19,"nodeType":"1881","messageId":"1882","endLine":27,"endColumn":22},{"ruleId":"1879","severity":1,"message":"1952","line":54,"column":17,"nodeType":"1881","messageId":"1882","endLine":54,"endColumn":20},{"ruleId":"1879","severity":1,"message":"2040","line":56,"column":12,"nodeType":"1881","messageId":"1882","endLine":56,"endColumn":16},{"ruleId":"1885","severity":1,"message":"2041","line":194,"column":8,"nodeType":"1887","endLine":194,"endColumn":18,"suggestions":"2042"},{"ruleId":"1885","severity":1,"message":"2043","line":217,"column":8,"nodeType":"1887","endLine":217,"endColumn":18,"suggestions":"2044"},{"ruleId":"1916","severity":1,"message":"2045","line":375,"column":25,"nodeType":"1918","endLine":375,"endColumn":49},{"ruleId":"1885","severity":1,"message":"2046","line":115,"column":8,"nodeType":"1887","endLine":115,"endColumn":18,"suggestions":"2047"},{"ruleId":"1885","severity":1,"message":"2048","line":185,"column":8,"nodeType":"1887","endLine":185,"endColumn":18,"suggestions":"2049"},{"ruleId":"1916","severity":1,"message":"2045","line":15,"column":21,"nodeType":"1918","endLine":15,"endColumn":92},{"ruleId":"1885","severity":1,"message":"2050","line":23,"column":8,"nodeType":"1887","endLine":23,"endColumn":41,"suggestions":"2051"},{"ruleId":"1885","severity":1,"message":"2007","line":26,"column":8,"nodeType":"1887","endLine":26,"endColumn":10,"suggestions":"2052"},{"ruleId":"1885","severity":1,"message":"2009","line":34,"column":8,"nodeType":"1887","endLine":34,"endColumn":20,"suggestions":"2053"},{"ruleId":"1885","severity":1,"message":"2054","line":85,"column":8,"nodeType":"1887","endLine":85,"endColumn":22,"suggestions":"2055"},{"ruleId":"1885","severity":1,"message":"2056","line":89,"column":8,"nodeType":"1887","endLine":89,"endColumn":18,"suggestions":"2057"},{"ruleId":"1885","severity":1,"message":"2058","line":120,"column":8,"nodeType":"1887","endLine":120,"endColumn":10,"suggestions":"2059"},{"ruleId":"1879","severity":1,"message":"2060","line":24,"column":34,"nodeType":"1881","messageId":"1882","endLine":24,"endColumn":41},{"ruleId":"1879","severity":1,"message":"1975","line":29,"column":21,"nodeType":"1881","messageId":"1882","endLine":29,"endColumn":31},{"ruleId":"1885","severity":1,"message":"2061","line":79,"column":8,"nodeType":"1887","endLine":79,"endColumn":19,"suggestions":"2062"},{"ruleId":"1885","severity":1,"message":"2063","line":186,"column":8,"nodeType":"1887","endLine":186,"endColumn":27,"suggestions":"2064"},{"ruleId":"1876","severity":1,"message":"1877","line":9,"column":1,"nodeType":"1878","endLine":35,"endColumn":3},{"ruleId":"1990","severity":1,"message":"1991","line":22,"column":9,"nodeType":"1918","messageId":"1992","endLine":22,"endColumn":45,"fix":"2065"},{"ruleId":"1879","severity":1,"message":"1909","line":24,"column":19,"nodeType":"1881","messageId":"1882","endLine":24,"endColumn":27},{"ruleId":"1879","severity":1,"message":"2066","line":4,"column":10,"nodeType":"1881","messageId":"1882","endLine":4,"endColumn":22},{"ruleId":"1885","severity":1,"message":"2067","line":94,"column":29,"nodeType":"1881","endLine":94,"endColumn":40},{"ruleId":"1885","severity":1,"message":"2068","line":187,"column":8,"nodeType":"1887","endLine":187,"endColumn":56,"suggestions":"2069"},{"ruleId":"1990","severity":1,"message":"1991","line":217,"column":25,"nodeType":"1918","messageId":"1992","endLine":220,"endColumn":26,"fix":"2070"},{"ruleId":"1990","severity":1,"message":"1991","line":22,"column":13,"nodeType":"1918","messageId":"1992","endLine":27,"endColumn":14,"fix":"2071"},{"ruleId":"1879","severity":1,"message":"1909","line":29,"column":19,"nodeType":"1881","messageId":"1882","endLine":29,"endColumn":27},{"ruleId":"1879","severity":1,"message":"2072","line":3,"column":31,"nodeType":"1881","messageId":"1882","endLine":3,"endColumn":40},{"ruleId":"1879","severity":1,"message":"1945","line":24,"column":19,"nodeType":"1881","messageId":"1882","endLine":24,"endColumn":26},{"ruleId":"1879","severity":1,"message":"1909","line":42,"column":19,"nodeType":"1881","messageId":"1882","endLine":42,"endColumn":27},{"ruleId":"1879","severity":1,"message":"2073","line":12,"column":10,"nodeType":"1881","messageId":"1882","endLine":12,"endColumn":15},{"ruleId":"2011","severity":1,"message":"2012","line":88,"column":53,"nodeType":"2013","messageId":"1893","endLine":88,"endColumn":55},{"ruleId":"2011","severity":1,"message":"2012","line":89,"column":57,"nodeType":"2013","messageId":"1893","endLine":89,"endColumn":59},{"ruleId":"1885","severity":1,"message":"2074","line":143,"column":8,"nodeType":"1887","endLine":143,"endColumn":10,"suggestions":"2075"},{"ruleId":"2011","severity":1,"message":"2012","line":152,"column":53,"nodeType":"2013","messageId":"1893","endLine":152,"endColumn":55},{"ruleId":"2011","severity":1,"message":"2012","line":153,"column":57,"nodeType":"2013","messageId":"1893","endLine":153,"endColumn":59},{"ruleId":"2076","severity":1,"message":"2077","line":162,"column":24,"nodeType":"1918","endLine":162,"endColumn":88},{"ruleId":"2011","severity":1,"message":"2012","line":170,"column":35,"nodeType":"2013","messageId":"1893","endLine":170,"endColumn":37},{"ruleId":"2011","severity":1,"message":"2012","line":171,"column":35,"nodeType":"2013","messageId":"1893","endLine":171,"endColumn":37},{"ruleId":"1885","severity":1,"message":"1924","line":135,"column":8,"nodeType":"1887","endLine":135,"endColumn":20,"suggestions":"2078"},{"ruleId":"2011","severity":1,"message":"2012","line":23,"column":72,"nodeType":"2013","messageId":"1893","endLine":23,"endColumn":74},{"ruleId":"2011","severity":1,"message":"2079","line":37,"column":21,"nodeType":"2013","messageId":"1893","endLine":37,"endColumn":23},{"ruleId":"2011","severity":1,"message":"2079","line":47,"column":21,"nodeType":"2013","messageId":"1893","endLine":47,"endColumn":23},{"ruleId":"2011","severity":1,"message":"2079","line":57,"column":25,"nodeType":"2013","messageId":"1893","endLine":57,"endColumn":27},{"ruleId":"2011","severity":1,"message":"2079","line":57,"column":49,"nodeType":"2013","messageId":"1893","endLine":57,"endColumn":51},{"ruleId":"1885","severity":1,"message":"2080","line":82,"column":8,"nodeType":"1887","endLine":82,"endColumn":17,"suggestions":"2081"},{"ruleId":"1885","severity":1,"message":"2082","line":64,"column":8,"nodeType":"1887","endLine":64,"endColumn":60,"suggestions":"2083"},{"ruleId":"2011","severity":1,"message":"2012","line":127,"column":40,"nodeType":"2013","messageId":"1893","endLine":127,"endColumn":42},{"ruleId":"1885","severity":1,"message":"2084","line":166,"column":9,"nodeType":"1887","endLine":166,"endColumn":36,"suggestions":"2085"},{"ruleId":"1885","severity":1,"message":"2086","line":72,"column":8,"nodeType":"1887","endLine":72,"endColumn":29,"suggestions":"2087"},{"ruleId":"1885","severity":1,"message":"2088","line":93,"column":8,"nodeType":"1887","endLine":93,"endColumn":18,"suggestions":"2089"},{"ruleId":"1885","severity":1,"message":"2090","line":124,"column":8,"nodeType":"1887","endLine":124,"endColumn":17,"suggestions":"2091"},{"ruleId":"1879","severity":1,"message":"2092","line":29,"column":28,"nodeType":"1881","messageId":"1882","endLine":29,"endColumn":39},{"ruleId":"1879","severity":1,"message":"1952","line":50,"column":19,"nodeType":"1881","messageId":"1882","endLine":50,"endColumn":22},{"ruleId":"1885","severity":1,"message":"2093","line":89,"column":9,"nodeType":"1887","endLine":89,"endColumn":30,"suggestions":"2094"},{"ruleId":"2011","severity":1,"message":"2012","line":48,"column":25,"nodeType":"2013","messageId":"1893","endLine":48,"endColumn":27},{"ruleId":"2011","severity":1,"message":"2012","line":52,"column":25,"nodeType":"2013","messageId":"1893","endLine":52,"endColumn":27},{"ruleId":"2011","severity":1,"message":"2012","line":57,"column":25,"nodeType":"2013","messageId":"1893","endLine":57,"endColumn":27},{"ruleId":"2011","severity":1,"message":"2012","line":62,"column":25,"nodeType":"2013","messageId":"1893","endLine":62,"endColumn":27},{"ruleId":"1885","severity":1,"message":"2095","line":47,"column":8,"nodeType":"1887","endLine":47,"endColumn":45,"suggestions":"2096"},{"ruleId":"1885","severity":1,"message":"2097","line":51,"column":8,"nodeType":"1887","endLine":51,"endColumn":22,"suggestions":"2098"},{"ruleId":"1879","severity":1,"message":"2099","line":8,"column":10,"nodeType":"1881","messageId":"1882","endLine":8,"endColumn":25},{"ruleId":"1879","severity":1,"message":"2100","line":65,"column":11,"nodeType":"1881","messageId":"1882","endLine":65,"endColumn":17},{"ruleId":"1885","severity":1,"message":"2101","line":115,"column":8,"nodeType":"1887","endLine":115,"endColumn":15,"suggestions":"2102"},{"ruleId":"1879","severity":1,"message":"2103","line":3,"column":10,"nodeType":"1881","messageId":"1882","endLine":3,"endColumn":26},{"ruleId":"1885","severity":1,"message":"2104","line":81,"column":8,"nodeType":"1887","endLine":87,"endColumn":6,"suggestions":"2105"},{"ruleId":"1879","severity":1,"message":"2106","line":89,"column":14,"nodeType":"1881","messageId":"1882","endLine":89,"endColumn":30},{"ruleId":"2011","severity":1,"message":"2012","line":143,"column":57,"nodeType":"2013","messageId":"1893","endLine":143,"endColumn":59},{"ruleId":"2011","severity":1,"message":"2012","line":144,"column":61,"nodeType":"2013","messageId":"1893","endLine":144,"endColumn":63},{"ruleId":"2076","severity":1,"message":"2077","line":153,"column":37,"nodeType":"1918","endLine":156,"endColumn":39},{"ruleId":"2011","severity":1,"message":"2012","line":159,"column":57,"nodeType":"2013","messageId":"1893","endLine":159,"endColumn":59},{"ruleId":"2011","severity":1,"message":"2012","line":161,"column":62,"nodeType":"2013","messageId":"1893","endLine":161,"endColumn":64},{"ruleId":"1876","severity":1,"message":"1889","line":6,"column":1,"nodeType":"1878","endLine":15,"endColumn":3},{"ruleId":"1879","severity":1,"message":"2107","line":4,"column":10,"nodeType":"1881","messageId":"1882","endLine":4,"endColumn":23},{"ruleId":"1916","severity":1,"message":"2045","line":15,"column":13,"nodeType":"1918","endLine":15,"endColumn":16},{"ruleId":"1876","severity":1,"message":"1889","line":72,"column":1,"nodeType":"1878","endLine":75,"endColumn":3},{"ruleId":"1885","severity":1,"message":"2108","line":129,"column":8,"nodeType":"1887","endLine":129,"endColumn":23,"suggestions":"2109"},{"ruleId":"1879","severity":1,"message":"2110","line":22,"column":24,"nodeType":"1881","messageId":"1882","endLine":22,"endColumn":37},{"ruleId":"1879","severity":1,"message":"1909","line":30,"column":19,"nodeType":"1881","messageId":"1882","endLine":30,"endColumn":27},{"ruleId":"1885","severity":1,"message":"2111","line":43,"column":8,"nodeType":"1887","endLine":43,"endColumn":16,"suggestions":"2112"},{"ruleId":"1990","severity":1,"message":"1991","line":27,"column":21,"nodeType":"1918","messageId":"1992","endLine":27,"endColumn":57,"fix":"2113"},{"ruleId":"1879","severity":1,"message":"2072","line":1,"column":17,"nodeType":"1881","messageId":"1882","endLine":1,"endColumn":26},{"ruleId":"1879","severity":1,"message":"2114","line":1,"column":10,"nodeType":"1881","messageId":"1882","endLine":1,"endColumn":32},{"ruleId":"1879","severity":1,"message":"2115","line":2,"column":10,"nodeType":"1881","messageId":"1882","endLine":2,"endColumn":18},{"ruleId":"1879","severity":1,"message":"2116","line":2,"column":20,"nodeType":"1881","messageId":"1882","endLine":2,"endColumn":27},{"ruleId":"1879","severity":1,"message":"2072","line":1,"column":17,"nodeType":"1881","messageId":"1882","endLine":1,"endColumn":26},{"ruleId":"1879","severity":1,"message":"2115","line":2,"column":10,"nodeType":"1881","messageId":"1882","endLine":2,"endColumn":18},{"ruleId":"1879","severity":1,"message":"2116","line":2,"column":20,"nodeType":"1881","messageId":"1882","endLine":2,"endColumn":27},{"ruleId":"1879","severity":1,"message":"2114","line":3,"column":10,"nodeType":"1881","messageId":"1882","endLine":3,"endColumn":32},{"ruleId":"1885","severity":1,"message":"2117","line":52,"column":8,"nodeType":"1887","endLine":52,"endColumn":20,"suggestions":"2118"},{"ruleId":"1879","severity":1,"message":"2119","line":30,"column":11,"nodeType":"1881","messageId":"1882","endLine":30,"endColumn":24},{"ruleId":"1879","severity":1,"message":"1909","line":38,"column":19,"nodeType":"1881","messageId":"1882","endLine":38,"endColumn":27},{"ruleId":"1916","severity":1,"message":"2045","line":38,"column":13,"nodeType":"1918","endLine":38,"endColumn":33},{"ruleId":"1879","severity":1,"message":"2120","line":109,"column":11,"nodeType":"1881","messageId":"1882","endLine":109,"endColumn":26},{"ruleId":"2011","severity":1,"message":"2012","line":110,"column":68,"nodeType":"2013","messageId":"1893","endLine":110,"endColumn":70},{"ruleId":"1885","severity":1,"message":"2121","line":49,"column":8,"nodeType":"1887","endLine":49,"endColumn":10,"suggestions":"2122"},{"ruleId":"1885","severity":1,"message":"2123","line":71,"column":8,"nodeType":"1887","endLine":71,"endColumn":20,"suggestions":"2124"},{"ruleId":"1879","severity":1,"message":"2125","line":1,"column":17,"nodeType":"1881","messageId":"1882","endLine":1,"endColumn":21},{"ruleId":"1879","severity":1,"message":"2126","line":1,"column":23,"nodeType":"1881","messageId":"1882","endLine":1,"endColumn":31},{"ruleId":"1879","severity":1,"message":"2072","line":1,"column":33,"nodeType":"1881","messageId":"1882","endLine":1,"endColumn":42},{"ruleId":"1885","severity":1,"message":"2127","line":42,"column":8,"nodeType":"1887","endLine":42,"endColumn":10,"suggestions":"2128"},{"ruleId":"1885","severity":1,"message":"2129","line":58,"column":8,"nodeType":"1887","endLine":58,"endColumn":36,"suggestions":"2130"},{"ruleId":"1916","severity":1,"message":"2045","line":159,"column":13,"nodeType":"1918","endLine":159,"endColumn":33},{"ruleId":"1879","severity":1,"message":"2131","line":25,"column":21,"nodeType":"1881","messageId":"1882","endLine":25,"endColumn":31},{"ruleId":"1916","severity":1,"message":"2045","line":44,"column":13,"nodeType":"1918","endLine":44,"endColumn":68},{"ruleId":"1879","severity":1,"message":"1989","line":1,"column":37,"nodeType":"1881","messageId":"1882","endLine":1,"endColumn":42},{"ruleId":"1879","severity":1,"message":"2132","line":2,"column":15,"nodeType":"1881","messageId":"1882","endLine":2,"endColumn":19},{"ruleId":"1879","severity":1,"message":"2133","line":31,"column":7,"nodeType":"1881","messageId":"1882","endLine":31,"endColumn":16},{"ruleId":"1885","severity":1,"message":"2134","line":195,"column":8,"nodeType":"1887","endLine":195,"endColumn":15,"suggestions":"2135"},{"ruleId":"1879","severity":1,"message":"2136","line":2,"column":10,"nodeType":"1881","messageId":"1882","endLine":2,"endColumn":14},{"ruleId":"2011","severity":1,"message":"2012","line":49,"column":60,"nodeType":"2013","messageId":"1893","endLine":49,"endColumn":62},{"ruleId":"2011","severity":1,"message":"2012","line":50,"column":60,"nodeType":"2013","messageId":"1893","endLine":50,"endColumn":62},{"ruleId":"1885","severity":1,"message":"2137","line":52,"column":8,"nodeType":"1887","endLine":52,"endColumn":10,"suggestions":"2138"},"no-native-reassign",["2139"],"no-negated-in-lhs",["2140"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'uploadImagesRequest' is defined but never used.","'find' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'saveAndLoadUser'. Either include it or remove the dependency array.","ArrayExpression",["2141"],"Assign object to a variable before exporting as module default","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'moment' is defined but never used.","'IDataSocket' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","@typescript-eslint/consistent-type-assertions","Use 'as string' instead of '<string>'.","TSTypeAssertion","as","React Hook useEffect has missing dependencies: 'isLogout' and 'location.state'. Either include them or remove the dependency array.",["2142"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["2143"],"'loading' is assigned a value but never used.","'response' is assigned a value but never used.","'BoxIcon' is defined but never used.","'OrderDraftIcon' is defined but never used.","'facebook' is defined but never used.","'google' is defined but never used.","'twitter' is defined but never used.","'zalo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'removeError'. Either include it or remove the dependency array.",["2144"],"'rectangle' is defined but never used.","React Hook useEffect has missing dependencies: 'form' and 'store'. Either include them or remove the dependency array.",["2145"],"React Hook useEffect has a missing dependency: 'provinceId'. Either include it or remove the dependency array.",["2146"],"Array.prototype.filter() expects a return value from arrow function.","React Hook useEffect has a missing dependency: 'getPackages'. Either include it or remove the dependency array.",["2147"],["2148"],"React Hook useEffect has missing dependencies: 'filterInfoImages' and 'imagesSeleted'. Either include them or remove the dependency array.",["2149"],"React Hook useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.",["2150"],["2151"],"'MenuLeftStyle' is defined but never used.","React Hook useEffect has missing dependencies: 'getPackages', 'loading', 'loadingAuth', 'loadingStore', 'page', 'store._id', and 'token.accessToken'. Either include them or remove the dependency array.",["2152"],["2153"],"'updateCountUnreadPage' is defined but never used.","'IMessage' is defined but never used.","React Hook useEffect has missing dependencies: 'getAccessToken', 'handelSetAccessToken', and 'socket'. Either include them or remove the dependency array.",["2154"],"React Hook useEffect has missing dependencies: 'dispatch', 'play', and 'pushNotification'. Either include them or remove the dependency array.",["2155"],"'reponse' is assigned a value but never used.","'IState' is defined but never used.","'Item' is defined but never used.","'originSocketMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'labelsSetting', 'state', 'store._id', 'toggleLoading', and 'token.accessToken'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["2156"],"'debounce' is defined but never used.","'res' is assigned a value but never used.",["2157"],"React Hook useEffect has a missing dependency: 'updateContentPost'. Either include it or remove the dependency array.",["2158"],"React Hook useEffect has missing dependencies: 'arrPage', 'dispatch', 'location.search', and 'store.activePage'. Either include them or remove the dependency array.",["2159"],"'callback' is assigned a value but never used.",["2160"],["2139"],["2140"],["2161"],"React Hook useEffect has missing dependencies: 'params.fbPageId', 'params.scriptId', and 'store._id'. Either include them or remove the dependency array.",["2162"],"React Hook useEffect has a missing dependency: 'loadDataReport'. Either include it or remove the dependency array.",["2163"],["2164"],"'color' is assigned a value but never used.","'text' is assigned a value but never used.",["2165"],"'rowSelection' is assigned a value but never used.","'expandedRowRender' is assigned a value but never used.","ReturnStatement","expectedReturnValue","'setLoading' is assigned a value but never used.","'selectPages' is assigned a value but never used.",["2166"],"React Hook useLayoutEffect has missing dependencies: 'scrollToBottom' and 'setIsNewMessage'. Either include them or remove the dependency array.",["2167"],"React Hook useEffect has missing dependencies: 'dispatch', 'isUpdateMessage', and 'updateMessage'. Either include them or remove the dependency array.",["2168"],"React Hook useLayoutEffect has a missing dependency: 'scrollToBottom'. Either include it or remove the dependency array.",["2169"],"'_get' is defined but never used.","'Labels' is defined but never used.","'Emoji' is defined but never used.","React Hook useEffect has missing dependencies: 'conversation.type' and 'page.fbObjectId'. Either include them or remove the dependency array.",["2170"],"'Space' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"2171","text":"2172"},{"range":"2173","text":"2172"},"React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.",["2174"],"React Hook useEffect has missing dependencies: 'customerId' and 'getCustomers'. Either include them or remove the dependency array.",["2175"],"'State' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["2176"],"'newCustomerId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'items', 'setItems', 'setPagesHide', and 'storeId'. Either include them or remove the dependency array. If 'setItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["2177"],"React Hook useEffect has missing dependencies: 'params.id', 'state', 'store._id', and 'token.accessToken'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["2178"],"React Hook useEffect has missing dependencies: 'dispatch' and 'warehouses'. Either include them or remove the dependency array.",["2179"],"React Hook useEffect has missing dependencies: 'dataWarehouse' and 'page'. Either include them or remove the dependency array. You can also do a functional update 'setDataWarehouse(d => ...)' if you only need 'dataWarehouse' in the 'setDataWarehouse' call.",["2180"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'renderOrderDeliveryCancel' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'disabled' and 'disabledData'. Either include them or remove the dependency array.",["2181"],{"range":"2182","text":"2172"},"'CheckOutlined' is defined but never used.","'CloseOutlined' is defined but never used.","'Divider' is defined but never used.","'Input' is defined but never used.","'InputNumber' is defined but never used.","'AutoComplete' is defined but never used.","'message' is defined but never used.","'Dropdown' is defined but never used.","'useMemo' is defined but never used.","'updateWarehouse' is defined but never used.",["2183"],"React Hook useEffect has missing dependencies: 'state', 'store._id', and 'token.accessToken'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["2184"],"'Button' is defined but never used.","'ITypeTime' is defined but never used.","'findLast' is defined but never used.","'isObject' is defined but never used.","'dispatch' is assigned a value but never used.","'messages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setIdMessage'. Either include it or remove the dependency array.",["2185"],"'LabelType' is defined but never used.","'ward' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["2186"],"React Hook useEffect has missing dependencies: 'form' and 'province'. Either include them or remove the dependency array.",["2187"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'dispatch', 'pages', and 'selected'. Either include them or remove the dependency array.",["2188"],"React Hook useEffect has missing dependencies: 'date', 'dispatch', 'label', 'menuParent', 'onChange', 'postId', and 'store'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["2189"],"React Hook useEffect has a missing dependency: 'hasOrder'. Either include it or remove the dependency array.",["2190"],["2191"],["2192"],"React Hook useEffect has a missing dependency: 'order.customer'. Either include it or remove the dependency array.",["2193"],"React Hook useEffect has missing dependencies: 'order' and 'setOrder'. Either include them or remove the dependency array.",["2194"],"React Hook useEffect has missing dependencies: 'customer' and 'dataCustomer'. Either include them or remove the dependency array. If 'setCustomer' needs the current value of 'dataCustomer', you can also switch to useReducer instead of useState and read 'dataCustomer' in the reducer.",["2195"],"'visible' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataForm' and 'form'. Either include them or remove the dependency array. You can also do a functional update 'setDataForm(d => ...)' if you only need 'dataForm' in the 'setDataForm' call.",["2196"],"React Hook useEffect has a missing dependency: 'dataForm.province'. Either include it or remove the dependency array.",["2197"],{"range":"2198","text":"2172"},"'FilterFilled' is defined but never used.","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has a missing dependency: 'loadCustomers'. Either include it or remove the dependency array.",["2199"],{"range":"2200","text":"2172"},{"range":"2201","text":"2172"},"'useEffect' is defined but never used.","'style' is defined but never used.","React Hook useEffect has missing dependencies: 'loadShipping', 'order.customer.district', 'order.customer.province', 'order.customer.ward', 'order.products.length', and 'order.warehouseId'. Either include them or remove the dependency array.",["2202"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["2203"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'handleFilter' and 'pageProduct'. Either include them or remove the dependency array.",["2204"],"React Hook useEffect has missing dependencies: 'filterData' and 'filterOptions'. Either include them or remove the dependency array.",["2205"],"React Hook useMemo has missing dependencies: 'onFilterKeyChange', 'onFilterValueChange', 'onRemoveFilterItem', and 'onSubmitFilter'. Either include them or remove the dependency array.",["2206"],"React Hook useEffect has missing dependencies: 'comment' and 'messages'. Either include them or remove the dependency array. You can also do a functional update 'setMessage(m => ...)' if you only need 'messages' in the 'setMessage' call.",["2207"],"React Hook useEffect has missing dependencies: 'comment.created_time' and 'page.fbObjectId'. Either include them or remove the dependency array.",["2208"],"React Hook useEffect has missing dependencies: 'comment.from.id', 'conversation.fbPageId', 'store._id', and 'token.accessToken'. Either include them or remove the dependency array.",["2209"],"'getComments' is assigned a value but never used.","React Hook React.useCallback has missing dependencies: 'changeText', 'changeTextChat', 'chat', 'conversation.fbUsername', 'conversation.type', 'messages', 'quickMessageArr.length', 'textFilter', and 'toggle'. Either include them or remove the dependency array. If 'toggle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["2210"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'loadQuickMessageAction' aren't valid dependencies because mutating them doesn't re-render the component.",["2211"],"React Hook useEffect has a missing dependency: 'quickMessages'. Either include it or remove the dependency array.",["2212"],"'PictureOutlined' is defined but never used.","'Params' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'fbPageIdState', 'livestream', and 'script'. Either include them or remove the dependency array. If 'setLiveStream' needs the current value of 'script', you can also switch to useReducer instead of useState and read 'script' in the reducer.",["2213"],"'FileTextOutlined' is defined but never used.","React Hook useEffect has missing dependencies: 'store._id' and 'token.accessToken'. Either include them or remove the dependency array.",["2214"],"'handleUpdateShip' is defined but never used.","'TableOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'props.dataDefaultFilter'. Either include it or remove the dependency array.",["2215"],"'setIsFullUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataPage.fbObjectId', 'store._id', and 'token.accessToken'. Either include them or remove the dependency array.",["2216"],{"range":"2217","text":"2172"},"'QuestionCircleOutlined' is defined but never used.","'Checkbox' is defined but never used.","'Tooltip' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["2218"],"'quickMessages' is assigned a value but never used.","'addOtherService' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'page', 'pages', and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["2219"],"React Hook useEffect has missing dependencies: 'pages', 'state', and 'store._id'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["2220"],"'memo' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'livestream.fbPageId' and 'store._id'. Either include them or remove the dependency array.",["2221"],"React Hook useCallback has a missing dependency: 'keywordIndex'. Either include it or remove the dependency array.",["2222"],"'setHasmore' is assigned a value but never used.","'pick' is defined but never used.","'initOrder' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setOrderCode'. Either include it or remove the dependency array. If 'setOrderCode' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["2223"],"'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'isAuth'. Either include them or remove the dependency array.",["2224"],"no-global-assign","no-unsafe-negation",{"desc":"2225","fix":"2226"},{"desc":"2227","fix":"2228"},{"desc":"2229","fix":"2230"},{"desc":"2231","fix":"2232"},{"desc":"2233","fix":"2234"},{"desc":"2235","fix":"2236"},{"desc":"2237","fix":"2238"},{"desc":"2229","fix":"2239"},{"desc":"2240","fix":"2241"},{"desc":"2242","fix":"2243"},{"desc":"2244","fix":"2245"},{"desc":"2246","fix":"2247"},{"desc":"2229","fix":"2248"},{"desc":"2249","fix":"2250"},{"desc":"2251","fix":"2252"},{"desc":"2253","fix":"2254"},{"desc":"2229","fix":"2255"},{"desc":"2256","fix":"2257"},{"desc":"2258","fix":"2259"},{"desc":"2237","fix":"2260"},{"desc":"2261","fix":"2262"},{"desc":"2263","fix":"2264"},{"desc":"2265","fix":"2266"},{"desc":"2229","fix":"2267"},{"desc":"2268","fix":"2269"},{"desc":"2237","fix":"2270"},{"desc":"2271","fix":"2272"},{"desc":"2273","fix":"2274"},{"desc":"2275","fix":"2276"},{"desc":"2277","fix":"2278"},[4719,4719]," rel=\"noreferrer\"",[5318,5318],{"desc":"2279","fix":"2280"},{"desc":"2281","fix":"2282"},{"desc":"2283","fix":"2284"},{"desc":"2285","fix":"2286"},{"desc":"2287","fix":"2288"},{"desc":"2289","fix":"2290"},{"desc":"2291","fix":"2292"},{"desc":"2293","fix":"2294"},[2437,2437],{"desc":"2229","fix":"2295"},{"desc":"2296","fix":"2297"},{"desc":"2298","fix":"2299"},{"desc":"2300","fix":"2301"},{"desc":"2302","fix":"2303"},{"desc":"2304","fix":"2305"},{"desc":"2306","fix":"2307"},{"desc":"2308","fix":"2309"},{"desc":"2289","fix":"2310"},{"desc":"2291","fix":"2311"},{"desc":"2312","fix":"2313"},{"desc":"2314","fix":"2315"},{"desc":"2316","fix":"2317"},{"desc":"2318","fix":"2319"},{"desc":"2320","fix":"2321"},[652,652],{"desc":"2322","fix":"2323"},[7332,7332],[730,730],{"desc":"2324","fix":"2325"},{"desc":"2235","fix":"2326"},{"desc":"2327","fix":"2328"},{"desc":"2329","fix":"2330"},{"desc":"2331","fix":"2332"},{"desc":"2333","fix":"2334"},{"desc":"2335","fix":"2336"},{"desc":"2337","fix":"2338"},{"desc":"2339","fix":"2340"},{"desc":"2341","fix":"2342"},{"desc":"2343","fix":"2344"},{"desc":"2345","fix":"2346"},{"desc":"2347","fix":"2348"},{"desc":"2349","fix":"2350"},{"desc":"2351","fix":"2352"},[875,875],{"desc":"2353","fix":"2354"},{"desc":"2355","fix":"2356"},{"desc":"2357","fix":"2358"},{"desc":"2359","fix":"2360"},{"desc":"2361","fix":"2362"},{"desc":"2363","fix":"2364"},{"desc":"2365","fix":"2366"},"Update the dependencies array to be: [saveAndLoadUser]",{"range":"2367","text":"2368"},"Update the dependencies array to be: [isLogout, location.state]",{"range":"2369","text":"2370"},"Update the dependencies array to be: [dispatch]",{"range":"2371","text":"2372"},"Update the dependencies array to be: [location, removeError]",{"range":"2373","text":"2374"},"Update the dependencies array to be: [form, store]",{"range":"2375","text":"2376"},"Update the dependencies array to be: [districtId, provinceId]",{"range":"2377","text":"2378"},"Update the dependencies array to be: [getPackages]",{"range":"2379","text":"2380"},{"range":"2381","text":"2372"},"Update the dependencies array to be: [filterInfoImages, images, imagesSeleted]",{"range":"2382","text":"2383"},"Update the dependencies array to be: [images, images_select]",{"range":"2384","text":"2385"},"Update the dependencies array to be: [dispatch, todoGallery]",{"range":"2386","text":"2387"},"Update the dependencies array to be: [getPackages, loading, loadingAuth, loadingStore, page, store._id, token.accessToken]",{"range":"2388","text":"2389"},{"range":"2390","text":"2372"},"Update the dependencies array to be: [accessToken, getAccessToken, handelSetAccessToken, socket]",{"range":"2391","text":"2392"},"Update the dependencies array to be: [socket, isActiveTabPage, pushNotification, dispatch, play]",{"range":"2393","text":"2394"},"Update the dependencies array to be: [conversation, labelsSetting, state, store._id, toggleLoading, token.accessToken]",{"range":"2395","text":"2396"},{"range":"2397","text":"2372"},"Update the dependencies array to be: [conversation, updateContentPost]",{"range":"2398","text":"2399"},"Update the dependencies array to be: [arrPage, dispatch, location.search, store.activePage]",{"range":"2400","text":"2401"},{"range":"2402","text":"2380"},"Update the dependencies array to be: [dispatch, isEmpty, loadingEmptyLivestream]",{"range":"2403","text":"2404"},"Update the dependencies array to be: [params.fbPageId, params.scriptId, store._id]",{"range":"2405","text":"2406"},"Update the dependencies array to be: [loadDataReport, params.scriptId]",{"range":"2407","text":"2408"},{"range":"2409","text":"2372"},"Update the dependencies array to be: [dispatch, type]",{"range":"2410","text":"2411"},{"range":"2412","text":"2380"},"Update the dependencies array to be: [isNewMessage, scrollToBottom, setIsNewMessage]",{"range":"2413","text":"2414"},"Update the dependencies array to be: [newMessage, isNewMessage, isUpdateMessage, updateMessage, dispatch]",{"range":"2415","text":"2416"},"Update the dependencies array to be: [messages, scrollToBottom]",{"range":"2417","text":"2418"},"Update the dependencies array to be: [conversation.type, messages, page.fbObjectId]",{"range":"2419","text":"2420"},"Update the dependencies array to be: [conversation.fbUserId, getCustomers]",{"range":"2421","text":"2422"},"Update the dependencies array to be: [customerId, customerObjectId, getCustomers]",{"range":"2423","text":"2424"},"Update the dependencies array to be: [order, state]",{"range":"2425","text":"2426"},"Update the dependencies array to be: [items, setItems, setPagesHide, storeId]",{"range":"2427","text":"2428"},"Update the dependencies array to be: [params.id, state, store._id, token.accessToken]",{"range":"2429","text":"2430"},"Update the dependencies array to be: [dispatch, warehouses]",{"range":"2431","text":"2432"},"Update the dependencies array to be: [dataWarehouse, page, warehouses]",{"range":"2433","text":"2434"},"Update the dependencies array to be: [disabled, disabledData, order_local]",{"range":"2435","text":"2436"},{"range":"2437","text":"2372"},"Update the dependencies array to be: [state, store._id, token.accessToken]",{"range":"2438","text":"2439"},"Update the dependencies array to be: [data, setIdMessage]",{"range":"2440","text":"2441"},"Update the dependencies array to be: [form, province]",{"range":"2442","text":"2443"},"Update the dependencies array to be: [district, form, province]",{"range":"2444","text":"2445"},"Update the dependencies array to be: [dispatch, location, pages, selected]",{"range":"2446","text":"2447"},"Update the dependencies array to be: [date, dispatch, label, menuParent, onChange, postId, selected, store]",{"range":"2448","text":"2449"},"Update the dependencies array to be: [hasOrder, order.deliveryOptions.serviceId]",{"range":"2450","text":"2451"},{"range":"2452","text":"2432"},{"range":"2453","text":"2434"},"Update the dependencies array to be: [infoCustomer, order.customer]",{"range":"2454","text":"2455"},"Update the dependencies array to be: [customer, order, setOrder]",{"range":"2456","text":"2457"},"Update the dependencies array to be: [customer, dataCustomer]",{"range":"2458","text":"2459"},"Update the dependencies array to be: [dataForm, form, warehouse]",{"range":"2460","text":"2461"},"Update the dependencies array to be: [dataForm.district, dataForm.province]",{"range":"2462","text":"2463"},"Update the dependencies array to be: [page, pageSize, isHasOrder, isHasPhoneNo, text, loadCustomers]",{"range":"2464","text":"2465"},"Update the dependencies array to be: [loadShipping, order.customer.district, order.customer.province, order.customer.ward, order.products.length, order.warehouseId]",{"range":"2466","text":"2467"},{"range":"2468","text":"2378"},"Update the dependencies array to be: [handleFilter, pageProduct, visible]",{"range":"2469","text":"2470"},"Update the dependencies array to be: [status, active, startTime, endTime, popoverVisible, filterOptions, filterData]",{"range":"2471","text":"2472"},"Update the dependencies array to be: [filterData, onSubmitFilter, filterOptions, onFilterValueChange, onRemoveFilterItem, onFilterKeyChange]",{"range":"2473","text":"2474"},"Update the dependencies array to be: [comment, messages, originSocketMessage]",{"range":"2475","text":"2476"},"Update the dependencies array to be: [comment.created_time, messages, page.fbObjectId]",{"range":"2477","text":"2478"},"Update the dependencies array to be: [comment.from.id, conversation.fbPageId, store._id, token.accessToken, visible]",{"range":"2479","text":"2480"},"Update the dependencies array to be: [changeText, changeTextChat, chat, conversation.fbUsername, conversation.type, index, messages, quickMessageArr.length, textFilter, toggle]",{"range":"2481","text":"2482"},"Update the dependencies array to be: [currentPage, dispatch]",{"range":"2483","text":"2484"},"Update the dependencies array to be: [quickMessage, quickMessages]",{"range":"2485","text":"2486"},"Update the dependencies array to be: [dispatch, fbPageIdState, livestream, pages, script]",{"range":"2487","text":"2488"},"Update the dependencies array to be: [order.customer.province, order.customer.district, order.customer.ward, order.products, order.warehouseId, store._id, token.accessToken]",{"range":"2489","text":"2490"},"Update the dependencies array to be: [props.dataDefaultFilter, props.filters]",{"range":"2491","text":"2492"},"Update the dependencies array to be: [dataPage.fbObjectId, pageId, store._id, token.accessToken]",{"range":"2493","text":"2494"},"Update the dependencies array to be: [data, data.title]",{"range":"2495","text":"2496"},"Update the dependencies array to be: [page, pages, state]",{"range":"2497","text":"2498"},"Update the dependencies array to be: [pages, state, state.page, store._id]",{"range":"2499","text":"2500"},"Update the dependencies array to be: [livestream.fbPageId, store._id]",{"range":"2501","text":"2502"},"Update the dependencies array to be: [state.products.length, state.keyword, livestream.keywords, keywordIndex]",{"range":"2503","text":"2504"},"Update the dependencies array to be: [order, setOrderCode]",{"range":"2505","text":"2506"},"Update the dependencies array to be: [dispatch, isAuth]",{"range":"2507","text":"2508"},[1787,1789],"[saveAndLoadUser]",[1052,1054],"[isLogout, location.state]",[1907,1909],"[dispatch]",[1197,1207],"[location, removeError]",[6975,6977],"[form, store]",[8422,8434],"[districtId, provinceId]",[3836,3838],"[getPackages]",[5449,5451],[5610,5618],"[filterInfoImages, images, imagesSeleted]",[5822,5837],"[images, images_select]",[6173,6186],"[dispatch, todoGallery]",[3788,3790],"[getPackages, loading, loadingAuth, loadingStore, page, store._id, token.accessToken]",[684,686],[4494,4507],"[accessToken, getAccessToken, handelSetAccessToken, socket]",[9533,9558],"[socket, isActiveTabPage, pushNotification, dispatch, play]",[4581,4595],"[conversation, labelsSetting, state, store._id, toggleLoading, token.accessToken]",[5178,5180],[1581,1595],"[conversation, updateContentPost]",[1895,1897],"[arrPage, dispatch, location.search, store.activePage]",[1243,1245],[2160,2193],"[dispatch, isEmpty, loadingEmptyLivestream]",[1288,1290],"[params.fbPageId, params.scriptId, store._id]",[2041,2058],"[loadDataReport, params.scriptId]",[604,606],[4949,4955],"[dispatch, type]",[2934,2936],[2263,2277],"[isNewMessage, scrollToBottom, setIsNewMessage]",[2447,2473],"[newMessage, isNewMessage, isUpdateMessage, updateMessage, dispatch]",[3201,3211],"[messages, scrollToBottom]",[1725,1735],"[conversation.type, messages, page.fbObjectId]",[3416,3439],"[conversation.fbUserId, getCustomers]",[3587,3605],"[customerId, customerObjectId, getCustomers]",[2337,2344],"[order, state]",[1325,1327],"[items, setItems, setPagesHide, storeId]",[1835,1837],"[params.id, state, store._id, token.accessToken]",[5664,5666],"[dispatch, warehouses]",[5875,5887],"[dataWarehouse, page, warehouses]",[15366,15379],"[disabled, disabledData, order_local]",[2032,2034],[2517,2519],"[state, store._id, token.accessToken]",[1973,1979],"[data, setIdMessage]",[6314,6324],"[form, province]",[6959,6969],"[district, form, province]",[4240,4250],"[dispatch, location, pages, selected]",[7186,7196],"[date, dispatch, label, menuParent, onChange, postId, selected, store]",[658,691],"[hasOrder, order.deliveryOptions.serviceId]",[957,959],[1168,1180],[2671,2685],"[infoCustomer, order.customer]",[2760,2770],"[customer, order, setOrder]",[3570,3572],"[customer, dataCustomer]",[2279,2290],"[dataForm, form, warehouse]",[5170,5189],"[dataForm.district, dataForm.province]",[5947,5995],"[page, pageSize, isHasOrder, isHasPhoneNo, text, loadCustomers]",[4178,4180],"[loadShipping, order.customer.district, order.customer.province, order.customer.ward, order.products.length, order.warehouseId]",[4143,4155],[2455,2464],"[handleFilter, pageProduct, visible]",[2900,2952],"[status, active, startTime, endTime, popoverVisible, filterOptions, filterData]",[6893,6920],"[filterData, onSubmitFilter, filterOptions, onFilterValueChange, onRemoveFilterItem, onFilterKeyChange]",[2729,2750],"[comment, messages, originSocketMessage]",[3418,3428],"[comment.created_time, messages, page.fbObjectId]",[4557,4566],"[comment.from.id, conversation.fbPageId, store._id, token.accessToken, visible]",[3243,3264],"[changeText, changeTextChat, chat, conversation.fbUsername, conversation.type, index, messages, quickMessageArr.length, textFilter, toggle]",[1907,1944],"[currentPage, dispatch]",[2015,2029],"[quickMessage, quickMessages]",[3473,3480],"[dispatch, fbPageIdState, livestream, pages, script]",[2650,2803],"[order.customer.province, order.customer.district, order.customer.ward, order.products, order.warehouseId, store._id, token.accessToken]",[4331,4346],"[props.dataDefaultFilter, props.filters]",[1862,1870],"[dataPage.fbObjectId, pageId, store._id, token.accessToken]",[1426,1438],"[data, data.title]",[1396,1398],"[page, pages, state]",[2030,2042],"[pages, state, state.page, store._id]",[1273,1275],"[livestream.fbPageId, store._id]",[1719,1747],"[state.products.length, state.keyword, livestream.keywords, keywordIndex]",[6314,6321],"[order, setOrderCode]",[1583,1585],"[dispatch, isAuth]"]